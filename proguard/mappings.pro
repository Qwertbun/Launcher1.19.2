com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
# {"fileName":"ExclusionStrategy.java","id":"sourceFile"}
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
    void <clinit>() -> <clinit>
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
# {"fileName":"FieldAttributes.java","id":"sourceFile"}
    java.lang.reflect.Field field -> field
    44:46:void <init>(java.lang.reflect.Field) -> <init>
    52:52:java.lang.Class getDeclaringClass() -> getDeclaringClass
    59:59:java.lang.String getName() -> getName
    79:79:java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    99:99:java.lang.Class getDeclaredClass() -> getDeclaredClass
    110:110:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    120:120:java.util.Collection getAnnotations() -> getAnnotations
    134:134:boolean hasModifier(int) -> hasModifier
    139:139:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
# {"fileName":"FieldNamingPolicy.java","id":"sourceFile"}
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy UPPER_CASE_WITH_UNDERSCORES -> UPPER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS -> LOWER_CASE_WITH_DOTS
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    31:31:com.google.gson.FieldNamingPolicy[] values() -> values
    31:31:com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    31:31:void <init>(java.lang.String,int) -> <init>
    169:177:java.lang.String separateCamelCase(java.lang.String,char) -> separateCamelCase
    184:202:java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    31:31:void <init>(java.lang.String,int,com.google.gson.FieldNamingPolicy$1) -> <init>
    31:158:void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
# {"fileName":"FieldNamingPolicy.java","id":"sourceFile"}
    37:37:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.String translateName(java.lang.reflect.Field) -> translateName
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
# {"fileName":"FieldNamingPolicy.java","id":"sourceFile"}
    53:53:void <init>(java.lang.String,int) -> <init>
    55:55:java.lang.String translateName(java.lang.reflect.Field) -> translateName
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
# {"fileName":"FieldNamingPolicy.java","id":"sourceFile"}
    72:72:void <init>(java.lang.String,int) -> <init>
    74:74:java.lang.String translateName(java.lang.reflect.Field) -> translateName
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
# {"fileName":"FieldNamingPolicy.java","id":"sourceFile"}
    92:92:void <init>(java.lang.String,int) -> <init>
    94:94:java.lang.String translateName(java.lang.reflect.Field) -> translateName
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
# {"fileName":"FieldNamingPolicy.java","id":"sourceFile"}
    110:110:void <init>(java.lang.String,int) -> <init>
    112:112:java.lang.String translateName(java.lang.reflect.Field) -> translateName
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$6 -> com.google.gson.FieldNamingPolicy$6:
# {"fileName":"FieldNamingPolicy.java","id":"sourceFile"}
    134:134:void <init>(java.lang.String,int) -> <init>
    136:136:java.lang.String translateName(java.lang.reflect.Field) -> translateName
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$7 -> com.google.gson.FieldNamingPolicy$7:
# {"fileName":"FieldNamingPolicy.java","id":"sourceFile"}
    158:158:void <init>(java.lang.String,int) -> <init>
    160:160:java.lang.String translateName(java.lang.reflect.Field) -> translateName
    void <clinit>() -> <clinit>
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
# {"fileName":"FieldNamingStrategy.java","id":"sourceFile"}
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
    void <clinit>() -> <clinit>
com.google.gson.Gson -> com.google.gson.Gson:
# {"fileName":"Gson.java","id":"sourceFile"}
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    boolean DEFAULT_LENIENT -> DEFAULT_LENIENT
    boolean DEFAULT_PRETTY_PRINT -> DEFAULT_PRETTY_PRINT
    boolean DEFAULT_ESCAPE_HTML -> DEFAULT_ESCAPE_HTML
    boolean DEFAULT_SERIALIZE_NULLS -> DEFAULT_SERIALIZE_NULLS
    boolean DEFAULT_COMPLEX_MAP_KEYS -> DEFAULT_COMPLEX_MAP_KEYS
    boolean DEFAULT_SPECIALIZE_FLOAT_VALUES -> DEFAULT_SPECIALIZE_FLOAT_VALUES
    boolean DEFAULT_USE_JDK_UNSAFE -> DEFAULT_USE_JDK_UNSAFE
    java.lang.String DEFAULT_DATE_PATTERN -> DEFAULT_DATE_PATTERN
    com.google.gson.FieldNamingStrategy DEFAULT_FIELD_NAMING_STRATEGY -> DEFAULT_FIELD_NAMING_STRATEGY
    com.google.gson.ToNumberStrategy DEFAULT_OBJECT_TO_NUMBER_STRATEGY -> DEFAULT_OBJECT_TO_NUMBER_STRATEGY
    com.google.gson.ToNumberStrategy DEFAULT_NUMBER_TO_NUMBER_STRATEGY -> DEFAULT_NUMBER_TO_NUMBER_STRATEGY
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal threadLocalAdapterResults -> threadLocalAdapterResults
    java.util.concurrent.ConcurrentMap typeTokenCache -> typeTokenCache
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory -> jsonAdapterFactory
    java.util.List factories -> factories
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.FieldNamingStrategy fieldNamingStrategy -> fieldNamingStrategy
    java.util.Map instanceCreators -> instanceCreators
    boolean serializeNulls -> serializeNulls
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean htmlSafe -> htmlSafe
    boolean prettyPrinting -> prettyPrinting
    boolean lenient -> lenient
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean useJdkUnsafe -> useJdkUnsafe
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    java.util.List builderFactories -> builderFactories
    java.util.List builderHierarchyFactories -> builderHierarchyFactories
    com.google.gson.ToNumberStrategy objectToNumberStrategy -> objectToNumberStrategy
    com.google.gson.ToNumberStrategy numberToNumberStrategy -> numberToNumberStrategy
    java.util.List reflectionFilters -> reflectionFilters
    234:243:void <init>() -> <init>
    169:344:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List) -> <init>
    354:354:com.google.gson.GsonBuilder newBuilder() -> newBuilder
    363:363:com.google.gson.internal.Excluder excluder() -> excluder
    372:372:com.google.gson.FieldNamingStrategy fieldNamingStrategy() -> fieldNamingStrategy
    382:382:boolean serializeNulls() -> serializeNulls
    392:392:boolean htmlSafe() -> htmlSafe
    396:399:com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    420:423:com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    447:452:void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    455:458:com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    477:485:com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter) -> atomicLongAdapter
    489:512:com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter) -> atomicLongArrayAdapter
    527:583:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    639:657:com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    667:667:com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    686:689:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    711:713:com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    733:736:java.lang.String toJson(java.lang.Object) -> toJson
    758:760:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    782:787:void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    811:816:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    834:852:void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    862:864:java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    877:882:void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    897:907:com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    919:921:com.google.gson.stream.JsonReader newJsonReader(java.io.Reader) -> newJsonReader
    938:955:void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    982:983:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    1014:1014:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    1043:1047:java.lang.Object fromJson(java.lang.String,com.google.gson.reflect.TypeToken) -> fromJson
    1075:1076:java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    1107:1107:java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    1136:1139:java.lang.Object fromJson(java.io.Reader,com.google.gson.reflect.TypeToken) -> fromJson
    1144:1152:void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    1186:1186:java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    1220:1246:java.lang.Object fromJson(com.google.gson.stream.JsonReader,com.google.gson.reflect.TypeToken) -> fromJson
    1271:1272:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    1300:1300:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    1326:1329:java.lang.Object fromJson(com.google.gson.JsonElement,com.google.gson.reflect.TypeToken) -> fromJson
    1377:1377:java.lang.String toString() -> toString
    150:153:void <clinit>() -> <clinit>
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
# {"fileName":"Gson.java","id":"sourceFile"}
    com.google.gson.Gson this$0 -> this$0
    399:399:void <init>(com.google.gson.Gson) -> <init>
    401:405:java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    408:415:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    399:399:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    399:399:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
# {"fileName":"Gson.java","id":"sourceFile"}
    com.google.gson.Gson this$0 -> this$0
    423:423:void <init>(com.google.gson.Gson) -> <init>
    425:429:java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    432:442:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    423:423:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    423:423:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
# {"fileName":"Gson.java","id":"sourceFile"}
    458:458:void <init>() -> <init>
    460:464:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    467:472:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    458:458:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    458:458:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
# {"fileName":"Gson.java","id":"sourceFile"}
    com.google.gson.TypeAdapter val$longAdapter -> val$longAdapter
    477:477:void <init>(com.google.gson.TypeAdapter) -> <init>
    479:480:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong) -> write
    482:483:java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader) -> read
    477:477:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    477:477:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
# {"fileName":"Gson.java","id":"sourceFile"}
    com.google.gson.TypeAdapter val$longAdapter -> val$longAdapter
    489:489:void <init>(com.google.gson.TypeAdapter) -> <init>
    491:496:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray) -> write
    498:510:java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader) -> read
    489:489:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    489:489:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
# {"fileName":"Gson.java","id":"sourceFile"}
    com.google.gson.TypeAdapter delegate -> delegate
    1341:1342:void <init>() -> <init>
    1345:1349:void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    1352:1359:com.google.gson.TypeAdapter delegate() -> delegate
    1363:1363:com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    1367:1367:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1371:1372:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
# {"fileName":"GsonBuilder.java","id":"sourceFile"}
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean lenient -> lenient
    boolean useJdkUnsafe -> useJdkUnsafe
    com.google.gson.ToNumberStrategy objectToNumberStrategy -> objectToNumberStrategy
    com.google.gson.ToNumberStrategy numberToNumberStrategy -> numberToNumberStrategy
    java.util.LinkedList reflectionFilters -> reflectionFilters
    87:116:void <init>() -> <init>
    87:145:void <init>(com.google.gson.Gson) -> <init>
    163:167:com.google.gson.GsonBuilder setVersion(double) -> setVersion
    185:187:com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    200:201:com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    214:215:com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    226:227:com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    310:311:com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    334:335:com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    347:348:com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    358:358:com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    374:375:com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    387:388:com.google.gson.GsonBuilder setObjectToNumberStrategy(com.google.gson.ToNumberStrategy) -> setObjectToNumberStrategy
    400:401:com.google.gson.GsonBuilder setNumberToNumberStrategy(com.google.gson.ToNumberStrategy) -> setNumberToNumberStrategy
    431:435:com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    454:456:com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    475:477:com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    487:488:com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    502:503:com.google.gson.GsonBuilder setLenient() -> setLenient
    514:515:com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    536:537:com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    555:557:com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    576:579:com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    605:622:com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    638:640:com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    658:670:com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    694:695:com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    715:716:com.google.gson.GsonBuilder disableJdkUnsafe() -> disableJdkUnsafe
    740:742:com.google.gson.GsonBuilder addReflectionAccessFilter(com.google.gson.ReflectionAccessFilter) -> addReflectionAccessFilter
    752:762:com.google.gson.Gson create() -> create
    774:801:void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
    void <clinit>() -> <clinit>
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
# {"fileName":"InstanceCreator.java","id":"sourceFile"}
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
    void <clinit>() -> <clinit>
com.google.gson.JsonArray -> com.google.gson.JsonArray:
# {"fileName":"JsonArray.java","id":"sourceFile"}
    java.util.ArrayList elements -> elements
    45:47:void <init>() -> <init>
    58:60:void <init>(int) -> <init>
    69:76:com.google.gson.JsonArray deepCopy() -> deepCopy
    86:87:void add(java.lang.Boolean) -> add
    96:97:void add(java.lang.Character) -> add
    106:107:void add(java.lang.Number) -> add
    116:117:void add(java.lang.String) -> add
    125:129:void add(com.google.gson.JsonElement) -> add
    137:138:void addAll(com.google.gson.JsonArray) -> addAll
    149:149:com.google.gson.JsonElement set(int,com.google.gson.JsonElement) -> set
    161:161:boolean remove(com.google.gson.JsonElement) -> remove
    175:175:com.google.gson.JsonElement remove(int) -> remove
    186:186:boolean contains(com.google.gson.JsonElement) -> contains
    195:195:int size() -> size
    205:205:boolean isEmpty() -> isEmpty
    216:216:java.util.Iterator iterator() -> iterator
    228:228:com.google.gson.JsonElement get(int) -> get
    232:236:com.google.gson.JsonElement getAsSingleElement() -> getAsSingleElement
    249:249:java.lang.Number getAsNumber() -> getAsNumber
    262:262:java.lang.String getAsString() -> getAsString
    275:275:double getAsDouble() -> getAsDouble
    289:289:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    303:303:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    316:316:float getAsFloat() -> getAsFloat
    329:329:long getAsLong() -> getAsLong
    342:342:int getAsInt() -> getAsInt
    355:355:byte getAsByte() -> getAsByte
    371:371:char getAsCharacter() -> getAsCharacter
    384:384:short getAsShort() -> getAsShort
    397:397:boolean getAsBoolean() -> getAsBoolean
    412:412:java.util.List asList() -> asList
    422:422:boolean equals(java.lang.Object) -> equals
    431:431:int hashCode() -> hashCode
    38:38:com.google.gson.JsonElement deepCopy() -> deepCopy
    void <clinit>() -> <clinit>
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
# {"fileName":"JsonDeserializationContext.java","id":"sourceFile"}
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
    void <clinit>() -> <clinit>
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
# {"fileName":"JsonDeserializer.java","id":"sourceFile"}
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
com.google.gson.JsonElement -> com.google.gson.JsonElement:
# {"fileName":"JsonElement.java","id":"sourceFile"}
    40:41:void <init>() -> <init>
    com.google.gson.JsonElement deepCopy() -> deepCopy
    57:57:boolean isJsonArray() -> isJsonArray
    66:66:boolean isJsonObject() -> isJsonObject
    75:75:boolean isJsonPrimitive() -> isJsonPrimitive
    85:85:boolean isJsonNull() -> isJsonNull
    98:101:com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    114:117:com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    130:133:com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    147:150:com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    162:162:boolean getAsBoolean() -> getAsBoolean
    175:175:java.lang.Number getAsNumber() -> getAsNumber
    187:187:java.lang.String getAsString() -> getAsString
    200:200:double getAsDouble() -> getAsDouble
    213:213:float getAsFloat() -> getAsFloat
    226:226:long getAsLong() -> getAsLong
    239:239:int getAsInt() -> getAsInt
    253:253:byte getAsByte() -> getAsByte
    270:270:char getAsCharacter() -> getAsCharacter
    284:284:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    298:298:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    311:311:short getAsShort() -> getAsShort
    320:326:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
# {"fileName":"JsonIOException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.JsonNull -> com.google.gson.JsonNull:
# {"fileName":"JsonNull.java","id":"sourceFile"}
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    40:42:void <init>() -> <init>
    51:51:com.google.gson.JsonNull deepCopy() -> deepCopy
    59:59:int hashCode() -> hashCode
    67:67:boolean equals(java.lang.Object) -> equals
    26:26:com.google.gson.JsonElement deepCopy() -> deepCopy
    32:32:void <clinit>() -> <clinit>
com.google.gson.JsonObject -> com.google.gson.JsonObject:
# {"fileName":"JsonObject.java","id":"sourceFile"}
    com.google.gson.internal.LinkedTreeMap members -> members
    37:44:void <init>() -> <init>
    53:57:com.google.gson.JsonObject deepCopy() -> deepCopy
    69:70:void add(java.lang.String,com.google.gson.JsonElement) -> add
    81:81:com.google.gson.JsonElement remove(java.lang.String) -> remove
    92:93:void addProperty(java.lang.String,java.lang.String) -> addProperty
    103:104:void addProperty(java.lang.String,java.lang.Number) -> addProperty
    114:115:void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    125:126:void addProperty(java.lang.String,java.lang.Character) -> addProperty
    135:135:java.util.Set entrySet() -> entrySet
    145:145:java.util.Set keySet() -> keySet
    155:155:int size() -> size
    165:165:boolean isEmpty() -> isEmpty
    175:175:boolean has(java.lang.String) -> has
    185:185:com.google.gson.JsonElement get(java.lang.String) -> get
    197:197:com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    209:209:com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    221:221:com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    237:237:java.util.Map asMap() -> asMap
    247:248:boolean equals(java.lang.Object) -> equals
    257:257:int hashCode() -> hashCode
    36:36:com.google.gson.JsonElement deepCopy() -> deepCopy
    void <clinit>() -> <clinit>
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
# {"fileName":"JsonParseException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    42:43:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:63:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.JsonParser -> com.google.gson.JsonParser:
# {"fileName":"JsonParser.java","id":"sourceFile"}
    36:36:void <init>() -> <init>
    51:51:com.google.gson.JsonElement parseString(java.lang.String) -> parseString
    69:80:com.google.gson.JsonElement parseReader(java.io.Reader) -> parseReader
    99:109:com.google.gson.JsonElement parseReader(com.google.gson.stream.JsonReader) -> parseReader
    115:115:com.google.gson.JsonElement parse(java.lang.String) -> parse
    121:121:com.google.gson.JsonElement parse(java.io.Reader) -> parse
    127:127:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void <clinit>() -> <clinit>
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
# {"fileName":"JsonPrimitive.java","id":"sourceFile"}
    java.lang.Object value -> value
    42:44:void <init>(java.lang.Boolean) -> <init>
    52:54:void <init>(java.lang.Number) -> <init>
    62:64:void <init>(java.lang.String) -> <init>
    73:77:void <init>(java.lang.Character) -> <init>
    86:86:com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    95:95:boolean isBoolean() -> isBoolean
    106:110:boolean getAsBoolean() -> getAsBoolean
    119:119:boolean isNumber() -> isNumber
    132:137:java.lang.Number getAsNumber() -> getAsNumber
    146:146:boolean isString() -> isString
    152:159:java.lang.String getAsString() -> getAsString
    167:167:double getAsDouble() -> getAsDouble
    175:175:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    183:184:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    192:192:float getAsFloat() -> getAsFloat
    203:203:long getAsLong() -> getAsLong
    211:211:short getAsShort() -> getAsShort
    219:219:int getAsInt() -> getAsInt
    227:227:byte getAsByte() -> getAsByte
    239:243:char getAsCharacter() -> getAsCharacter
    252:264:int hashCode() -> hashCode
    274:294:boolean equals(java.lang.Object) -> equals
    302:307:boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    32:32:com.google.gson.JsonElement deepCopy() -> deepCopy
    void <clinit>() -> <clinit>
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
# {"fileName":"JsonSerializationContext.java","id":"sourceFile"}
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
    void <clinit>() -> <clinit>
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
# {"fileName":"JsonSerializer.java","id":"sourceFile"}
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    void <clinit>() -> <clinit>
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
# {"fileName":"JsonStreamParser.java","id":"sourceFile"}
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    60:61:void <init>(java.lang.String) -> <init>
    67:71:void <init>(java.io.Reader) -> <init>
    84:93:com.google.gson.JsonElement next() -> next
    105:113:boolean hasNext() -> hasNext
    123:123:void remove() -> remove
    51:51:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
# {"fileName":"JsonSyntaxException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
# {"fileName":"LongSerializationPolicy.java","id":"sourceFile"}
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    27:27:com.google.gson.LongSerializationPolicy[] values() -> values
    27:27:com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
    27:27:void <init>(java.lang.String,int,com.google.gson.LongSerializationPolicy$1) -> <init>
    27:52:void <clinit>() -> <clinit>
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
# {"fileName":"LongSerializationPolicy.java","id":"sourceFile"}
    36:36:void <init>(java.lang.String,int) -> <init>
    38:41:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
    void <clinit>() -> <clinit>
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
# {"fileName":"LongSerializationPolicy.java","id":"sourceFile"}
    52:52:void <init>(java.lang.String,int) -> <init>
    54:57:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
    void <clinit>() -> <clinit>
com.google.gson.ReflectionAccessFilter -> com.google.gson.ReflectionAccessFilter:
# {"fileName":"ReflectionAccessFilter.java","id":"sourceFile"}
    com.google.gson.ReflectionAccessFilter BLOCK_INACCESSIBLE_JAVA -> BLOCK_INACCESSIBLE_JAVA
    com.google.gson.ReflectionAccessFilter BLOCK_ALL_JAVA -> BLOCK_ALL_JAVA
    com.google.gson.ReflectionAccessFilter BLOCK_ALL_ANDROID -> BLOCK_ALL_ANDROID
    com.google.gson.ReflectionAccessFilter BLOCK_ALL_PLATFORM -> BLOCK_ALL_PLATFORM
    com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
    105:179:void <clinit>() -> <clinit>
com.google.gson.ReflectionAccessFilter$1 -> com.google.gson.ReflectionAccessFilter$1:
# {"fileName":"ReflectionAccessFilter.java","id":"sourceFile"}
    105:105:void <init>() -> <init>
    107:109:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
    void <clinit>() -> <clinit>
com.google.gson.ReflectionAccessFilter$2 -> com.google.gson.ReflectionAccessFilter$2:
# {"fileName":"ReflectionAccessFilter.java","id":"sourceFile"}
    130:130:void <init>() -> <init>
    132:134:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
    void <clinit>() -> <clinit>
com.google.gson.ReflectionAccessFilter$3 -> com.google.gson.ReflectionAccessFilter$3:
# {"fileName":"ReflectionAccessFilter.java","id":"sourceFile"}
    154:154:void <init>() -> <init>
    156:158:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
    void <clinit>() -> <clinit>
com.google.gson.ReflectionAccessFilter$4 -> com.google.gson.ReflectionAccessFilter$4:
# {"fileName":"ReflectionAccessFilter.java","id":"sourceFile"}
    179:179:void <init>() -> <init>
    181:183:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
    void <clinit>() -> <clinit>
com.google.gson.ReflectionAccessFilter$FilterResult -> com.google.gson.ReflectionAccessFilter$FilterResult:
# {"fileName":"ReflectionAccessFilter.java","id":"sourceFile"}
    com.google.gson.ReflectionAccessFilter$FilterResult ALLOW -> ALLOW
    com.google.gson.ReflectionAccessFilter$FilterResult INDECISIVE -> INDECISIVE
    com.google.gson.ReflectionAccessFilter$FilterResult BLOCK_INACCESSIBLE -> BLOCK_INACCESSIBLE
    com.google.gson.ReflectionAccessFilter$FilterResult BLOCK_ALL -> BLOCK_ALL
    com.google.gson.ReflectionAccessFilter$FilterResult[] $VALUES -> $VALUES
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult[] values() -> values
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    38:80:void <clinit>() -> <clinit>
com.google.gson.ToNumberPolicy -> com.google.gson.ToNumberPolicy:
# {"fileName":"ToNumberPolicy.java","id":"sourceFile"}
    com.google.gson.ToNumberPolicy DOUBLE -> DOUBLE
    com.google.gson.ToNumberPolicy LAZILY_PARSED_NUMBER -> LAZILY_PARSED_NUMBER
    com.google.gson.ToNumberPolicy LONG_OR_DOUBLE -> LONG_OR_DOUBLE
    com.google.gson.ToNumberPolicy BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.ToNumberPolicy[] $VALUES -> $VALUES
    33:33:com.google.gson.ToNumberPolicy[] values() -> values
    33:33:com.google.gson.ToNumberPolicy valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:void <init>(java.lang.String,int,com.google.gson.ToNumberPolicy$1) -> <init>
    33:88:void <clinit>() -> <clinit>
com.google.gson.ToNumberPolicy$1 -> com.google.gson.ToNumberPolicy$1:
# {"fileName":"ToNumberPolicy.java","id":"sourceFile"}
    39:39:void <init>(java.lang.String,int) -> <init>
    41:41:java.lang.Double readNumber(com.google.gson.stream.JsonReader) -> readNumber
    39:39:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    void <clinit>() -> <clinit>
com.google.gson.ToNumberPolicy$2 -> com.google.gson.ToNumberPolicy$2:
# {"fileName":"ToNumberPolicy.java","id":"sourceFile"}
    50:50:void <init>(java.lang.String,int) -> <init>
    52:52:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    void <clinit>() -> <clinit>
com.google.gson.ToNumberPolicy$3 -> com.google.gson.ToNumberPolicy$3:
# {"fileName":"ToNumberPolicy.java","id":"sourceFile"}
    65:65:void <init>(java.lang.String,int) -> <init>
    67:78:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    void <clinit>() -> <clinit>
com.google.gson.ToNumberPolicy$4 -> com.google.gson.ToNumberPolicy$4:
# {"fileName":"ToNumberPolicy.java","id":"sourceFile"}
    88:88:void <init>(java.lang.String,int) -> <init>
    90:94:java.math.BigDecimal readNumber(com.google.gson.stream.JsonReader) -> readNumber
    88:88:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    void <clinit>() -> <clinit>
com.google.gson.ToNumberStrategy -> com.google.gson.ToNumberStrategy:
# {"fileName":"ToNumberStrategy.java","id":"sourceFile"}
    java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    void <clinit>() -> <clinit>
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
# {"fileName":"TypeAdapter.java","id":"sourceFile"}
    124:125:void <init>() -> <init>
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    146:148:void toJson(java.io.Writer,java.lang.Object) -> toJson
    191:191:com.google.gson.TypeAdapter nullSafe() -> nullSafe
    220:226:java.lang.String toJson(java.lang.Object) -> toJson
    239:243:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    268:269:java.lang.Object fromJson(java.io.Reader) -> fromJson
    285:285:java.lang.Object fromJson(java.lang.String) -> fromJson
    298:301:java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
    void <clinit>() -> <clinit>
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
# {"fileName":"TypeAdapter.java","id":"sourceFile"}
    com.google.gson.TypeAdapter this$0 -> this$0
    191:191:void <init>(com.google.gson.TypeAdapter) -> <init>
    193:198:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    200:204:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void <clinit>() -> <clinit>
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
# {"fileName":"TypeAdapterFactory.java","id":"sourceFile"}
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
# {"fileName":"Expose.java","id":"sourceFile"}
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
    void <clinit>() -> <clinit>
com.google.gson.annotations.JsonAdapter -> com.google.gson.annotations.JsonAdapter:
# {"fileName":"JsonAdapter.java","id":"sourceFile"}
    java.lang.Class value() -> value
    boolean nullSafe() -> nullSafe
    void <clinit>() -> <clinit>
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
# {"fileName":"SerializedName.java","id":"sourceFile"}
    java.lang.String value() -> value
    java.lang.String[] alternate() -> alternate
    void <clinit>() -> <clinit>
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
# {"fileName":"Since.java","id":"sourceFile"}
    double value() -> value
    void <clinit>() -> <clinit>
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
# {"fileName":"Until.java","id":"sourceFile"}
    double value() -> value
    void <clinit>() -> <clinit>
com.google.gson.annotations.package-info -> com.google.gson.annotations.package-info:
# {"fileName":"package-info.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
# {"fileName":"$Gson$Preconditions.java","id":"sourceFile"}
    35:36:void <init>() -> <init>
    46:49:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    53:56:void checkArgument(boolean) -> checkArgument
    void <clinit>() -> <clinit>
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
# {"fileName":"$Gson$Types.java","id":"sourceFile"}
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    boolean $assertionsDisabled -> $assertionsDisabled
    48:49:void <init>() -> <init>
    60:60:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    70:70:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    81:86:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    96:101:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    110:129:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    134:165:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    171:171:boolean equal(java.lang.Object,java.lang.Object) -> equal
    178:228:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    233:233:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    242:272:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    283:292:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    300:302:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    310:315:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    328:338:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    343:343:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    349:440:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map) -> resolve
    444:457:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    461:466:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    474:477:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    481:482:void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    45:46:void <clinit>() -> <clinit>
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
# {"fileName":"$Gson$Types.java","id":"sourceFile"}
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    556:559:void <init>(java.lang.reflect.Type) -> <init>
    562:562:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    566:567:boolean equals(java.lang.Object) -> equals
    571:571:int hashCode() -> hashCode
    575:575:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
# {"fileName":"$Gson$Types.java","id":"sourceFile"}
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    489:507:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    510:510:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    514:514:java.lang.reflect.Type getRawType() -> getRawType
    518:518:java.lang.reflect.Type getOwnerType() -> getOwnerType
    522:523:boolean equals(java.lang.Object) -> equals
    527:527:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    531:533:int hashCode() -> hashCode
    537:547:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
# {"fileName":"$Gson$Types.java","id":"sourceFile"}
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    591:608:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    611:611:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    615:615:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    619:620:boolean equals(java.lang.Object) -> equals
    625:626:int hashCode() -> hashCode
    630:635:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.util.Map instanceCreators -> instanceCreators
    boolean useJdkUnsafe -> useJdkUnsafe
    java.util.List reflectionFilters -> reflectionFilters
    58:62:void <init>(java.util.Map,boolean,java.util.List) -> <init>
    71:80:java.lang.String checkInstantiable(java.lang.Class) -> checkInstantiable
    84:150:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    162:201:com.google.gson.internal.ObjectConstructor newSpecialCollectionConstructor(java.lang.reflect.Type,java.lang.Class) -> newSpecialCollectionConstructor
    206:258:com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class,com.google.gson.ReflectionAccessFilter$FilterResult) -> newDefaultConstructor
    298:361:com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    365:383:com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.Class) -> newUnsafeAllocator
    392:392:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    92:92:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    94:94:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    300:300:void <init>() -> <init>
    302:302:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    306:306:void <init>() -> <init>
    308:308:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    312:312:void <init>() -> <init>
    314:314:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$13 -> com.google.gson.internal.ConstructorConstructor$13:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    318:318:void <init>() -> <init>
    320:320:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$14 -> com.google.gson.internal.ConstructorConstructor$14:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    328:328:void <init>() -> <init>
    330:330:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$15 -> com.google.gson.internal.ConstructorConstructor$15:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    334:334:void <init>() -> <init>
    336:336:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$16 -> com.google.gson.internal.ConstructorConstructor$16:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    340:340:void <init>() -> <init>
    342:342:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$17 -> com.google.gson.internal.ConstructorConstructor$17:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    347:347:void <init>() -> <init>
    349:349:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$18 -> com.google.gson.internal.ConstructorConstructor$18:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    353:353:void <init>() -> <init>
    355:355:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$19 -> com.google.gson.internal.ConstructorConstructor$19:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.Class val$rawType -> val$rawType
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    366:366:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class) -> <init>
    370:373:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    104:104:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    106:106:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$20 -> com.google.gson.internal.ConstructorConstructor$20:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.String val$exceptionMessage -> val$exceptionMessage
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    383:383:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    385:385:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.String val$exceptionMessage -> val$exceptionMessage
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    134:134:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    136:136:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.String val$message -> val$message
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    150:150:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    152:152:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.reflect.Type val$type -> val$type
    163:163:void <init>(java.lang.reflect.Type) -> <init>
    165:175:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.reflect.Type val$type -> val$type
    183:183:void <init>(java.lang.reflect.Type) -> <init>
    185:195:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.String val$message -> val$message
    226:226:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.String val$exceptionMessage -> val$exceptionMessage
    246:246:void <init>(java.lang.String) -> <init>
    252:252:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
# {"fileName":"ConstructorConstructor.java","id":"sourceFile"}
    java.lang.reflect.Constructor val$constructor -> val$constructor
    258:258:void <init>(java.lang.reflect.Constructor) -> <init>
    262:276:java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
# {"fileName":"Excluder.java","id":"sourceFile"}
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    50:59:void <init>() -> <init>
    63:65:com.google.gson.internal.Excluder clone() -> clone
    70:72:com.google.gson.internal.Excluder withVersion(double) -> withVersion
    76:81:com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    85:87:com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    91:93:com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    98:107:com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    111:121:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    151:189:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    193:201:boolean excludeClassChecks(java.lang.Class) -> excludeClassChecks
    205:206:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    210:216:boolean excludeClassInStrategy(java.lang.Class,boolean) -> excludeClassInStrategy
    220:221:boolean isAnonymousOrNonStaticLocal(java.lang.Class) -> isAnonymousOrNonStaticLocal
    225:225:boolean isInnerClass(java.lang.Class) -> isInnerClass
    229:229:boolean isStatic(java.lang.Class) -> isStatic
    233:233:boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    237:241:boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    245:249:boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    50:50:java.lang.Object clone() -> clone
    52:52:void <clinit>() -> <clinit>
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
# {"fileName":"Excluder.java","id":"sourceFile"}
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    121:121:void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    126:130:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    134:139:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    142:145:com.google.gson.TypeAdapter delegate() -> delegate
    void <clinit>() -> <clinit>
com.google.gson.internal.GsonBuildConfig -> com.google.gson.internal.GsonBuildConfig:
# {"fileName":"GsonBuildConfig.java","id":"sourceFile"}
    java.lang.String VERSION -> VERSION
    31:31:void <init>() -> <init>
    void <clinit>() -> <clinit>
com.google.gson.internal.JavaVersion -> com.google.gson.internal.JavaVersion:
# {"fileName":"JavaVersion.java","id":"sourceFile"}
    int majorJavaVersion -> majorJavaVersion
    29:30:int determineMajorJavaVersion() -> determineMajorJavaVersion
    35:42:int getMajorJavaVersion(java.lang.String) -> getMajorJavaVersion
    48:56:int parseDotted(java.lang.String) -> parseDotted
    62:73:int extractBeginningInt(java.lang.String) -> extractBeginningInt
    81:81:int getMajorJavaVersion() -> getMajorJavaVersion
    88:88:boolean isJava9OrLater() -> isJava9OrLater
    91:91:void <init>() -> <init>
    26:26:void <clinit>() -> <clinit>
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
# {"fileName":"JsonReaderInternalAccess.java","id":"sourceFile"}
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    25:25:void <init>() -> <init>
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
    void <clinit>() -> <clinit>
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
# {"fileName":"LazilyParsedNumber.java","id":"sourceFile"}
    java.lang.String value -> value
    34:36:void <init>(java.lang.String) -> <init>
    41:46:int intValue() -> intValue
    54:56:long longValue() -> longValue
    62:62:float floatValue() -> floatValue
    67:67:double doubleValue() -> doubleValue
    72:72:java.lang.String toString() -> toString
    81:81:java.lang.Object writeReplace() -> writeReplace
    86:86:void readObject(java.io.ObjectInputStream) -> readObject
    91:91:int hashCode() -> hashCode
    96:103:boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
# {"fileName":"LinkedTreeMap.java","id":"sourceFile"}
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    boolean allowNullValues -> allowNullValues
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    66:67:void <init>() -> <init>
    77:78:void <init>(boolean) -> <init>
    54:95:void <init>(java.util.Comparator,boolean) -> <init>
    98:98:int size() -> size
    102:103:java.lang.Object get(java.lang.Object) -> get
    107:107:boolean containsKey(java.lang.Object) -> containsKey
    111:120:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    124:131:void clear() -> clear
    134:135:java.lang.Object remove(java.lang.Object) -> remove
    145:203:com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    209:211:com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    225:227:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    231:231:boolean equal(java.lang.Object,java.lang.Object) -> equal
    241:297:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    300:304:com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    308:324:void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    334:391:void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    397:419:void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    425:447:void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    453:454:java.util.Set entrySet() -> entrySet
    458:459:java.util.Set keySet() -> keySet
    656:656:java.lang.Object writeReplace() -> writeReplace
    661:661:void readObject(java.io.ObjectInputStream) -> readObject
    42:45:void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
# {"fileName":"LinkedTreeMap.java","id":"sourceFile"}
    45:45:void <init>() -> <init>
    47:47:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    45:45:int compare(java.lang.Object,java.lang.Object) -> compare
    void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
# {"fileName":"LinkedTreeMap.java","id":"sourceFile"}
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    588:588:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    590:590:int size() -> size
    594:594:java.util.Iterator iterator() -> iterator
    602:602:boolean contains(java.lang.Object) -> contains
    606:615:boolean remove(java.lang.Object) -> remove
    619:620:void clear() -> clear
    void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
# {"fileName":"LinkedTreeMap.java","id":"sourceFile"}
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    594:594:void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    596:596:java.util.Map$Entry next() -> next
    594:594:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
# {"fileName":"LinkedTreeMap.java","id":"sourceFile"}
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    623:623:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    625:625:int size() -> size
    629:629:java.util.Iterator iterator() -> iterator
    637:637:boolean contains(java.lang.Object) -> contains
    641:641:boolean remove(java.lang.Object) -> remove
    645:646:void clear() -> clear
    void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
# {"fileName":"LinkedTreeMap.java","id":"sourceFile"}
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    629:629:void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) -> <init>
    631:631:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
# {"fileName":"LinkedTreeMap.java","id":"sourceFile"}
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    555:560:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    563:563:boolean hasNext() -> hasNext
    567:575:com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    579:585:void remove() -> remove
    void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
# {"fileName":"LinkedTreeMap.java","id":"sourceFile"}
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    boolean allowNullValue -> allowNullValue
    java.lang.Object value -> value
    int height -> height
    474:478:void <init>(boolean) -> <init>
    481:490:void <init>(boolean,com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    493:493:java.lang.Object getKey() -> getKey
    497:497:java.lang.Object getValue() -> getValue
    501:506:java.lang.Object setValue(java.lang.Object) -> setValue
    510:515:boolean equals(java.lang.Object) -> equals
    519:520:int hashCode() -> hashCode
    524:524:java.lang.String toString() -> toString
    531:537:com.google.gson.internal.LinkedTreeMap$Node first() -> first
    544:550:com.google.gson.internal.LinkedTreeMap$Node last() -> last
    void <clinit>() -> <clinit>
com.google.gson.internal.NonNullElementWrapperList -> com.google.gson.internal.NonNullElementWrapperList:
# {"fileName":"NonNullElementWrapperList.java","id":"sourceFile"}
    java.util.ArrayList delegate -> delegate
    20:22:void <init>(java.util.ArrayList) -> <init>
    25:25:java.lang.Object get(int) -> get
    29:29:int size() -> size
    33:36:java.lang.Object nonNull(java.lang.Object) -> nonNull
    40:40:java.lang.Object set(int,java.lang.Object) -> set
    44:45:void add(int,java.lang.Object) -> add
    48:48:java.lang.Object remove(int) -> remove
    54:55:void clear() -> clear
    58:58:boolean remove(java.lang.Object) -> remove
    62:62:boolean removeAll(java.util.Collection) -> removeAll
    66:66:boolean retainAll(java.util.Collection) -> retainAll
    70:70:boolean contains(java.lang.Object) -> contains
    74:74:int indexOf(java.lang.Object) -> indexOf
    78:78:int lastIndexOf(java.lang.Object) -> lastIndexOf
    82:82:java.lang.Object[] toArray() -> toArray
    86:86:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    90:90:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
    void <clinit>() -> <clinit>
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
# {"fileName":"ObjectConstructor.java","id":"sourceFile"}
    java.lang.Object construct() -> construct
    void <clinit>() -> <clinit>
com.google.gson.internal.PreJava9DateFormatProvider -> com.google.gson.internal.PreJava9DateFormatProvider:
# {"fileName":"PreJava9DateFormatProvider.java","id":"sourceFile"}
    25:25:void <init>() -> <init>
    31:31:java.text.DateFormat getUSDateFormat(int) -> getUSDateFormat
    39:40:java.text.DateFormat getUSDateTimeFormat(int,int) -> getUSDateTimeFormat
    44:54:java.lang.String getDateFormatPattern(int) -> getDateFormatPattern
    59:69:java.lang.String getDatePartOfDateTimePattern(int) -> getDatePartOfDateTimePattern
    74:83:java.lang.String getTimePartOfDateTimePattern(int) -> getTimePartOfDateTimePattern
    void <clinit>() -> <clinit>
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
# {"fileName":"Primitives.java","id":"sourceFile"}
    28:28:void <init>() -> <init>
    34:34:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    44:44:boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    66:75:java.lang.Class wrap(java.lang.Class) -> wrap
    89:98:java.lang.Class unwrap(java.lang.Class) -> unwrap
    void <clinit>() -> <clinit>
com.google.gson.internal.ReflectionAccessFilterHelper -> com.google.gson.internal.ReflectionAccessFilterHelper:
# {"fileName":"ReflectionAccessFilterHelper.java","id":"sourceFile"}
    14:14:void <init>() -> <init>
    20:20:boolean isJavaType(java.lang.Class) -> isJavaType
    24:24:boolean isJavaType(java.lang.String) -> isJavaType
    28:28:boolean isAndroidType(java.lang.Class) -> isAndroidType
    32:34:boolean isAndroidType(java.lang.String) -> isAndroidType
    38:42:boolean isAnyPlatformType(java.lang.Class) -> isAnyPlatformType
    51:57:com.google.gson.ReflectionAccessFilter$FilterResult getFilterResult(java.util.List,java.lang.Class) -> getFilterResult
    64:64:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
    void <clinit>() -> <clinit>
com.google.gson.internal.ReflectionAccessFilterHelper$1 -> com.google.gson.internal.ReflectionAccessFilterHelper$1:
# {"fileName":"ReflectionAccessFilterHelper.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker:
# {"fileName":"ReflectionAccessFilterHelper.java","id":"sourceFile"}
    com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker INSTANCE -> INSTANCE
    67:67:void <init>() -> <init>
    boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
    67:67:void <init>(com.google.gson.internal.ReflectionAccessFilterHelper$1) -> <init>
    70:97:void <clinit>() -> <clinit>
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$1 -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$1:
# {"fileName":"ReflectionAccessFilterHelper.java","id":"sourceFile"}
    java.lang.reflect.Method val$canAccessMethod -> val$canAccessMethod
    75:75:void <init>(java.lang.reflect.Method) -> <init>
    78:80:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
    void <clinit>() -> <clinit>
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$2 -> com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$2:
# {"fileName":"ReflectionAccessFilterHelper.java","id":"sourceFile"}
    89:89:void <init>() -> <init>
    92:92:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
    void <clinit>() -> <clinit>
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
# {"fileName":"Streams.java","id":"sourceFile"}
    37:38:void <init>() -> <init>
    45:65:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    73:74:void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    77:77:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
    void <clinit>() -> <clinit>
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
# {"fileName":"Streams.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
# {"fileName":"Streams.java","id":"sourceFile"}
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    86:90:void <init>(java.lang.Appendable) -> <init>
    93:95:void write(char[],int,int) -> write
    97:97:void flush() -> flush
    98:98:void close() -> close
    104:105:void write(int) -> write
    109:111:void write(java.lang.String,int,int) -> write
    114:115:java.io.Writer append(java.lang.CharSequence) -> append
    119:120:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    84:84:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    84:84:java.lang.Appendable append(java.lang.CharSequence) -> append
    void <clinit>() -> <clinit>
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
# {"fileName":"Streams.java","id":"sourceFile"}
    char[] chars -> chars
    java.lang.String cachedString -> cachedString
    126:126:void <init>() -> <init>
    131:133:void setChars(char[]) -> setChars
    136:136:int length() -> length
    139:139:char charAt(int) -> charAt
    142:142:java.lang.CharSequence subSequence(int,int) -> subSequence
    147:150:java.lang.String toString() -> toString
    126:126:void <init>(com.google.gson.internal.Streams$1) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
# {"fileName":"UnsafeAllocator.java","id":"sourceFile"}
    com.google.gson.internal.UnsafeAllocator INSTANCE -> INSTANCE
    30:30:void <init>() -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    39:43:void assertInstantiable(java.lang.Class) -> assertInstantiable
    53:114:com.google.gson.internal.UnsafeAllocator create() -> create
    30:30:void access$000(java.lang.Class) -> access$000
    45:45:void <clinit>() -> <clinit>
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
# {"fileName":"UnsafeAllocator.java","id":"sourceFile"}
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    58:58:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    62:63:java.lang.Object newInstance(java.lang.Class) -> newInstance
    void <clinit>() -> <clinit>
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
# {"fileName":"UnsafeAllocator.java","id":"sourceFile"}
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    82:82:void <init>(java.lang.reflect.Method,int) -> <init>
    86:87:java.lang.Object newInstance(java.lang.Class) -> newInstance
    void <clinit>() -> <clinit>
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
# {"fileName":"UnsafeAllocator.java","id":"sourceFile"}
    java.lang.reflect.Method val$newInstance -> val$newInstance
    102:102:void <init>(java.lang.reflect.Method) -> <init>
    106:107:java.lang.Object newInstance(java.lang.Class) -> newInstance
    void <clinit>() -> <clinit>
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
# {"fileName":"UnsafeAllocator.java","id":"sourceFile"}
    114:114:void <init>() -> <init>
    117:117:java.lang.Object newInstance(java.lang.Class) -> newInstance
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
# {"fileName":"ArrayTypeAdapter.java","id":"sourceFile"}
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    57:61:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    64:90:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    95:107:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    37:37:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
# {"fileName":"ArrayTypeAdapter.java","id":"sourceFile"}
    37:37:void <init>() -> <init>
    39:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
# {"fileName":"CollectionTypeAdapterFactory.java","id":"sourceFile"}
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    39:41:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    45:58:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
# {"fileName":"CollectionTypeAdapterFactory.java","id":"sourceFile"}
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    67:71:void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    74:86:java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    90:100:void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    61:61:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    61:61:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
# {"fileName":"DateTypeAdapter.java","id":"sourceFile"}
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.util.List dateFormats -> dateFormats
    58:68:void <init>() -> <init>
    71:75:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    79:90:java.util.Date deserializeToDate(com.google.gson.stream.JsonReader) -> deserializeToDate
    95:106:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    46:46:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    46:46:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    47:47:void <clinit>() -> <clinit>
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
# {"fileName":"DateTypeAdapter.java","id":"sourceFile"}
    47:47:void <init>() -> <init>
    50:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.DefaultDateTypeAdapter -> com.google.gson.internal.bind.DefaultDateTypeAdapter:
# {"fileName":"DefaultDateTypeAdapter.java","id":"sourceFile"}
    java.lang.String SIMPLE_NAME -> SIMPLE_NAME
    com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType dateType -> dateType
    java.util.List dateFormats -> dateFormats
    92:100:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String) -> <init>
    92:111:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int) -> <init>
    92:122:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int) -> <init>
    128:139:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    143:148:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    152:164:java.util.Date deserializeToDate(com.google.gson.stream.JsonReader) -> deserializeToDate
    170:174:java.lang.String toString() -> toString
    47:47:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    47:47:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String,com.google.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,com.google.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int,com.google.gson.internal.bind.DefaultDateTypeAdapter$1) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.DefaultDateTypeAdapter$1 -> com.google.gson.internal.bind.DefaultDateTypeAdapter$1:
# {"fileName":"DefaultDateTypeAdapter.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType:
# {"fileName":"DefaultDateTypeAdapter.java","id":"sourceFile"}
    com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE -> DATE
    java.lang.Class dateClass -> dateClass
    59:61:void <init>(java.lang.Class) -> <init>
    java.util.Date deserialize(java.util.Date) -> deserialize
    66:66:com.google.gson.TypeAdapterFactory createFactory(com.google.gson.internal.bind.DefaultDateTypeAdapter) -> createFactory
    70:70:com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String) -> createAdapterFactory
    74:74:com.google.gson.TypeAdapterFactory createAdapterFactory(int) -> createAdapterFactory
    78:78:com.google.gson.TypeAdapterFactory createAdapterFactory(int,int) -> createAdapterFactory
    82:82:com.google.gson.TypeAdapterFactory createDefaultsAdapterFactory() -> createDefaultsAdapterFactory
    51:51:void <clinit>() -> <clinit>
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1 -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1:
# {"fileName":"DefaultDateTypeAdapter.java","id":"sourceFile"}
    51:51:void <init>(java.lang.Class) -> <init>
    53:53:java.util.Date deserialize(java.util.Date) -> deserialize
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
# {"fileName":"JsonAdapterAnnotationTypeAdapterFactory.java","id":"sourceFile"}
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    37:39:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    44:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    54:86:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> getTypeAdapter
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
# {"fileName":"JsonTreeReader.java","id":"sourceFile"}
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.lang.Object[] stack -> stack
    int stackSize -> stackSize
    java.lang.String[] pathNames -> pathNames
    int[] pathIndices -> pathIndices
    53:70:void <init>(com.google.gson.JsonElement) -> <init>
    73:77:void beginArray() -> beginArray
    80:86:void endArray() -> endArray
    89:92:void beginObject() -> beginObject
    95:102:void endObject() -> endObject
    105:106:boolean hasNext() -> hasNext
    110:148:com.google.gson.stream.JsonToken peek() -> peek
    153:153:java.lang.Object peekStack() -> peekStack
    157:159:java.lang.Object popStack() -> popStack
    163:167:void expect(com.google.gson.stream.JsonToken) -> expect
    170:176:java.lang.String nextName(boolean) -> nextName
    180:180:java.lang.String nextName() -> nextName
    184:193:java.lang.String nextString() -> nextString
    197:202:boolean nextBoolean() -> nextBoolean
    206:211:void nextNull() -> nextNull
    214:227:double nextDouble() -> nextDouble
    231:241:long nextLong() -> nextLong
    245:255:int nextInt() -> nextInt
    259:268:com.google.gson.JsonElement nextJsonElement() -> nextJsonElement
    272:274:void close() -> close
    277:299:void skipValue() -> skipValue
    302:302:java.lang.String toString() -> toString
    306:311:void promoteNameToValue() -> promoteNameToValue
    314:321:void push(java.lang.Object) -> push
    324:346:java.lang.String getPath(boolean) -> getPath
    350:350:java.lang.String getPreviousPath() -> getPreviousPath
    354:354:java.lang.String getPath() -> getPath
    358:358:java.lang.String locationString() -> locationString
    40:48:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
# {"fileName":"JsonTreeReader.java","id":"sourceFile"}
    40:40:void <init>() -> <init>
    42:42:int read(char[],int,int) -> read
    45:45:void close() -> close
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeReader$2 -> com.google.gson.internal.bind.JsonTreeReader$2:
# {"fileName":"JsonTreeReader.java","id":"sourceFile"}
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    278:278:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
# {"fileName":"JsonTreeWriter.java","id":"sourceFile"}
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    50:60:void <init>() -> <init>
    66:69:com.google.gson.JsonElement get() -> get
    73:73:com.google.gson.JsonElement peek() -> peek
    77:93:void put(com.google.gson.JsonElement) -> put
    96:99:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    103:111:com.google.gson.stream.JsonWriter endArray() -> endArray
    115:118:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    122:130:com.google.gson.stream.JsonWriter endObject() -> endObject
    134:143:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    147:151:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    155:155:com.google.gson.stream.JsonWriter jsonValue(java.lang.String) -> jsonValue
    159:160:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    164:165:com.google.gson.stream.JsonWriter value(boolean) -> value
    169:173:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    177:181:com.google.gson.stream.JsonWriter value(float) -> value
    185:189:com.google.gson.stream.JsonWriter value(double) -> value
    193:194:com.google.gson.stream.JsonWriter value(long) -> value
    198:210:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    214:214:void flush() -> flush
    217:221:void close() -> close
    35:47:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
# {"fileName":"JsonTreeWriter.java","id":"sourceFile"}
    35:35:void <init>() -> <init>
    37:37:void write(char[],int,int) -> write
    40:40:void flush() -> flush
    43:43:void close() -> close
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
# {"fileName":"MapTypeAdapterFactory.java","id":"sourceFile"}
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    110:113:void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:132:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    139:141:com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
# {"fileName":"MapTypeAdapterFactory.java","id":"sourceFile"}
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    151:157:void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    160:194:java.util.Map read(com.google.gson.stream.JsonReader) -> read
    198:242:void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    245:259:java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    144:144:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    144:144:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.NumberTypeAdapter -> com.google.gson.internal.bind.NumberTypeAdapter:
# {"fileName":"NumberTypeAdapter.java","id":"sourceFile"}
    com.google.gson.TypeAdapterFactory LAZILY_PARSED_NUMBER_FACTORY -> LAZILY_PARSED_NUMBER_FACTORY
    com.google.gson.ToNumberStrategy toNumberStrategy -> toNumberStrategy
    43:45:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    48:49:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> newFactory
    58:61:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    66:75:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    80:81:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    35:35:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    35:35:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <clinit>() -> <clinit>
com.google.gson.internal.bind.NumberTypeAdapter$1 -> com.google.gson.internal.bind.NumberTypeAdapter$1:
# {"fileName":"NumberTypeAdapter.java","id":"sourceFile"}
    com.google.gson.internal.bind.NumberTypeAdapter val$adapter -> val$adapter
    49:49:void <init>(com.google.gson.internal.bind.NumberTypeAdapter) -> <init>
    52:52:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.NumberTypeAdapter$2 -> com.google.gson.internal.bind.NumberTypeAdapter$2:
# {"fileName":"NumberTypeAdapter.java","id":"sourceFile"}
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    67:67:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
# {"fileName":"ObjectTypeAdapter.java","id":"sourceFile"}
    com.google.gson.TypeAdapterFactory DOUBLE_FACTORY -> DOUBLE_FACTORY
    com.google.gson.Gson gson -> gson
    com.google.gson.ToNumberStrategy toNumberStrategy -> toNumberStrategy
    49:52:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy) -> <init>
    55:55:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> newFactory
    67:70:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    79:87:java.lang.Object tryBeginNesting(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> tryBeginNesting
    93:105:java.lang.Object readTerminal(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> readTerminal
    112:164:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    170:184:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    40:40:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy,com.google.gson.internal.bind.ObjectTypeAdapter$1) -> <init>
    44:44:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
# {"fileName":"ObjectTypeAdapter.java","id":"sourceFile"}
    com.google.gson.ToNumberStrategy val$toNumberStrategy -> val$toNumberStrategy
    55:55:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    58:61:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
# {"fileName":"ObjectTypeAdapter.java","id":"sourceFile"}
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    79:79:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
# {"fileName":"ReflectiveTypeAdapterFactory.java","id":"sourceFile"}
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory -> jsonAdapterFactory
    java.util.List reflectionFilters -> reflectionFilters
    71:77:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory,java.util.List) -> <init>
    80:80:boolean includeField(java.lang.reflect.Field,boolean) -> includeField
    85:100:java.util.List getFieldNames(java.lang.reflect.Field) -> getFieldNames
    105:130:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    134:140:void checkAccessible(java.lang.Object,java.lang.reflect.AccessibleObject) -> checkAccessible
    147:164:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.reflect.Method,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean,boolean) -> createBoundField
    230:308:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class,boolean,boolean) -> getBoundFields
    61:61:void access$000(java.lang.Object,java.lang.reflect.AccessibleObject) -> access$000
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
# {"fileName":"ReflectiveTypeAdapterFactory.java","id":"sourceFile"}
    boolean val$blockInaccessible -> val$blockInaccessible
    java.lang.reflect.Method val$accessor -> val$accessor
    boolean val$jsonAdapterPresent -> val$jsonAdapterPresent
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    boolean val$isPrimitive -> val$isPrimitive
    boolean val$isStaticFinalField -> val$isStaticFinalField
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    164:164:void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,java.lang.reflect.Field,boolean,boolean,boolean,java.lang.reflect.Method,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean,boolean) -> <init>
    167:197:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    201:207:void readIntoArray(com.google.gson.stream.JsonReader,int,java.lang.Object[]) -> readIntoArray
    212:224:void readIntoField(com.google.gson.stream.JsonReader,java.lang.Object) -> readIntoField
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
# {"fileName":"ReflectiveTypeAdapterFactory.java","id":"sourceFile"}
    java.util.Map boundFields -> boundFields
    354:356:void <init>(java.util.Map) -> <init>
    360:374:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    378:402:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object createAccumulator() -> createAccumulator
    void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
    java.lang.Object finalize(java.lang.Object) -> finalize
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
# {"fileName":"ReflectiveTypeAdapterFactory.java","id":"sourceFile"}
    java.lang.String name -> name
    java.lang.reflect.Field field -> field
    java.lang.String fieldName -> fieldName
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    319:325:void <init>(java.lang.String,java.lang.reflect.Field,boolean,boolean) -> <init>
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void readIntoArray(com.google.gson.stream.JsonReader,int,java.lang.Object[]) -> readIntoArray
    void readIntoField(com.google.gson.stream.JsonReader,java.lang.Object) -> readIntoField
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter:
# {"fileName":"ReflectiveTypeAdapterFactory.java","id":"sourceFile"}
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    421:423:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    427:427:java.lang.Object createAccumulator() -> createAccumulator
    433:434:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
    438:438:java.lang.Object finalize(java.lang.Object) -> finalize
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter:
# {"fileName":"ReflectiveTypeAdapterFactory.java","id":"sourceFile"}
    java.util.Map PRIMITIVE_DEFAULTS -> PRIMITIVE_DEFAULTS
    java.lang.reflect.Constructor constructor -> constructor
    java.lang.Object[] constructorArgsDefaults -> constructorArgsDefaults
    java.util.Map componentIndices -> componentIndices
    450:476:void <init>(java.lang.Class,java.util.Map,boolean) -> <init>
    479:488:java.util.Map primitiveDefaults() -> primitiveDefaults
    493:493:java.lang.Object[] createAccumulator() -> createAccumulator
    499:510:void readField(java.lang.Object[],com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
    515:530:java.lang.Object finalize(java.lang.Object[]) -> finalize
    442:442:java.lang.Object finalize(java.lang.Object) -> finalize
    442:442:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> readField
    442:442:java.lang.Object createAccumulator() -> createAccumulator
    443:443:void <clinit>() -> <clinit>
com.google.gson.internal.bind.SerializationDelegatingTypeAdapter -> com.google.gson.internal.bind.SerializationDelegatingTypeAdapter:
# {"fileName":"SerializationDelegatingTypeAdapter.java","id":"sourceFile"}
    8:8:void <init>() -> <init>
    com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TreeTypeAdapter -> com.google.gson.internal.bind.TreeTypeAdapter:
# {"fileName":"TreeTypeAdapter.java","id":"sourceFile"}
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context -> context
    boolean nullSafe -> nullSafe
    com.google.gson.TypeAdapter delegate -> delegate
    47:61:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,boolean) -> <init>
    65:66:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory) -> <init>
    69:76:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    80:90:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    94:97:com.google.gson.TypeAdapter delegate() -> delegate
    106:106:com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    113:113:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    123:124:com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    133:133:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TreeTypeAdapter$1 -> com.google.gson.internal.bind.TreeTypeAdapter$1:
# {"fileName":"TreeTypeAdapter.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl -> com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl:
# {"fileName":"TreeTypeAdapter.java","id":"sourceFile"}
    com.google.gson.internal.bind.TreeTypeAdapter this$0 -> this$0
    170:170:void <init>(com.google.gson.internal.bind.TreeTypeAdapter) -> <init>
    172:172:com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    175:175:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
    179:179:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
    170:170:void <init>(com.google.gson.internal.bind.TreeTypeAdapter,com.google.gson.internal.bind.TreeTypeAdapter$1) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory:
# {"fileName":"TreeTypeAdapter.java","id":"sourceFile"}
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    144:155:void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class) -> <init>
    160:166:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
# {"fileName":"TypeAdapterRuntimeTypeWrapper.java","id":"sourceFile"}
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    32:36:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    51:71:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    80:89:boolean isReflective(com.google.gson.TypeAdapter) -> isReflective
    96:99:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter ATOMIC_INTEGER -> ATOMIC_INTEGER
    com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY -> ATOMIC_INTEGER_FACTORY
    com.google.gson.TypeAdapter ATOMIC_BOOLEAN -> ATOMIC_BOOLEAN
    com.google.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY -> ATOMIC_BOOLEAN_FACTORY
    com.google.gson.TypeAdapter ATOMIC_INTEGER_ARRAY -> ATOMIC_INTEGER_ARRAY
    com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY -> ATOMIC_INTEGER_ARRAY_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapter LAZILY_PARSED_NUMBER -> LAZILY_PARSED_NUMBER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapter CURRENCY -> CURRENCY
    com.google.gson.TypeAdapterFactory CURRENCY_FACTORY -> CURRENCY_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    67:68:void <init>() -> <init>
    937:937:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    947:947:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    960:960:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    975:975:com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    994:994:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
    72:920:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    72:72:void <init>() -> <init>
    75:76:void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    80:80:java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    72:72:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    72:72:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    292:292:void <init>() -> <init>
    294:310:java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader) -> read
    313:318:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray) -> write
    292:292:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    292:292:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    323:323:void <init>() -> <init>
    326:333:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    338:343:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    323:323:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    323:323:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    346:346:void <init>() -> <init>
    349:353:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    357:365:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    346:346:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    346:346:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    368:368:void <init>() -> <init>
    371:375:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    379:384:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    368:368:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    368:368:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    387:387:void <init>() -> <init>
    390:398:java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    402:403:void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    387:387:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    387:387:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    409:409:void <init>() -> <init>
    412:421:java.lang.String read(com.google.gson.stream.JsonReader) -> read
    425:426:void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    409:409:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    409:409:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    429:429:void <init>() -> <init>
    431:439:java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    444:445:void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    429:429:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    429:429:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    448:448:void <init>() -> <init>
    450:458:java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    463:464:void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    448:448:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    448:448:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    467:467:void <init>() -> <init>
    472:476:com.google.gson.internal.LazilyParsedNumber read(com.google.gson.stream.JsonReader) -> read
    480:481:void write(com.google.gson.stream.JsonWriter,com.google.gson.internal.LazilyParsedNumber) -> write
    467:467:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    467:467:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    486:486:void <init>() -> <init>
    489:493:java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    497:498:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    486:486:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    486:486:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    87:87:void <init>() -> <init>
    89:120:java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    124:130:void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    87:87:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    87:87:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    504:504:void <init>() -> <init>
    507:511:java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    515:516:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    504:504:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    504:504:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    522:522:void <init>() -> <init>
    525:530:java.net.URL read(com.google.gson.stream.JsonReader) -> read
    534:535:void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    522:522:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    522:522:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    540:540:void <init>() -> <init>
    543:551:java.net.URI read(com.google.gson.stream.JsonReader) -> read
    556:557:void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    540:540:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    540:540:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    562:562:void <init>() -> <init>
    565:570:java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    574:575:void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    562:562:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    562:562:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    581:581:void <init>() -> <init>
    584:592:java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    597:598:void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    581:581:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    581:581:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    603:603:void <init>() -> <init>
    606:610:java.util.Currency read(com.google.gson.stream.JsonReader) -> read
    615:616:void write(com.google.gson.stream.JsonWriter,java.util.Currency) -> write
    603:603:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    603:603:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    620:620:void <init>() -> <init>
    630:659:java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    664:682:void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    620:620:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    620:620:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    688:688:void <init>() -> <init>
    691:714:java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    719:720:void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    688:688:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    688:688:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    725:725:void <init>() -> <init>
    731:739:com.google.gson.JsonElement tryBeginNesting(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> tryBeginNesting
    745:758:com.google.gson.JsonElement readTerminal(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> readTerminal
    763:817:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    823:853:void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    725:725:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    725:725:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    920:920:void <init>() -> <init>
    922:931:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    135:135:void <init>() -> <init>
    138:146:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    150:151:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    135:135:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    135:135:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    937:937:void <init>(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> <init>
    940:940:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    947:947:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    950:950:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    953:953:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    960:960:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    963:964:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    967:968:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$33 -> com.google.gson.internal.bind.TypeAdapters$33:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    975:975:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    978:979:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    982:983:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$34 -> com.google.gson.internal.bind.TypeAdapters$34:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    994:994:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    997:1001:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    1017:1017:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$34$1 -> com.google.gson.internal.bind.TypeAdapters$34$1:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    java.lang.Class val$requestedType -> val$requestedType
    com.google.gson.internal.bind.TypeAdapters$34 this$0 -> this$0
    1001:1001:void <init>(com.google.gson.internal.bind.TypeAdapters$34,java.lang.Class) -> <init>
    1003:1004:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1007:1012:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$35 -> com.google.gson.internal.bind.TypeAdapters$35:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
    95:95:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    158:158:void <init>() -> <init>
    160:164:java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    168:169:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    158:158:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    158:158:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    175:175:void <init>() -> <init>
    178:193:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    197:202:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    175:175:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    175:175:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    208:208:void <init>() -> <init>
    211:226:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    230:235:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    208:208:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    208:208:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    241:241:void <init>() -> <init>
    244:251:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    256:261:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    241:241:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    241:241:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    266:266:void <init>() -> <init>
    269:271:java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader) -> read
    275:276:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger) -> write
    266:266:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    266:266:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    281:281:void <init>() -> <init>
    283:283:java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader) -> read
    286:287:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean) -> write
    281:281:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    281:281:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map stringToConstant -> stringToConstant
    java.util.Map constantToName -> constantToName
    860:904:void <init>(java.lang.Class) -> <init>
    906:912:java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    916:917:void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    859:859:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    859:859:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1 -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1:
# {"fileName":"TypeAdapters.java","id":"sourceFile"}
    java.lang.Class val$classOfT -> val$classOfT
    com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter this$0 -> this$0
    869:869:void <init>(com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter,java.lang.Class) -> <init>
    871:881:java.lang.reflect.Field[] run() -> run
    869:869:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
com.google.gson.internal.bind.util.ISO8601Utils -> com.google.gson.internal.bind.util.ISO8601Utils:
# {"fileName":"ISO8601Utils.java","id":"sourceFile"}
    java.lang.String UTC_ID -> UTC_ID
    java.util.TimeZone TIMEZONE_UTC -> TIMEZONE_UTC
    21:21:void <init>() -> <init>
    49:49:java.lang.String format(java.util.Date) -> format
    60:60:java.lang.String format(java.util.Date,boolean) -> format
    72:109:java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    128:281:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    293:293:boolean checkOffset(java.lang.String,int,char) -> checkOffset
    306:328:int parseInt(java.lang.String,int,int) -> parseInt
    339:344:void padInt(java.lang.StringBuilder,int,int) -> padInt
    350:354:int indexOfNonDigit(java.lang.String,int) -> indexOfNonDigit
    34:34:void <clinit>() -> <clinit>
com.google.gson.internal.package-info -> com.google.gson.internal.package-info:
# {"fileName":"package-info.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.internal.reflect.ReflectionHelper -> com.google.gson.internal.reflect.ReflectionHelper:
# {"fileName":"ReflectionHelper.java","id":"sourceFile"}
    com.google.gson.internal.reflect.ReflectionHelper$RecordHelper RECORD_HELPER -> RECORD_HELPER
    25:25:void <init>() -> <init>
    35:41:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
    55:74:java.lang.String getAccessibleObjectDescription(java.lang.reflect.AccessibleObject,boolean) -> getAccessibleObjectDescription
    82:82:java.lang.String fieldToString(java.lang.reflect.Field) -> fieldToString
    90:93:java.lang.String constructorToString(java.lang.reflect.Constructor) -> constructorToString
    98:111:void appendExecutableParameters(java.lang.reflect.AccessibleObject,java.lang.StringBuilder) -> appendExecutableParameters
    123:129:java.lang.String tryMakeAccessible(java.lang.reflect.Constructor) -> tryMakeAccessible
    135:135:boolean isRecord(java.lang.Class) -> isRecord
    139:139:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    144:144:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    148:148:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    153:153:java.lang.RuntimeException createExceptionForUnexpectedIllegalAccess(java.lang.IllegalAccessException) -> createExceptionForUnexpectedIllegalAccess
    162:162:java.lang.RuntimeException createExceptionForRecordReflectionException(java.lang.ReflectiveOperationException) -> createExceptionForRecordReflectionException
    10:10:java.lang.RuntimeException access$300(java.lang.ReflectiveOperationException) -> access$300
    18:23:void <clinit>() -> <clinit>
com.google.gson.internal.reflect.ReflectionHelper$1 -> com.google.gson.internal.reflect.ReflectionHelper$1:
# {"fileName":"ReflectionHelper.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.internal.reflect.ReflectionHelper$RecordHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordHelper:
# {"fileName":"ReflectionHelper.java","id":"sourceFile"}
    173:173:void <init>() -> <init>
    boolean isRecord(java.lang.Class) -> isRecord
    java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    173:173:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.internal.reflect.ReflectionHelper$RecordNotSupportedHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordNotSupportedHelper:
# {"fileName":"ReflectionHelper.java","id":"sourceFile"}
    252:252:void <init>() -> <init>
    256:256:boolean isRecord(java.lang.Class) -> isRecord
    261:261:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    267:267:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    273:273:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    252:252:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.internal.reflect.ReflectionHelper$RecordSupportedHelper -> com.google.gson.internal.reflect.ReflectionHelper$RecordSupportedHelper:
# {"fileName":"ReflectionHelper.java","id":"sourceFile"}
    java.lang.reflect.Method isRecord -> isRecord
    java.lang.reflect.Method getRecordComponents -> getRecordComponents
    java.lang.reflect.Method getName -> getName
    java.lang.reflect.Method getType -> getType
    189:196:void <init>() -> <init>
    201:203:boolean isRecord(java.lang.Class) -> isRecord
    210:217:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    224:233:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    242:244:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    183:183:void <init>(com.google.gson.internal.reflect.ReflectionHelper$1) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlDateTypeAdapter -> com.google.gson.internal.sql.SqlDateTypeAdapter:
# {"fileName":"SqlDateTypeAdapter.java","id":"sourceFile"}
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    48:51:void <init>() -> <init>
    55:67:java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    73:82:void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    39:39:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    39:39:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <init>(com.google.gson.internal.sql.SqlDateTypeAdapter$1) -> <init>
    40:40:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlDateTypeAdapter$1 -> com.google.gson.internal.sql.SqlDateTypeAdapter$1:
# {"fileName":"SqlDateTypeAdapter.java","id":"sourceFile"}
    40:40:void <init>() -> <init>
    43:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTimeTypeAdapter -> com.google.gson.internal.sql.SqlTimeTypeAdapter:
# {"fileName":"SqlTimeTypeAdapter.java","id":"sourceFile"}
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    48:51:void <init>() -> <init>
    54:65:java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    70:79:void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    40:40:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    40:40:void <init>(com.google.gson.internal.sql.SqlTimeTypeAdapter$1) -> <init>
    41:41:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTimeTypeAdapter$1 -> com.google.gson.internal.sql.SqlTimeTypeAdapter$1:
# {"fileName":"SqlTimeTypeAdapter.java","id":"sourceFile"}
    41:41:void <init>() -> <init>
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTimestampTypeAdapter -> com.google.gson.internal.sql.SqlTimestampTypeAdapter:
# {"fileName":"SqlTimestampTypeAdapter.java","id":"sourceFile"}
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.TypeAdapter dateTypeAdapter -> dateTypeAdapter
    29:31:void <init>(com.google.gson.TypeAdapter) -> <init>
    35:36:java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    41:42:void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    14:14:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    14:14:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    14:14:void <init>(com.google.gson.TypeAdapter,com.google.gson.internal.sql.SqlTimestampTypeAdapter$1) -> <init>
    15:15:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTimestampTypeAdapter$1 -> com.google.gson.internal.sql.SqlTimestampTypeAdapter$1:
# {"fileName":"SqlTimestampTypeAdapter.java","id":"sourceFile"}
    15:15:void <init>() -> <init>
    18:22:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTypesSupport -> com.google.gson.internal.sql.SqlTypesSupport:
# {"fileName":"SqlTypesSupport.java","id":"sourceFile"}
    boolean SUPPORTS_SQL_TYPES -> SUPPORTS_SQL_TYPES
    com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE_DATE_TYPE -> DATE_DATE_TYPE
    com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType TIMESTAMP_DATE_TYPE -> TIMESTAMP_DATE_TYPE
    com.google.gson.TypeAdapterFactory DATE_FACTORY -> DATE_FACTORY
    com.google.gson.TypeAdapterFactory TIME_FACTORY -> TIME_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    69:70:void <init>() -> <init>
    37:67:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTypesSupport$1 -> com.google.gson.internal.sql.SqlTypesSupport$1:
# {"fileName":"SqlTypesSupport.java","id":"sourceFile"}
    45:45:void <init>(java.lang.Class) -> <init>
    47:47:java.sql.Date deserialize(java.util.Date) -> deserialize
    45:45:java.util.Date deserialize(java.util.Date) -> deserialize
    void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTypesSupport$2 -> com.google.gson.internal.sql.SqlTypesSupport$2:
# {"fileName":"SqlTypesSupport.java","id":"sourceFile"}
    50:50:void <init>(java.lang.Class) -> <init>
    52:52:java.sql.Timestamp deserialize(java.util.Date) -> deserialize
    50:50:java.util.Date deserialize(java.util.Date) -> deserialize
    void <clinit>() -> <clinit>
com.google.gson.package-info -> com.google.gson.package-info:
# {"fileName":"package-info.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
# {"fileName":"TypeToken.java","id":"sourceFile"}
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    69:73:void <init>() -> <init>
    79:83:void <init>(java.lang.reflect.Type) -> <init>
    91:105:java.lang.reflect.Type getTypeTokenTypeArgument() -> getTypeTokenTypeArgument
    112:112:java.lang.Class getRawType() -> getRawType
    119:119:java.lang.reflect.Type getType() -> getType
    130:130:boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    141:158:boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    171:171:boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    179:196:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    206:249:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    258:268:boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    275:283:java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    291:293:boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    298:298:int hashCode() -> hashCode
    302:303:boolean equals(java.lang.Object) -> equals
    307:307:java.lang.String toString() -> toString
    314:314:com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    321:321:com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
    342:376:com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[]) -> getParameterized
    383:383:com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type) -> getArray
    void <clinit>() -> <clinit>
com.google.gson.reflect.package-info -> com.google.gson.reflect.package-info:
# {"fileName":"package-info.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
# {"fileName":"JsonReader.java","id":"sourceFile"}
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    int BUFFER_SIZE -> BUFFER_SIZE
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String[] pathNames -> pathNames
    int[] pathIndices -> pathIndices
    230:292:void <init>(java.io.Reader) -> <init>
    334:335:void setLenient(boolean) -> setLenient
    341:341:boolean isLenient() -> isLenient
    349:360:void beginArray() -> beginArray
    367:378:void endArray() -> endArray
    385:395:void beginObject() -> beginObject
    402:414:void endObject() -> endObject
    420:424:boolean hasNext() -> hasNext
    431:465:com.google.gson.stream.JsonToken peek() -> peek
    471:603:int doPeek() -> doPeek
    608:647:int peekKeyword() -> peekKeyword
    652:751:int peekNumber() -> peekNumber
    757:777:boolean isLiteral(char) -> isLiteral
    788:804:java.lang.String nextName() -> nextName
    816:840:java.lang.String nextString() -> nextString
    851:864:boolean nextBoolean() -> nextBoolean
    875:885:void nextNull() -> nextNull
    899:930:double nextDouble() -> nextDouble
    944:985:long nextLong() -> nextLong
    1000:1046:java.lang.String nextQuotedValue(char) -> nextQuotedValue
    1054:1105:java.lang.String nextUnquotedValue() -> nextUnquotedValue
    1110:1132:void skipQuotedValue(char) -> skipQuotedValue
    1138:1164:void skipUnquotedValue() -> skipUnquotedValue
    1177:1223:int nextInt() -> nextInt
    1230:1234:void close() -> close
    1252:1322:void skipValue() -> skipValue
    1325:1332:void push(int) -> push
    1340:1365:boolean fillBuffer(int) -> fillBuffer
    1383:1459:int nextNonWhitespace(boolean) -> nextNonWhitespace
    1464:1467:void checkLenient() -> checkLenient
    1475:1485:void skipToEndOfLine() -> skipToEndOfLine
    1491:1506:boolean skipTo(java.lang.String) -> skipTo
    1510:1510:java.lang.String toString() -> toString
    1514:1516:java.lang.String locationString() -> locationString
    1520:1546:java.lang.String getPath(boolean) -> getPath
    1563:1563:java.lang.String getPreviousPath() -> getPreviousPath
    1581:1581:java.lang.String getPath() -> getPath
    1595:1650:char readEscapeCharacter() -> readEscapeCharacter
    1659:1659:java.io.IOException syntaxError(java.lang.String) -> syntaxError
    1667:1682:void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    1685:1707:void <clinit>() -> <clinit>
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
# {"fileName":"JsonReader.java","id":"sourceFile"}
    1685:1685:void <init>() -> <init>
    1687:1705:void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
    void <clinit>() -> <clinit>
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
# {"fileName":"JsonScope.java","id":"sourceFile"}
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
    25:25:void <init>() -> <init>
    void <clinit>() -> <clinit>
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
# {"fileName":"JsonToken.java","id":"sourceFile"}
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    25:25:com.google.gson.stream.JsonToken[] values() -> values
    25:25:com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:84:void <clinit>() -> <clinit>
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
# {"fileName":"JsonWriter.java","id":"sourceFile"}
    java.util.regex.Pattern VALID_JSON_NUMBER_PATTERN -> VALID_JSON_NUMBER_PATTERN
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    176:208:void <init>(java.io.Writer) -> <init>
    219:226:void setIndent(java.lang.String) -> setIndent
    239:240:void setLenient(boolean) -> setLenient
    246:246:boolean isLenient() -> isLenient
    257:258:void setHtmlSafe(boolean) -> setHtmlSafe
    265:265:boolean isHtmlSafe() -> isHtmlSafe
    273:274:void setSerializeNulls(boolean) -> setSerializeNulls
    281:281:boolean getSerializeNulls() -> getSerializeNulls
    291:292:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    301:301:com.google.gson.stream.JsonWriter endArray() -> endArray
    311:312:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    321:321:com.google.gson.stream.JsonWriter endObject() -> endObject
    329:332:com.google.gson.stream.JsonWriter open(int,char) -> open
    341:354:com.google.gson.stream.JsonWriter close(int,int,char) -> close
    358:362:void push(int) -> push
    368:371:int peek() -> peek
    378:379:void replaceTop(int) -> replaceTop
    388:396:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    400:405:void writeDeferredName() -> writeDeferredName
    414:420:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    435:441:com.google.gson.stream.JsonWriter jsonValue(java.lang.String) -> jsonValue
    450:460:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    469:472:com.google.gson.stream.JsonWriter value(boolean) -> value
    482:488:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    503:509:com.google.gson.stream.JsonWriter value(float) -> value
    522:528:com.google.gson.stream.JsonWriter value(double) -> value
    537:540:com.google.gson.stream.JsonWriter value(long) -> value
    550:550:boolean isTrustedNumberType(java.lang.Class) -> isTrustedNumberType
    566:586:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    594:598:void flush() -> flush
    606:613:void close() -> close
    616:645:void string(java.lang.String) -> string
    648:656:void newline() -> newline
    663:671:void beforeName() -> beforeName
    680:709:void beforeValue() -> beforeValue
    139:171:void <clinit>() -> <clinit>
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
# {"fileName":"MalformedJsonException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
com.google.gson.stream.package-info -> com.google.gson.stream.package-info:
# {"fileName":"package-info.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.AsyncDownloader -> pro.gravit.launcher.mINESoUlSRpxCH:
# {"fileName":"AsyncDownloader.java","id":"sourceFile"}
    pro.gravit.launcher.AsyncDownloader$Callback IGNORE -> mINESoUlSRpxCH
    boolean isCertificatePinning -> MINeSOUlsRPerH
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> MinESoulSRp3Ah
    javax.net.ssl.SSLContext sslContext -> mINeSoULsRpkjm
    pro.gravit.launcher.AsyncDownloader$Callback callback -> MINeSoulsrppRw
    boolean isClosed -> miNeSOUlSRPT7R
    37:39:void <init>(pro.gravit.launcher.AsyncDownloader$Callback) -> <init>
    41:43:void <init>() -> <init>
    46:49:javax.net.ssl.SSLSocketFactory makeSSLSocketFactory() -> mINESoUlSRpxCH
    53:56:javax.net.ssl.SSLContext makeSSLContext() -> MINeSoulsrppRw
    60:73:void downloadFile(java.net.URL,java.nio.file.Path,long) -> mINESoUlSRpxCH
    76:88:void downloadFile(java.net.URL,java.nio.file.Path) -> mINESoUlSRpxCH
    91:102:void downloadListInOneThread(java.util.List,java.lang.String,java.nio.file.Path) -> mINESoUlSRpxCH
    106:109:void downloadListInOneThreadSimple(java.util.List,java.lang.String,java.nio.file.Path) -> MINeSoulsrppRw
    112:131:java.util.List sortFiles(java.util.List,int) -> mINESoUlSRpxCH
    136:148:java.util.concurrent.CompletableFuture[] runDownloadList(java.util.List,java.lang.String,java.nio.file.Path,java.util.concurrent.Executor) -> mINESoUlSRpxCH
    153:165:java.util.concurrent.CompletableFuture[] runDownloadListSimple(java.util.List,java.lang.String,java.nio.file.Path,java.util.concurrent.Executor) -> MINeSoulsrppRw
    169:190:void transfer(java.io.InputStream,java.nio.file.Path,long) -> mINESoUlSRpxCH
    159:163:void lambda$runDownloadListSimple$3(java.util.List,java.lang.String,java.nio.file.Path) -> miNeSOUlSRPT7R
    142:146:void lambda$runDownloadList$2(java.util.List,java.lang.String,java.nio.file.Path) -> MINeSOUlsRPerH
    112:112:long lambda$sortFiles$1(pro.gravit.launcher.AsyncDownloader$SizedFile) -> mINESoUlSRpxCH
    29:29:void lambda$static$0(long) -> mINESoUlSRpxCH
    28:28:void <clinit>() -> <clinit>
pro.gravit.launcher.AsyncDownloader$Callback -> pro.gravit.launcher.MINeSoulsrppRw:
# {"fileName":"AsyncDownloader.java","id":"sourceFile"}
    void update(long) -> update
    void <clinit>() -> <clinit>
pro.gravit.launcher.AsyncDownloader$SizedFile -> pro.gravit.launcher.miNeSOUlSRPT7R:
# {"fileName":"AsyncDownloader.java","id":"sourceFile"}
    java.lang.String urlPath -> mINESoUlSRpxCH
    java.lang.String filePath -> MINeSoulsrppRw
    long size -> miNeSOUlSRPT7R
    201:205:void <init>(java.lang.String,long) -> <init>
    207:211:void <init>(java.lang.String,java.lang.String,long) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.BasicLauncherEventHandler -> pro.gravit.launcher.MINeSOUlsRPerH:
# {"fileName":"BasicLauncherEventHandler.java","id":"sourceFile"}
    12:12:void <init>() -> <init>
    16:39:boolean eventHandle(pro.gravit.launcher.request.WebSocketEvent) -> eventHandle
    void <clinit>() -> <clinit>
pro.gravit.launcher.CertificatePinningTrustManager -> pro.gravit.launcher.MinESoulSRp3Ah:
# {"fileName":"CertificatePinningTrustManager.java","id":"sourceFile"}
    java.util.List secureConfigCertificates -> mINESoUlSRpxCH
    java.security.cert.X509Certificate[] certs -> MINeSoulsrppRw
    javax.net.ssl.TrustManagerFactory INSTANCE -> miNeSOUlSRPT7R
    18:18:void <init>() -> <init>
    25:39:java.security.cert.X509Certificate[] getInternalCertificates() -> miNeSOUlSRPT7R
    43:44:java.security.cert.X509Certificate[] getCertificates() -> mINESoUlSRpxCH
    48:62:javax.net.ssl.TrustManagerFactory getTrustManager() -> MINeSoulsrppRw
    39:39:java.security.cert.X509Certificate[] lambda$getInternalCertificates$1(int) -> mINESoUlSRpxCH
    33:37:java.security.cert.X509Certificate lambda$getInternalCertificates$0(java.security.cert.CertificateFactory,byte[]) -> mINESoUlSRpxCH
    21:21:void <clinit>() -> <clinit>
pro.gravit.launcher.ClientLauncherWrapper -> pro.gravit.launcher.mINeSoULsRpkjm:
# {"fileName":"ClientLauncherWrapper.java","id":"sourceFile"}
    java.lang.String MAGIC_ARG -> mINESoUlSRpxCH
    java.lang.String WAIT_PROCESS_PROPERTY -> MINeSoulsrppRw
    java.lang.String NO_JAVA_CHECK_PROPERTY -> miNeSOUlSRPT7R
    boolean noJavaCheck -> MINeSOUlsRPerH
    boolean waitProcess -> MinESoulSRp3Ah
    int launcherMemoryLimit -> mINeSoULsRpkjm
    java.util.List customJvmOptions -> MINESOULsRPuTS
    15:15:void <init>() -> <init>
    27:169:void main(java.lang.String[]) -> main
    112:112:void lambda$main$0(java.util.List,java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    19:20:void <clinit>() -> <clinit>
pro.gravit.launcher.ClientLauncherWrapper$ClientLauncherWrapperContext -> pro.gravit.launcher.MINESOULsRPuTS:
# {"fileName":"ClientLauncherWrapper.java","id":"sourceFile"}
    pro.gravit.utils.helper.JavaHelper$JavaVersion javaVersion -> mINESoUlSRpxCH
    java.nio.file.Path executePath -> MINeSoulsrppRw
    java.lang.String mainClass -> miNeSOUlSRPT7R
    int memoryLimit -> MINeSOUlsRPerH
    boolean useLegacyClasspathProperty -> MinESoulSRp3Ah
    java.lang.ProcessBuilder processBuilder -> mINeSoULsRpkjm
    java.util.List args -> MINESOULsRPuTS
    java.util.Map jvmProperties -> MInEsOulsRPpPn
    java.util.List classpath -> MineSoUlsRPEJI
    java.util.List jvmModules -> MInEsouLsrPIPY
    java.util.List clientArgs -> miNesoULsRPW9z
    java.util.List javaFXPaths -> miNEsOULSrPj2c
    172:184:void <init>() -> <init>
    187:190:void addSystemProperty(java.lang.String) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.ClientPermissions -> pro.gravit.launcher.MInEsOulsRPpPn:
# {"fileName":"ClientPermissions.java","id":"sourceFile"}
    pro.gravit.launcher.ClientPermissions DEFAULT -> mINESoUlSRpxCH
    java.util.List roles -> roles
    java.util.List perms -> perms
    java.util.List available -> MINeSoulsrppRw
    14:16:void <init>() -> <init>
    18:21:void <init>(java.util.List,java.util.List) -> <init>
    24:26:pro.gravit.launcher.ClientPermissions getSuperuserAccount() -> mINESoUlSRpxCH
    30:30:boolean hasRole(java.lang.String) -> mINESoUlSRpxCH
    34:45:void compile() -> MINeSoulsrppRw
    48:56:boolean hasPerm(java.lang.String) -> MINeSoulsrppRw
    60:64:void addRole(java.lang.String) -> miNeSOUlSRPT7R
    67:75:void addPerm(java.lang.String) -> MINeSOUlsRPerH
    78:86:void removePerm(java.lang.String) -> MinESoulSRp3Ah
    89:89:java.util.List getRoles() -> miNeSOUlSRPT7R
    93:93:java.util.List getPerms() -> MINeSOUlsRPerH
    98:100:java.lang.String toString() -> toString
    6:6:void <clinit>() -> <clinit>
pro.gravit.launcher.ClientPermissions$PermissionPattern -> pro.gravit.launcher.MineSoUlsRPEJI:
# {"fileName":"ClientPermissions.java","id":"sourceFile"}
    java.lang.String[] parts -> mINESoUlSRpxCH
    int priority -> MINeSoulsrppRw
    108:122:void <init>(java.lang.String) -> <init>
    125:125:int getPriority() -> mINESoUlSRpxCH
    129:150:boolean match(java.lang.String) -> mINESoUlSRpxCH
    155:158:boolean equals(java.lang.Object) -> equals
    163:165:int hashCode() -> hashCode
    void <clinit>() -> <clinit>
pro.gravit.launcher.HTTPRequest -> pro.gravit.launcher.MInEsouLsrPIPY:
# {"fileName":"HTTPRequest.java","id":"sourceFile"}
    int TIMEOUT -> mINESoUlSRpxCH
    17:18:void <init>() -> <init>
    21:21:com.google.gson.JsonElement jsonRequest(com.google.gson.JsonElement,java.net.URL) -> mINESoUlSRpxCH
    25:54:com.google.gson.JsonElement jsonRequest(com.google.gson.JsonElement,java.lang.String,java.net.URL) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.Launcher -> pro.gravit.launcher.miNesoULsRPW9z:
# {"fileName":"Launcher.java","id":"sourceFile"}
    java.lang.String SKIN_URL_PROPERTY -> mINESoUlSRpxCH
    java.lang.String SKIN_DIGEST_PROPERTY -> MINeSoulsrppRw
    java.lang.String SKIN_METADATA_PROPERTY -> miNeSOUlSRPT7R
    java.lang.String CLOAK_URL_PROPERTY -> MINeSOUlsRPerH
    java.lang.String CLOAK_DIGEST_PROPERTY -> MinESoulSRp3Ah
    java.lang.String CLOAK_METADATA_PROPERTY -> mINeSoULsRpkjm
    java.util.concurrent.atomic.AtomicBoolean LAUNCHED -> MINESOULsRPuTS
    int PROTOCOL_MAGIC_LEGACY -> MInEsOulsRPpPn
    int PROTOCOL_MAGIC -> MineSoUlsRPEJI
    java.lang.String RUNTIME_DIR -> MInEsouLsrPIPY
    java.lang.String CONFIG_FILE -> miNesoULsRPW9z
    java.util.concurrent.atomic.AtomicReference CONFIG -> MinesouLSrpSNn
    java.util.regex.Pattern UUID_PATTERN -> MInEsOUlSRP6s8
    pro.gravit.launcher.profiles.ClientProfile profile -> miNEsOULSrPj2c
    pro.gravit.launcher.managers.GsonManager gsonManager -> MINESOulsRp2ne
    21:21:void <init>() -> <init>
    53:62:pro.gravit.launcher.LauncherConfig getConfig() -> mINESoUlSRpxCH
    67:68:void setConfig(pro.gravit.launcher.LauncherConfig) -> mINESoUlSRpxCH
    72:81:java.net.URL getResourceURL(java.lang.String) -> mINESoUlSRpxCH
    85:94:java.net.URL getResourceURL(java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    99:99:java.lang.String toHash(java.util.UUID) -> mINESoUlSRpxCH
    103:121:void applyLauncherEnv(pro.gravit.launcher.LauncherConfig$LauncherEnvironment) -> mINESoUlSRpxCH
    124:124:java.lang.String makeSpecialGuardDirName(pro.gravit.utils.helper.JVMHelper$ARCH,pro.gravit.utils.helper.JVMHelper$OS) -> mINESoUlSRpxCH
    39:47:void <clinit>() -> <clinit>
pro.gravit.launcher.Launcher$1 -> pro.gravit.launcher.miNEsOULSrPj2c:
# {"fileName":"Launcher.java","id":"sourceFile"}
    int[] $SwitchMap$pro$gravit$launcher$LauncherConfig$LauncherEnvironment -> mINESoUlSRpxCH
    103:103:void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherAgent -> pro.gravit.launcher.MINESOulsRp2ne:
# {"fileName":"LauncherAgent.java","id":"sourceFile"}
    java.lang.instrument.Instrumentation inst -> mINESoUlSRpxCH
    boolean isAgentStarted -> MINeSoulsrppRw
    13:13:void <init>() -> <init>
    18:20:void addJVMClassPath(java.lang.String) -> mINESoUlSRpxCH
    23:25:void addJVMClassPath(java.nio.file.Path) -> mINESoUlSRpxCH
    28:33:void premain(java.lang.String,java.lang.instrument.Instrumentation) -> premain
    36:50:void checkAgentStacktrace() -> mINESoUlSRpxCH
    53:53:boolean isStarted() -> MINeSoulsrppRw
    57:57:boolean isAgentStarted() -> miNeSOUlSRPT7R
    15:15:void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherConfig -> pro.gravit.launcher.MinesouLSrpSNn:
# {"fileName":"LauncherConfig.java","id":"sourceFile"}
    java.util.List secureConfigCertificates -> mInESouLsRPFIp
    java.util.List modulesClasses -> mINESoulsRpOiZ
    java.lang.invoke.MethodType VOID_TYPE -> MinESoULsrPRTF
    java.lang.String projectName -> mINESoUlSRpxCH
    int clientPort -> MINeSoulsrppRw
    pro.gravit.launcher.LauncherTrustManager trustManager -> miNeSOUlSRPT7R
    java.security.interfaces.ECPublicKey ecdsaPublicKey -> MINeSOUlsRPerH
    java.security.interfaces.RSAPublicKey rsaPublicKey -> MinESoulSRp3Ah
    java.util.Map runtime -> mINeSoULsRpkjm
    java.lang.String secureCheckHash -> MINESOULsRPuTS
    java.lang.String secureCheckSalt -> MInEsOulsRPpPn
    java.lang.String passwordEncryptKey -> MineSoUlsRPEJI
    java.lang.String runtimeEncryptKey -> MInEsouLsrPIPY
    java.lang.String address -> miNesoULsRPW9z
    java.lang.String secretKeyClient -> miNEsOULSrPj2c
    java.lang.String unlockSecret -> MINESOulsRp2ne
    pro.gravit.launcher.LauncherConfig$LauncherEnvironment environment -> MinesouLSrpSNn
    long buildNumber -> MInEsOUlSRP6s8
    56:84:void <init>(pro.gravit.launcher.serialize.HInput) -> <init>
    86:99:void <init>(java.lang.String,java.security.interfaces.ECPublicKey,java.security.interfaces.RSAPublicKey,java.util.Map,java.lang.String) -> <init>
    101:114:void <init>(java.lang.String,java.util.Map,java.lang.String,pro.gravit.launcher.LauncherConfig$LauncherEnvironment,pro.gravit.launcher.LauncherTrustManager) -> <init>
    117:125:void initModules(pro.gravit.launcher.modules.LauncherModulesManager) -> mINESoUlSRpxCH
    129:139:void write(pro.gravit.launcher.serialize.HOutput) -> write
    23:26:void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherConfig$LauncherEnvironment -> pro.gravit.launcher.MInEsOUlSRP6s8:
# {"fileName":"LauncherConfig.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherConfig$LauncherEnvironment DEV -> mINESoUlSRpxCH
    pro.gravit.launcher.LauncherConfig$LauncherEnvironment DEBUG -> MINeSoulsrppRw
    pro.gravit.launcher.LauncherConfig$LauncherEnvironment STD -> miNeSOUlSRPT7R
    pro.gravit.launcher.LauncherConfig$LauncherEnvironment PROD -> MINeSOUlsRPerH
    pro.gravit.launcher.LauncherConfig$LauncherEnvironment[] $VALUES -> MinESoulSRp3Ah
    141:141:pro.gravit.launcher.LauncherConfig$LauncherEnvironment[] values() -> values
    141:141:pro.gravit.launcher.LauncherConfig$LauncherEnvironment valueOf(java.lang.String) -> valueOf
    141:141:void <init>(java.lang.String,int) -> <init>
    141:141:pro.gravit.launcher.LauncherConfig$LauncherEnvironment[] $values() -> mINESoUlSRpxCH
    141:142:void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherEngine -> pro.gravit.launcher.mInESouLsRPFIp:
# {"fileName":"LauncherEngine.java","id":"sourceFile"}
    pro.gravit.launcher.client.ClientLauncherProcess$ClientParams clientParams -> mINESoUlSRpxCH
    pro.gravit.launcher.client.ClientModuleManager modulesManager -> MINeSoulsrppRw
    boolean clientInstance -> miNeSOUlSRPT7R
    java.util.concurrent.atomic.AtomicBoolean started -> MINESOULsRPuTS
    pro.gravit.launcher.gui.RuntimeProvider runtimeProvider -> MINeSOUlsRPerH
    java.security.interfaces.ECPublicKey publicKey -> MinESoulSRp3Ah
    java.security.interfaces.ECPrivateKey privateKey -> mINeSoULsRpkjm
    52:60:void <init>(boolean) -> <init>
    64:66:java.security.cert.X509Certificate[] getCertificates(java.lang.Class) -> mINESoUlSRpxCH
    70:81:void checkClass(java.lang.Class) -> MINeSoulsrppRw
    85:88:void beforeExit(int) -> mINESoUlSRpxCH
    92:97:void forceExit(int) -> MINeSoulsrppRw
    100:102:void exitLauncher(int) -> miNeSOUlSRPT7R
    105:134:void main(java.lang.String[]) -> main
    137:143:void initGson(pro.gravit.launcher.client.ClientModuleManager) -> mINESoUlSRpxCH
    146:148:void verifyNoAgent() -> mINESoUlSRpxCH
    151:155:pro.gravit.launcher.request.RequestService initOffline() -> MINeSoulsrppRw
    159:177:void applyBasicOfflineProcessors(pro.gravit.launcher.request.websockets.OfflineRequestService) -> mINESoUlSRpxCH
    180:180:pro.gravit.launcher.LauncherEngine clientInstance() -> miNeSOUlSRPT7R
    184:184:pro.gravit.launcher.LauncherEngine newInstance(boolean) -> mINESoUlSRpxCH
    188:188:java.security.interfaces.ECPublicKey getClientPublicKey() -> MINeSOUlsRPerH
    192:192:byte[] sign(byte[]) -> mINESoUlSRpxCH
    196:215:void readKeys() -> MinESoulSRp3Ah
    219:262:void start(java.lang.String[]) -> mINESoUlSRpxCH
    265:268:void registerCommands() -> mINeSoULsRpkjm
    242:249:void lambda$start$14() -> MINESOULsRPuTS
    176:176:pro.gravit.launcher.events.request.SecurityReportRequestEvent lambda$applyBasicOfflineProcessors$13(pro.gravit.launcher.request.secure.SecurityReportRequest) -> mINESoUlSRpxCH
    175:175:pro.gravit.launcher.events.request.GetSecureLevelInfoRequestEvent lambda$applyBasicOfflineProcessors$12(pro.gravit.launcher.request.secure.GetSecureLevelInfoRequest) -> mINESoUlSRpxCH
    174:174:pro.gravit.launcher.events.request.FeaturesRequestEvent lambda$applyBasicOfflineProcessors$11(pro.gravit.launcher.request.management.FeaturesRequest) -> mINESoUlSRpxCH
    173:173:pro.gravit.launcher.events.request.SetProfileRequestEvent lambda$applyBasicOfflineProcessors$10(pro.gravit.launcher.request.auth.SetProfileRequest) -> mINESoUlSRpxCH
    172:172:pro.gravit.launcher.events.request.ExitRequestEvent lambda$applyBasicOfflineProcessors$9(pro.gravit.launcher.request.auth.ExitRequest) -> mINESoUlSRpxCH
    171:171:pro.gravit.launcher.events.request.JoinServerRequestEvent lambda$applyBasicOfflineProcessors$8(pro.gravit.launcher.request.auth.JoinServerRequest) -> mINESoUlSRpxCH
    164:169:pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent lambda$applyBasicOfflineProcessors$7(pro.gravit.launcher.request.auth.GetAvailabilityAuthRequest) -> mINESoUlSRpxCH
    161:161:pro.gravit.launcher.request.WebSocketEvent lambda$applyBasicOfflineProcessors$6(pro.gravit.launcher.request.auth.CheckServerRequest) -> mINESoUlSRpxCH
    159:159:pro.gravit.launcher.events.request.LauncherRequestEvent lambda$applyBasicOfflineProcessors$5(pro.gravit.launcher.request.update.LauncherRequest) -> mINESoUlSRpxCH
    146:146:boolean lambda$verifyNoAgent$4(java.lang.String) -> mINESoUlSRpxCH
    146:146:boolean lambda$verifyNoAgent$3(java.lang.String) -> MINeSoulsrppRw
    66:66:java.security.cert.X509Certificate[] lambda$getCertificates$2(int) -> MINeSOUlsRPerH
    66:66:java.security.cert.X509Certificate lambda$getCertificates$1(java.lang.Object) -> mINESoUlSRpxCH
    66:66:boolean lambda$getCertificates$0(java.lang.Object) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherInject -> pro.gravit.launcher.mINESoulsRpOiZ:
# {"fileName":"LauncherInject.java","id":"sourceFile"}
    java.lang.String value() -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherInjectionConstructor -> pro.gravit.launcher.MinESoULsrPRTF:
# {"fileName":"LauncherInjectionConstructor.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherNetworkAPI -> pro.gravit.launcher.mInesOULSrpYIR:
# {"fileName":"LauncherNetworkAPI.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherTrustManager -> pro.gravit.launcher.MInesOUlsrPzrO:
# {"fileName":"LauncherTrustManager.java","id":"sourceFile"}
    java.security.cert.X509Certificate[] trustSigners -> mINESoUlSRpxCH
    java.util.List trustCache -> MINeSoulsrppRw
    boolean isCertificatePinning -> miNeSOUlSRPT7R
    23:33:void <init>(java.security.cert.X509Certificate[]) -> <init>
    23:48:void <init>(java.util.List) -> <init>
    51:51:boolean requireCustomTrustStore() -> MINeSoulsrppRw
    57:80:void injectCertificates() -> miNeSOUlSRPT7R
    87:98:java.util.Map getDefaultKeyStore() -> MINeSOUlsRPerH
    106:110:void extractAllCertsAndPutInMap(java.security.KeyStore,java.util.Map) -> mINESoUlSRpxCH
    117:121:void setCertificateEntry(java.security.KeyStore,java.lang.String,java.security.cert.Certificate) -> mINESoUlSRpxCH
    128:134:void extractCertAndPutInMap(java.security.KeyStore,java.lang.String,java.util.Map) -> mINESoUlSRpxCH
    137:178:pro.gravit.launcher.LauncherTrustManager$CheckClassResult checkCertificates(java.security.cert.X509Certificate[],pro.gravit.launcher.LauncherTrustManager$CertificateChecker) -> mINESoUlSRpxCH
    182:185:void checkCertificatesSuccess(java.security.cert.X509Certificate[],pro.gravit.launcher.LauncherTrustManager$CertificateChecker) -> MINeSoulsrppRw
    192:199:boolean isTrusted(java.security.cert.X509Certificate) -> mINESoUlSRpxCH
    203:203:java.security.cert.X509Certificate[] getTrusted() -> mINESoUlSRpxCH
    210:223:void isCertificateCodeSign(java.security.cert.X509Certificate) -> MINeSoulsrppRw
    226:227:void isCertificateCA(java.security.cert.X509Certificate) -> miNeSOUlSRPT7R
    230:234:void stdCertificateChecker(java.security.cert.X509Certificate,java.security.cert.X509Certificate,int) -> mINESoUlSRpxCH
    106:106:void lambda$extractAllCertsAndPutInMap$4(java.security.KeyStore,java.util.Map,java.lang.String) -> mINESoUlSRpxCH
    66:66:void lambda$injectCertificates$3(java.security.KeyStore,java.util.Map,java.lang.String) -> MINeSoulsrppRw
    63:63:void lambda$injectCertificates$2(java.security.KeyStore,java.security.cert.X509Certificate) -> mINESoUlSRpxCH
    44:44:java.security.cert.X509Certificate[] lambda$new$1(int) -> mINESoUlSRpxCH
    38:42:java.security.cert.X509Certificate lambda$new$0(java.security.cert.CertificateFactory,byte[]) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherTrustManager$CertificateChecker -> pro.gravit.launcher.mInesOUlSRPRMv:
# {"fileName":"LauncherTrustManager.java","id":"sourceFile"}
    void check(java.security.cert.X509Certificate,java.security.cert.X509Certificate,int) -> check
    void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherTrustManager$CheckClassResult -> pro.gravit.launcher.MineSOulsrpVkM:
# {"fileName":"LauncherTrustManager.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherTrustManager$CheckClassResultType type -> mINESoUlSRpxCH
    java.security.cert.X509Certificate endCertificate -> MINeSoulsrppRw
    java.security.cert.X509Certificate rootCertificate -> miNeSOUlSRPT7R
    java.lang.Exception exception -> MINeSOUlsRPerH
    254:259:void <init>(pro.gravit.launcher.LauncherTrustManager$CheckClassResultType,java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> <init>
    261:266:void <init>(pro.gravit.launcher.LauncherTrustManager$CheckClassResultType,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.Exception) -> <init>
    268:273:void <init>(pro.gravit.launcher.LauncherTrustManager$CheckClassResult) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.LauncherTrustManager$CheckClassResultType -> pro.gravit.launcher.mInEsOULsRPDrR:
# {"fileName":"LauncherTrustManager.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherTrustManager$CheckClassResultType NOT_SIGNED -> mINESoUlSRpxCH
    pro.gravit.launcher.LauncherTrustManager$CheckClassResultType SUCCESS -> MINeSoulsrppRw
    pro.gravit.launcher.LauncherTrustManager$CheckClassResultType UNTRUSTED -> miNeSOUlSRPT7R
    pro.gravit.launcher.LauncherTrustManager$CheckClassResultType UNVERIFED -> MINeSOUlsRPerH
    pro.gravit.launcher.LauncherTrustManager$CheckClassResultType UNCOMPAT -> MinESoulSRp3Ah
    pro.gravit.launcher.LauncherTrustManager$CheckClassResultType[] $VALUES -> mINeSoULsRpkjm
    236:236:pro.gravit.launcher.LauncherTrustManager$CheckClassResultType[] values() -> values
    236:236:pro.gravit.launcher.LauncherTrustManager$CheckClassResultType valueOf(java.lang.String) -> valueOf
    236:236:void <init>(java.lang.String,int) -> <init>
    236:236:pro.gravit.launcher.LauncherTrustManager$CheckClassResultType[] $values() -> mINESoUlSRpxCH
    236:241:void <clinit>() -> <clinit>
pro.gravit.launcher.NewLauncherSettings -> pro.gravit.launcher.MIneSOuLSRPfA1:
# {"fileName":"NewLauncherSettings.java","id":"sourceFile"}
    java.util.List lastHDirs -> lastHDirs
    java.util.Map userSettings -> userSettings
    java.util.List features -> features
    java.lang.String consoleUnlockKey -> consoleUnlockKey
    12:17:void <init>() -> <init>
    23:28:void putHDir(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    24:24:boolean lambda$putHDir$0(java.lang.String,java.lang.String,pro.gravit.launcher.NewLauncherSettings$HashedStoreEntry) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.NewLauncherSettings$HashedStoreEntry -> pro.gravit.launcher.MInesoULsrPFwa:
# {"fileName":"NewLauncherSettings.java","id":"sourceFile"}
    pro.gravit.launcher.hasher.HashedDir hdir -> mINESoUlSRpxCH
    java.lang.String name -> MINeSoulsrppRw
    java.lang.String fullPath -> miNeSOUlSRPT7R
    boolean needSave -> MINeSOUlsRPerH
    34:40:void <init>(pro.gravit.launcher.hasher.HashedDir,java.lang.String,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.api.AuthService -> pro.gravit.launcher.api.AuthService:
# {"fileName":"AuthService.java","id":"sourceFile"}
    java.lang.String username -> username
    pro.gravit.launcher.ClientPermissions permissions -> permissions
    java.util.UUID uuid -> uuid
    pro.gravit.launcher.profiles.ClientProfile profile -> profile
    8:8:void <init>() -> <init>
    15:15:boolean hasPermission(java.lang.String) -> hasPermission
    10:10:void <clinit>() -> <clinit>
pro.gravit.launcher.api.CertificateService -> pro.gravit.launcher.api.CertificateService:
# {"fileName":"CertificateService.java","id":"sourceFile"}
    11:12:void <init>() -> <init>
    16:23:pro.gravit.launcher.api.CertificateService$CheckClassResultApi checkClass(java.lang.Class) -> checkClass
    28:37:void checkClassSuccess(java.lang.Class) -> checkClassSuccess
    void <clinit>() -> <clinit>
pro.gravit.launcher.api.CertificateService$1 -> pro.gravit.launcher.api.CertificateService$1:
# {"fileName":"CertificateService.java","id":"sourceFile"}
    int[] $SwitchMap$pro$gravit$launcher$LauncherTrustManager$CheckClassResultType -> $SwitchMap$pro$gravit$launcher$LauncherTrustManager$CheckClassResultType
    82:82:void <clinit>() -> <clinit>
pro.gravit.launcher.api.CertificateService$CheckClassResultApi -> pro.gravit.launcher.api.CertificateService$CheckClassResultApi:
# {"fileName":"CertificateService.java","id":"sourceFile"}
    pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi type -> type
    java.security.cert.X509Certificate endCertificate -> endCertificate
    java.security.cert.X509Certificate rootCertificate -> rootCertificate
    java.lang.Exception exception -> exception
    54:59:void <init>(pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi,java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> <init>
    61:66:void <init>(pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.Exception) -> <init>
    68:73:void <init>(pro.gravit.launcher.api.CertificateService$CheckClassResultApi) -> <init>
    76:77:pro.gravit.launcher.api.CertificateService$CheckClassResultApi fromCheckClassResult(pro.gravit.launcher.LauncherTrustManager$CheckClassResult) -> fromCheckClassResult
    81:94:pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi fromType(pro.gravit.launcher.LauncherTrustManager$CheckClassResultType) -> fromType
    48:48:void <init>(pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi,java.security.cert.X509Certificate,java.security.cert.X509Certificate,pro.gravit.launcher.api.CertificateService$1) -> <init>
    48:48:pro.gravit.launcher.api.CertificateService$CheckClassResultApi access$100(pro.gravit.launcher.LauncherTrustManager$CheckClassResult) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi -> pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi:
# {"fileName":"CertificateService.java","id":"sourceFile"}
    pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi NOT_SIGNED -> NOT_SIGNED
    pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi SUCCESS -> SUCCESS
    pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi UNTRUSTED -> UNTRUSTED
    pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi UNVERIFED -> UNVERIFED
    pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi UNCOMPAT -> UNCOMPAT
    pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi UNKNOWN -> UNKNOWN
    pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi[] $VALUES -> $VALUES
    39:39:pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi[] values() -> values
    39:39:pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi valueOf(java.lang.String) -> valueOf
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:pro.gravit.launcher.api.CertificateService$CheckClassResultTypeApi[] $values() -> $values
    39:45:void <clinit>() -> <clinit>
pro.gravit.launcher.api.ClientService -> pro.gravit.launcher.api.ClientService:
# {"fileName":"ClientService.java","id":"sourceFile"}
    java.lang.instrument.Instrumentation instrumentation -> instrumentation
    java.lang.ClassLoader classLoader -> classLoader
    java.lang.String nativePath -> nativePath
    java.net.URL[] baseURLs -> baseURLs
    8:8:void <init>() -> <init>
    15:15:java.lang.ClassLoader getClassLoader() -> getClassLoader
    19:19:java.lang.String findLibrary(java.lang.String) -> findLibrary
    void <clinit>() -> <clinit>
pro.gravit.launcher.api.DialogService -> pro.gravit.launcher.api.DialogService:
# {"fileName":"DialogService.java","id":"sourceFile"}
    pro.gravit.launcher.api.DialogService$DialogServiceImplementation dialogImpl -> dialogImpl
    pro.gravit.launcher.api.DialogService$DialogServiceNotificationImplementation notificationImpl -> notificationImpl
    11:12:void <init>() -> <init>
    16:17:void setDialogImpl(pro.gravit.launcher.api.DialogService$DialogServiceImplementation) -> setDialogImpl
    20:21:void setNotificationImpl(pro.gravit.launcher.api.DialogService$DialogServiceNotificationImplementation) -> setNotificationImpl
    24:24:boolean isDialogsAvailable() -> isDialogsAvailable
    28:28:boolean isNotificationsAvailable() -> isNotificationsAvailable
    32:35:void checkIfAvailable() -> checkIfAvailable
    38:42:void createNotification(pro.gravit.launcher.events.NotificationEvent$NotificationType,java.lang.String,java.lang.String) -> createNotification
    45:47:void showDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable) -> showDialog
    50:52:void showApplyDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable) -> showApplyDialog
    55:57:void showApplyDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable) -> showApplyDialog
    60:62:void showTextDialog(java.lang.String,java.util.function.Consumer,java.lang.Runnable) -> showTextDialog
    void <clinit>() -> <clinit>
pro.gravit.launcher.api.DialogService$DialogServiceImplementation -> pro.gravit.launcher.api.DialogService$DialogServiceImplementation:
# {"fileName":"DialogService.java","id":"sourceFile"}
    void showDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable) -> showDialog
    void showApplyDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable) -> showApplyDialog
    void showApplyDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable) -> showApplyDialog
    void showTextDialog(java.lang.String,java.util.function.Consumer,java.lang.Runnable) -> showTextDialog
    void <clinit>() -> <clinit>
pro.gravit.launcher.api.DialogService$DialogServiceNotificationImplementation -> pro.gravit.launcher.api.DialogService$DialogServiceNotificationImplementation:
# {"fileName":"DialogService.java","id":"sourceFile"}
    void createNotification(pro.gravit.launcher.events.NotificationEvent$NotificationType,java.lang.String,java.lang.String) -> createNotification
    void <clinit>() -> <clinit>
pro.gravit.launcher.api.KeyService -> pro.gravit.launcher.api.KeyService:
# {"fileName":"KeyService.java","id":"sourceFile"}
    java.security.interfaces.RSAPublicKey serverRsaPublicKey -> serverRsaPublicKey
    5:5:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.api.SystemService -> pro.gravit.launcher.api.SystemService:
# {"fileName":"SystemService.java","id":"sourceFile"}
    6:7:void <init>() -> <init>
    11:12:void exit(int) -> exit
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientClassLoader -> pro.gravit.launcher.MINESoUlSRP9ry:
# {"fileName":"ClientClassLoader.java","id":"sourceFile"}
    java.lang.ClassLoader SYSTEM_CLASS_LOADER -> MINeSoulsrppRw
    java.lang.String nativePath -> mINESoUlSRpxCH
    java.util.List packages -> miNeSOUlSRPT7R
    15:40:void <init>(java.net.URL[]) -> <init>
    15:64:void <init>(java.net.URL[],java.lang.ClassLoader) -> <init>
    68:75:java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
    80:80:java.lang.String findLibrary(java.lang.String) -> findLibrary
    84:90:java.lang.String getNativeEx() -> mINESoUlSRpxCH
    94:98:java.lang.String getNativePrefix() -> MINeSoulsrppRw
    102:103:void addAllowedPackage(java.lang.String) -> mINESoUlSRpxCH
    107:108:void addURL(java.net.URL) -> addURL
    12:12:void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientLauncherCoreModule -> pro.gravit.launcher.minEsoulsRPmJ7:
# {"fileName":"ClientLauncherCoreModule.java","id":"sourceFile"}
    10:11:void <init>() -> <init>
    16:16:void init(pro.gravit.launcher.modules.LauncherInitContext) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientLauncherEntryPoint -> pro.gravit.launcher.MINEsOulsrPyoJ:
# {"fileName":"ClientLauncherEntryPoint.java","id":"sourceFile"}
    java.lang.ClassLoader classLoader -> mINESoUlSRpxCH
    53:53:void <init>() -> <init>
    57:69:pro.gravit.launcher.client.ClientLauncherProcess$ClientParams readParams(java.net.SocketAddress) -> mINESoUlSRpxCH
    73:203:void main(java.lang.String[]) -> main
    206:212:void initGson(pro.gravit.launcher.client.ClientModuleManager) -> mINESoUlSRpxCH
    215:220:pro.gravit.launcher.request.RequestService initOffline(pro.gravit.launcher.modules.LauncherModulesManager,pro.gravit.launcher.client.ClientLauncherProcess$ClientParams) -> mINESoUlSRpxCH
    224:236:void applyClientOfflineProcessors(pro.gravit.launcher.request.websockets.OfflineRequestService,pro.gravit.launcher.client.ClientLauncherProcess$ClientParams) -> mINESoUlSRpxCH
    243:263:void verifyHDir(java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.FileNameMatcher,boolean,boolean) -> mINESoUlSRpxCH
    266:266:java.util.LinkedList resolveClassPathList(java.nio.file.Path,java.lang.String[]) -> mINESoUlSRpxCH
    270:279:java.util.stream.Stream resolveClassPathStream(java.nio.file.Path,java.lang.String[]) -> MINeSoulsrppRw
    283:288:java.util.stream.Stream resolveClassPath(java.nio.file.Path,java.util.Set,pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    293:344:void launch(pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.client.ClientLauncherProcess$ClientParams) -> mINESoUlSRpxCH
    255:259:pro.gravit.launcher.hasher.HashedDir$WalkAction lambda$verifyHDir$5(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,pro.gravit.launcher.hasher.HashedEntry) -> mINESoUlSRpxCH
    248:252:pro.gravit.launcher.hasher.HashedDir$WalkAction lambda$verifyHDir$4(java.util.concurrent.atomic.AtomicReference,java.lang.String,java.lang.String,pro.gravit.launcher.hasher.HashedEntry) -> MINeSoulsrppRw
    231:234:pro.gravit.launcher.events.request.ProfileByUUIDRequestEvent lambda$applyClientOfflineProcessors$3(pro.gravit.launcher.client.ClientLauncherProcess$ClientParams,pro.gravit.launcher.request.uuid.ProfileByUUIDRequest) -> mINESoUlSRpxCH
    225:228:pro.gravit.launcher.events.request.ProfileByUsernameRequestEvent lambda$applyClientOfflineProcessors$2(pro.gravit.launcher.client.ClientLauncherProcess$ClientParams,pro.gravit.launcher.request.uuid.ProfileByUsernameRequest) -> mINESoUlSRpxCH
    135:142:void lambda$main$1() -> mINESoUlSRpxCH
    119:119:boolean lambda$main$0(pro.gravit.launcher.profiles.ClientProfile,java.nio.file.Path,java.nio.file.Path) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientLauncherEntryPoint$1 -> pro.gravit.launcher.MiNEsOulsRPbIU:
# {"fileName":"ClientLauncherEntryPoint.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientLauncherEntryPoint$ClassPathFileVisitor -> pro.gravit.launcher.miNesOulSRp5Ma:
# {"fileName":"ClientLauncherEntryPoint.java","id":"sourceFile"}
    java.util.stream.Stream$Builder result -> mINESoUlSRpxCH
    349:351:void <init>(java.util.stream.Stream$Builder) -> <init>
    355:357:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> mINESoUlSRpxCH
    346:346:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    346:346:void <init>(java.util.stream.Stream$Builder,pro.gravit.launcher.client.ClientLauncherEntryPoint$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientLauncherProcess -> pro.gravit.launcher.minESouLsrpSEY:
# {"fileName":"ClientLauncherProcess.java","id":"sourceFile"}
    java.util.List pre -> mINESoUlSRpxCH
    pro.gravit.launcher.client.ClientLauncherProcess$ClientParams params -> MINeSoulsrppRw
    java.util.List jvmArgs -> miNeSOUlSRPT7R
    java.util.List jvmModules -> MINeSOUlsRPerH
    java.util.List jvmModulesPaths -> MinESoulSRp3Ah
    java.util.List systemClientArgs -> mINeSoULsRpkjm
    java.util.List systemClassPath -> MINESOULsRPuTS
    java.util.Map systemEnv -> MInEsOulsRPpPn
    java.lang.String mainClass -> MineSoUlsRPEJI
    java.lang.Boolean[] waitWriteParams -> MInEsOUlSRP6s8
    java.nio.file.Path executeFile -> MInEsouLsrPIPY
    java.nio.file.Path workDir -> miNesoULsRPW9z
    pro.gravit.utils.helper.JavaHelper$JavaVersion javaVersion -> miNEsOULSrPj2c
    boolean useLegacyJavaClassPathProperty -> MINESOulsRp2ne
    boolean isStarted -> MinesouLSrpSNn
    java.lang.Process process -> mInESouLsRPFIp
    36:58:void <init>(java.nio.file.Path,java.nio.file.Path,pro.gravit.utils.helper.JavaHelper$JavaVersion,java.lang.String) -> <init>
    63:64:void <init>(java.nio.file.Path,java.nio.file.Path,pro.gravit.utils.helper.JavaHelper$JavaVersion,pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.profiles.PlayerProfile,java.lang.String,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir) -> <init>
    69:70:void <init>(java.nio.file.Path,java.nio.file.Path,pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.profiles.PlayerProfile,java.lang.String,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir) -> <init>
    36:102:void <init>(java.nio.file.Path,java.nio.file.Path,pro.gravit.utils.helper.JavaHelper$JavaVersion,java.nio.file.Path,pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.profiles.PlayerProfile,pro.gravit.launcher.profiles.optional.OptionalView,java.lang.String,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir) -> <init>
    105:108:java.lang.String getPathSeparator() -> mINESoUlSRpxCH
    112:135:void applyClientProfile() -> miNeSOUlSRPT7R
    138:189:void start(boolean) -> mINESoUlSRpxCH
    193:211:void applyJava9Params(java.util.List) -> mINESoUlSRpxCH
    214:235:void runWriteParams(java.net.SocketAddress) -> mINESoUlSRpxCH
    238:238:java.lang.Process getProcess() -> MINeSoulsrppRw
    152:152:boolean lambda$start$0(java.nio.file.Path) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientLauncherProcess$ClientParams -> pro.gravit.launcher.mineSOulsRpuPs:
# {"fileName":"ClientLauncherProcess.java","id":"sourceFile"}
    java.lang.String assetDir -> mINESoUlSRpxCH
    java.lang.String clientDir -> MINeSoulsrppRw
    java.lang.String resourcePackDir -> miNeSOUlSRPT7R
    java.lang.String nativesDir -> MINeSOUlsRPerH
    pro.gravit.launcher.profiles.PlayerProfile playerProfile -> MinESoulSRp3Ah
    pro.gravit.launcher.profiles.ClientProfile profile -> mINeSoULsRpkjm
    java.lang.String accessToken -> MINESOULsRPuTS
    boolean autoEnter -> MInEsOulsRPpPn
    boolean fullScreen -> MineSoUlsRPEJI
    int ram -> MInEsouLsrPIPY
    int width -> miNesoULsRPW9z
    int height -> miNEsOULSrPj2c
    java.util.Set actions -> MINESOulsRp2ne
    java.util.UUID session -> MinesouLSrpSNn
    pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent oauth -> MInEsOUlSRP6s8
    java.lang.String authId -> mInESouLsRPFIp
    long oauthExpiredTime -> mINESoulsRpOiZ
    java.util.Map extendedTokens -> MinESoULsrPRTF
    boolean offlineMode -> mInesOULSrpYIR
    pro.gravit.launcher.hasher.HashedDir assetHDir -> MInesOUlsrPzrO
    pro.gravit.launcher.hasher.HashedDir clientHDir -> mInesOUlSRPRMv
    pro.gravit.launcher.hasher.HashedDir javaHDir -> MineSOulsrpVkM
    241:270:void <init>() -> <init>
    293:297:void addClientArgs(java.util.Collection) -> mINESoUlSRpxCH
    300:307:void addClientLegacyArgs(java.util.Collection) -> MINeSoulsrppRw
    312:355:void addModernClientArgs(java.util.Collection) -> miNeSOUlSRPT7R
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientModuleManager -> pro.gravit.launcher.mINeSOulsrPPgW:
# {"fileName":"ClientModuleManager.java","id":"sourceFile"}
    15:16:void <init>() -> <init>
    20:20:void autoload() -> mINESoUlSRpxCH
    25:25:void autoload(java.nio.file.Path) -> mINESoUlSRpxCH
    30:30:pro.gravit.launcher.modules.LauncherModule loadModule(pro.gravit.launcher.modules.LauncherModule) -> mINESoUlSRpxCH
    34:34:java.util.List getModules() -> MINeSoulsrppRw
    39:39:boolean verifyClassCheckResult(pro.gravit.launcher.LauncherTrustManager$CheckClassResult) -> mINESoUlSRpxCH
    43:48:void callWrapper(pro.gravit.launcher.ClientLauncherWrapper$ClientLauncherWrapperContext) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ClientWrapperModule -> pro.gravit.launcher.mIneSoULsRpnpz:
# {"fileName":"ClientWrapperModule.java","id":"sourceFile"}
    void wrapperPhase(pro.gravit.launcher.ClientLauncherWrapper$ClientLauncherWrapperContext) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.DirBridge -> pro.gravit.launcher.mInEsoulSrpv4E:
# {"fileName":"DirBridge.java","id":"sourceFile"}
    java.lang.String USE_CUSTOMDIR_PROPERTY -> mINESoUlSRpxCH
    java.lang.String CUSTOMDIR_PROPERTY -> MINeSoulsrppRw
    java.lang.String USE_OPTDIR_PROPERTY -> miNeSOUlSRPT7R
    java.nio.file.Path dir -> MINeSOUlsRPerH
    java.nio.file.Path dirStore -> MinESoulSRp3Ah
    java.nio.file.Path dirProjectStore -> mINeSoULsRpkjm
    java.nio.file.Path dirUpdates -> MINESOULsRPuTS
    java.nio.file.Path defaultUpdatesDir -> MInEsOulsRPpPn
    boolean useLegacyDir -> MineSoUlsRPEJI
    13:13:void <init>() -> <init>
    49:59:void move(java.nio.file.Path) -> mINESoUlSRpxCH
    62:90:java.nio.file.Path getAppDataDir() -> mINESoUlSRpxCH
    95:95:java.nio.file.Path getLauncherDir(java.lang.String) -> mINESoUlSRpxCH
    99:104:java.nio.file.Path getStoreDir(java.lang.String) -> MINeSoulsrppRw
    108:108:java.nio.file.Path getProjectStoreDir(java.lang.String) -> miNeSOUlSRPT7R
    112:112:java.nio.file.Path getGuardDir() -> MINeSoulsrppRw
    116:122:java.nio.file.Path getGuardDir(pro.gravit.utils.helper.JVMHelper$ARCH,pro.gravit.utils.helper.JVMHelper$OS) -> mINESoUlSRpxCH
    127:127:java.nio.file.Path getLegacyLauncherDir(java.lang.String) -> MINeSOUlsRPerH
    131:132:void setUseLegacyDir(boolean) -> mINESoUlSRpxCH
    33:46:void <clinit>() -> <clinit>
pro.gravit.launcher.client.JavaRuntimeModule -> pro.gravit.launcher.mINEsOULsrPytl:
# {"fileName":"JavaRuntimeModule.java","id":"sourceFile"}
    java.lang.String RUNTIME_NAME -> mINESoUlSRpxCH
    pro.gravit.launcher.LauncherEngine engine -> MINeSoulsrppRw
    pro.gravit.launcher.gui.RuntimeProvider provider -> MINESOULsRPuTS
    33:35:void <init>() -> <init>
    38:41:void noJavaFxAlert() -> MInEsOulsRPpPn
    44:46:void noInitMethodAlert() -> MineSoUlsRPEJI
    49:51:void noLocaleAlert(java.lang.String) -> mINESoUlSRpxCH
    54:56:void noEnFSAlert() -> mINESoUlSRpxCH
    59:61:void errorHandleAlert(java.lang.Throwable) -> mINESoUlSRpxCH
    65:70:void init(pro.gravit.launcher.modules.LauncherInitContext) -> mINESoUlSRpxCH
    74:91:void preGuiPhase(pro.gravit.launcher.client.events.ClientPreGuiPhase) -> mINESoUlSRpxCH
    94:97:void consoleUnlock(pro.gravit.launcher.client.events.ClientUnlockConsoleEvent) -> mINESoUlSRpxCH
    100:101:void offlineMode(pro.gravit.launcher.modules.events.OfflineModeEvent) -> mINESoUlSRpxCH
    104:105:void engineInitPhase(pro.gravit.launcher.client.events.ClientEngineInitPhase) -> mINESoUlSRpxCH
    108:115:void exitPhase(pro.gravit.launcher.client.events.ClientExitPhase) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.RuntimeSecurityService -> pro.gravit.launcher.miNEsOUlSRPfKx:
# {"fileName":"RuntimeSecurityService.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    java.lang.Boolean[] waitObject -> MINeSoulsrppRw
    14:18:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    21:55:void startRequest() -> mINESoUlSRpxCH
    58:77:void doCollectHardwareInfo(boolean) -> mINESoUlSRpxCH
    80:84:void notifyWaitObject(boolean) -> MINeSoulsrppRw
    87:91:boolean getSecurityState() -> MINeSoulsrppRw
    95:95:byte[] sign(byte[]) -> mINESoUlSRpxCH
    60:76:void lambda$doCollectHardwareInfo$6(boolean) -> miNeSOUlSRPT7R
    69:70:java.lang.Void lambda$doCollectHardwareInfo$5(java.lang.Throwable) -> mINESoUlSRpxCH
    65:68:void lambda$doCollectHardwareInfo$4(pro.gravit.launcher.events.request.HardwareReportRequestEvent) -> mINESoUlSRpxCH
    51:53:java.lang.Void lambda$startRequest$3(java.lang.Throwable) -> MINeSoulsrppRw
    22:50:void lambda$startRequest$2(pro.gravit.launcher.events.request.GetSecureLevelInfoRequestEvent) -> mINESoUlSRpxCH
    42:44:java.lang.Void lambda$startRequest$1(java.lang.Throwable) -> miNeSOUlSRPT7R
    31:41:void lambda$startRequest$0(pro.gravit.launcher.events.request.VerifySecureLevelKeyRequestEvent) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.ServerPinger -> pro.gravit.launcher.mINeSOULsrPV68:
# {"fileName":"ServerPinger.java","id":"sourceFile"}
    java.lang.String LEGACY_PING_HOST_MAGIC -> mINESoUlSRpxCH
    java.lang.String LEGACY_PING_HOST_CHANNEL -> MINeSoulsrppRw
    java.util.regex.Pattern LEGACY_PING_HOST_DELIMETER -> miNeSOUlSRPT7R
    int PACKET_LENGTH -> MINeSOUlsRPerH
    java.net.InetSocketAddress address -> MinESoulSRp3Ah
    int protocol -> mINeSoULsRpkjm
    pro.gravit.launcher.profiles.ClientProfile$Version version -> MINESOULsRPuTS
    java.lang.Object cacheLock -> MInEsOulsRPpPn
    pro.gravit.launcher.client.ServerPinger$Result cache -> MineSoUlsRPEJI
    java.lang.Exception cacheException -> MInEsouLsrPIPY
    java.time.Instant cacheTime -> miNesoULsRPW9z
    42:43:void <init>(pro.gravit.launcher.profiles.ClientProfile) -> <init>
    36:52:void <init>(pro.gravit.launcher.profiles.ClientProfile$ServerProfile,pro.gravit.launcher.profiles.ClientProfile$Version) -> <init>
    55:57:java.lang.String readUTF16String(pro.gravit.launcher.serialize.HInput) -> mINESoUlSRpxCH
    61:63:void writeUTF16String(pro.gravit.launcher.serialize.HOutput,java.lang.String) -> mINESoUlSRpxCH
    66:72:pro.gravit.launcher.client.ServerPinger$Result doPing() -> MINeSoulsrppRw
    76:123:pro.gravit.launcher.client.ServerPinger$Result legacyPing(pro.gravit.launcher.serialize.HInput,pro.gravit.launcher.serialize.HOutput,boolean) -> mINESoUlSRpxCH
    129:178:pro.gravit.launcher.client.ServerPinger$Result modernPing(pro.gravit.launcher.serialize.HInput,pro.gravit.launcher.serialize.HOutput,int) -> mINESoUlSRpxCH
    182:208:pro.gravit.launcher.client.ServerPinger$Result ping() -> mINESoUlSRpxCH
    29:29:void <clinit>() -> <clinit>
pro.gravit.launcher.client.ServerPinger$Result -> pro.gravit.launcher.mInESOulsRp1Jk:
# {"fileName":"ServerPinger.java","id":"sourceFile"}
    int onlinePlayers -> mINESoUlSRpxCH
    int maxPlayers -> MINeSoulsrppRw
    java.lang.String raw -> miNeSOUlSRPT7R
    219:225:void <init>(int,int,java.lang.String) -> <init>
    229:229:boolean isOverfilled() -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.StdJavaRuntimeProvider -> pro.gravit.launcher.mINESoulsrPtd7:
# {"fileName":"StdJavaRuntimeProvider.java","id":"sourceFile"}
    java.nio.file.Path updatePath -> mINESoUlSRpxCH
    java.util.concurrent.atomic.AtomicReference INSTANCE -> MINeSoulsrppRw
    25:27:void <init>() -> <init>
    30:30:pro.gravit.launcher.client.StdJavaRuntimeProvider getInstance() -> mINESoUlSRpxCH
    34:34:pro.gravit.launcher.client.gui.JavaFXApplication getApplication() -> MINeSoulsrppRw
    39:59:void run(java.lang.String[]) -> mINESoUlSRpxCH
    63:63:void preLoad() -> miNeSOUlSRPT7R
    66:70:void registerPrivateCommands() -> MINeSOUlsRPerH
    74:77:void init(boolean) -> mINESoUlSRpxCH
    23:23:void <clinit>() -> <clinit>
pro.gravit.launcher.client.UserSettings -> pro.gravit.launcher.MINEsOulSRPSJ1:
# {"fileName":"UserSettings.java","id":"sourceFile"}
    pro.gravit.utils.ProviderMap providers -> mINESoUlSRpxCH
    5:5:void <init>() -> <init>
    6:6:void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.ClientEngineInitPhase -> pro.gravit.launcher.mInesoULSRP1hE:
# {"fileName":"ClientEngineInitPhase.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherEngine engine -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.LauncherEngine) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.ClientExitPhase -> pro.gravit.launcher.MInesOulsRPUXy:
# {"fileName":"ClientExitPhase.java","id":"sourceFile"}
    int code -> mINESoUlSRpxCH
    8:10:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.ClientGuiPhase -> pro.gravit.launcher.MiNEsoULSRp3zl:
# {"fileName":"ClientGuiPhase.java","id":"sourceFile"}
    pro.gravit.launcher.gui.RuntimeProvider runtimeProvider -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.gui.RuntimeProvider) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.ClientPreGuiPhase -> pro.gravit.launcher.MinEsoulSRPq6R:
# {"fileName":"ClientPreGuiPhase.java","id":"sourceFile"}
    pro.gravit.launcher.gui.RuntimeProvider runtimeProvider -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.gui.RuntimeProvider) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.ClientUnlockConsoleEvent -> pro.gravit.launcher.minesOulsrpe2S:
# {"fileName":"ClientUnlockConsoleEvent.java","id":"sourceFile"}
    pro.gravit.utils.command.CommandHandler handler -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.utils.command.CommandHandler) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessBuilderCreateEvent -> pro.gravit.launcher.mINeSoUlSRPwRK:
# {"fileName":"ClientProcessBuilderCreateEvent.java","id":"sourceFile"}
    pro.gravit.launcher.client.ClientLauncherProcess processBuilder -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.client.ClientLauncherProcess) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessBuilderLaunchedEvent -> pro.gravit.launcher.MInesouLsRpYbH:
# {"fileName":"ClientProcessBuilderLaunchedEvent.java","id":"sourceFile"}
    pro.gravit.launcher.client.ClientLauncherProcess processBuilder -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.client.ClientLauncherProcess) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessBuilderParamsWrittedEvent -> pro.gravit.launcher.miNeSOuLSRpsR1:
# {"fileName":"ClientProcessBuilderParamsWrittedEvent.java","id":"sourceFile"}
    pro.gravit.launcher.client.ClientLauncherProcess process -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.client.ClientLauncherProcess) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessBuilderPreLaunchEvent -> pro.gravit.launcher.MINESOulSRp7Jf:
# {"fileName":"ClientProcessBuilderPreLaunchEvent.java","id":"sourceFile"}
    pro.gravit.launcher.client.ClientLauncherProcess processBuilder -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.client.ClientLauncherProcess) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessClassLoaderEvent -> pro.gravit.launcher.MinEsOuLsRPYri:
# {"fileName":"ClientProcessClassLoaderEvent.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherEngine clientInstance -> mINESoUlSRpxCH
    java.lang.ClassLoader clientClassLoader -> MINeSoulsrppRw
    pro.gravit.launcher.profiles.ClientProfile profile -> miNeSOUlSRPT7R
    12:16:void <init>(pro.gravit.launcher.LauncherEngine,java.lang.ClassLoader,pro.gravit.launcher.profiles.ClientProfile) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessInitPhase -> pro.gravit.launcher.miNEsOuLsrpht5:
# {"fileName":"ClientProcessInitPhase.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherEngine clientInstance -> mINESoUlSRpxCH
    pro.gravit.launcher.client.ClientLauncherProcess$ClientParams params -> MINeSoulsrppRw
    11:14:void <init>(pro.gravit.launcher.LauncherEngine,pro.gravit.launcher.client.ClientLauncherProcess$ClientParams) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessLaunchEvent -> pro.gravit.launcher.mInESOUlSRPWRN:
# {"fileName":"ClientProcessLaunchEvent.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherEngine clientInstance -> mINESoUlSRpxCH
    pro.gravit.launcher.client.ClientLauncherProcess$ClientParams params -> MINeSoulsrppRw
    11:14:void <init>(pro.gravit.launcher.LauncherEngine,pro.gravit.launcher.client.ClientLauncherProcess$ClientParams) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessPreInvokeMainClassEvent -> pro.gravit.launcher.minESOUlsRphot:
# {"fileName":"ClientProcessPreInvokeMainClassEvent.java","id":"sourceFile"}
    pro.gravit.launcher.client.ClientLauncherProcess$ClientParams params -> mINESoUlSRpxCH
    pro.gravit.launcher.profiles.ClientProfile profile -> MINeSoulsrppRw
    java.util.Collection args -> miNeSOUlSRPT7R
    14:18:void <init>(pro.gravit.launcher.client.ClientLauncherProcess$ClientParams,pro.gravit.launcher.profiles.ClientProfile,java.util.Collection) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.events.client.ClientProcessReadyEvent -> pro.gravit.launcher.MInesoULsrP13V:
# {"fileName":"ClientProcessReadyEvent.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherEngine clientInstance -> mINESoUlSRpxCH
    pro.gravit.launcher.client.ClientLauncherProcess$ClientParams params -> MINeSoulsrppRw
    11:14:void <init>(pro.gravit.launcher.LauncherEngine,pro.gravit.launcher.client.ClientLauncherProcess$ClientParams) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.JavaFXApplication -> pro.gravit.launcher.miNeSOUlsrPzlB:
# {"fileName":"JavaFXApplication.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicReference INSTANCE -> mInESouLsRPFIp
    java.util.concurrent.atomic.AtomicBoolean IS_NOGUI -> mINESoulsRpOiZ
    java.nio.file.Path runtimeDirectory -> MinESoULsrPRTF
    pro.gravit.launcher.LauncherConfig config -> mINESoUlSRpxCH
    java.util.concurrent.ExecutorService workers -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.config.RuntimeSettings runtimeSettings -> miNeSOUlSRPT7R
    pro.gravit.launcher.request.RequestService service -> MINeSOUlsRPerH
    pro.gravit.launcher.client.gui.impl.GuiObjectsContainer gui -> MinESoulSRp3Ah
    pro.gravit.launcher.client.gui.service.StateService stateService -> mINeSoULsRpkjm
    pro.gravit.launcher.client.gui.config.GuiModuleConfig guiModuleConfig -> MINESOULsRPuTS
    pro.gravit.launcher.client.gui.impl.MessageManager messageManager -> MInEsOulsRPpPn
    pro.gravit.launcher.client.RuntimeSecurityService securityService -> MineSoUlsRPEJI
    pro.gravit.launcher.client.gui.SkinManager skinManager -> MInEsouLsrPIPY
    pro.gravit.launcher.client.gui.utils.FXMLFactory fxmlFactory -> miNesoULsRPW9z
    pro.gravit.launcher.client.gui.service.JavaService javaService -> miNEsOULSrPj2c
    pro.gravit.launcher.client.gui.service.PingService pingService -> MINESOulsRp2ne
    pro.gravit.launcher.client.gui.service.OfflineService offlineService -> MinesouLSrpSNn
    pro.gravit.launcher.client.gui.utils.TriggerManager triggerManager -> MInEsOUlSRP6s8
    pro.gravit.launcher.managers.SettingsManager settingsManager -> mInesOULSrpYIR
    pro.gravit.launcher.client.gui.stage.PrimaryStage mainStage -> MInesOUlsrPzrO
    boolean debugMode -> mInesOUlSRPRMv
    java.util.ResourceBundle resources -> MineSOulsrpVkM
    java.nio.file.Path enfsDirectory -> mInEsOULsRPDrR
    pro.gravit.utils.command.CommandCategory runtimeCategory -> MIneSOuLSRPfA1
    54:77:void <init>() -> <init>
    80:80:pro.gravit.launcher.client.gui.JavaFXApplication getInstance() -> mINESoUlSRpxCH
    84:84:pro.gravit.launcher.client.gui.scenes.AbstractScene getCurrentScene() -> MINeSoulsrppRw
    88:88:pro.gravit.launcher.client.gui.stage.PrimaryStage getMainStage() -> miNeSOUlSRPT7R
    93:119:void init() -> init
    125:195:void start(javafx.stage.Stage) -> start
    198:202:void updateLocaleResources(java.lang.String) -> mINESoUlSRpxCH
    205:208:void resetDirectory() -> MINeSOUlsRPerH
    213:219:void registerCommands() -> MInEsouLsrPIPY
    222:224:void registerPrivateCommands() -> MinESoulSRp3Ah
    229:231:void stop() -> stop
    234:234:boolean isDebugMode() -> mINeSoULsRpkjm
    238:238:java.io.InputStream getResource(java.lang.String) -> mINeSoULsRpkjm
    242:250:java.net.URL getResourceURL(java.lang.String) -> MINeSoulsrppRw
    255:255:java.net.URL getResourceEnFs(java.lang.String) -> MINESOULsRPuTS
    261:263:java.net.URL tryResource(java.lang.String) -> miNeSOUlSRPT7R
    269:269:pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettings getProfileSettings() -> MINESOULsRPuTS
    273:280:pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettings getProfileSettings(pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    284:285:void setNoGUIMode(boolean) -> mINESoUlSRpxCH
    288:289:void setMainScene(pro.gravit.launcher.client.gui.scenes.AbstractScene) -> mINESoUlSRpxCH
    292:292:javafx.stage.Stage newStage() -> MInEsOulsRPpPn
    296:299:javafx.stage.Stage newStage(javafx.stage.StageStyle) -> mINESoUlSRpxCH
    303:303:java.lang.String getTranslation(java.lang.String) -> MINeSOUlsRPerH
    308:310:java.lang.String getTranslation(java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    316:320:boolean openURL(java.lang.String) -> MinESoulSRp3Ah
    325:334:void saveSettings() -> MineSoUlsRPEJI
    51:53:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.SkinManager -> pro.gravit.launcher.mINesouLSrpsbC:
# {"fileName":"SkinManager.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    java.util.Map map -> MINeSoulsrppRw
    89:93:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    96:97:void addSkin(java.lang.String,java.net.URL) -> mINESoUlSRpxCH
    100:102:java.awt.image.BufferedImage getSkin(java.lang.String) -> mINESoUlSRpxCH
    106:108:java.awt.image.BufferedImage getSkinHead(java.lang.String) -> MINeSoulsrppRw
    112:114:javafx.scene.image.Image getFxSkin(java.lang.String) -> miNeSOUlSRPT7R
    118:120:javafx.scene.image.Image getFxSkinHead(java.lang.String) -> MINeSOUlsRPerH
    124:125:java.awt.image.BufferedImage getScaledSkin(java.lang.String,int,int) -> mINESoUlSRpxCH
    129:130:java.awt.image.BufferedImage getScaledSkinHead(java.lang.String,int,int) -> MINeSoulsrppRw
    134:135:javafx.scene.image.Image getScaledFxSkin(java.lang.String,int,int) -> miNeSOUlSRPT7R
    139:150:java.awt.image.BufferedImage sumBufferedImage(java.awt.image.BufferedImage,java.awt.image.BufferedImage) -> mINESoUlSRpxCH
    154:158:javafx.scene.image.Image getScaledFxSkinHead(java.lang.String,int,int) -> MINeSOUlsRPerH
    162:168:java.awt.image.BufferedImage scaleImage(java.awt.image.BufferedImage,int,int) -> mINESoUlSRpxCH
    172:187:java.awt.image.BufferedImage downloadSkin(java.net.URL) -> MINeSoulsrppRw
    192:198:java.awt.image.BufferedImage getHeadLayerFromSkinImage(java.awt.image.BufferedImage) -> MINeSOUlsRPerH
    202:206:java.awt.image.BufferedImage getHeadFromSkinImage(java.awt.image.BufferedImage) -> MinESoulSRp3Ah
    210:217:javafx.scene.image.Image convertToFxImage(java.awt.image.BufferedImage) -> mINeSoULsRpkjm
    222:241:javafx.scene.image.Image convertToFxImageJava8(java.awt.image.BufferedImage) -> MINESOULsRPuTS
    25:25:java.awt.image.BufferedImage access$000(java.net.URL) -> mINESoUlSRpxCH
    25:25:javafx.scene.image.Image access$100(java.awt.image.BufferedImage) -> mINESoUlSRpxCH
    25:25:java.awt.image.BufferedImage access$200(java.awt.image.BufferedImage) -> MINeSoulsrppRw
    25:25:java.awt.image.BufferedImage access$300(java.awt.image.BufferedImage) -> miNeSOUlSRPT7R
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.SkinManager$1 -> pro.gravit.launcher.MiNesoULSRP8Sr:
# {"fileName":"SkinManager.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.SkinManager$SkinEntry -> pro.gravit.launcher.MinEsOuLSrpVRO:
# {"fileName":"SkinManager.java","id":"sourceFile"}
    java.net.URL url -> mINESoUlSRpxCH
    java.lang.String imageUrl -> MINeSoulsrppRw
    java.lang.ref.SoftReference imageRef -> miNeSOUlSRPT7R
    java.lang.ref.SoftReference avatarRef -> MINeSOUlsRPerH
    java.lang.ref.SoftReference fxImageRef -> MinESoulSRp3Ah
    java.lang.ref.SoftReference fxAvatarRef -> mINeSoULsRpkjm
    29:37:void <init>(java.net.URL) -> <init>
    40:45:java.awt.image.BufferedImage getFullImage() -> mINESoUlSRpxCH
    49:58:javafx.scene.image.Image getFullFxImage() -> MINeSoulsrppRw
    62:71:java.awt.image.BufferedImage getHeadImage() -> miNeSOUlSRPT7R
    75:84:javafx.scene.image.Image getHeadFxImage() -> MINeSOUlsRPerH
    26:26:void <init>(java.net.URL,pro.gravit.launcher.client.gui.SkinManager$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.commands.RuntimeCommand -> pro.gravit.launcher.MINesOulsRpc1h:
# {"fileName":"RuntimeCommand.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    11:18:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    22:22:java.lang.String getArgsDescription() -> getArgsDescription
    27:27:java.lang.String getUsageDescription() -> getUsageDescription
    32:33:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.commands.VersionCommand -> pro.gravit.launcher.MINESoULsrPw84:
# {"fileName":"VersionCommand.java","id":"sourceFile"}
    7:7:void <init>() -> <init>
    10:10:java.lang.String getArgsDescription() -> getArgsDescription
    15:15:java.lang.String getUsageDescription() -> getUsageDescription
    20:22:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.commands.runtime.DialogCommand -> pro.gravit.launcher.mINeSouLSRPYtP:
# {"fileName":"DialogCommand.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.impl.MessageManager messageManager -> mINESoUlSRpxCH
    10:12:void <init>(pro.gravit.launcher.client.gui.impl.MessageManager) -> <init>
    16:16:java.lang.String getArgsDescription() -> getArgsDescription
    21:21:java.lang.String getUsageDescription() -> getUsageDescription
    26:49:void invoke(java.lang.String[]) -> invoke
    46:46:void lambda$invoke$6() -> mINESoUlSRpxCH
    45:45:void lambda$invoke$5(java.lang.String) -> mINESoUlSRpxCH
    41:41:void lambda$invoke$4() -> MINeSoulsrppRw
    40:40:void lambda$invoke$3() -> miNeSOUlSRPT7R
    39:39:void lambda$invoke$2() -> MINeSOUlsRPerH
    35:35:void lambda$invoke$1() -> MinESoulSRp3Ah
    34:34:void lambda$invoke$0() -> mINeSoULsRpkjm
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.commands.runtime.NotifyCommand -> pro.gravit.launcher.mINesoULSrPvUY:
# {"fileName":"NotifyCommand.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.impl.MessageManager messageManager -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.client.gui.impl.MessageManager) -> <init>
    15:15:java.lang.String getArgsDescription() -> getArgsDescription
    20:20:java.lang.String getUsageDescription() -> getUsageDescription
    25:34:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.commands.runtime.ReloadCommand -> pro.gravit.launcher.MINESOUlsRpnol:
# {"fileName":"ReloadCommand.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    15:15:java.lang.String getArgsDescription() -> getArgsDescription
    20:20:java.lang.String getUsageDescription() -> getUsageDescription
    25:26:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.commands.runtime.ShowFxmlCommand -> pro.gravit.launcher.mINESOulSRpUVY:
# {"fileName":"ShowFxmlCommand.java","id":"sourceFile"}
    5:5:void <init>() -> <init>
    8:8:java.lang.String getArgsDescription() -> getArgsDescription
    13:13:java.lang.String getUsageDescription() -> getUsageDescription
    18:19:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.commands.runtime.ThemeCommand -> pro.gravit.launcher.MINEsoULsRpeGh:
# {"fileName":"ThemeCommand.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    15:15:java.lang.String getArgsDescription() -> getArgsDescription
    20:20:java.lang.String getUsageDescription() -> getUsageDescription
    25:28:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.commands.runtime.WarpCommand -> pro.gravit.launcher.MiNesOUlSRPjbT:
# {"fileName":"WarpCommand.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    13:15:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    19:19:java.lang.String getArgsDescription() -> getArgsDescription
    24:24:java.lang.String getUsageDescription() -> getUsageDescription
    29:60:void invoke(java.lang.String[]) -> invoke
    54:56:void lambda$invoke$2(pro.gravit.launcher.client.gui.scenes.AbstractScene,pro.gravit.launcher.client.gui.overlays.AbstractOverlay) -> mINESoUlSRpxCH
    55:55:void lambda$invoke$1(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    38:42:void lambda$invoke$0(pro.gravit.launcher.client.gui.stage.PrimaryStage,pro.gravit.launcher.client.gui.scenes.AbstractScene) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.config.GuiModuleConfig -> pro.gravit.launcher.MiNESOuLSrPUEa:
# {"fileName":"GuiModuleConfig.java","id":"sourceFile"}
    java.lang.String createAccountURL -> mINESoUlSRpxCH
    java.lang.String forgotPassURL -> MINeSoulsrppRw
    java.lang.String hastebinServer -> miNeSOUlSRPT7R
    boolean forceDownloadJava -> MINeSOUlsRPerH
    java.util.Map javaList -> MinESoulSRp3Ah
    boolean lazy -> mINeSoULsRpkjm
    boolean disableOfflineMode -> MINESOULsRPuTS
    boolean autoAuth -> MInEsOulsRPpPn
    java.lang.String locale -> MineSoUlsRPEJI
    int downloadThreads -> MInEsouLsrPIPY
    8:30:void <init>() -> <init>
    34:44:java.lang.Object getDefault() -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.config.RuntimeSettings -> pro.gravit.launcher.MInesoULSRPiey:
# {"fileName":"RuntimeSettings.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE DEFAULT_LOCALE -> MINeSoulsrppRw
    java.nio.file.Path updatesDir -> miNeSOUlSRPT7R
    java.lang.String login -> login
    pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface password -> password
    byte[] encryptedPassword -> encryptedPassword
    boolean autoAuth -> autoAuth
    pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability lastAuth -> lastAuth
    java.lang.String updatesDirPath -> updatesDirPath
    java.util.UUID lastProfile -> lastProfile
    pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE locale -> locale
    java.lang.String oauthAccessToken -> oauthAccessToken
    java.lang.String oauthRefreshToken -> oauthRefreshToken
    long oauthExpire -> oauthExpire
    java.lang.String theme -> theme
    java.util.Map profileSettings -> profileSettings
    java.util.List profiles -> profiles
    19:47:void <init>() -> <init>
    53:57:pro.gravit.launcher.client.gui.config.RuntimeSettings getDefault(pro.gravit.launcher.client.gui.config.GuiModuleConfig) -> mINESoUlSRpxCH
    61:63:void apply() -> mINESoUlSRpxCH
    20:20:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE -> pro.gravit.launcher.mINESoUlsrPlVo:
# {"fileName":"RuntimeSettings.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE RUSSIAN -> RUSSIAN
    pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE ENGLISH -> ENGLISH
    java.lang.String name -> mINESoUlSRpxCH
    java.lang.String displayName -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE[] $VALUES -> miNeSOUlSRPT7R
    65:65:pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE[] values() -> values
    65:65:pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE valueOf(java.lang.String) -> valueOf
    73:76:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    65:68:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettings -> pro.gravit.launcher.mIneSouLSRp8Fk:
# {"fileName":"RuntimeSettings.java","id":"sourceFile"}
    int ram -> ram
    boolean debug -> debug
    boolean fullScreen -> fullScreen
    boolean autoEnter -> autoEnter
    java.lang.String javaPath -> javaPath
    92:101:pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettings getDefault(pro.gravit.launcher.client.gui.service.JavaService,pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    104:106:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettingsView -> pro.gravit.launcher.mInesOuLsrP3zX:
# {"fileName":"RuntimeSettings.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettings settings -> mINeSoULsRpkjm
    int ram -> mINESoUlSRpxCH
    boolean debug -> MINeSoulsrppRw
    boolean fullScreen -> miNeSOUlSRPT7R
    boolean autoEnter -> MINeSOUlsRPerH
    java.lang.String javaPath -> MinESoulSRp3Ah
    117:124:void <init>(pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettings) -> <init>
    127:132:void apply() -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.config.StdSettingsManager -> pro.gravit.launcher.mineSOuLsRPbgi:
# {"fileName":"StdSettingsManager.java","id":"sourceFile"}
    7:7:void <init>() -> <init>
    11:13:pro.gravit.launcher.NewLauncherSettings getDefaultConfig() -> mINESoUlSRpxCH
    7:7:java.lang.Object getDefaultConfig() -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.dialogs.AbstractDialog -> pro.gravit.launcher.miNeSOUlSRPYAj:
# {"fileName":"AbstractDialog.java","id":"sourceFile"}
    java.util.List onClose -> MInEsOulsRPpPn
    14:18:void <init>(java.lang.String,pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    23:23:void reset() -> mINESoUlSRpxCH
    28:28:void disable() -> MINeSoulsrppRw
    33:33:void enable() -> miNeSOUlSRPT7R
    36:37:void setOnClose(pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionRunnable) -> mINESoUlSRpxCH
    40:43:void close() -> MINeSOUlsRPerH
    47:49:pro.gravit.launcher.client.gui.helper.LookupHelper$Point2D getOutSceneCoords(javafx.geometry.Rectangle2D) -> mINESoUlSRpxCH
    54:56:pro.gravit.launcher.client.gui.helper.LookupHelper$Point2D getSceneCoords(javafx.scene.layout.Pane) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.dialogs.ApplyDialog -> pro.gravit.launcher.minESOuLsRPCdi:
# {"fileName":"ApplyDialog.java","id":"sourceFile"}
    java.lang.String header -> MInEsOulsRPpPn
    java.lang.String text -> MineSoUlsRPEJI
    java.lang.Runnable onAccept -> MInEsouLsrPIPY
    java.lang.Runnable onDeny -> miNesoULsRPW9z
    java.lang.Runnable onClose -> miNEsOULSrPj2c
    javafx.scene.control.Label textHeader -> MINESOulsRp2ne
    javafx.scene.control.Label textDescription -> MinesouLSrpSNn
    20:26:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication,java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable) -> <init>
    29:32:void setHeader(java.lang.String) -> mINESoUlSRpxCH
    35:38:void setText(java.lang.String) -> MINeSoulsrppRw
    42:42:java.lang.String getName() -> MinESoulSRp3Ah
    47:75:void doInit() -> mINeSoULsRpkjm
    69:74:void lambda$doInit$2(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    61:66:void lambda$doInit$1(javafx.event.ActionEvent) -> MINeSoulsrppRw
    53:58:void lambda$doInit$0(javafx.event.ActionEvent) -> miNeSOUlSRPT7R
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.dialogs.InfoDialog -> pro.gravit.launcher.MINEsOuLSRPROf:
# {"fileName":"InfoDialog.java","id":"sourceFile"}
    java.lang.String header -> MInEsOulsRPpPn
    java.lang.String text -> MineSoUlsRPEJI
    java.lang.Runnable onAccept -> MInEsouLsrPIPY
    java.lang.Runnable onClose -> miNesoULsRPW9z
    javafx.scene.text.Text textHeader -> miNEsOULSrPj2c
    javafx.scene.text.Text textDescription -> MINESOulsRp2ne
    19:24:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication,java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable) -> <init>
    27:30:void setHeader(java.lang.String) -> mINESoUlSRpxCH
    33:36:void setText(java.lang.String) -> MINeSoulsrppRw
    40:40:java.lang.String getName() -> MinESoulSRp3Ah
    45:65:void doInit() -> mINeSoULsRpkjm
    59:64:void lambda$doInit$1(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    51:56:void lambda$doInit$0(javafx.event.ActionEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.dialogs.NotificationDialog -> pro.gravit.launcher.MiNEsOULsRpowe:
# {"fileName":"NotificationDialog.java","id":"sourceFile"}
    java.util.Map slots -> MInEsOulsRPpPn
    java.lang.String header -> MineSoUlsRPEJI
    java.lang.String text -> MInEsouLsrPIPY
    javafx.scene.text.Text textHeader -> miNesoULsRPW9z
    javafx.scene.text.Text textDescription -> miNEsOULSrPj2c
    pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo positionInfo -> MINESOulsRp2ne
    pro.gravit.launcher.client.gui.dialogs.NotificationDialog$NotificationSlot positionSlot -> MinesouLSrpSNn
    double positionOffset -> MInEsOUlSRP6s8
    63:66:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication,java.lang.String,java.lang.String) -> <init>
    70:70:java.lang.String getName() -> MinESoulSRp3Ah
    75:92:void doInit() -> mINeSoULsRpkjm
    96:97:void reset() -> mINESoUlSRpxCH
    100:114:void setPosition(pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo,pro.gravit.launcher.client.gui.dialogs.NotificationDialog$NotificationSlot) -> mINESoUlSRpxCH
    117:120:void setHeader(java.lang.String) -> mINESoUlSRpxCH
    123:126:void setText(java.lang.String) -> MINeSoulsrppRw
    130:134:pro.gravit.launcher.client.gui.helper.LookupHelper$Point2D getOutSceneCoords(javafx.geometry.Rectangle2D) -> mINESoUlSRpxCH
    139:140:pro.gravit.launcher.client.gui.helper.LookupHelper$Point2D getSceneCoords(javafx.scene.layout.Pane) -> mINESoUlSRpxCH
    146:147:void errorHandle(java.lang.Throwable) -> mINESoUlSRpxCH
    87:91:void lambda$doInit$1() -> miNesoULsRPW9z
    79:83:void lambda$doInit$0(javafx.scene.input.MouseEvent) -> mINESoUlSRpxCH
    52:52:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.dialogs.NotificationDialog$1 -> pro.gravit.launcher.MINesOUlSrPFah:
# {"fileName":"NotificationDialog.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.dialogs.NotificationDialog$NotificationSlot -> pro.gravit.launcher.MInESoUlsrPi2c:
# {"fileName":"NotificationDialog.java","id":"sourceFile"}
    java.util.function.Consumer onScroll -> mINESoUlSRpxCH
    double size -> MINeSoulsrppRw
    19:22:void <init>(java.util.function.Consumer,double) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.dialogs.NotificationDialog$NotificationSlotsInfo -> pro.gravit.launcher.mIneSoulSrPfNq:
# {"fileName":"NotificationDialog.java","id":"sourceFile"}
    java.util.LinkedList stack -> mINESoUlSRpxCH
    25:26:void <init>() -> <init>
    29:34:double add(pro.gravit.launcher.client.gui.dialogs.NotificationDialog$NotificationSlot) -> mINESoUlSRpxCH
    38:49:void remove(pro.gravit.launcher.client.gui.dialogs.NotificationDialog$NotificationSlot) -> MINeSoulsrppRw
    25:25:void <init>(pro.gravit.launcher.client.gui.dialogs.NotificationDialog$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.dialogs.TextDialog -> pro.gravit.launcher.MinesOulSRPnEk:
# {"fileName":"TextDialog.java","id":"sourceFile"}
    java.lang.String header -> MInEsOulsRPpPn
    java.lang.String text -> MineSoUlsRPEJI
    java.util.function.Consumer onAccept -> MInEsouLsrPIPY
    java.lang.Runnable onClose -> miNesoULsRPW9z
    javafx.scene.control.Label textHeader -> miNEsOULSrPj2c
    javafx.scene.control.Label textDescription -> MINESOulsRp2ne
    javafx.scene.control.TextField textField -> MinesouLSrpSNn
    23:28:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication,java.lang.String,java.lang.String,java.util.function.Consumer,java.lang.Runnable) -> <init>
    31:34:void setHeader(java.lang.String) -> mINESoUlSRpxCH
    37:40:void setText(java.lang.String) -> MINeSoulsrppRw
    44:44:java.lang.String getName() -> MinESoulSRp3Ah
    49:70:void doInit() -> mINeSoULsRpkjm
    64:69:void lambda$doInit$1(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    56:61:void lambda$doInit$0(javafx.event.ActionEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.helper.EnFSHelper -> pro.gravit.launcher.MiNEsoulSRp7yy:
# {"fileName":"EnFSHelper.java","id":"sourceFile"}
    java.util.Set themesCached -> mINESoUlSRpxCH
    java.lang.String BASE_DIRECTORY -> MINeSoulsrppRw
    24:24:void <init>() -> <init>
    31:34:boolean checkEnFSUrl() -> mINESoUlSRpxCH
    39:47:void initEnFS() -> MINeSoulsrppRw
    50:91:java.nio.file.Path initEnFSDirectory(pro.gravit.launcher.LauncherConfig,java.lang.String) -> mINESoUlSRpxCH
    96:108:pro.gravit.utils.enfs.dir.FileEntry makeFile(pro.gravit.launcher.LauncherConfig,java.lang.String,byte[]) -> mINESoUlSRpxCH
    112:115:java.net.URL getURL(java.lang.String) -> mINESoUlSRpxCH
    102:104:java.io.InputStream lambda$makeFile$2(java.lang.String) -> MINeSoulsrppRw
    74:90:void lambda$initEnFSDirectory$1(java.lang.String,java.util.Set,java.nio.file.Path,pro.gravit.launcher.LauncherConfig,java.lang.String,byte[]) -> mINESoUlSRpxCH
    62:65:void lambda$initEnFSDirectory$0(java.lang.String,java.util.Set,java.lang.String,byte[]) -> mINESoUlSRpxCH
    26:26:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.helper.LookupHelper -> pro.gravit.launcher.MinESoUlsrpIt2:
# {"fileName":"LookupHelper.java","id":"sourceFile"}
    8:8:void <init>() -> <init>
    11:21:javafx.scene.Node lookup(javafx.scene.Node,java.lang.String[]) -> mINESoUlSRpxCH
    26:36:java.util.Optional lookupIfPossible(javafx.scene.Node,java.lang.String[]) -> MINeSoulsrppRw
    51:60:pro.gravit.launcher.client.gui.helper.LookupHelper$Point2D getAbsoluteCords(javafx.scene.Node,javafx.scene.Node) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.helper.LookupHelper$LookupException -> pro.gravit.launcher.mIneSOULsrpjY1:
# {"fileName":"LookupHelper.java","id":"sourceFile"}
    66:67:void <init>(java.lang.String[],int) -> <init>
    70:80:java.lang.String buildStack(java.lang.String[],int) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.helper.LookupHelper$Point2D -> pro.gravit.launcher.miNEsouLsrp2WH:
# {"fileName":"LookupHelper.java","id":"sourceFile"}
    double x -> mINESoUlSRpxCH
    double y -> MINeSoulsrppRw
    43:46:void <init>(double,double) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.helper.PositionHelper -> pro.gravit.launcher.minesOULSrpaU3:
# {"fileName":"PositionHelper.java","id":"sourceFile"}
    22:23:void <init>() -> <init>
    27:45:pro.gravit.launcher.client.gui.helper.LookupHelper$Point2D calculate(pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo,double,double,double,double,double,double) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo -> pro.gravit.launcher.MINesoulsrpemp:
# {"fileName":"PositionHelper.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo TOP_LEFT -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo TOP_RIGHT -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo BOTTOM_LEFT -> miNeSOUlSRPT7R
    pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo BOTTOM_RIGHT -> MINeSOUlsRPerH
    double startX -> MinESoulSRp3Ah
    double startY -> mINeSoULsRpkjm
    boolean offsetXPlus -> MINESOULsRPuTS
    boolean offsetYPlus -> MInEsOulsRPpPn
    pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo[] $VALUES -> MineSoUlsRPEJI
    4:4:pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo[] values() -> values
    4:4:pro.gravit.launcher.client.gui.helper.PositionHelper$PositionInfo valueOf(java.lang.String) -> valueOf
    14:19:void <init>(java.lang.String,int,double,double,boolean,boolean) -> <init>
    4:8:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.AbstractStage -> pro.gravit.launcher.MINeSOUlSRPbqK:
# {"fileName":"AbstractStage.java","id":"sourceFile"}
    javafx.stage.Stage stage -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.impl.AbstractVisualComponent scene -> MINeSoulsrppRw
    16:18:void <init>(javafx.stage.Stage) -> <init>
    21:22:void hide() -> mINESoUlSRpxCH
    25:26:void close() -> MINeSoulsrppRw
    29:38:void enableMouseDrag(javafx.scene.Node) -> mINESoUlSRpxCH
    41:41:pro.gravit.launcher.client.gui.impl.AbstractVisualComponent getVisualComponent() -> miNeSOUlSRPT7R
    45:64:void setScene(pro.gravit.launcher.client.gui.impl.AbstractVisualComponent) -> mINESoUlSRpxCH
    67:67:boolean isShowing() -> MINeSOUlsRPerH
    71:71:boolean isNullScene() -> MinESoulSRp3Ah
    75:76:void show() -> mINeSoULsRpkjm
    32:37:void lambda$enableMouseDrag$1(java.util.concurrent.atomic.AtomicReference,javafx.scene.input.MouseEvent) -> mINESoUlSRpxCH
    30:30:void lambda$enableMouseDrag$0(java.util.concurrent.atomic.AtomicReference,javafx.scene.input.MouseEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.AbstractVisualComponent -> pro.gravit.launcher.MINESouLSRpiRV:
# {"fileName":"AbstractVisualComponent.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.impl.ContextHelper contextHelper -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.impl.FXExecutorService fxExecutor -> miNeSOUlSRPT7R
    pro.gravit.launcher.client.gui.impl.AbstractStage currentStage -> MINeSOUlsRPerH
    javafx.scene.layout.Pane layout -> MinESoulSRp3Ah
    java.lang.String sysFxmlPath -> MInEsOulsRPpPn
    javafx.scene.Parent sysFxmlRoot -> MineSoUlsRPEJI
    java.util.concurrent.CompletableFuture sysFxmlFuture -> MInEsouLsrPIPY
    boolean isInit -> mINeSoULsRpkjm
    boolean isResetOnShow -> MINESOULsRPuTS
    29:39:void <init>(java.lang.String,pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    42:49:void fade(javafx.scene.Node,double,double,double,javafx.event.EventHandler) -> mINESoUlSRpxCH
    52:52:javafx.scene.layout.Pane getLayout() -> MINESOULsRPuTS
    56:56:boolean isInit() -> MInEsOulsRPpPn
    java.lang.String getName() -> MinESoulSRp3Ah
    63:80:javafx.scene.Parent getFxmlRoot() -> MineSoUlsRPEJI
    85:90:void init() -> MInEsouLsrPIPY
    void doInit() -> mINeSoULsRpkjm
    void reset() -> mINESoUlSRpxCH
    void disable() -> MINeSoulsrppRw
    void enable() -> miNeSOUlSRPT7R
    101:118:void errorHandle(java.lang.Throwable) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.ContextHelper -> pro.gravit.launcher.miNEsOuLSRPEoe:
# {"fileName":"ContextHelper.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.impl.AbstractVisualComponent pane -> mINESoUlSRpxCH
    10:12:void <init>(pro.gravit.launcher.client.gui.impl.AbstractVisualComponent) -> <init>
    15:31:java.util.concurrent.CompletableFuture runInFxThreadStatic(pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionCallback) -> mINESoUlSRpxCH
    36:39:java.lang.Object runCallback(pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionCallback) -> MINeSoulsrppRw
    45:49:void runCallback(pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionRunnable) -> mINESoUlSRpxCH
    52:70:java.util.concurrent.CompletableFuture runInFxThreadStatic(pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionRunnable) -> MINeSoulsrppRw
    74:74:java.util.concurrent.CompletableFuture runInFxThread(pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionCallback) -> miNeSOUlSRPT7R
    81:81:java.util.concurrent.CompletableFuture runInFxThread(pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionRunnable) -> miNeSOUlSRPT7R
    88:99:void errorHandling(java.lang.Throwable) -> mINESoUlSRpxCH
    82:83:java.lang.Void lambda$runInFxThread$3(java.lang.Throwable) -> MINeSoulsrppRw
    75:76:java.lang.Object lambda$runInFxThread$2(java.lang.Throwable) -> miNeSOUlSRPT7R
    63:68:void lambda$runInFxThreadStatic$1(pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionRunnable,java.util.concurrent.CompletableFuture) -> mINESoUlSRpxCH
    25:29:void lambda$runInFxThreadStatic$0(java.util.concurrent.CompletableFuture,pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionCallback) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionCallback -> pro.gravit.launcher.MINEsOUlSRpZ0k:
# {"fileName":"ContextHelper.java","id":"sourceFile"}
    java.lang.Object call() -> call
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.ContextHelper$GuiExceptionRunnable -> pro.gravit.launcher.MinEsOuLSrpbq9:
# {"fileName":"ContextHelper.java","id":"sourceFile"}
    void call() -> call
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.FXExecutorService -> pro.gravit.launcher.MINEsoulsrpQS0:
# {"fileName":"FXExecutorService.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.impl.ContextHelper contextHelper -> mINESoUlSRpxCH
    11:13:void <init>(pro.gravit.launcher.client.gui.impl.ContextHelper) -> <init>
    18:18:void shutdown() -> shutdown
    22:22:java.util.List shutdownNow() -> shutdownNow
    27:27:boolean isShutdown() -> isShutdown
    32:32:boolean isTerminated() -> isTerminated
    37:37:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    42:42:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    47:47:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    52:52:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    57:57:java.util.List invokeAll(java.util.Collection) -> invokeAll
    62:62:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    67:67:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    72:72:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    77:78:void execute(java.lang.Runnable) -> execute
    47:47:java.lang.Object lambda$submit$0(java.lang.Object,java.lang.Void) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.GuiEventHandler -> pro.gravit.launcher.MineSOuLSrpSUQ:
# {"fileName":"GuiEventHandler.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    24:26:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    30:63:boolean eventHandle(pro.gravit.launcher.request.WebSocketEvent) -> eventHandle
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.GuiObjectsContainer -> pro.gravit.launcher.mINesOULsrPHKH:
# {"fileName":"GuiObjectsContainer.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> miNesoULsRPW9z
    java.util.Set overlays -> miNEsOULSrPj2c
    java.util.Set scenes -> MINESOulsRp2ne
    pro.gravit.launcher.client.gui.overlays.ProcessingOverlay processingOverlay -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.scenes.update.UpdateScene updateScene -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.scenes.debug.DebugScene debugScene -> miNeSOUlSRPT7R
    pro.gravit.launcher.client.gui.scenes.servermenu.ServerMenuScene serverMenuScene -> MINeSOUlsRPerH
    pro.gravit.launcher.client.gui.scenes.serverinfo.ServerInfoScene serverInfoScene -> MinESoulSRp3Ah
    pro.gravit.launcher.client.gui.scenes.login.LoginScene loginScene -> mINeSoULsRpkjm
    pro.gravit.launcher.client.gui.scenes.options.OptionsScene optionsScene -> MINESOULsRPuTS
    pro.gravit.launcher.client.gui.scenes.settings.SettingsScene settingsScene -> MInEsOulsRPpPn
    pro.gravit.launcher.client.gui.scenes.console.ConsoleScene consoleScene -> MineSoUlsRPEJI
    pro.gravit.launcher.client.gui.stage.ConsoleStage consoleStage -> MInEsouLsrPIPY
    25:42:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    45:56:void init() -> mINESoUlSRpxCH
    59:72:void reload() -> MINeSoulsrppRw
    75:80:pro.gravit.launcher.client.gui.scenes.AbstractScene getSceneByName(java.lang.String) -> mINESoUlSRpxCH
    84:89:pro.gravit.launcher.client.gui.overlays.AbstractOverlay getOverlayByName(java.lang.String) -> MINeSoulsrppRw
    96:101:pro.gravit.launcher.client.gui.overlays.AbstractOverlay registerOverlay(java.lang.Class) -> mINESoUlSRpxCH
    108:113:pro.gravit.launcher.client.gui.scenes.AbstractScene registerScene(java.lang.Class) -> MINeSoulsrppRw
    61:71:void lambda$reload$0(java.lang.Class) -> miNeSOUlSRPT7R
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.impl.MessageManager -> pro.gravit.launcher.mInesoULsRpbwZ:
# {"fileName":"MessageManager.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    java.util.concurrent.atomic.AtomicInteger count -> MINeSoulsrppRw
    java.util.concurrent.atomic.AtomicInteger localCount -> miNeSOUlSRPT7R
    18:23:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    26:27:void createNotification(java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    30:61:void initDialogInScene(pro.gravit.launcher.client.gui.scenes.AbstractScene,pro.gravit.launcher.client.gui.dialogs.AbstractDialog) -> mINESoUlSRpxCH
    64:88:void createNotification(java.lang.String,java.lang.String,boolean) -> mINESoUlSRpxCH
    91:93:void showDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,boolean) -> mINESoUlSRpxCH
    96:97:void showApplyDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,boolean) -> MINeSoulsrppRw
    100:102:void showApplyDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable,boolean) -> mINESoUlSRpxCH
    105:107:void showTextDialog(java.lang.String,java.util.function.Consumer,java.lang.Runnable,boolean) -> mINESoUlSRpxCH
    110:129:void showAbstractDialog(pro.gravit.launcher.client.gui.dialogs.AbstractDialog,java.lang.String,boolean) -> mINESoUlSRpxCH
    125:127:void lambda$showAbstractDialog$8(java.util.concurrent.atomic.AtomicReference) -> mINESoUlSRpxCH
    121:123:void lambda$showAbstractDialog$7(java.util.concurrent.atomic.AtomicReference,java.lang.String,pro.gravit.launcher.client.gui.dialogs.AbstractDialog) -> mINESoUlSRpxCH
    116:117:void lambda$showAbstractDialog$6(pro.gravit.launcher.client.gui.scenes.AbstractScene,pro.gravit.launcher.client.gui.dialogs.AbstractDialog) -> MINeSoulsrppRw
    76:86:void lambda$createNotification$5(java.util.concurrent.atomic.AtomicReference,pro.gravit.launcher.client.gui.dialogs.NotificationDialog,java.lang.String) -> mINESoUlSRpxCH
    81:83:void lambda$createNotification$4(java.util.concurrent.atomic.AtomicReference) -> MINeSoulsrppRw
    77:78:void lambda$createNotification$3(java.util.concurrent.atomic.AtomicReference,java.lang.Double) -> mINESoUlSRpxCH
    71:72:void lambda$createNotification$2(pro.gravit.launcher.client.gui.scenes.AbstractScene,pro.gravit.launcher.client.gui.dialogs.NotificationDialog) -> mINESoUlSRpxCH
    49:50:void lambda$initDialogInScene$1(javafx.scene.layout.Pane,java.lang.Double) -> mINESoUlSRpxCH
    41:45:void lambda$initDialogInScene$0(javafx.scene.layout.Pane,javafx.scene.layout.Pane,pro.gravit.launcher.client.gui.dialogs.AbstractDialog,pro.gravit.launcher.client.gui.scenes.AbstractScene) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.overlays.AbstractOverlay -> pro.gravit.launcher.miNESOuLsrpig6:
# {"fileName":"AbstractOverlay.java","id":"sourceFile"}
    14:15:void <init>(java.lang.String,pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    18:19:void init() -> MInEsouLsrPIPY
    22:28:void hide(double,pro.gravit.launcher.client.gui.scenes.AbstractScene,javafx.event.EventHandler) -> mINESoUlSRpxCH
    void doInit() -> mINeSoULsRpkjm
    void reset() -> mINESoUlSRpxCH
    35:35:void disable() -> MINeSoulsrppRw
    38:38:void enable() -> miNeSOUlSRPT7R
    41:46:javafx.scene.layout.Pane show(pro.gravit.launcher.client.gui.impl.AbstractStage) -> mINESoUlSRpxCH
    25:27:void lambda$hide$0(javafx.event.EventHandler,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.overlays.ProcessingOverlay -> pro.gravit.launcher.MiNESouLSRpki4:
# {"fileName":"ProcessingOverlay.java","id":"sourceFile"}
    javafx.scene.Node spinner -> MInEsOulsRPpPn
    javafx.scene.control.Labeled description -> MineSoUlsRPEJI
    23:24:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    28:28:java.lang.String getName() -> MinESoulSRp3Ah
    34:35:void doInit() -> mINeSoULsRpkjm
    39:42:void reset() -> mINESoUlSRpxCH
    45:49:void errorHandle(java.lang.Throwable) -> mINESoUlSRpxCH
    52:53:void processRequest(pro.gravit.launcher.client.gui.scenes.AbstractScene,java.lang.String,pro.gravit.launcher.request.Request,java.util.function.Consumer,javafx.event.EventHandler) -> mINESoUlSRpxCH
    57:77:void processRequest(pro.gravit.launcher.client.gui.scenes.AbstractScene,java.lang.String,pro.gravit.launcher.request.Request,java.util.function.Consumer,java.util.function.Consumer,javafx.event.EventHandler) -> mINESoUlSRpxCH
    59:73:void lambda$processRequest$3(java.lang.String,pro.gravit.launcher.request.Request,java.util.function.Consumer,java.util.function.Consumer,pro.gravit.launcher.client.gui.scenes.AbstractScene,javafx.event.EventHandler,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    64:67:java.lang.Void lambda$processRequest$2(java.util.function.Consumer,pro.gravit.launcher.client.gui.scenes.AbstractScene,javafx.event.EventHandler,java.lang.Throwable) -> mINESoUlSRpxCH
    65:65:void lambda$processRequest$1(java.lang.Throwable) -> MINeSoulsrppRw
    61:63:void lambda$processRequest$0(java.util.function.Consumer,pro.gravit.launcher.request.WebSocketEvent) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.AbstractScene -> pro.gravit.launcher.MInESOuLSrPEab:
# {"fileName":"AbstractScene.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherConfig launcherConfig -> MInEsOulsRPpPn
    javafx.scene.Scene scene -> MineSoUlsRPEJI
    javafx.scene.layout.Pane header -> MInEsouLsrPIPY
    javafx.scene.layout.Pane disablePane -> miNesoULsRPW9z
    javafx.scene.Node currentOverlayNode -> miNEsOULSrPj2c
    pro.gravit.launcher.client.gui.overlays.AbstractOverlay currentOverlay -> MINESOulsRp2ne
    java.util.concurrent.atomic.AtomicInteger enabled -> MinesouLSrpSNn
    boolean hideTransformStarted -> MInEsOUlSRP6s8
    39:45:void <init>(java.lang.String,pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    48:48:pro.gravit.launcher.client.gui.impl.AbstractStage getCurrentStage() -> MINeSOUlsRPerH
    52:64:void init() -> MInEsouLsrPIPY
    void doInit() -> mINeSoULsRpkjm
    69:72:void showOverlay(pro.gravit.launcher.client.gui.overlays.AbstractOverlay,javafx.event.EventHandler) -> mINESoUlSRpxCH
    75:89:void showOverlay(javafx.scene.layout.Pane,javafx.event.EventHandler) -> mINESoUlSRpxCH
    92:115:void hideOverlay(double,javafx.event.EventHandler) -> mINESoUlSRpxCH
    118:145:void swapOverlay(javafx.scene.layout.Pane,javafx.event.EventHandler) -> MINeSoulsrppRw
    148:149:void processRequest(java.lang.String,pro.gravit.launcher.request.Request,java.util.function.Consumer,javafx.event.EventHandler) -> mINESoUlSRpxCH
    152:153:void processRequest(java.lang.String,pro.gravit.launcher.request.Request,java.util.function.Consumer,java.util.function.Consumer,javafx.event.EventHandler) -> mINESoUlSRpxCH
    156:156:pro.gravit.launcher.client.gui.overlays.AbstractOverlay getCurrentOverlay() -> miNesoULsRPW9z
    160:175:void disable() -> MINeSoulsrppRw
    178:182:void enable() -> miNeSOUlSRPT7R
    185:185:boolean isEnabled() -> miNEsOULSrPj2c
    void reset() -> mINESoUlSRpxCH
    191:191:javafx.scene.Scene getScene() -> MINESOulsRp2ne
    195:218:void sceneBaseInit() -> mInESouLsRPFIp
    221:236:javafx.scene.control.ContextMenu makeLangContextMenu() -> mINESoulsRpOiZ
    240:258:void userExit() -> MinesouLSrpSNn
    261:262:void switchScene(pro.gravit.launcher.client.gui.scenes.AbstractScene) -> mINESoUlSRpxCH
    265:265:javafx.scene.Node getHeader() -> MInEsOUlSRP6s8
    269:270:void runLater(double,javafx.event.EventHandler) -> MINeSoulsrppRw
    257:257:void lambda$userExit$21(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    243:255:void lambda$userExit$20(pro.gravit.launcher.events.request.ExitRequestEvent) -> mINESoUlSRpxCH
    244:254:void lambda$userExit$19() -> MinESoULsrPRTF
    227:233:void lambda$makeLangContextMenu$18(pro.gravit.launcher.client.gui.config.RuntimeSettings$LAUNCHER_LOCALE,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    211:211:void lambda$sceneBaseInit$17(javafx.scene.control.ButtonBase) -> mINESoUlSRpxCH
    212:213:void lambda$sceneBaseInit$16(javafx.event.ActionEvent) -> MINeSoulsrppRw
    215:215:void lambda$sceneBaseInit$15() -> mInesOULSrpYIR
    204:210:void lambda$sceneBaseInit$14(javafx.scene.control.ButtonBase) -> MINeSoulsrppRw
    206:209:void lambda$sceneBaseInit$13(javafx.scene.control.ButtonBase,javafx.scene.input.MouseEvent) -> mINESoUlSRpxCH
    201:201:void lambda$sceneBaseInit$12(javafx.scene.control.ButtonBase) -> miNeSOUlSRPT7R
    201:201:void lambda$sceneBaseInit$11(javafx.event.ActionEvent) -> miNeSOUlSRPT7R
    200:200:void lambda$sceneBaseInit$10(javafx.scene.control.ButtonBase) -> MINeSOUlsRPerH
    200:200:void lambda$sceneBaseInit$9(javafx.event.ActionEvent) -> MINeSOUlsRPerH
    198:198:void lambda$sceneBaseInit$8(javafx.scene.control.ButtonBase) -> MinESoulSRp3Ah
    198:198:void lambda$sceneBaseInit$7(javafx.event.ActionEvent) -> MinESoulSRp3Ah
    197:197:void lambda$sceneBaseInit$6(javafx.scene.control.ButtonBase) -> mINeSoULsRpkjm
    197:197:void lambda$sceneBaseInit$5(javafx.event.ActionEvent) -> mINeSoULsRpkjm
    128:144:void lambda$swapOverlay$4(javafx.scene.layout.Pane,javafx.scene.layout.Pane,javafx.event.EventHandler,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    139:143:void lambda$swapOverlay$3(javafx.event.EventHandler,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    122:122:void lambda$swapOverlay$2(javafx.event.EventHandler) -> mINESoUlSRpxCH
    104:114:void lambda$hideOverlay$1(javafx.scene.layout.Pane,javafx.event.EventHandler,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    98:98:void lambda$hideOverlay$0(javafx.event.EventHandler) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.console.ConsoleScene -> pro.gravit.launcher.mInesoulSrPnKi:
# {"fileName":"ConsoleScene.java","id":"sourceFile"}
    long MAX_LENGTH -> miNEsOULSrPj2c
    int REMOVE_LENGTH -> MINESOulsRp2ne
    javafx.scene.control.TextField commandLine -> MinesouLSrpSNn
    javafx.scene.control.TextArea output -> MInEsOUlSRP6s8
    22:23:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    26:27:java.lang.String getLauncherInfo() -> mInESouLsRPFIp
    31:32:java.lang.String getMiniLauncherInfo() -> mINESoulsRpOiZ
    37:42:void doInit() -> mINeSoULsRpkjm
    46:49:void reset() -> mINESoUlSRpxCH
    53:53:java.lang.String getName() -> MinESoulSRp3Ah
    57:66:void send(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    69:74:void append(java.lang.String) -> mINESoUlSRpxCH
    70:73:void lambda$append$0(java.lang.String) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.debug.DebugScene -> pro.gravit.launcher.mINesoULSRPXaB:
# {"fileName":"DebugScene.java","id":"sourceFile"}
    long MAX_LENGTH -> MinesouLSrpSNn
    int REMOVE_LENGTH -> MInEsOUlSRP6s8
    java.lang.Process currentProcess -> miNEsOULSrPj2c
    java.lang.Thread writeParametersThread -> MINESOulsRp2ne
    java.lang.Thread readThread -> mInESouLsRPFIp
    javafx.scene.control.TextArea output -> mINESoulsRpOiZ
    java.lang.Object syncObject -> MinESoULsrPRTF
    java.lang.String appendString -> mInesOULSrpYIR
    boolean isOutputRunned -> MInesOUlsrPzrO
    33:134:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    39:96:void doInit() -> mINeSoULsRpkjm
    101:102:void reset() -> mINESoUlSRpxCH
    105:131:void onProcess(java.lang.Process) -> mINESoUlSRpxCH
    138:162:void append(java.lang.String) -> mINESoUlSRpxCH
    166:173:void errorHandle(java.lang.Throwable) -> mINESoUlSRpxCH
    177:177:java.lang.String getName() -> MinESoulSRp3Ah
    181:183:void onProcessExit(int) -> mINESoUlSRpxCH
    191:227:java.lang.String hastebin(java.lang.String) -> MINeSoulsrppRw
    152:160:void lambda$append$9() -> mInESouLsRPFIp
    115:128:void lambda$onProcess$8(java.lang.Process) -> MINeSoulsrppRw
    73:95:void lambda$doInit$7(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    52:52:void lambda$doInit$6(javafx.scene.control.ButtonBase) -> mINESoUlSRpxCH
    53:71:void lambda$doInit$5(javafx.event.ActionEvent) -> MINeSoulsrppRw
    46:46:void lambda$doInit$4(javafx.scene.control.ButtonBase) -> MINeSoulsrppRw
    47:51:void lambda$doInit$3(javafx.event.ActionEvent) -> miNeSOUlSRPT7R
    45:45:void lambda$doInit$2(javafx.scene.control.Label) -> mINESoUlSRpxCH
    40:40:void lambda$doInit$1(javafx.scene.control.ButtonBase) -> miNeSOUlSRPT7R
    41:43:void lambda$doInit$0(javafx.event.ActionEvent) -> MINeSOUlsRPerH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.debug.DebugScene$HasteResponse -> pro.gravit.launcher.miNesOuLSRPzt9:
# {"fileName":"DebugScene.java","id":"sourceFile"}
    java.lang.String key -> key
    185:185:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.LoginAuthButtonComponent -> pro.gravit.launcher.mineSOulSRp663:
# {"fileName":"LoginAuthButtonComponent.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    javafx.scene.layout.Pane layout -> MINeSoulsrppRw
    javafx.scene.layout.Pane authUnActive -> miNeSOUlSRPT7R
    javafx.scene.layout.Pane authActive -> MINeSOUlsRPerH
    javafx.scene.shape.SVGPath authBorder -> MinESoulSRp3Ah
    javafx.scene.control.Button button -> mINeSoULsRpkjm
    javafx.scene.Node authsvg -> MINESOULsRPuTS
    boolean isDisabled -> MInEsOulsRPpPn
    23:38:void <init>(javafx.scene.layout.Pane,pro.gravit.launcher.client.gui.JavaFXApplication,javafx.event.EventHandler) -> <init>
    41:43:void setActive(boolean) -> mINESoUlSRpxCH
    46:48:void disable() -> mINESoUlSRpxCH
    51:53:void enable() -> MINeSoulsrppRw
    56:56:javafx.scene.layout.Pane getLayout() -> miNeSOUlSRPT7R
    60:60:java.lang.String getText() -> MINeSOUlsRPerH
    64:65:void setText(java.lang.String) -> mINESoUlSRpxCH
    68:71:void setError() -> MinESoulSRp3Ah
    74:77:void unsetError() -> mINeSoULsRpkjm
    35:36:void lambda$new$1(javafx.scene.input.MouseEvent) -> mINESoUlSRpxCH
    32:33:void lambda$new$0(javafx.scene.input.MouseEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.LoginScene -> pro.gravit.launcher.mINEsoULsrPKl6:
# {"fileName":"LoginScene.java","id":"sourceFile"}
    java.util.Map authMethods -> miNEsOULSrPj2c
    boolean isLoginStarted -> MINESOulsRp2ne
    java.util.List auth -> MinesouLSrpSNn
    javafx.scene.control.CheckBox savePasswordCheckBox -> MInEsOUlSRP6s8
    javafx.scene.control.CheckBox autoenter -> mInESouLsRPFIp
    pro.gravit.launcher.client.gui.scenes.login.LoginAuthButtonComponent authButton -> mINESoulsRpOiZ
    pro.gravit.launcher.client.gui.service.AuthService authService -> MinESoULsrPRTF
    javafx.scene.layout.VBox authList -> mInesOULSrpYIR
    javafx.scene.control.ToggleGroup authToggleGroup -> MInesOUlsrPzrO
    pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability authAvailability -> mInesOUlSRPRMv
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$AuthFlow authFlow -> MineSOulsrpVkM
    boolean processingEnabled -> mInEsOULsRPDrR
    50:186:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    73:99:void doInit() -> mINeSoULsRpkjm
    102:131:void launcherRequest() -> MinESoULsrPRTF
    133:156:void getAvailabilityAuth() -> mInesOULSrpYIR
    159:162:void postInit() -> MInesOUlsrPzrO
    165:169:void changeAuthAvailability(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability) -> mINESoUlSRpxCH
    172:184:void addAuthAvailability(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability) -> MINeSoulsrppRw
    189:235:void processing(pro.gravit.launcher.request.Request,java.lang.String,java.util.function.Consumer,java.util.function.Consumer) -> mINESoUlSRpxCH
    240:256:void errorHandle(java.lang.Throwable) -> mINESoUlSRpxCH
    260:261:void reset() -> mINESoUlSRpxCH
    265:265:java.lang.String getName() -> MinESoulSRp3Ah
    269:293:boolean tryOAuthLogin() -> mInesOUlSRPRMv
    297:311:void loginWithOAuth(pro.gravit.launcher.request.auth.password.AuthOAuthPassword,pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability) -> mINESoUlSRpxCH
    315:315:pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod detailsToMethod(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> mINESoUlSRpxCH
    319:326:void loginWithGui() -> MineSOulsrpVkM
    329:335:boolean checkSavePasswordAvailable(pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> mINESoUlSRpxCH
    339:395:void onSuccessLogin(pro.gravit.launcher.client.gui.scenes.login.LoginScene$SuccessAuth) -> mINESoUlSRpxCH
    398:420:void onGetProfiles() -> mInESouLsRPFIp
    424:429:void clearPassword() -> mINESoulsRpOiZ
    399:419:void lambda$onGetProfiles$31(pro.gravit.launcher.events.request.ProfilesRequestEvent) -> mINESoUlSRpxCH
    405:418:void lambda$onGetProfiles$30() -> mInEsOULsRPDrR
    365:394:void lambda$onSuccessLogin$29(pro.gravit.launcher.events.request.AuthRequestEvent) -> mINESoUlSRpxCH
    386:389:void lambda$onSuccessLogin$28(java.util.Optional,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    371:381:void lambda$onSuccessLogin$27(pro.gravit.launcher.events.request.AuthRequestEvent,javafx.scene.image.ImageView) -> mINESoUlSRpxCH
    367:367:void lambda$onSuccessLogin$26(javafx.scene.control.Label) -> mINESoUlSRpxCH
    322:325:void lambda$loginWithGui$25(pro.gravit.launcher.client.gui.scenes.login.LoginScene$SuccessAuth) -> MINeSoulsrppRw
    323:324:void lambda$loginWithGui$24(pro.gravit.launcher.client.gui.scenes.login.LoginScene$SuccessAuth) -> miNeSOUlSRPT7R
    303:310:void lambda$loginWithOAuth$23(java.lang.String) -> mINESoUlSRpxCH
    299:302:void lambda$loginWithOAuth$22(pro.gravit.launcher.events.request.AuthRequestEvent) -> MINeSoulsrppRw
    300:301:void lambda$loginWithOAuth$21(pro.gravit.launcher.events.request.AuthRequestEvent) -> miNeSOUlSRPT7R
    281:284:void lambda$tryOAuthLogin$20(java.lang.String) -> MINeSoulsrppRw
    273:280:void lambda$tryOAuthLogin$19(pro.gravit.launcher.events.request.RefreshTokenRequestEvent) -> mINESoUlSRpxCH
    246:253:void lambda$errorHandle$18(javafx.scene.layout.Pane,double,double) -> mINESoUlSRpxCH
    227:229:java.lang.Void lambda$processing$17(java.util.function.Consumer,java.lang.Runnable,java.lang.Throwable) -> mINESoUlSRpxCH
    224:226:void lambda$processing$16(java.util.function.Consumer,java.lang.Runnable,pro.gravit.launcher.request.WebSocketEvent) -> mINESoUlSRpxCH
    210:221:void lambda$processing$15(javafx.scene.layout.Pane,double,double,java.lang.String) -> mINESoUlSRpxCH
    212:218:void lambda$processing$14(javafx.scene.layout.Pane,double,double,java.lang.String) -> MINeSoulsrppRw
    207:208:void lambda$processing$13(java.lang.String) -> miNeSOUlSRPT7R
    197:202:void lambda$processing$12(javafx.scene.layout.Pane,pro.gravit.launcher.client.gui.helper.LookupHelper$Point2D) -> mINESoUlSRpxCH
    180:181:void lambda$addAuthAvailability$11(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    134:134:void lambda$getAvailabilityAuth$10(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent) -> mINESoUlSRpxCH
    135:155:void lambda$getAvailabilityAuth$9(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent) -> MINeSoulsrppRw
    153:154:void lambda$getAvailabilityAuth$8(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    130:130:void lambda$launcherRequest$7(javafx.event.ActionEvent) -> MINeSoulsrppRw
    104:130:void lambda$launcherRequest$6(pro.gravit.launcher.events.request.LauncherRequestEvent) -> mINESoUlSRpxCH
    117:118:void lambda$launcherRequest$5(java.lang.Throwable) -> MINeSoulsrppRw
    89:89:void lambda$doInit$4(java.lang.Class,pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod) -> mINESoUlSRpxCH
    86:86:void lambda$doInit$3(javafx.scene.input.MouseEvent) -> mINESoUlSRpxCH
    83:83:void lambda$doInit$2(javafx.scene.input.MouseEvent) -> MINeSoulsrppRw
    80:80:void lambda$doInit$1(javafx.event.ActionEvent) -> miNeSOUlSRPT7R
    73:73:void lambda$doInit$0(javafx.event.ActionEvent) -> MINeSOUlsRPerH
    49:49:pro.gravit.launcher.client.gui.service.AuthService access$100(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> mINESoUlSRpxCH
    49:49:pro.gravit.launcher.client.gui.JavaFXApplication access$200(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> MINeSoulsrppRw
    49:49:pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod access$300(pro.gravit.launcher.client.gui.scenes.login.LoginScene,pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> mINESoUlSRpxCH
    49:49:pro.gravit.launcher.client.gui.JavaFXApplication access$400(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> miNeSOUlSRPT7R
    49:49:pro.gravit.launcher.client.gui.JavaFXApplication access$500(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> MINeSOUlsRPerH
    49:49:pro.gravit.launcher.client.gui.JavaFXApplication access$600(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> MinESoulSRp3Ah
    49:49:pro.gravit.launcher.client.gui.impl.ContextHelper access$700(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> mINeSoULsRpkjm
    49:49:pro.gravit.launcher.client.gui.impl.ContextHelper access$800(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> MINESOULsRPuTS
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.LoginScene$AuthFlow -> pro.gravit.launcher.MINeSoULSRP49q:
# {"fileName":"LoginScene.java","id":"sourceFile"}
    java.util.List authFlow -> MINeSoulsrppRw
    pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability authAvailability -> miNeSOUlSRPT7R
    pro.gravit.launcher.client.gui.scenes.login.LoginScene this$0 -> mINESoUlSRpxCH
    465:466:void <init>(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> <init>
    470:472:void init(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability) -> mINESoUlSRpxCH
    475:477:void reset() -> mINESoUlSRpxCH
    480:519:java.util.concurrent.CompletableFuture tryLogin(java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> mINESoUlSRpxCH
    523:536:void start(java.util.concurrent.CompletableFuture,java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> mINESoUlSRpxCH
    539:541:java.util.concurrent.CompletableFuture start() -> MINeSoulsrppRw
    546:581:void login(java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface,pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability,java.util.concurrent.CompletableFuture) -> mINESoUlSRpxCH
    552:580:void lambda$login$12(java.util.concurrent.CompletableFuture,java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface,java.lang.String) -> mINESoUlSRpxCH
    574:574:void lambda$login$11(java.util.concurrent.CompletableFuture,java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> MINeSoulsrppRw
    565:565:void lambda$login$10(java.util.concurrent.CompletableFuture,java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> miNeSOUlSRPT7R
    550:551:void lambda$login$9(java.util.concurrent.CompletableFuture,java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface,pro.gravit.launcher.events.request.AuthRequestEvent) -> mINESoUlSRpxCH
    527:534:java.lang.Void lambda$start$8(java.lang.Throwable) -> mINESoUlSRpxCH
    525:526:void lambda$start$7(java.util.concurrent.CompletableFuture,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult) -> mINESoUlSRpxCH
    517:517:java.util.concurrent.CompletionStage lambda$tryLogin$6(pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult) -> mINESoUlSRpxCH
    517:517:pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult lambda$tryLogin$5(pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult,java.lang.Void) -> mINESoUlSRpxCH
    491:491:java.util.concurrent.CompletionStage lambda$tryLogin$4(pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod,pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult) -> mINESoUlSRpxCH
    493:514:pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult lambda$tryLogin$3(pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult) -> mINESoUlSRpxCH
    490:490:java.util.concurrent.CompletionStage lambda$tryLogin$2(pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod,pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult) -> MINeSoulsrppRw
    490:490:pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult lambda$tryLogin$1(pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult,java.lang.Void) -> MINeSoulsrppRw
    488:488:java.util.concurrent.CompletionStage lambda$tryLogin$0(pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod,pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails,java.lang.Void) -> mINESoUlSRpxCH
    465:465:java.util.concurrent.CompletableFuture access$000(pro.gravit.launcher.client.gui.scenes.login.LoginScene$AuthFlow) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginAndPasswordResult -> pro.gravit.launcher.MinEsoULSRpDvT:
# {"fileName":"LoginScene.java","id":"sourceFile"}
    java.lang.String login -> mINESoUlSRpxCH
    pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface password -> MINeSoulsrppRw
    435:438:void <init>(java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor -> pro.gravit.launcher.minesOUlSRpQUy:
# {"fileName":"LoginScene.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.login.LoginScene this$0 -> mINESoUlSRpxCH
    441:441:void <init>(pro.gravit.launcher.client.gui.scenes.login.LoginScene) -> <init>
    443:444:void showOverlay(pro.gravit.launcher.client.gui.overlays.AbstractOverlay,javafx.event.EventHandler) -> mINESoUlSRpxCH
    447:448:void hideOverlay(double,javafx.event.EventHandler) -> mINESoUlSRpxCH
    451:451:pro.gravit.launcher.client.gui.service.AuthService getAuthService() -> mINESoUlSRpxCH
    455:455:pro.gravit.launcher.client.gui.JavaFXApplication getApplication() -> MINeSoulsrppRw
    459:460:void errorHandle(java.lang.Throwable) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.LoginScene$SuccessAuth -> pro.gravit.launcher.MiNeSOulsrpE0w:
# {"fileName":"LoginScene.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.AuthRequestEvent requestEvent -> mINESoUlSRpxCH
    java.lang.String recentLogin -> MINeSoulsrppRw
    pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface recentPassword -> miNeSOUlSRPT7R
    604:608:void <init>(pro.gravit.launcher.events.request.AuthRequestEvent,java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod -> pro.gravit.launcher.mINESOulSRpnH6:
# {"fileName":"AbstractAuthMethod.java","id":"sourceFile"}
    8:8:void <init>() -> <init>
    void prepare() -> mINESoUlSRpxCH
    void reset() -> MINeSoulsrppRw
    java.util.concurrent.CompletableFuture show(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> mINESoUlSRpxCH
    java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> MINeSoulsrppRw
    java.util.concurrent.CompletableFuture hide() -> miNeSOUlSRPT7R
    boolean isSavable() -> MINeSOUlsRPerH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod$UserAuthCanceledException -> pro.gravit.launcher.MiNESoULsrpauG:
# {"fileName":"AbstractAuthMethod.java","id":"sourceFile"}
    22:23:void <init>() -> <init>
    26:27:void <init>(java.lang.String) -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.LoginAndPasswordAuthMethod -> pro.gravit.launcher.MineSouLSrpjyC:
# {"fileName":"LoginAndPasswordAuthMethod.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.login.methods.LoginAndPasswordAuthMethod$LoginAndPasswordOverlay overlay -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.JavaFXApplication application -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor accessor -> miNeSOUlSRPT7R
    21:26:void <init>(pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor) -> <init>
    30:30:void prepare() -> mINESoUlSRpxCH
    34:35:void reset() -> MINeSoulsrppRw
    39:45:java.util.concurrent.CompletableFuture show(pro.gravit.launcher.request.auth.details.AuthPasswordDetails) -> mINESoUlSRpxCH
    50:58:java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.request.auth.details.AuthPasswordDetails) -> MINeSoulsrppRw
    63:65:java.util.concurrent.CompletableFuture hide() -> miNeSOUlSRPT7R
    70:70:boolean isSavable() -> MINeSOUlsRPerH
    16:16:java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> MINeSoulsrppRw
    16:16:java.util.concurrent.CompletableFuture show(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> mINESoUlSRpxCH
    64:64:void lambda$hide$1(java.util.concurrent.CompletableFuture,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    41:41:void lambda$show$0(java.util.concurrent.CompletableFuture,javafx.event.ActionEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.LoginAndPasswordAuthMethod$LoginAndPasswordOverlay -> pro.gravit.launcher.MiNesOulsrp8DO:
# {"fileName":"LoginAndPasswordAuthMethod.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod$UserAuthCanceledException USER_AUTH_CANCELED_EXCEPTION -> MInEsOulsRPpPn
    javafx.scene.control.TextField login -> MineSoUlsRPEJI
    javafx.scene.control.TextField password -> MInEsouLsrPIPY
    pro.gravit.launcher.client.gui.scenes.login.LoginAuthButtonComponent authButton -> miNesoULsRPW9z
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor accessor -> miNEsOULSrPj2c
    java.util.concurrent.CompletableFuture future -> MINESOulsRp2ne
    82:83:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    87:87:java.lang.String getName() -> MinESoulSRp3Ah
    92:125:void doInit() -> mINeSoULsRpkjm
    130:135:void reset() -> mINESoUlSRpxCH
    112:112:void lambda$doInit$4(javafx.scene.input.MouseEvent) -> mINESoUlSRpxCH
    109:109:void lambda$doInit$3(javafx.scene.input.MouseEvent) -> MINeSoulsrppRw
    104:105:void lambda$doInit$2(javafx.beans.Observable) -> mINESoUlSRpxCH
    100:102:void lambda$doInit$1(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    95:98:void lambda$doInit$0(javafx.event.ActionEvent) -> MINeSoulsrppRw
    73:73:pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor access$002(pro.gravit.launcher.client.gui.scenes.login.methods.LoginAndPasswordAuthMethod$LoginAndPasswordOverlay,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor) -> mINESoUlSRpxCH
    73:73:java.util.concurrent.CompletableFuture access$102(pro.gravit.launcher.client.gui.scenes.login.methods.LoginAndPasswordAuthMethod$LoginAndPasswordOverlay,java.util.concurrent.CompletableFuture) -> mINESoUlSRpxCH
    73:73:javafx.scene.control.TextField access$200(pro.gravit.launcher.client.gui.scenes.login.methods.LoginAndPasswordAuthMethod$LoginAndPasswordOverlay) -> mINESoUlSRpxCH
    73:73:javafx.scene.control.TextField access$300(pro.gravit.launcher.client.gui.scenes.login.methods.LoginAndPasswordAuthMethod$LoginAndPasswordOverlay) -> MINeSoulsrppRw
    73:73:java.util.concurrent.CompletableFuture access$100(pro.gravit.launcher.client.gui.scenes.login.methods.LoginAndPasswordAuthMethod$LoginAndPasswordOverlay) -> miNeSOUlSRPT7R
    74:74:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.LoginOnlyAuthMethod -> pro.gravit.launcher.mInesOULsrPOsT:
# {"fileName":"LoginOnlyAuthMethod.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.login.methods.LoginOnlyAuthMethod$LoginOnlyOverlay overlay -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.JavaFXApplication application -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor accessor -> miNeSOUlSRPT7R
    22:27:void <init>(pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor) -> <init>
    31:31:void prepare() -> mINESoUlSRpxCH
    35:36:void reset() -> MINeSoulsrppRw
    40:46:java.util.concurrent.CompletableFuture show(pro.gravit.launcher.request.auth.details.AuthLoginOnlyDetails) -> mINESoUlSRpxCH
    51:56:java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.request.auth.details.AuthLoginOnlyDetails) -> MINeSoulsrppRw
    61:63:java.util.concurrent.CompletableFuture hide() -> miNeSOUlSRPT7R
    68:68:boolean isSavable() -> MINeSOUlsRPerH
    17:17:java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> MINeSoulsrppRw
    17:17:java.util.concurrent.CompletableFuture show(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> mINESoUlSRpxCH
    62:62:void lambda$hide$1(java.util.concurrent.CompletableFuture,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    42:42:void lambda$show$0(java.util.concurrent.CompletableFuture,javafx.event.ActionEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.LoginOnlyAuthMethod$LoginOnlyOverlay -> pro.gravit.launcher.mINEsoUlSRPjn0:
# {"fileName":"LoginOnlyAuthMethod.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod$UserAuthCanceledException USER_AUTH_CANCELED_EXCEPTION -> MInEsOulsRPpPn
    javafx.scene.control.TextField login -> MineSoUlsRPEJI
    pro.gravit.launcher.client.gui.scenes.login.LoginAuthButtonComponent authButton -> MInEsouLsrPIPY
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor accessor -> miNesoULsRPW9z
    java.util.concurrent.CompletableFuture future -> miNEsOULSrPj2c
    79:80:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    84:84:java.lang.String getName() -> MinESoulSRp3Ah
    89:114:void doInit() -> mINeSoULsRpkjm
    119:120:void reset() -> mINESoUlSRpxCH
    113:113:void lambda$doInit$4(javafx.scene.input.MouseEvent) -> mINESoUlSRpxCH
    110:110:void lambda$doInit$3(javafx.scene.input.MouseEvent) -> MINeSoulsrppRw
    99:100:void lambda$doInit$2(javafx.beans.Observable) -> mINESoUlSRpxCH
    95:97:void lambda$doInit$1(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    91:93:void lambda$doInit$0(javafx.event.ActionEvent) -> MINeSoulsrppRw
    71:71:pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor access$002(pro.gravit.launcher.client.gui.scenes.login.methods.LoginOnlyAuthMethod$LoginOnlyOverlay,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor) -> mINESoUlSRpxCH
    71:71:java.util.concurrent.CompletableFuture access$102(pro.gravit.launcher.client.gui.scenes.login.methods.LoginOnlyAuthMethod$LoginOnlyOverlay,java.util.concurrent.CompletableFuture) -> mINESoUlSRpxCH
    71:71:javafx.scene.control.TextField access$200(pro.gravit.launcher.client.gui.scenes.login.methods.LoginOnlyAuthMethod$LoginOnlyOverlay) -> mINESoUlSRpxCH
    71:71:java.util.concurrent.CompletableFuture access$100(pro.gravit.launcher.client.gui.scenes.login.methods.LoginOnlyAuthMethod$LoginOnlyOverlay) -> MINeSoulsrppRw
    72:72:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.TotpAuthMethod -> pro.gravit.launcher.MiNesOUlsrPG1K:
# {"fileName":"TotpAuthMethod.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.login.methods.TotpAuthMethod$TotpOverlay overlay -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.JavaFXApplication application -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor accessor -> miNeSOUlSRPT7R
    21:26:void <init>(pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor) -> <init>
    31:31:void prepare() -> mINESoUlSRpxCH
    36:36:void reset() -> MINeSoulsrppRw
    40:49:java.util.concurrent.CompletableFuture show(pro.gravit.launcher.request.auth.details.AuthTotpDetails) -> mINESoUlSRpxCH
    54:55:java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.request.auth.details.AuthTotpDetails) -> MINeSoulsrppRw
    60:62:java.util.concurrent.CompletableFuture hide() -> miNeSOUlSRPT7R
    67:67:boolean isSavable() -> MINeSOUlsRPerH
    16:16:java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> MINeSoulsrppRw
    16:16:java.util.concurrent.CompletableFuture show(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> mINESoUlSRpxCH
    61:61:void lambda$hide$1(java.util.concurrent.CompletableFuture,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    43:45:void lambda$show$0(java.util.concurrent.CompletableFuture,javafx.event.ActionEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.TotpAuthMethod$TotpOverlay -> pro.gravit.launcher.mInESOulSRpiaQ:
# {"fileName":"TotpAuthMethod.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.login.methods.AbstractAuthMethod$UserAuthCanceledException USER_AUTH_CANCELED_EXCEPTION -> MInEsOulsRPpPn
    javafx.scene.control.TextField[] textFields -> MineSoUlsRPEJI
    java.util.concurrent.CompletableFuture future -> MInEsouLsrPIPY
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor accessor -> miNesoULsRPW9z
    77:78:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    82:82:java.lang.String getName() -> MinESoulSRp3Ah
    87:111:void doInit() -> mINeSoULsRpkjm
    114:115:void requestFocus() -> MINeSOUlsRPerH
    118:122:java.lang.String getCode() -> miNesoULsRPW9z
    127:130:void reset() -> mINESoUlSRpxCH
    105:108:void lambda$doInit$2(javafx.beans.Observable) -> mINESoUlSRpxCH
    99:102:void lambda$doInit$1(javafx.scene.control.TextField,int,javafx.beans.Observable) -> mINESoUlSRpxCH
    88:90:void lambda$doInit$0(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    70:70:pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor access$002(pro.gravit.launcher.client.gui.scenes.login.methods.TotpAuthMethod$TotpOverlay,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor) -> mINESoUlSRpxCH
    70:70:java.util.concurrent.CompletableFuture access$102(pro.gravit.launcher.client.gui.scenes.login.methods.TotpAuthMethod$TotpOverlay,java.util.concurrent.CompletableFuture) -> mINESoUlSRpxCH
    70:70:java.util.concurrent.CompletableFuture access$100(pro.gravit.launcher.client.gui.scenes.login.methods.TotpAuthMethod$TotpOverlay) -> mINESoUlSRpxCH
    71:71:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.WebAuthMethod -> pro.gravit.launcher.mInesOUlSRPs5R:
# {"fileName":"WebAuthMethod.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.login.methods.WebAuthMethod$WebAuthOverlay overlay -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.JavaFXApplication application -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor accessor -> miNeSOUlSRPT7R
    24:29:void <init>(pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor) -> <init>
    34:34:void prepare() -> mINESoUlSRpxCH
    38:39:void reset() -> MINeSoulsrppRw
    43:49:java.util.concurrent.CompletableFuture show(pro.gravit.launcher.request.auth.details.AuthWebViewDetails) -> mINESoUlSRpxCH
    54:64:java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.request.auth.details.AuthWebViewDetails) -> MINeSoulsrppRw
    69:73:java.util.concurrent.CompletableFuture hide() -> miNeSOUlSRPT7R
    78:78:boolean isSavable() -> MINeSOUlsRPerH
    19:19:java.util.concurrent.CompletableFuture auth(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> MINeSoulsrppRw
    19:19:java.util.concurrent.CompletableFuture show(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails) -> mINESoUlSRpxCH
    71:72:void lambda$hide$2(java.util.concurrent.CompletableFuture,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    56:63:void lambda$auth$1(java.lang.String) -> mINESoUlSRpxCH
    45:45:void lambda$show$0(java.util.concurrent.CompletableFuture,javafx.event.ActionEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.login.methods.WebAuthMethod$WebAuthOverlay -> pro.gravit.launcher.mINeSOuLsrPWka:
# {"fileName":"WebAuthMethod.java","id":"sourceFile"}
    javafx.scene.web.WebView webView -> MInEsOulsRPpPn
    pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor accessor -> MineSoUlsRPEJI
    java.util.concurrent.CompletableFuture future -> MInEsouLsrPIPY
    87:88:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    92:92:java.lang.String getName() -> MinESoulSRp3Ah
    97:106:void doInit() -> mINeSoULsRpkjm
    109:126:void follow(java.lang.String,java.lang.String,java.util.function.Consumer) -> mINESoUlSRpxCH
    129:129:javafx.scene.web.WebView getWebView() -> MINeSOUlsRPerH
    135:135:void reset() -> mINESoUlSRpxCH
    114:124:void lambda$follow$1(java.lang.String,java.util.function.Consumer,javafx.beans.value.ObservableValue,java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    101:105:void lambda$doInit$0(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    81:81:pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor access$002(pro.gravit.launcher.client.gui.scenes.login.methods.WebAuthMethod$WebAuthOverlay,pro.gravit.launcher.client.gui.scenes.login.LoginScene$LoginSceneAccessor) -> mINESoUlSRpxCH
    81:81:java.util.concurrent.CompletableFuture access$102(pro.gravit.launcher.client.gui.scenes.login.methods.WebAuthMethod$WebAuthOverlay,java.util.concurrent.CompletableFuture) -> mINESoUlSRpxCH
    81:81:java.util.concurrent.CompletableFuture access$100(pro.gravit.launcher.client.gui.scenes.login.methods.WebAuthMethod$WebAuthOverlay) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.options.OptionsScene -> pro.gravit.launcher.mIneSOulsrPROy:
# {"fileName":"OptionsScene.java","id":"sourceFile"}
    javafx.scene.layout.Pane componentList -> miNEsOULSrPj2c
    pro.gravit.launcher.profiles.optional.OptionalView optionalView -> MINESOulsRp2ne
    java.util.Map watchers -> MinesouLSrpSNn
    39:82:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    44:45:void doInit() -> mINeSoULsRpkjm
    49:75:void reset() -> mINESoUlSRpxCH
    79:79:java.lang.String getName() -> MinESoulSRp3Ah
    85:91:void callWatcher(pro.gravit.launcher.profiles.optional.OptionalFile,java.lang.Boolean) -> mINESoUlSRpxCH
    94:109:void addProfileOptionals(pro.gravit.launcher.profiles.optional.OptionalView) -> mINESoUlSRpxCH
    112:127:java.util.function.Consumer add(java.lang.String,java.lang.String,boolean,int,java.util.function.Consumer) -> mINESoUlSRpxCH
    131:154:void saveAll() -> mInESouLsRPFIp
    157:196:void loadAll() -> mINESoulsRpOiZ
    143:148:void lambda$saveAll$6(pro.gravit.launcher.profiles.optional.OptionalView,pro.gravit.launcher.client.gui.scenes.options.OptionsScene$OptionalListEntry,pro.gravit.launcher.profiles.optional.OptionalFile) -> mINESoUlSRpxCH
    121:121:void lambda$add$5(java.util.function.Consumer,javafx.scene.control.CheckBox,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    102:106:void lambda$addProfileOptionals$4(pro.gravit.launcher.profiles.optional.OptionalFile,java.lang.Boolean) -> MINeSoulsrppRw
    68:68:void lambda$reset$3(javafx.scene.control.Button) -> mINESoUlSRpxCH
    70:74:void lambda$reset$2(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    63:66:void lambda$reset$1(pro.gravit.launcher.profiles.ClientProfile,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    56:61:void lambda$reset$0(pro.gravit.launcher.profiles.ClientProfile,javafx.event.ActionEvent) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.options.OptionsScene$1 -> pro.gravit.launcher.minesoULsRpT38:
# {"fileName":"OptionsScene.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.options.OptionsScene this$0 -> mINESoUlSRpxCH
    165:165:void <init>(pro.gravit.launcher.client.gui.scenes.options.OptionsScene) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.options.OptionsScene$OptionalListEntry -> pro.gravit.launcher.MINEsOUlSrprzw:
# {"fileName":"OptionsScene.java","id":"sourceFile"}
    java.util.List enabled -> mINESoUlSRpxCH
    java.lang.String name -> MINeSoulsrppRw
    java.util.UUID profileUUID -> miNeSOUlSRPT7R
    210:211:void <init>() -> <init>
    217:221:boolean equals(java.lang.Object) -> equals
    226:226:int hashCode() -> hashCode
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.options.OptionsScene$OptionalListEntryPair -> pro.gravit.launcher.mInEsoULSrpOzR:
# {"fileName":"OptionsScene.java","id":"sourceFile"}
    java.lang.String name -> mINESoUlSRpxCH
    boolean mark -> MINeSoulsrppRw
    pro.gravit.launcher.profiles.optional.OptionalView$OptionalFileInstallInfo installInfo -> miNeSOUlSRPT7R
    203:207:void <init>(pro.gravit.launcher.profiles.optional.OptionalFile,boolean,pro.gravit.launcher.profiles.optional.OptionalView$OptionalFileInstallInfo) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.serverinfo.ServerInfoScene -> pro.gravit.launcher.MinesOuLsRPYJo:
# {"fileName":"ServerInfoScene.java","id":"sourceFile"}
    javafx.scene.image.ImageView avatar -> miNEsOULSrPj2c
    javafx.scene.image.Image originalAvatarImage -> MINESOulsRp2ne
    pro.gravit.launcher.client.gui.scenes.servermenu.ServerButtonComponent serverButton -> MinesouLSrpSNn
    41:42:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    46:89:void doInit() -> mINeSoULsRpkjm
    93:104:void reset() -> mINESoUlSRpxCH
    108:108:java.lang.String getName() -> MinESoulSRp3Ah
    112:132:void downloadClients(pro.gravit.launcher.profiles.ClientProfile,pro.gravit.utils.helper.JavaHelper$JavaVersion,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    135:180:void doLaunchClient(java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir,java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.profiles.optional.OptionalView,pro.gravit.utils.helper.JavaHelper$JavaVersion,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    183:188:java.lang.String getJavaDirName(java.nio.file.Path) -> mINESoUlSRpxCH
    192:199:void showJavaAlert(pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    202:260:void launchClient() -> mInESouLsRPFIp
    205:205:void lambda$launchClient$21(pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.events.request.SetProfileRequestEvent) -> mINESoUlSRpxCH
    206:259:void lambda$launchClient$20(pro.gravit.launcher.profiles.ClientProfile) -> MINeSoulsrppRw
    207:258:void lambda$launchClient$19(pro.gravit.launcher.profiles.ClientProfile,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    240:249:void lambda$launchClient$18(pro.gravit.utils.helper.JavaHelper$JavaVersion,pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    197:197:void lambda$showJavaAlert$17() -> mINESoulsRpOiZ
    197:197:void lambda$showJavaAlert$16() -> MinESoULsrPRTF
    194:194:void lambda$showJavaAlert$15() -> mInesOULSrpYIR
    194:194:void lambda$showJavaAlert$14() -> MInesOUlsrPzrO
    154:179:void lambda$doLaunchClient$13(pro.gravit.launcher.client.ClientLauncherProcess,pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettings) -> mINESoUlSRpxCH
    176:178:void lambda$doLaunchClient$12(pro.gravit.launcher.client.ClientLauncherProcess) -> mINESoUlSRpxCH
    156:171:void lambda$doLaunchClient$11(pro.gravit.launcher.client.ClientLauncherProcess,pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettings) -> MINeSoulsrppRw
    115:126:void lambda$downloadClients$10(pro.gravit.launcher.profiles.ClientProfile,java.nio.file.Path,pro.gravit.utils.helper.JavaHelper$JavaVersion,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    118:125:void lambda$downloadClients$9(java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir,java.nio.file.Path,pro.gravit.launcher.profiles.ClientProfile,pro.gravit.utils.helper.JavaHelper$JavaVersion,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    123:123:void lambda$downloadClients$8(java.lang.Throwable) -> MINeSoulsrppRw
    102:102:void lambda$reset$7(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    97:97:void lambda$reset$6(javafx.scene.control.Label) -> mINESoUlSRpxCH
    96:96:void lambda$reset$5(pro.gravit.launcher.profiles.ClientProfile,javafx.scene.control.Label) -> mINESoUlSRpxCH
    95:95:void lambda$reset$4(pro.gravit.launcher.profiles.ClientProfile,javafx.scene.control.Label) -> MINeSoulsrppRw
    82:87:void lambda$doInit$3(javafx.event.ActionEvent) -> MINeSoulsrppRw
    71:79:void lambda$doInit$2(javafx.event.ActionEvent) -> miNeSOUlSRPT7R
    63:67:void lambda$doInit$1(javafx.event.ActionEvent) -> MINeSOUlsRPerH
    51:59:void lambda$doInit$0(javafx.scene.image.ImageView) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.servermenu.ServerButtonComponent -> pro.gravit.launcher.MInESoULSRpazp:
# {"fileName":"ServerButtonComponent.java","id":"sourceFile"}
    java.lang.String SERVER_BUTTON_FXML -> MineSoUlsRPEJI
    java.lang.String SERVER_BUTTON_CUSTOM_FXML -> MInEsouLsrPIPY
    pro.gravit.launcher.profiles.ClientProfile profile -> MInEsOulsRPpPn
    javafx.scene.control.Button saveButton -> miNesoULsRPW9z
    javafx.scene.control.Button resetButton -> miNEsOULSrPj2c
    27:29:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication,pro.gravit.launcher.profiles.ClientProfile) -> <init>
    32:37:java.lang.String getFXMLPath(pro.gravit.launcher.client.gui.JavaFXApplication,pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    42:42:java.lang.String getName() -> MinESoulSRp3Ah
    47:81:void doInit() -> mINeSoULsRpkjm
    84:85:void setOnMouseClicked(javafx.event.EventHandler) -> mINESoUlSRpxCH
    88:92:void enableSaveButton(java.lang.String,javafx.event.EventHandler) -> mINESoUlSRpxCH
    95:99:void enableResetButton(java.lang.String,javafx.event.EventHandler) -> MINeSoulsrppRw
    102:110:void addTo(javafx.scene.layout.Pane) -> mINESoUlSRpxCH
    113:121:void addTo(javafx.scene.layout.Pane,int) -> mINESoUlSRpxCH
    126:126:void reset() -> mINESoUlSRpxCH
    131:131:void disable() -> MINeSoulsrppRw
    136:136:void enable() -> miNeSOUlSRPT7R
    72:77:void lambda$doInit$3(java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong,java.lang.Runnable,pro.gravit.launcher.client.gui.service.PingService$PingServerReport) -> mINESoUlSRpxCH
    62:69:void lambda$doInit$2(java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong) -> mINESoUlSRpxCH
    63:68:void lambda$doInit$1(java.util.concurrent.atomic.AtomicLong,java.util.concurrent.atomic.AtomicLong) -> MINeSoulsrppRw
    51:58:void lambda$doInit$0(javafx.scene.image.ImageView) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.servermenu.ServerMenuScene -> pro.gravit.launcher.miNesOuLsRPZI3:
# {"fileName":"ServerMenuScene.java","id":"sourceFile"}
    java.lang.String SERVER_BUTTON_FXML -> miNEsOULSrPj2c
    java.lang.String SERVER_BUTTON_CUSTOM_FXML -> MINESOulsRp2ne
    javafx.scene.image.ImageView avatar -> MinesouLSrpSNn
    java.util.List lastProfiles -> MInEsOUlSRP6s8
    javafx.scene.image.Image originalAvatarImage -> mInESouLsRPFIp
    32:33:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    37:59:void doInit() -> mINeSoULsRpkjm
    67:72:boolean putAvatarToImageView(pro.gravit.launcher.client.gui.JavaFXApplication,java.lang.String,javafx.scene.image.ImageView) -> mINESoUlSRpxCH
    76:76:pro.gravit.launcher.client.gui.scenes.servermenu.ServerButtonComponent getServerButton(pro.gravit.launcher.client.gui.JavaFXApplication,pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    81:134:void reset() -> mINESoUlSRpxCH
    138:138:java.lang.String getName() -> MinESoulSRp3Ah
    142:144:void changeServer(pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    119:132:void lambda$reset$7() -> mInESouLsRPFIp
    126:127:void lambda$reset$6(pro.gravit.launcher.profiles.ClientProfile$ServerProfile,pro.gravit.launcher.client.ServerPinger$Result) -> mINESoUlSRpxCH
    104:117:void lambda$reset$5(javafx.scene.layout.HBox,pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.client.gui.scenes.servermenu.ServerMenuScene$ServerButtonCache) -> mINESoUlSRpxCH
    105:114:void lambda$reset$4(pro.gravit.launcher.profiles.ClientProfile,javafx.scene.input.MouseEvent) -> mINESoUlSRpxCH
    85:85:void lambda$reset$3(javafx.scene.control.Label) -> mINESoUlSRpxCH
    84:84:void lambda$reset$2(javafx.scene.control.Label) -> MINeSoulsrppRw
    54:56:void lambda$doInit$1(javafx.scene.control.ScrollPane,javafx.scene.input.ScrollEvent) -> mINESoUlSRpxCH
    42:50:void lambda$doInit$0(javafx.scene.image.ImageView) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.servermenu.ServerMenuScene$ServerButtonCache -> pro.gravit.launcher.mINEsouLsRPUE6:
# {"fileName":"ServerMenuScene.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.servermenu.ServerButtonComponent serverButton -> mINESoUlSRpxCH
    int position -> MINeSoulsrppRw
    61:61:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.settings.JavaSelectorComponent -> pro.gravit.launcher.mINeSoUlsrP9ju:
# {"fileName":"JavaSelectorComponent.java","id":"sourceFile"}
    javafx.scene.control.ComboBox comboBox -> mINESoUlSRpxCH
    javafx.scene.control.Label javaPath -> MINeSoulsrppRw
    javafx.scene.control.Label javaError -> miNeSOUlSRPT7R
    pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettingsView profileSettings -> MINeSOUlsRPerH
    pro.gravit.launcher.profiles.ClientProfile profile -> MinESoulSRp3Ah
    pro.gravit.launcher.client.gui.service.JavaService javaService -> mINeSoULsRpkjm
    22:32:void <init>(pro.gravit.launcher.client.gui.service.JavaService,javafx.scene.layout.Pane,pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettingsView,pro.gravit.launcher.profiles.ClientProfile) -> <init>
    35:61:void reset() -> mINESoUlSRpxCH
    64:64:java.lang.String getPath() -> MINeSoulsrppRw
    55:60:void lambda$reset$0(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.settings.JavaSelectorComponent$1 -> pro.gravit.launcher.mINeSouLSrPSu9:
# {"fileName":"JavaSelectorComponent.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.settings.JavaSelectorComponent$JavaVersionConverter -> pro.gravit.launcher.mINEsouLsrP3Sw:
# {"fileName":"JavaSelectorComponent.java","id":"sourceFile"}
    pro.gravit.launcher.profiles.ClientProfile profile -> mINESoUlSRpxCH
    70:72:void <init>(pro.gravit.launcher.profiles.ClientProfile) -> <init>
    76:81:java.lang.String toString(pro.gravit.utils.helper.JavaHelper$JavaVersion) -> mINESoUlSRpxCH
    86:86:pro.gravit.utils.helper.JavaHelper$JavaVersion fromString(java.lang.String) -> mINESoUlSRpxCH
    67:67:java.lang.Object fromString(java.lang.String) -> fromString
    67:67:java.lang.String toString(java.lang.Object) -> toString
    67:67:void <init>(pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.client.gui.scenes.settings.JavaSelectorComponent$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.settings.SettingsScene -> pro.gravit.launcher.MiNEsOUlsRPuqV:
# {"fileName":"SettingsScene.java","id":"sourceFile"}
    long MAX_JAVA_MEMORY_X64 -> miNEsOULSrPj2c
    long MAX_JAVA_MEMORY_X32 -> MINESOulsRp2ne
    javafx.scene.layout.Pane componentList -> MinesouLSrpSNn
    javafx.scene.control.Label ramLabel -> MInEsOUlSRP6s8
    javafx.scene.control.Slider ramSlider -> mInESouLsRPFIp
    pro.gravit.launcher.client.gui.config.RuntimeSettings$ProfileSettingsView profileSettings -> mINESoulsRpOiZ
    pro.gravit.launcher.client.gui.scenes.settings.JavaSelectorComponent javaSelector -> MinESoULsrPRTF
    39:40:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    44:140:void doInit() -> mINeSoULsRpkjm
    143:146:long getJavaMaxMemory() -> mINESoulsRpOiZ
    151:180:void reset() -> mINESoUlSRpxCH
    184:184:java.lang.String getName() -> MinESoulSRp3Ah
    188:191:void add(java.lang.String,boolean,java.util.function.Consumer) -> mINESoUlSRpxCH
    194:212:void add(java.lang.String,java.lang.String,boolean,java.util.function.Consumer) -> mINESoUlSRpxCH
    215:216:void updateRamLabel() -> mInESouLsRPFIp
    204:204:void lambda$add$15(java.util.function.Consumer,javafx.scene.control.CheckBox,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    179:179:void lambda$reset$14(java.lang.Boolean) -> mINESoUlSRpxCH
    178:178:void lambda$reset$13(java.lang.Boolean) -> MINeSoulsrppRw
    177:177:void lambda$reset$12(java.lang.Boolean) -> miNeSOUlSRPT7R
    174:175:void lambda$reset$11(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    166:172:void lambda$reset$10(pro.gravit.launcher.profiles.ClientProfile,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    155:157:void lambda$reset$9(javafx.beans.value.ObservableValue,java.lang.Number,java.lang.Number) -> mINESoUlSRpxCH
    131:131:void lambda$doInit$8(javafx.scene.control.ButtonBase) -> mINESoUlSRpxCH
    133:138:void lambda$doInit$7(javafx.event.ActionEvent) -> MINeSoulsrppRw
    117:117:void lambda$doInit$6(javafx.scene.control.ButtonBase) -> MINeSoulsrppRw
    118:119:void lambda$doInit$5(javafx.event.ActionEvent) -> miNeSOUlSRPT7R
    130:130:void lambda$doInit$4() -> MinESoULsrPRTF
    121:129:void lambda$doInit$3() -> mInesOULSrpYIR
    91:116:void lambda$doInit$2(javafx.scene.control.Hyperlink,javafx.event.ActionEvent) -> mINESoUlSRpxCH
    88:89:void lambda$doInit$1(javafx.event.ActionEvent) -> MINeSOUlsRPerH
    47:55:void lambda$doInit$0(javafx.event.ActionEvent) -> MinESoulSRp3Ah
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.settings.SettingsScene$1 -> pro.gravit.launcher.MiNEsOulsRPfoc:
# {"fileName":"SettingsScene.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.settings.SettingsScene this$0 -> mINESoUlSRpxCH
    74:74:void <init>(pro.gravit.launcher.client.gui.scenes.settings.SettingsScene) -> <init>
    77:77:java.lang.String toString(java.lang.Double) -> mINESoUlSRpxCH
    82:82:java.lang.Double fromString(java.lang.String) -> mINESoUlSRpxCH
    74:74:java.lang.Object fromString(java.lang.String) -> fromString
    74:74:java.lang.String toString(java.lang.Object) -> toString
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.update.AssetIndexHelper -> pro.gravit.launcher.MInEsoULsRPskR:
# {"fileName":"AssetIndexHelper.java","id":"sourceFile"}
    14:14:void <init>() -> <init>
    17:19:pro.gravit.launcher.client.gui.scenes.update.AssetIndexHelper$AssetIndex parse(java.nio.file.Path) -> mINESoUlSRpxCH
    23:50:void modifyHashedDir(pro.gravit.launcher.client.gui.scenes.update.AssetIndexHelper$AssetIndex,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.update.AssetIndexHelper$AssetIndex -> pro.gravit.launcher.MInesOulsRPEk5:
# {"fileName":"AssetIndexHelper.java","id":"sourceFile"}
    boolean virtual -> virtual
    java.util.Map objects -> objects
    52:52:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.update.AssetIndexHelper$AssetIndexObject -> pro.gravit.launcher.miNeSoUlsrP04x:
# {"fileName":"AssetIndexHelper.java","id":"sourceFile"}
    java.lang.String hash -> hash
    long size -> size
    58:58:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.update.UpdateScene -> pro.gravit.launcher.MinEsoulsRpw5l:
# {"fileName":"UpdateScene.java","id":"sourceFile"}
    javafx.scene.control.ProgressBar progressBar -> miNEsOULSrPj2c
    javafx.scene.text.Text speed -> MINESOulsRp2ne
    javafx.scene.control.Label volume -> MinesouLSrpSNn
    javafx.scene.control.TextArea logOutput -> MInEsOUlSRP6s8
    javafx.scene.text.Text currentStatus -> mInESouLsRPFIp
    javafx.scene.control.Button reload -> mINESoulsRpOiZ
    javafx.scene.control.Button cancel -> MinESoULsrPRTF
    javafx.scene.text.Text speedtext -> mInesOULSrpYIR
    javafx.scene.text.Text speederr -> MInesOUlsrPzrO
    pro.gravit.launcher.client.gui.scenes.update.VisualDownloader downloader -> mInesOUlSRPRMv
    47:48:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    52:80:void doInit() -> mINeSoULsRpkjm
    83:84:void sendUpdateAssetRequest(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,java.lang.String,java.util.function.Consumer) -> mINESoUlSRpxCH
    87:88:void sendUpdateRequest(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,pro.gravit.launcher.profiles.optional.OptionalView,boolean,java.util.function.Consumer) -> mINESoUlSRpxCH
    91:93:void addLog(java.lang.String) -> mINESoUlSRpxCH
    97:110:void reset() -> mINESoUlSRpxCH
    114:124:void errorHandle(java.lang.Throwable) -> mINESoUlSRpxCH
    128:128:java.lang.String getName() -> MinESoulSRp3Ah
    70:79:void lambda$doInit$3(javafx.event.ActionEvent) -> mINESoUlSRpxCH
    66:66:void lambda$doInit$2(javafx.event.ActionEvent) -> MINeSoulsrppRw
    63:64:void lambda$doInit$1(java.lang.String) -> MINeSoulsrppRw
    63:63:void lambda$doInit$0(java.lang.String) -> miNeSOUlSRPT7R
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.update.VisualDownloader -> pro.gravit.launcher.MInesOULSrpJ6Y:
# {"fileName":"VisualDownloader.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    java.util.concurrent.atomic.AtomicLong totalDownloaded -> MINeSoulsrppRw
    java.util.concurrent.atomic.AtomicLong lastUpdateTime -> miNeSOUlSRPT7R
    java.util.concurrent.atomic.AtomicLong lastDownloaded -> MINeSOUlsRPerH
    long totalSize -> MinESoulSRp3Ah
    pro.gravit.utils.Downloader downloader -> mINeSoULsRpkjm
    javafx.scene.control.ProgressBar progressBar -> MINESOULsRPuTS
    javafx.scene.text.Text speed -> MInEsOulsRPpPn
    javafx.scene.control.Label volume -> MineSoUlsRPEJI
    java.util.function.Consumer errorHandle -> MInEsouLsrPIPY
    java.util.function.Consumer addLog -> miNesoULsRPW9z
    java.util.concurrent.ExecutorService executor -> miNEsOULSrPj2c
    34:62:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication,javafx.scene.control.ProgressBar,javafx.scene.text.Text,javafx.scene.control.Label,java.util.function.Consumer,java.util.function.Consumer) -> <init>
    65:94:void sendUpdateAssetRequest(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,java.lang.String,java.util.function.Consumer) -> mINESoUlSRpxCH
    97:126:void sendUpdateRequest(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,pro.gravit.launcher.profiles.optional.OptionalView,boolean,java.util.function.Consumer) -> mINESoUlSRpxCH
    129:149:void download(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,pro.gravit.launcher.profiles.optional.OptionalView,boolean,java.util.function.Consumer,pro.gravit.launcher.hasher.HashedDir,java.lang.String) -> mINESoUlSRpxCH
    152:214:void downloadAsset(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,java.lang.String,java.util.function.Consumer,pro.gravit.launcher.hasher.HashedDir,java.lang.String) -> mINESoUlSRpxCH
    217:239:void downloadFiles(java.nio.file.Path,java.util.List,java.lang.String,java.lang.Runnable) -> mINESoUlSRpxCH
    242:246:void resetProgress() -> MinESoulSRp3Ah
    249:273:java.util.List getFilesList(java.nio.file.Path,java.util.LinkedList,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    277:293:java.util.LinkedList getPathRemapper(pro.gravit.launcher.profiles.optional.OptionalView,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    297:320:void deleteExtraDir(java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir,boolean) -> mINESoUlSRpxCH
    334:350:void updateProgress(long,long) -> mINESoUlSRpxCH
    353:353:boolean isDownload() -> mINESoUlSRpxCH
    357:357:java.util.concurrent.CompletableFuture getFuture() -> MINeSoulsrppRw
    361:362:void cancel() -> miNeSOUlSRPT7R
    365:365:boolean isCanceled() -> MINeSOUlsRPerH
    344:346:void lambda$updateProgress$22(java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    292:292:int lambda$getPathRemapper$21(pro.gravit.launcher.client.gui.scenes.update.VisualDownloader$PathRemapperData) -> mINESoUlSRpxCH
    287:290:void lambda$getPathRemapper$20(java.util.LinkedList,java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    253:271:pro.gravit.launcher.hasher.HashedDir$WalkAction lambda$getFilesList$19(java.util.LinkedList,java.nio.file.Path,java.util.List,java.lang.String,java.lang.String,pro.gravit.launcher.hasher.HashedEntry) -> mINESoUlSRpxCH
    218:238:void lambda$downloadFiles$18(java.util.List,java.lang.String,java.nio.file.Path,java.lang.Runnable,java.lang.Void) -> mINESoUlSRpxCH
    235:236:java.lang.Void lambda$downloadFiles$17(java.lang.Throwable) -> mINESoUlSRpxCH
    235:235:void lambda$downloadFiles$16(java.lang.Throwable) -> MINeSoulsrppRw
    233:233:void lambda$downloadFiles$15(java.lang.Runnable,java.lang.Void) -> mINESoUlSRpxCH
    197:203:void lambda$downloadAsset$14(java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir,java.util.function.Consumer) -> mINESoUlSRpxCH
    158:174:void lambda$downloadAsset$13(java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,java.util.LinkedList,java.lang.String,java.lang.String,java.util.function.Consumer,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    166:170:void lambda$downloadAsset$12(java.util.function.Consumer,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    142:148:void lambda$download$11(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir$Diff,java.util.function.Consumer,pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    119:121:java.lang.Void lambda$sendUpdateRequest$10(java.lang.Throwable) -> miNeSOUlSRPT7R
    119:119:void lambda$sendUpdateRequest$9(java.lang.Throwable) -> MINeSOUlsRPerH
    112:118:void lambda$sendUpdateRequest$8(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,pro.gravit.launcher.profiles.optional.OptionalView,boolean,java.util.function.Consumer,pro.gravit.launcher.events.request.UpdateRequestEvent) -> mINESoUlSRpxCH
    116:116:void lambda$sendUpdateRequest$7(java.lang.Exception) -> mINESoUlSRpxCH
    101:106:void lambda$sendUpdateRequest$6(java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,java.util.function.Consumer) -> mINESoUlSRpxCH
    87:89:java.lang.Void lambda$sendUpdateAssetRequest$5(java.lang.Throwable) -> MinESoulSRp3Ah
    87:87:void lambda$sendUpdateAssetRequest$4(java.lang.Throwable) -> mINeSoULsRpkjm
    80:86:void lambda$sendUpdateAssetRequest$3(java.lang.String,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,java.lang.String,java.util.function.Consumer,pro.gravit.launcher.events.request.UpdateRequestEvent) -> mINESoUlSRpxCH
    84:84:void lambda$sendUpdateAssetRequest$2(java.lang.Exception) -> MINeSoulsrppRw
    69:74:void lambda$sendUpdateAssetRequest$1(java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,java.util.function.Consumer) -> MINeSoulsrppRw
    58:60:java.util.concurrent.ForkJoinWorkerThread lambda$new$0(java.util.concurrent.ForkJoinPool) -> mINESoUlSRpxCH
    32:32:java.util.concurrent.atomic.AtomicLong access$000(pro.gravit.launcher.client.gui.scenes.update.VisualDownloader) -> mINESoUlSRpxCH
    32:32:void access$100(pro.gravit.launcher.client.gui.scenes.update.VisualDownloader,long,long) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.update.VisualDownloader$1 -> pro.gravit.launcher.MINESOUlsRpdzc:
# {"fileName":"VisualDownloader.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.scenes.update.VisualDownloader this$0 -> mINESoUlSRpxCH
    218:218:void <init>(pro.gravit.launcher.client.gui.scenes.update.VisualDownloader) -> <init>
    222:225:void apply(long) -> apply
    230:230:void onComplete(java.nio.file.Path) -> onComplete
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.update.VisualDownloader$2 -> pro.gravit.launcher.MineSOulSrPdI6:
# {"fileName":"VisualDownloader.java","id":"sourceFile"}
    int[] $SwitchMap$pro$gravit$launcher$hasher$HashedEntry$Type -> mINESoUlSRpxCH
    304:304:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.scenes.update.VisualDownloader$PathRemapperData -> pro.gravit.launcher.mINESOUlSrp77U:
# {"fileName":"VisualDownloader.java","id":"sourceFile"}
    java.lang.String key -> mINESoUlSRpxCH
    java.lang.String value -> MINeSoulsrppRw
    326:329:void <init>(java.lang.String,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.service.AuthService -> pro.gravit.launcher.MinesOULsRPR6F:
# {"fileName":"AuthService.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherConfig config -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.JavaFXApplication application -> MINeSoulsrppRw
    14:19:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    22:28:pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface makePassword(java.lang.String) -> mINESoUlSRpxCH
    32:36:pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface make2FAPassword(pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface,java.lang.String) -> mINESoUlSRpxCH
    40:51:java.util.List getListFromPassword(pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> mINESoUlSRpxCH
    56:67:pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface getPasswordFromList(java.util.List) -> mINESoUlSRpxCH
    71:71:pro.gravit.launcher.request.auth.AuthRequest makeAuthRequest(java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface,java.lang.String) -> mINESoUlSRpxCH
    75:75:byte[] encryptAESPassword(java.lang.String) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.service.JavaService -> pro.gravit.launcher.mInEsoulSRpdZm:
# {"fileName":"JavaService.java","id":"sourceFile"}
    java.util.regex.Pattern JAVA_VERSION_PATTERN -> MINeSoulsrppRw
    java.util.List javaVersions -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.JavaFXApplication application -> miNeSOUlSRPT7R
    21:24:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    27:61:void update() -> mINESoUlSRpxCH
    64:74:boolean isArchAvailable(pro.gravit.utils.helper.JVMHelper$ARCH) -> mINESoUlSRpxCH
    78:78:boolean isIncompatibleJava(pro.gravit.utils.helper.JavaHelper$JavaVersion,pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    82:87:boolean contains(java.nio.file.Path) -> mINESoUlSRpxCH
    91:122:pro.gravit.utils.helper.JavaHelper$JavaVersion getRecommendJavaVersion(pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    17:17:void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.service.OfflineService -> pro.gravit.launcher.MiNESOulSRPYrc:
# {"fileName":"OfflineService.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.JavaFXApplication application -> mINESoUlSRpxCH
    26:28:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    31:37:boolean isAvailableOfflineMode() -> mINESoUlSRpxCH
    41:41:boolean isOfflineMode() -> MINeSoulsrppRw
    45:56:void applyRuntimeProcessors(pro.gravit.launcher.request.websockets.OfflineRequestService) -> mINESoUlSRpxCH
    50:54:pro.gravit.launcher.events.request.ProfilesRequestEvent lambda$applyRuntimeProcessors$2(pro.gravit.launcher.request.update.ProfilesRequest) -> mINESoUlSRpxCH
    52:52:boolean lambda$applyRuntimeProcessors$1(pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    46:47:pro.gravit.launcher.events.request.AuthRequestEvent lambda$applyRuntimeProcessors$0(pro.gravit.launcher.request.auth.AuthRequest) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.service.PingService -> pro.gravit.launcher.minEsOULsRPXr3:
# {"fileName":"PingService.java","id":"sourceFile"}
    java.util.Map reports -> mINESoUlSRpxCH
    9:10:void <init>() -> <init>
    13:18:java.util.concurrent.CompletableFuture getPingReport(java.lang.String) -> mINESoUlSRpxCH
    22:26:void addReports(java.util.Map) -> mINESoUlSRpxCH
    29:32:void addReport(java.lang.String,pro.gravit.launcher.client.ServerPinger$Result) -> mINESoUlSRpxCH
    35:41:void clear() -> mINESoUlSRpxCH
    36:39:void lambda$clear$1(java.lang.String,java.util.concurrent.CompletableFuture) -> mINESoUlSRpxCH
    23:25:void lambda$addReports$0(java.lang.String,pro.gravit.launcher.client.gui.service.PingService$PingServerReport) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.service.PingService$PingServerReport -> pro.gravit.launcher.MINEsoUlsrp9FC:
# {"fileName":"PingService.java","id":"sourceFile"}
    java.lang.String name -> mINESoUlSRpxCH
    int maxPlayers -> MINeSoulsrppRw
    int playersOnline -> miNeSOUlSRPT7R
    48:52:void <init>(java.lang.String,int,int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.service.RuntimeDialogService -> pro.gravit.launcher.mInEsoULsrP6tI:
# {"fileName":"RuntimeDialogService.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.impl.MessageManager messageManager -> mINESoUlSRpxCH
    12:14:void <init>(pro.gravit.launcher.client.gui.impl.MessageManager) -> <init>
    18:19:void showDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable) -> showDialog
    23:24:void showApplyDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable) -> showApplyDialog
    28:29:void showApplyDialog(java.lang.String,java.lang.String,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable) -> showApplyDialog
    33:34:void showTextDialog(java.lang.String,java.util.function.Consumer,java.lang.Runnable) -> showTextDialog
    38:39:void createNotification(pro.gravit.launcher.events.NotificationEvent$NotificationType,java.lang.String,java.lang.String) -> createNotification
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.service.StateService -> pro.gravit.launcher.miNeSoulsrPb3A:
# {"fileName":"StateService.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.AuthRequestEvent rawAuthResult -> mINESoUlSRpxCH
    java.util.List profiles -> MINeSoulsrppRw
    pro.gravit.launcher.profiles.ClientProfile profile -> miNeSOUlSRPT7R
    java.util.Map optionalViewMap -> MINeSOUlsRPerH
    pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability authAvailability -> MinESoulSRp3Ah
    16:16:void <init>() -> <init>
    25:29:void setAuthResult(java.lang.String,pro.gravit.launcher.events.request.AuthRequestEvent) -> mINESoUlSRpxCH
    32:33:void setAuthAvailability(pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability) -> mINESoUlSRpxCH
    36:36:pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability getAuthAvailability() -> mINESoUlSRpxCH
    40:43:boolean isSupportedAuthFeature(java.lang.String) -> mINESoUlSRpxCH
    47:50:java.lang.String getApiUrl() -> MINeSoulsrppRw
    54:54:java.util.Map getOptionalViewMap() -> miNeSOUlSRPT7R
    58:59:void setOptionalView(pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.profiles.optional.OptionalView) -> mINESoUlSRpxCH
    62:70:void setProfilesResult(pro.gravit.launcher.events.request.ProfilesRequestEvent) -> mINESoUlSRpxCH
    73:75:java.lang.String getUsername() -> MINeSOUlsRPerH
    79:81:java.lang.String getMainRole() -> MinESoulSRp3Ah
    85:88:boolean checkPermission(java.lang.String) -> MINeSoulsrppRw
    92:92:java.util.List getProfiles() -> mINeSoULsRpkjm
    96:96:pro.gravit.launcher.profiles.ClientProfile getProfile() -> MINESOULsRPuTS
    100:101:void setProfile(pro.gravit.launcher.profiles.ClientProfile) -> mINESoUlSRpxCH
    104:104:pro.gravit.launcher.profiles.optional.OptionalView getOptionalView() -> MInEsOulsRPpPn
    108:108:pro.gravit.launcher.profiles.optional.OptionalView getOptionalView(pro.gravit.launcher.profiles.ClientProfile) -> MINeSoulsrppRw
    112:114:pro.gravit.launcher.profiles.PlayerProfile getPlayerProfile() -> MineSoUlsRPEJI
    118:120:java.lang.String getAccessToken() -> MInEsouLsrPIPY
    124:126:void exit() -> miNesoULsRPW9z
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.stage.ConsoleStage -> pro.gravit.launcher.MINESouLsRPS4U:
# {"fileName":"ConsoleStage.java","id":"sourceFile"}
    8:11:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.stage.DialogStage -> pro.gravit.launcher.mineSoulsrpBgv:
# {"fileName":"DialogStage.java","id":"sourceFile"}
    17:42:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication,java.lang.String,pro.gravit.launcher.client.gui.dialogs.AbstractDialog) -> <init>
    22:23:void lambda$new$0(javafx.stage.WindowEvent) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.stage.PrimaryStage -> pro.gravit.launcher.mInESOULSrPmHZ:
# {"fileName":"PrimaryStage.java","id":"sourceFile"}
    18:29:void <init>(javafx.stage.Stage,java.lang.String) -> <init>
    33:34:void close() -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.utils.FXMLFactory -> pro.gravit.launcher.MiNesOulSrPMjP:
# {"fileName":"FXMLFactory.java","id":"sourceFile"}
    java.util.ResourceBundle resources -> mINESoUlSRpxCH
    java.util.concurrent.ExecutorService executorService -> MINeSoulsrppRw
    19:22:void <init>(java.util.ResourceBundle,java.util.concurrent.ExecutorService) -> <init>
    25:25:java.util.concurrent.CompletableFuture getAsync(java.lang.String) -> mINESoUlSRpxCH
    35:43:java.lang.Object get(java.lang.String) -> MINeSoulsrppRw
    49:58:javafx.fxml.FXMLLoader newLoaderInstance(java.net.URL) -> mINESoUlSRpxCH
    27:29:java.lang.Object lambda$getAsync$0(java.lang.String) -> miNeSOUlSRPT7R
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.utils.FXMLFactory$FXMLLoadException -> pro.gravit.launcher.MInESOulsRPeki:
# {"fileName":"FXMLFactory.java","id":"sourceFile"}
    62:63:void <init>() -> <init>
    66:67:void <init>(java.lang.String) -> <init>
    70:71:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    74:75:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.utils.RuntimeCryptedFile -> pro.gravit.launcher.MiNESOuLSRpyFo:
# {"fileName":"RuntimeCryptedFile.java","id":"sourceFile"}
    java.util.function.Supplier inputStream -> mINESoUlSRpxCH
    java.lang.String alg -> MINeSoulsrppRw
    javax.crypto.spec.SecretKeySpec sKeySpec -> miNeSOUlSRPT7R
    javax.crypto.spec.IvParameterSpec iKeySpec -> MINeSOUlsRPerH
    25:35:void <init>(java.util.function.Supplier,byte[]) -> <init>
    41:46:java.io.InputStream getInputStream() -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.utils.TriggerManager -> pro.gravit.launcher.miNESoulsRpPy6:
# {"fileName":"TriggerManager.java","id":"sourceFile"}
    pro.gravit.launcher.client.gui.service.StateService stateService -> mINESoUlSRpxCH
    pro.gravit.launcher.client.gui.JavaFXApplication application -> MINeSoulsrppRw
    19:22:void <init>(pro.gravit.launcher.client.gui.JavaFXApplication) -> <init>
    25:54:void process(pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.profiles.optional.OptionalView) -> mINESoUlSRpxCH
    15:15:pro.gravit.launcher.client.gui.service.StateService access$100(pro.gravit.launcher.client.gui.utils.TriggerManager) -> mINESoUlSRpxCH
    15:15:pro.gravit.launcher.client.gui.JavaFXApplication access$200(pro.gravit.launcher.client.gui.utils.TriggerManager) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.utils.TriggerManager$1 -> pro.gravit.launcher.mIneSOULsRp08y:
# {"fileName":"TriggerManager.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.client.gui.utils.TriggerManager$TriggerManagerContext -> pro.gravit.launcher.MinesOulsRPSfz:
# {"fileName":"TriggerManager.java","id":"sourceFile"}
    pro.gravit.launcher.profiles.ClientProfile profile -> MINeSoulsrppRw
    pro.gravit.launcher.client.gui.utils.TriggerManager this$0 -> mINESoUlSRpxCH
    59:61:void <init>(pro.gravit.launcher.client.gui.utils.TriggerManager,pro.gravit.launcher.profiles.ClientProfile) -> <init>
    65:65:pro.gravit.launcher.profiles.ClientProfile getProfile() -> getProfile
    70:70:java.lang.String getUsername() -> getUsername
    75:81:pro.gravit.utils.helper.JavaHelper$JavaVersion getJavaVersion() -> getJavaVersion
    56:56:void <init>(pro.gravit.launcher.client.gui.utils.TriggerManager,pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.client.gui.utils.TriggerManager$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.config.JsonConfigurable -> pro.gravit.launcher.mInESouLsRpIv6:
# {"fileName":"JsonConfigurable.java","id":"sourceFile"}
    java.nio.file.Path configPath -> mINESoUlSRpxCH
    java.lang.reflect.Type type -> MINeSoulsrppRw
    11:14:void <init>(java.lang.reflect.Type,java.nio.file.Path) -> <init>
    18:18:java.nio.file.Path getPath() -> miNeSOUlSRPT7R
    23:23:java.lang.reflect.Type getType() -> MINeSOUlsRPerH
    java.lang.Object getConfig() -> MinESoulSRp3Ah
    void setConfig(java.lang.Object) -> mINESoUlSRpxCH
    java.lang.Object getDefaultConfig() -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.config.JsonConfigurableInterface -> pro.gravit.launcher.mINeSoulsRPMYU:
# {"fileName":"JsonConfigurableInterface.java","id":"sourceFile"}
    17:18:void saveConfig() -> mINeSoULsRpkjm
    22:23:void loadConfig() -> MINESOULsRPuTS
    27:30:void saveConfig(com.google.gson.Gson,java.nio.file.Path) -> mINESoUlSRpxCH
    33:33:java.lang.String toJsonString(com.google.gson.Gson) -> mINESoUlSRpxCH
    37:37:java.lang.String toJsonString() -> MInEsOulsRPpPn
    42:49:void loadConfig(com.google.gson.Gson,java.nio.file.Path) -> MINeSoulsrppRw
    53:54:void saveConfig(java.nio.file.Path) -> mINESoUlSRpxCH
    58:59:void loadConfig(java.nio.file.Path) -> MINeSoulsrppRw
    63:65:void resetConfig() -> MineSoUlsRPEJI
    69:71:void resetConfig(java.nio.file.Path) -> miNeSOUlSRPT7R
    75:78:boolean generateConfigIfNotExists(java.nio.file.Path) -> MINeSOUlsRPerH
    83:86:boolean generateConfigIfNotExists() -> MInEsouLsrPIPY
    java.lang.Object getConfig() -> MinESoulSRp3Ah
    void setConfig(java.lang.Object) -> mINESoUlSRpxCH
    java.lang.Object getDefaultConfig() -> MINeSoulsrppRw
    java.nio.file.Path getPath() -> miNeSOUlSRPT7R
    java.lang.reflect.Type getType() -> MINeSOUlsRPerH
    void <clinit>() -> <clinit>
pro.gravit.launcher.config.SimpleConfig -> pro.gravit.launcher.mINEsOuLSRpPfa:
# {"fileName":"SimpleConfig.java","id":"sourceFile"}
    java.nio.file.Path configPath -> mINESoUlSRpxCH
    java.lang.Class type -> MINeSoulsrppRw
    12:15:void <init>(java.lang.Class,java.nio.file.Path) -> <init>
    20:20:java.lang.Object getConfig() -> MinESoulSRp3Ah
    27:29:java.lang.Object getDefaultConfig() -> MINeSoulsrppRw
    35:35:java.nio.file.Path getPath() -> miNeSOUlSRPT7R
    40:40:java.lang.reflect.Type getType() -> MINeSOUlsRPerH
    void <clinit>() -> <clinit>
pro.gravit.launcher.config.SimpleConfigurable -> pro.gravit.launcher.minESOuLSrPtqu:
# {"fileName":"SimpleConfigurable.java","id":"sourceFile"}
    java.lang.Class tClass -> miNeSOUlSRPT7R
    java.lang.Object config -> MINeSoulsrppRw
    12:14:void <init>(java.lang.Class,java.nio.file.Path) -> <init>
    18:18:java.lang.Object getConfig() -> MinESoulSRp3Ah
    23:24:void setConfig(java.lang.Object) -> mINESoUlSRpxCH
    30:32:java.lang.Object getDefaultConfig() -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.console.GetPublicKeyCommand -> pro.gravit.launcher.MinEsOulsrp8tr:
# {"fileName":"GetPublicKeyCommand.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherEngine engine -> mINESoUlSRpxCH
    12:14:void <init>(pro.gravit.launcher.LauncherEngine) -> <init>
    18:18:java.lang.String getArgsDescription() -> getArgsDescription
    23:23:java.lang.String getUsageDescription() -> getUsageDescription
    28:29:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.console.ModulesCommand -> pro.gravit.launcher.miNESouLsrPMrV:
# {"fileName":"ModulesCommand.java","id":"sourceFile"}
    14:14:void <init>() -> <init>
    17:17:java.lang.String getArgsDescription() -> getArgsDescription
    22:22:java.lang.String getUsageDescription() -> getUsageDescription
    27:37:void invoke(java.lang.String[]) -> invoke
    40:48:void printCheckStatusInfo(pro.gravit.launcher.LauncherTrustManager$CheckClassResult) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.console.SignDataCommand -> pro.gravit.launcher.mineSOulsRpIU8:
# {"fileName":"SignDataCommand.java","id":"sourceFile"}
    pro.gravit.launcher.LauncherEngine engine -> mINESoUlSRpxCH
    12:14:void <init>(pro.gravit.launcher.LauncherEngine) -> <init>
    18:18:java.lang.String getArgsDescription() -> getArgsDescription
    23:23:java.lang.String getUsageDescription() -> getUsageDescription
    28:33:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.console.UnlockCommand -> pro.gravit.launcher.MiNesOULSRPzy4:
# {"fileName":"UnlockCommand.java","id":"sourceFile"}
    8:8:void <init>() -> <init>
    11:11:java.lang.String getArgsDescription() -> getArgsDescription
    16:16:java.lang.String getUsageDescription() -> getUsageDescription
    21:33:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.console.test.PrintHardwareInfoCommand -> pro.gravit.launcher.MineSOUlsRPRki:
# {"fileName":"PrintHardwareInfoCommand.java","id":"sourceFile"}
    7:7:void <init>() -> <init>
    10:10:java.lang.String getArgsDescription() -> getArgsDescription
    15:15:java.lang.String getUsageDescription() -> getUsageDescription
    20:52:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.ExtendedTokenRequestEvent -> pro.gravit.launcher.events.ExtendedTokenRequestEvent:
# {"fileName":"ExtendedTokenRequestEvent.java","id":"sourceFile"}
    java.lang.String getExtendedTokenName() -> getExtendedTokenName
    java.lang.String getExtendedToken() -> getExtendedToken
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.NotificationEvent -> pro.gravit.launcher.events.NotificationEvent:
# {"fileName":"NotificationEvent.java","id":"sourceFile"}
    java.lang.String head -> head
    java.lang.String message -> message
    pro.gravit.launcher.events.NotificationEvent$NotificationType icon -> icon
    14:18:void <init>(java.lang.String,java.lang.String) -> <init>
    20:24:void <init>(java.lang.String,java.lang.String,pro.gravit.launcher.events.NotificationEvent$NotificationType) -> <init>
    28:28:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.NotificationEvent$NotificationType -> pro.gravit.launcher.events.NotificationEvent$NotificationType:
# {"fileName":"NotificationEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.NotificationEvent$NotificationType INFO -> INFO
    pro.gravit.launcher.events.NotificationEvent$NotificationType WARN -> WARN
    pro.gravit.launcher.events.NotificationEvent$NotificationType ERROR -> ERROR
    pro.gravit.launcher.events.NotificationEvent$NotificationType OTHER -> OTHER
    pro.gravit.launcher.events.NotificationEvent$NotificationType[] $VALUES -> $VALUES
    31:31:pro.gravit.launcher.events.NotificationEvent$NotificationType[] values() -> values
    31:31:pro.gravit.launcher.events.NotificationEvent$NotificationType valueOf(java.lang.String) -> valueOf
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:pro.gravit.launcher.events.NotificationEvent$NotificationType[] $values() -> $values
    31:32:void <clinit>() -> <clinit>
pro.gravit.launcher.events.RequestEvent -> pro.gravit.launcher.events.RequestEvent:
# {"fileName":"RequestEvent.java","id":"sourceFile"}
    java.util.UUID eventUUID -> eventUUID
    java.util.UUID requestUUID -> requestUUID
    11:11:void <init>() -> <init>
    12:12:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.AdditionalDataRequestEvent -> pro.gravit.launcher.events.request.AdditionalDataRequestEvent:
# {"fileName":"AdditionalDataRequestEvent.java","id":"sourceFile"}
    java.util.Map data -> data
    10:11:void <init>() -> <init>
    13:15:void <init>(java.util.Map) -> <init>
    19:19:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.AuthRequestEvent -> pro.gravit.launcher.events.request.AuthRequestEvent:
# {"fileName":"AuthRequestEvent.java","id":"sourceFile"}
    java.lang.String TWO_FACTOR_NEED_ERROR_MESSAGE -> TWO_FACTOR_NEED_ERROR_MESSAGE
    java.lang.String ONE_FACTOR_NEED_ERROR_MESSAGE_PREFIX -> ONE_FACTOR_NEED_ERROR_MESSAGE_PREFIX
    java.lang.String OAUTH_TOKEN_EXPIRE -> OAUTH_TOKEN_EXPIRE
    java.lang.String OAUTH_TOKEN_INVALID -> OAUTH_TOKEN_INVALID
    java.lang.String USER_NOT_FOUND_ERROR_MESSAGE -> USER_NOT_FOUND_ERROR_MESSAGE
    java.lang.String WRONG_PASSWORD_ERROR_MESSAGE -> WRONG_PASSWORD_ERROR_MESSAGE
    java.lang.String ACCOUNT_BLOCKED_ERROR_MESSAGE -> ACCOUNT_BLOCKED_ERROR_MESSAGE
    pro.gravit.launcher.ClientPermissions permissions -> permissions
    pro.gravit.launcher.profiles.PlayerProfile playerProfile -> playerProfile
    java.lang.String accessToken -> accessToken
    java.lang.String protectToken -> protectToken
    java.util.UUID session -> session
    pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent oauth -> oauth
    32:33:void <init>() -> <init>
    35:39:void <init>(pro.gravit.launcher.profiles.PlayerProfile,java.lang.String,pro.gravit.launcher.ClientPermissions) -> <init>
    41:46:void <init>(pro.gravit.launcher.ClientPermissions,pro.gravit.launcher.profiles.PlayerProfile,java.lang.String,java.lang.String) -> <init>
    48:54:void <init>(pro.gravit.launcher.ClientPermissions,pro.gravit.launcher.profiles.PlayerProfile,java.lang.String,java.lang.String,java.util.UUID) -> <init>
    56:63:void <init>(pro.gravit.launcher.ClientPermissions,pro.gravit.launcher.profiles.PlayerProfile,java.lang.String,java.lang.String,java.util.UUID,pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent) -> <init>
    67:67:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent -> pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent:
# {"fileName":"AuthRequestEvent.java","id":"sourceFile"}
    java.lang.String accessToken -> accessToken
    java.lang.String refreshToken -> refreshToken
    long expire -> expire
    75:79:void <init>(java.lang.String,java.lang.String,long) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.BatchProfileByUsernameRequestEvent -> pro.gravit.launcher.events.request.BatchProfileByUsernameRequestEvent:
# {"fileName":"BatchProfileByUsernameRequestEvent.java","id":"sourceFile"}
    java.lang.String error -> error
    pro.gravit.launcher.profiles.PlayerProfile[] playerProfiles -> playerProfiles
    13:15:void <init>(pro.gravit.launcher.profiles.PlayerProfile[]) -> <init>
    17:18:void <init>() -> <init>
    22:22:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.CheckServerRequestEvent -> pro.gravit.launcher.events.request.CheckServerRequestEvent:
# {"fileName":"CheckServerRequestEvent.java","id":"sourceFile"}
    java.util.UUID _uuid -> _uuid
    java.util.UUID uuid -> uuid
    pro.gravit.launcher.profiles.PlayerProfile playerProfile -> playerProfile
    18:20:void <init>(pro.gravit.launcher.profiles.PlayerProfile) -> <init>
    22:23:void <init>() -> <init>
    27:27:java.lang.String getType() -> getType
    12:12:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.CurrentUserRequestEvent -> pro.gravit.launcher.events.request.CurrentUserRequestEvent:
# {"fileName":"CurrentUserRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.CurrentUserRequestEvent$UserInfo userInfo -> userInfo
    10:12:void <init>(pro.gravit.launcher.events.request.CurrentUserRequestEvent$UserInfo) -> <init>
    16:16:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.CurrentUserRequestEvent$UserInfo -> pro.gravit.launcher.events.request.CurrentUserRequestEvent$UserInfo:
# {"fileName":"CurrentUserRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.ClientPermissions permissions -> permissions
    java.lang.String accessToken -> accessToken
    pro.gravit.launcher.profiles.PlayerProfile playerProfile -> playerProfile
    19:19:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.ErrorRequestEvent -> pro.gravit.launcher.events.request.ErrorRequestEvent:
# {"fileName":"ErrorRequestEvent.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    java.lang.String error -> error
    14:16:void <init>(java.lang.String) -> <init>
    20:20:java.lang.String getType() -> getType
    10:10:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.ExitRequestEvent -> pro.gravit.launcher.events.request.ExitRequestEvent:
# {"fileName":"ExitRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason reason -> reason
    8:10:void <init>(pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason) -> <init>
    14:14:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason -> pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason:
# {"fileName":"ExitRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason SERVER -> SERVER
    pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason CLIENT -> CLIENT
    pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason TIMEOUT -> TIMEOUT
    pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason NO_EXIT -> NO_EXIT
    pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason[] $VALUES -> $VALUES
    17:17:pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason[] values() -> values
    17:17:pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason valueOf(java.lang.String) -> valueOf
    17:17:void <init>(java.lang.String,int) -> <init>
    17:17:pro.gravit.launcher.events.request.ExitRequestEvent$ExitReason[] $values() -> $values
    17:18:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.FeaturesRequestEvent -> pro.gravit.launcher.events.request.FeaturesRequestEvent:
# {"fileName":"FeaturesRequestEvent.java","id":"sourceFile"}
    java.util.Map features -> features
    10:11:void <init>() -> <init>
    13:15:void <init>(java.util.Map) -> <init>
    19:19:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.FetchClientProfileKeyRequestEvent -> pro.gravit.launcher.events.request.FetchClientProfileKeyRequestEvent:
# {"fileName":"FetchClientProfileKeyRequestEvent.java","id":"sourceFile"}
    byte[] publicKey -> publicKey
    byte[] privateKey -> privateKey
    byte[] signature -> signature
    long expiresAt -> expiresAt
    long refreshedAfter -> refreshedAfter
    15:21:void <init>(byte[],byte[],byte[],long,long) -> <init>
    23:29:void <init>(java.security.PublicKey,java.security.PrivateKey,byte[],long,long) -> <init>
    33:33:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent -> pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent:
# {"fileName":"GetAvailabilityAuthRequestEvent.java","id":"sourceFile"}
    java.util.List list -> list
    long features -> features
    15:18:void <init>(java.util.List) -> <init>
    20:23:void <init>(java.util.List,long) -> <init>
    27:27:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability -> pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailability:
# {"fileName":"GetAvailabilityAuthRequestEvent.java","id":"sourceFile"}
    java.util.List details -> details
    java.lang.String name -> name
    java.lang.String displayName -> displayName
    boolean visible -> visible
    java.lang.String apiUrl -> apiUrl
    java.util.List apiFeatures -> apiFeatures
    56:61:void <init>(java.lang.String,java.lang.String,boolean,java.util.List) -> <init>
    63:70:void <init>(java.lang.String,java.lang.String,boolean,java.util.List,java.lang.String,java.util.List) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails -> pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$AuthAvailabilityDetails:
# {"fileName":"GetAvailabilityAuthRequestEvent.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$ServerFeature -> pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$ServerFeature:
# {"fileName":"GetAvailabilityAuthRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$ServerFeature FEATURE_SUPPORT -> FEATURE_SUPPORT
    int val -> val
    pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$ServerFeature[] $VALUES -> $VALUES
    30:30:pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$ServerFeature[] values() -> values
    30:30:pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$ServerFeature valueOf(java.lang.String) -> valueOf
    34:36:void <init>(java.lang.String,int,int) -> <init>
    30:30:pro.gravit.launcher.events.request.GetAvailabilityAuthRequestEvent$ServerFeature[] $values() -> $values
    30:31:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.GetPublicKeyRequestEvent -> pro.gravit.launcher.events.request.GetPublicKeyRequestEvent:
# {"fileName":"GetPublicKeyRequestEvent.java","id":"sourceFile"}
    byte[] rsaPublicKey -> rsaPublicKey
    byte[] ecdsaPublicKey -> ecdsaPublicKey
    12:15:void <init>(byte[],byte[]) -> <init>
    17:20:void <init>(java.security.interfaces.RSAPublicKey,java.security.interfaces.ECPublicKey) -> <init>
    24:24:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.GetSecureLevelInfoRequestEvent -> pro.gravit.launcher.events.request.GetSecureLevelInfoRequestEvent:
# {"fileName":"GetSecureLevelInfoRequestEvent.java","id":"sourceFile"}
    byte[] verifySecureKey -> verifySecureKey
    boolean enabled -> enabled
    9:11:void <init>(byte[]) -> <init>
    13:16:void <init>(byte[],boolean) -> <init>
    20:20:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.HardwareReportRequestEvent -> pro.gravit.launcher.events.request.HardwareReportRequestEvent:
# {"fileName":"HardwareReportRequestEvent.java","id":"sourceFile"}
    java.lang.String extendedToken -> extendedToken
    8:9:void <init>() -> <init>
    11:13:void <init>(java.lang.String) -> <init>
    17:17:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.JoinServerRequestEvent -> pro.gravit.launcher.events.request.JoinServerRequestEvent:
# {"fileName":"JoinServerRequestEvent.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    boolean allow -> allow
    15:17:void <init>(boolean) -> <init>
    21:21:java.lang.String getType() -> getType
    11:11:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.LauncherRequestEvent -> pro.gravit.launcher.events.request.LauncherRequestEvent:
# {"fileName":"LauncherRequestEvent.java","id":"sourceFile"}
    java.lang.String LAUNCHER_EXTENDED_TOKEN_NAME -> LAUNCHER_EXTENDED_TOKEN_NAME
    java.util.UUID uuid -> uuid
    java.lang.String url -> url
    byte[] digest -> digest
    byte[] binary -> binary
    boolean needUpdate -> needUpdate
    java.lang.String launcherExtendedToken -> launcherExtendedToken
    23:26:void <init>(boolean,java.lang.String) -> <init>
    28:31:void <init>(boolean,byte[]) -> <init>
    33:37:void <init>(boolean,java.lang.String,java.lang.String) -> <init>
    39:42:void <init>(byte[],byte[]) -> <init>
    46:46:java.lang.String getType() -> getType
    12:12:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.ProfileByUUIDRequestEvent -> pro.gravit.launcher.events.request.ProfileByUUIDRequestEvent:
# {"fileName":"ProfileByUUIDRequestEvent.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    java.lang.String error -> error
    pro.gravit.launcher.profiles.PlayerProfile playerProfile -> playerProfile
    18:20:void <init>(pro.gravit.launcher.profiles.PlayerProfile) -> <init>
    22:23:void <init>() -> <init>
    27:27:java.lang.String getType() -> getType
    12:12:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.ProfileByUsernameRequestEvent -> pro.gravit.launcher.events.request.ProfileByUsernameRequestEvent:
# {"fileName":"ProfileByUsernameRequestEvent.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    pro.gravit.launcher.profiles.PlayerProfile playerProfile -> playerProfile
    java.lang.String error -> error
    18:20:void <init>(pro.gravit.launcher.profiles.PlayerProfile) -> <init>
    24:24:java.lang.String getType() -> getType
    12:12:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.ProfilesRequestEvent -> pro.gravit.launcher.events.request.ProfilesRequestEvent:
# {"fileName":"ProfilesRequestEvent.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    java.util.List profiles -> profiles
    17:19:void <init>(java.util.List) -> <init>
    21:22:void <init>() -> <init>
    26:26:java.lang.String getType() -> getType
    13:13:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.RefreshTokenRequestEvent -> pro.gravit.launcher.events.request.RefreshTokenRequestEvent:
# {"fileName":"RefreshTokenRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent oauth -> oauth
    8:10:void <init>(pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent) -> <init>
    14:14:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.RestoreRequestEvent -> pro.gravit.launcher.events.request.RestoreRequestEvent:
# {"fileName":"RestoreRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.CurrentUserRequestEvent$UserInfo userInfo -> userInfo
    java.util.List invalidTokens -> invalidTokens
    11:12:void <init>() -> <init>
    14:16:void <init>(pro.gravit.launcher.events.request.CurrentUserRequestEvent$UserInfo) -> <init>
    18:21:void <init>(pro.gravit.launcher.events.request.CurrentUserRequestEvent$UserInfo,java.util.List) -> <init>
    23:25:void <init>(java.util.List) -> <init>
    29:29:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.SecurityReportRequestEvent -> pro.gravit.launcher.events.request.SecurityReportRequestEvent:
# {"fileName":"SecurityReportRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction action -> action
    java.lang.String otherAction -> otherAction
    9:12:void <init>(pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction) -> <init>
    14:17:void <init>(java.lang.String) -> <init>
    19:22:void <init>() -> <init>
    26:26:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction -> pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction:
# {"fileName":"SecurityReportRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction NONE -> NONE
    pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction LOGOUT -> LOGOUT
    pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction TOKEN_EXPIRED -> TOKEN_EXPIRED
    pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction EXIT -> EXIT
    pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction CRASH -> CRASH
    pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction OTHER -> OTHER
    pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction[] $VALUES -> $VALUES
    29:29:pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction[] values() -> values
    29:29:pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction valueOf(java.lang.String) -> valueOf
    29:29:void <init>(java.lang.String,int) -> <init>
    29:29:pro.gravit.launcher.events.request.SecurityReportRequestEvent$ReportAction[] $values() -> $values
    29:35:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.SetProfileRequestEvent -> pro.gravit.launcher.events.request.SetProfileRequestEvent:
# {"fileName":"SetProfileRequestEvent.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    pro.gravit.launcher.profiles.ClientProfile newProfile -> newProfile
    16:18:void <init>(pro.gravit.launcher.profiles.ClientProfile) -> <init>
    22:22:java.lang.String getType() -> getType
    12:12:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.UpdateListRequestEvent -> pro.gravit.launcher.events.request.UpdateListRequestEvent:
# {"fileName":"UpdateListRequestEvent.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    java.util.HashSet dirs -> dirs
    16:18:void <init>(java.util.HashSet) -> <init>
    22:22:java.lang.String getType() -> getType
    12:12:void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.UpdateRequestEvent -> pro.gravit.launcher.events.request.UpdateRequestEvent:
# {"fileName":"UpdateRequestEvent.java","id":"sourceFile"}
    pro.gravit.launcher.hasher.HashedDir hdir -> hdir
    boolean zip -> zip
    java.lang.String url -> url
    boolean fullDownload -> fullDownload
    17:20:void <init>(pro.gravit.launcher.hasher.HashedDir) -> <init>
    22:26:void <init>(pro.gravit.launcher.hasher.HashedDir,java.lang.String) -> <init>
    28:32:void <init>(pro.gravit.launcher.hasher.HashedDir,java.lang.String,boolean) -> <init>
    36:36:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.events.request.VerifySecureLevelKeyRequestEvent -> pro.gravit.launcher.events.request.VerifySecureLevelKeyRequestEvent:
# {"fileName":"VerifySecureLevelKeyRequestEvent.java","id":"sourceFile"}
    boolean needHardwareInfo -> needHardwareInfo
    boolean onlyStatisticInfo -> onlyStatisticInfo
    java.lang.String extendedToken -> extendedToken
    java.lang.String hardwareExtendedToken -> hardwareExtendedToken
    11:12:void <init>() -> <init>
    14:16:void <init>(boolean) -> <init>
    18:22:void <init>(boolean,boolean,java.lang.String) -> <init>
    24:29:void <init>(boolean,boolean,java.lang.String,java.lang.String) -> <init>
    33:33:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.gui.NoRuntimeProvider -> pro.gravit.launcher.mInESOuLSRPhc4:
# {"fileName":"NoRuntimeProvider.java","id":"sourceFile"}
    5:5:void <init>() -> <init>
    8:9:void run(java.lang.String[]) -> mINESoUlSRpxCH
    14:14:void preLoad() -> miNeSOUlSRPT7R
    19:19:void init(boolean) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.gui.RuntimeProvider -> pro.gravit.launcher.MiNEsoULSrpsJc:
# {"fileName":"RuntimeProvider.java","id":"sourceFile"}
    void run(java.lang.String[]) -> mINESoUlSRpxCH
    void preLoad() -> miNeSOUlSRPT7R
    void init(boolean) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.FileNameMatcher -> pro.gravit.launcher.miNeSoulsrpJYO:
# {"fileName":"FileNameMatcher.java","id":"sourceFile"}
    java.lang.String[] NO_ENTRIES -> mINESoUlSRpxCH
    java.lang.String[] update -> MINeSoulsrppRw
    java.lang.String[] verify -> miNeSOUlSRPT7R
    java.lang.String[] exclusions -> MINeSOUlsRPerH
    12:16:void <init>(java.lang.String[],java.lang.String[],java.lang.String[]) -> <init>
    20:37:boolean anyMatch(java.lang.String[],java.util.Collection) -> mINESoUlSRpxCH
    41:41:boolean shouldUpdate(java.util.Collection) -> mINESoUlSRpxCH
    46:46:boolean shouldVerify(java.util.Collection) -> MINeSoulsrppRw
    50:50:pro.gravit.launcher.hasher.FileNameMatcher verifyOnly() -> mINESoUlSRpxCH
    6:6:void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedDir -> pro.gravit.launcher.mInESOULsRpc1i:
# {"fileName":"HashedDir.java","id":"sourceFile"}
    java.util.Map map -> map
    19:23:void <init>() -> <init>
    19:47:void <init>(pro.gravit.launcher.serialize.HInput) -> <init>
    19:52:void <init>(java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,boolean) -> <init>
    55:57:pro.gravit.launcher.hasher.HashedDir$Diff diff(pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.FileNameMatcher) -> mINESoUlSRpxCH
    61:63:pro.gravit.launcher.hasher.HashedDir$Diff compare(pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.FileNameMatcher) -> MINeSoulsrppRw
    67:68:void remove(java.lang.String) -> mINESoUlSRpxCH
    71:73:void moveTo(java.lang.String,pro.gravit.launcher.hasher.HashedDir,java.lang.String) -> mINESoUlSRpxCH
    76:101:pro.gravit.launcher.hasher.HashedDir$FindRecursiveResult findRecursive(java.lang.String) -> MINeSoulsrppRw
    105:105:pro.gravit.launcher.hasher.HashedEntry getEntry(java.lang.String) -> miNeSOUlSRPT7R
    110:110:pro.gravit.launcher.hasher.HashedEntry$Type getType() -> mINESoUlSRpxCH
    114:114:boolean isEmpty() -> MINeSoulsrppRw
    118:118:java.util.Map map() -> miNeSOUlSRPT7R
    122:130:pro.gravit.launcher.hasher.HashedEntry resolve(java.lang.Iterable) -> mINESoUlSRpxCH
    134:182:pro.gravit.launcher.hasher.HashedDir sideDiff(pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.FileNameMatcher,java.util.Deque,boolean) -> MINeSoulsrppRw
    186:234:pro.gravit.launcher.hasher.HashedDir sideCompare(pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.FileNameMatcher,java.util.Deque,boolean) -> mINESoUlSRpxCH
    239:239:long size() -> MINeSOUlsRPerH
    244:254:void write(pro.gravit.launcher.serialize.HOutput) -> write
    257:259:void walk(java.lang.CharSequence,pro.gravit.launcher.hasher.HashedDir$WalkCallback) -> mINESoUlSRpxCH
    262:282:pro.gravit.launcher.hasher.HashedDir$WalkAction walk(java.lang.String,java.lang.CharSequence,pro.gravit.launcher.hasher.HashedDir$WalkCallback,boolean) -> mINESoUlSRpxCH
    18:18:java.util.Map access$200(pro.gravit.launcher.hasher.HashedDir) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedDir$1 -> pro.gravit.launcher.MinEsOulsrPRuT:
# {"fileName":"HashedDir.java","id":"sourceFile"}
    int[] $SwitchMap$pro$gravit$launcher$hasher$HashedEntry$Type -> mINESoUlSRpxCH
    33:33:void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedDir$Diff -> pro.gravit.launcher.mINesoulsrpJPZ:
# {"fileName":"HashedDir.java","id":"sourceFile"}
    pro.gravit.launcher.hasher.HashedDir mismatch -> mINESoUlSRpxCH
    pro.gravit.launcher.hasher.HashedDir extra -> MINeSoulsrppRw
    312:315:void <init>(pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir) -> <init>
    319:319:boolean isSame() -> mINESoUlSRpxCH
    306:306:void <init>(pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedDir$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedDir$FindRecursiveResult -> pro.gravit.launcher.mInesOUlSRPuq6:
# {"fileName":"HashedDir.java","id":"sourceFile"}
    pro.gravit.launcher.hasher.HashedDir parent -> mINESoUlSRpxCH
    pro.gravit.launcher.hasher.HashedEntry entry -> MINeSoulsrppRw
    java.lang.String name -> miNeSOUlSRPT7R
    299:303:void <init>(pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.HashedEntry,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedDir$HashFileVisitor -> pro.gravit.launcher.MINEsOULSrP4lX:
# {"fileName":"HashedDir.java","id":"sourceFile"}
    java.nio.file.Path dir -> MINeSoulsrppRw
    pro.gravit.launcher.hasher.FileNameMatcher matcher -> miNeSOUlSRPT7R
    boolean allowSymlinks -> MINeSOUlsRPerH
    boolean digest -> MinESoulSRp3Ah
    java.util.Deque path -> mINeSoULsRpkjm
    java.util.Deque stack -> MINESOULsRPuTS
    pro.gravit.launcher.hasher.HashedDir current -> MInEsOulsRPpPn
    pro.gravit.launcher.hasher.HashedDir this$0 -> mINESoUlSRpxCH
    328:338:void <init>(pro.gravit.launcher.hasher.HashedDir,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,boolean) -> <init>
    342:352:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> mINESoUlSRpxCH
    357:372:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> mINESoUlSRpxCH
    378:385:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> MINeSoulsrppRw
    323:323:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    323:323:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    323:323:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    323:323:void <init>(pro.gravit.launcher.hasher.HashedDir,java.nio.file.Path,pro.gravit.launcher.hasher.FileNameMatcher,boolean,boolean,pro.gravit.launcher.hasher.HashedDir$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedDir$WalkAction -> pro.gravit.launcher.mINESoulSRPRjO:
# {"fileName":"HashedDir.java","id":"sourceFile"}
    pro.gravit.launcher.hasher.HashedDir$WalkAction STOP -> mINESoUlSRpxCH
    pro.gravit.launcher.hasher.HashedDir$WalkAction CONTINUE -> MINeSoulsrppRw
    pro.gravit.launcher.hasher.HashedDir$WalkAction[] $VALUES -> miNeSOUlSRPT7R
    285:285:pro.gravit.launcher.hasher.HashedDir$WalkAction[] values() -> values
    285:285:pro.gravit.launcher.hasher.HashedDir$WalkAction valueOf(java.lang.String) -> valueOf
    285:285:void <init>(java.lang.String,int) -> <init>
    285:285:pro.gravit.launcher.hasher.HashedDir$WalkAction[] $values() -> mINESoUlSRpxCH
    285:286:void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedDir$WalkCallback -> pro.gravit.launcher.MiNESOulSRPaET:
# {"fileName":"HashedDir.java","id":"sourceFile"}
    pro.gravit.launcher.hasher.HashedDir$WalkAction walked(java.lang.String,java.lang.String,pro.gravit.launcher.hasher.HashedEntry) -> walked
    void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedEntry -> pro.gravit.launcher.mIneSoulsRPTxX:
# {"fileName":"HashedEntry.java","id":"sourceFile"}
    boolean flag -> flag
    10:10:void <init>() -> <init>
    pro.gravit.launcher.hasher.HashedEntry$Type getType() -> mINESoUlSRpxCH
    long size() -> MINeSOUlsRPerH
    void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedEntry$Type -> pro.gravit.launcher.miNeSoulsrPBRs:
# {"fileName":"HashedEntry.java","id":"sourceFile"}
    pro.gravit.launcher.hasher.HashedEntry$Type DIR -> mINESoUlSRpxCH
    pro.gravit.launcher.hasher.HashedEntry$Type FILE -> MINeSoulsrppRw
    pro.gravit.launcher.serialize.stream.EnumSerializer SERIALIZER -> miNeSOUlSRPT7R
    int n -> MINeSOUlsRPerH
    pro.gravit.launcher.hasher.HashedEntry$Type[] $VALUES -> MinESoulSRp3Ah
    20:20:pro.gravit.launcher.hasher.HashedEntry$Type[] values() -> values
    20:20:pro.gravit.launcher.hasher.HashedEntry$Type valueOf(java.lang.String) -> valueOf
    25:27:void <init>(java.lang.String,int,int) -> <init>
    30:30:pro.gravit.launcher.hasher.HashedEntry$Type read(pro.gravit.launcher.serialize.HInput) -> mINESoUlSRpxCH
    35:35:int getNumber() -> mINESoUlSRpxCH
    20:20:pro.gravit.launcher.hasher.HashedEntry$Type[] $values() -> MINeSoulsrppRw
    20:22:void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedEntryAdapter -> pro.gravit.launcher.minESOuLSRPBAG:
# {"fileName":"HashedEntryAdapter.java","id":"sourceFile"}
    java.lang.String PROP_NAME -> mINESoUlSRpxCH
    11:13:void <init>() -> <init>
    17:22:pro.gravit.launcher.hasher.HashedEntry deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> mINESoUlSRpxCH
    28:36:com.google.gson.JsonElement serialize(pro.gravit.launcher.hasher.HashedEntry,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> mINESoUlSRpxCH
    8:8:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    8:8:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
pro.gravit.launcher.hasher.HashedFile -> pro.gravit.launcher.mINesOULSRPqZh:
# {"fileName":"HashedFile.java","id":"sourceFile"}
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm DIGEST_ALGO -> mINESoUlSRpxCH
    long size -> size
    byte[] digest -> digest
    26:27:void <init>(pro.gravit.launcher.serialize.HInput) -> <init>
    30:33:void <init>(long,byte[]) -> <init>
    37:38:void <init>(java.nio.file.Path,long,boolean) -> <init>
    42:42:pro.gravit.launcher.hasher.HashedEntry$Type getType() -> mINESoUlSRpxCH
    47:47:boolean isSame(pro.gravit.launcher.hasher.HashedFile) -> mINESoUlSRpxCH
    52:59:boolean isSame(java.nio.file.Path,boolean) -> mINESoUlSRpxCH
    64:64:boolean isSameDigest(byte[]) -> mINESoUlSRpxCH
    69:69:long size() -> MINeSOUlsRPerH
    73:73:byte[] getDigest() -> MINeSoulsrppRw
    78:82:void write(pro.gravit.launcher.serialize.HOutput) -> write
    16:16:void <clinit>() -> <clinit>
pro.gravit.launcher.managers.ClientGsonManager -> pro.gravit.launcher.MiNEsoULsrp61a:
# {"fileName":"ClientGsonManager.java","id":"sourceFile"}
    pro.gravit.launcher.client.ClientModuleManager moduleManager -> MinESoulSRp3Ah
    13:15:void <init>(pro.gravit.launcher.client.ClientModuleManager) -> <init>
    19:23:void registerAdapters(com.google.gson.GsonBuilder) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.managers.ConfigManager -> pro.gravit.launcher.MInESOUlSrP3tr:
# {"fileName":"ConfigManager.java","id":"sourceFile"}
    java.util.HashMap CONFIGURABLE -> mINESoUlSRpxCH
    13:14:void <init>() -> <init>
    17:19:void registerConfigurable(java.lang.String,pro.gravit.launcher.config.JsonConfigurable) -> mINESoUlSRpxCH
    22:25:void printConfigurables() -> mINESoUlSRpxCH
    28:29:void save(java.lang.String) -> mINESoUlSRpxCH
    32:33:void load(java.lang.String) -> MINeSoulsrppRw
    36:37:void save(java.lang.String,java.nio.file.Path) -> mINESoUlSRpxCH
    40:41:void reset(java.lang.String) -> miNeSOUlSRPT7R
    44:45:void load(java.lang.String,java.nio.file.Path) -> MINeSoulsrppRw
    48:49:void reset(java.lang.String,java.nio.file.Path) -> miNeSOUlSRPT7R
    23:23:void lambda$printConfigurables$0(java.lang.String,pro.gravit.launcher.config.JsonConfigurable) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.managers.ConsoleManager -> pro.gravit.launcher.MiNESoulsrPAl8:
# {"fileName":"ConsoleManager.java","id":"sourceFile"}
    pro.gravit.utils.command.CommandHandler handler -> mINESoUlSRpxCH
    java.lang.Thread thread -> MINeSoulsrppRw
    boolean isConsoleUnlock -> miNeSOUlSRPT7R
    20:20:void <init>() -> <init>
    28:41:void initConsole() -> mINESoUlSRpxCH
    44:49:void registerCommands() -> MINeSoulsrppRw
    52:52:boolean checkUnlockKey(java.lang.String) -> mINESoUlSRpxCH
    56:63:boolean unlock() -> miNeSOUlSRPT7R
    23:23:void <clinit>() -> <clinit>
pro.gravit.launcher.managers.GsonManager -> pro.gravit.launcher.mINESouLsrpWaS:
# {"fileName":"GsonManager.java","id":"sourceFile"}
    com.google.gson.GsonBuilder gsonBuilder -> mINESoUlSRpxCH
    com.google.gson.Gson gson -> MINeSoulsrppRw
    com.google.gson.GsonBuilder configGsonBuilder -> miNeSOUlSRPT7R
    com.google.gson.Gson configGson -> MINeSOUlsRPerH
    9:9:void <init>() -> <init>
    16:25:void initGson() -> mINESoUlSRpxCH
    28:29:void registerAdapters(com.google.gson.GsonBuilder) -> mINESoUlSRpxCH
    33:33:void preConfigGson(com.google.gson.GsonBuilder) -> MINeSoulsrppRw
    37:37:void preGson(com.google.gson.GsonBuilder) -> miNeSOUlSRPT7R
    void <clinit>() -> <clinit>
pro.gravit.launcher.managers.SettingsManager -> pro.gravit.launcher.mInEsOULsrPqZY:
# {"fileName":"SettingsManager.java","id":"sourceFile"}
    pro.gravit.launcher.NewLauncherSettings settings -> MINeSoulsrppRw
    24:25:void <init>() -> <init>
    29:29:pro.gravit.launcher.NewLauncherSettings getConfig() -> miNesoULsRPW9z
    34:41:void setConfig(pro.gravit.launcher.NewLauncherSettings) -> mINESoUlSRpxCH
    45:45:pro.gravit.launcher.NewLauncherSettings getDefaultConfig() -> mINESoUlSRpxCH
    49:51:void loadHDirStore(java.nio.file.Path) -> MinESoulSRp3Ah
    54:65:void saveHDirStore(java.nio.file.Path) -> mINeSoULsRpkjm
    68:69:void loadHDirStore() -> miNEsOULSrPj2c
    72:73:void saveHDirStore() -> MINESOulsRp2ne
    19:19:java.lang.Object getDefaultConfig() -> MINeSoulsrppRw
    19:19:void setConfig(java.lang.Object) -> mINESoUlSRpxCH
    19:19:java.lang.Object getConfig() -> MinESoulSRp3Ah
    void <clinit>() -> <clinit>
pro.gravit.launcher.managers.SettingsManager$StoreFileVisitor -> pro.gravit.launcher.minESOULsrPtZk:
# {"fileName":"SettingsManager.java","id":"sourceFile"}
    75:75:void <init>() -> <init>
    79:87:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> mINESoUlSRpxCH
    75:75:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    void <clinit>() -> <clinit>
pro.gravit.launcher.managers.SimpleModulesConfigManager -> pro.gravit.launcher.miNesoulSRPgRS:
# {"fileName":"SimpleModulesConfigManager.java","id":"sourceFile"}
    java.nio.file.Path configDir -> mINESoUlSRpxCH
    15:17:void <init>(java.nio.file.Path) -> <init>
    20:20:java.nio.file.Path getModuleConfig(java.lang.String) -> mINESoUlSRpxCH
    25:25:java.nio.file.Path getModuleConfig(java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    29:36:java.nio.file.Path getModuleConfigDir(java.lang.String) -> MINeSoulsrppRw
    41:41:pro.gravit.launcher.config.SimpleConfigurable getConfigurable(java.lang.Class,java.nio.file.Path) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherInitContext -> pro.gravit.launcher.MINeSoUlsrPYOz:
# {"fileName":"LauncherInitContext.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModule -> pro.gravit.launcher.minESouLsrPzcj:
# {"fileName":"LauncherModule.java","id":"sourceFile"}
    pro.gravit.launcher.modules.LauncherModuleInfo moduleInfo -> miNeSOUlSRPT7R
    java.util.List eventList -> mINESoUlSRpxCH
    pro.gravit.launcher.modules.LauncherModulesManager modulesManager -> MINeSOUlsRPerH
    pro.gravit.launcher.modules.ModulesConfigManager modulesConfigManager -> MinESoulSRp3Ah
    pro.gravit.launcher.modules.LauncherModule$InitStatus initStatus -> mINeSoULsRpkjm
    pro.gravit.launcher.modules.LauncherModulesContext context -> MINeSoulsrppRw
    pro.gravit.launcher.LauncherTrustManager$CheckClassResult checkResult -> MINESOULsRPuTS
    11:20:void <init>() -> <init>
    11:24:void <init>(pro.gravit.launcher.modules.LauncherModuleInfo) -> <init>
    27:27:pro.gravit.launcher.modules.LauncherModuleInfo getModuleInfo() -> MINeSoulsrppRw
    31:31:pro.gravit.launcher.modules.LauncherModule$InitStatus getInitStatus() -> miNeSOUlSRPT7R
    35:36:void setInitStatus(pro.gravit.launcher.modules.LauncherModule$InitStatus) -> mINESoUlSRpxCH
    45:50:void setContext(pro.gravit.launcher.modules.LauncherModulesContext) -> mINESoUlSRpxCH
    53:54:pro.gravit.launcher.LauncherTrustManager$CheckClassResultType getCheckStatus() -> MINeSOUlsRPerH
    58:59:pro.gravit.launcher.LauncherTrustManager$CheckClassResult getCheckResult() -> MinESoulSRp3Ah
    69:71:void setCheckResult(pro.gravit.launcher.LauncherTrustManager$CheckClassResult) -> mINESoUlSRpxCH
    74:77:void requireModule(java.lang.String,pro.gravit.utils.Version) -> mINESoUlSRpxCH
    80:83:pro.gravit.launcher.modules.LauncherModule requireModule(java.lang.Class,pro.gravit.utils.Version) -> mINESoUlSRpxCH
    87:91:void requireModule(pro.gravit.launcher.modules.LauncherModule,pro.gravit.utils.Version,java.lang.String) -> mINESoUlSRpxCH
    106:106:void preInitAction() -> mINeSoULsRpkjm
    109:114:void preInit() -> MINESOULsRPuTS
    void init(pro.gravit.launcher.modules.LauncherInitContext) -> mINESoUlSRpxCH
    142:144:boolean registerEvent(pro.gravit.launcher.modules.LauncherModule$EventHandler,java.lang.Class) -> mINESoUlSRpxCH
    155:164:void callEvent(pro.gravit.launcher.modules.LauncherModule$Event) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModule$1 -> pro.gravit.launcher.minEsoULsRpbrq:
# {"fileName":"LauncherModule.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModule$Event -> pro.gravit.launcher.MiNESOuLsrpD0M:
# {"fileName":"LauncherModule.java","id":"sourceFile"}
    boolean cancel -> MINeSOUlsRPerH
    218:219:void <init>() -> <init>
    222:222:boolean isCancel() -> mINESoUlSRpxCH
    226:227:void cancel() -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModule$EventEntity -> pro.gravit.launcher.miNesOULsRpKQN:
# {"fileName":"LauncherModule.java","id":"sourceFile"}
    java.lang.Class clazz -> mINESoUlSRpxCH
    pro.gravit.launcher.modules.LauncherModule$EventHandler handler -> MINeSoulsrppRw
    212:215:void <init>(pro.gravit.launcher.modules.LauncherModule$EventHandler,java.lang.Class) -> <init>
    208:208:void <init>(pro.gravit.launcher.modules.LauncherModule$EventHandler,java.lang.Class,pro.gravit.launcher.modules.LauncherModule$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModule$EventHandler -> pro.gravit.launcher.mineSOUlsRpoVb:
# {"fileName":"LauncherModule.java","id":"sourceFile"}
    void event(pro.gravit.launcher.modules.LauncherModule$Event) -> event
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModule$InitStatus -> pro.gravit.launcher.mINEsOULSRPQNk:
# {"fileName":"LauncherModule.java","id":"sourceFile"}
    pro.gravit.launcher.modules.LauncherModule$InitStatus CREATED -> mINESoUlSRpxCH
    pro.gravit.launcher.modules.LauncherModule$InitStatus PRE_INIT_WAIT -> MINeSoulsrppRw
    pro.gravit.launcher.modules.LauncherModule$InitStatus PRE_INIT -> miNeSOUlSRPT7R
    pro.gravit.launcher.modules.LauncherModule$InitStatus INIT_WAIT -> MINeSOUlsRPerH
    pro.gravit.launcher.modules.LauncherModule$InitStatus INIT -> MinESoulSRp3Ah
    pro.gravit.launcher.modules.LauncherModule$InitStatus FINISH -> mINeSoULsRpkjm
    boolean isAvailable -> MINESOULsRPuTS
    pro.gravit.launcher.modules.LauncherModule$InitStatus[] $VALUES -> MInEsOulsRPpPn
    169:169:pro.gravit.launcher.modules.LauncherModule$InitStatus[] values() -> values
    169:169:pro.gravit.launcher.modules.LauncherModule$InitStatus valueOf(java.lang.String) -> valueOf
    194:196:void <init>(java.lang.String,int,boolean) -> <init>
    199:199:boolean isAvailable() -> mINESoUlSRpxCH
    169:169:pro.gravit.launcher.modules.LauncherModule$InitStatus[] $values() -> MINeSoulsrppRw
    169:190:void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModuleInfo -> pro.gravit.launcher.MiNEsouLsRPQsC:
# {"fileName":"LauncherModuleInfo.java","id":"sourceFile"}
    java.lang.String name -> mINESoUlSRpxCH
    pro.gravit.utils.Version version -> MINeSoulsrppRw
    int priority -> miNeSOUlSRPT7R
    java.lang.String[] dependencies -> MINeSOUlsRPerH
    java.lang.String[] providers -> MinESoulSRp3Ah
    15:21:void <init>(java.lang.String,pro.gravit.utils.Version) -> <init>
    23:29:void <init>(java.lang.String) -> <init>
    31:37:void <init>(java.lang.String,pro.gravit.utils.Version,java.lang.String[]) -> <init>
    39:45:void <init>(java.lang.String,pro.gravit.utils.Version,int,java.lang.String[]) -> <init>
    47:53:void <init>(java.lang.String,pro.gravit.utils.Version,int,java.lang.String[],java.lang.String[]) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModulesContext -> pro.gravit.launcher.MineSoULsrPR2D:
# {"fileName":"LauncherModulesContext.java","id":"sourceFile"}
    pro.gravit.launcher.modules.LauncherModulesManager getModulesManager() -> mINESoUlSRpxCH
    pro.gravit.launcher.modules.ModulesConfigManager getModulesConfigManager() -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.LauncherModulesManager -> pro.gravit.launcher.mInesouLsrPr8C:
# {"fileName":"LauncherModulesManager.java","id":"sourceFile"}
    pro.gravit.launcher.modules.LauncherModule loadModule(pro.gravit.launcher.modules.LauncherModule) -> mINESoUlSRpxCH
    pro.gravit.launcher.modules.LauncherModule loadModule(java.nio.file.Path) -> MINeSoulsrppRw
    pro.gravit.launcher.modules.LauncherModule getModule(java.lang.String) -> mINESoUlSRpxCH
    pro.gravit.launcher.modules.LauncherModule getCoreModule() -> miNeSOUlSRPT7R
    21:21:boolean containsModule(java.lang.String) -> MINeSoulsrppRw
    25:25:boolean containsModule(java.lang.Class) -> mINESoUlSRpxCH
    java.lang.ClassLoader getModuleClassLoader() -> MINeSOUlsRPerH
    pro.gravit.launcher.modules.ModulesConfigManager getConfigManager() -> MinESoulSRp3Ah
    pro.gravit.launcher.modules.LauncherModule getModule(java.lang.Class) -> MINeSoulsrppRw
    java.lang.Object getModuleByInterface(java.lang.Class) -> miNeSOUlSRPT7R
    java.util.List getModulesByInterface(java.lang.Class) -> MINeSOUlsRPerH
    pro.gravit.launcher.modules.LauncherModule findModule(java.lang.Class,java.util.function.Predicate) -> mINESoUlSRpxCH
    pro.gravit.launcher.modules.LauncherModule findModule(java.lang.String,java.util.function.Predicate) -> mINESoUlSRpxCH
    void invokeEvent(pro.gravit.launcher.modules.LauncherModule$Event) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.ModulesConfigManager -> pro.gravit.launcher.MINeSOULSRP7zE:
# {"fileName":"ModulesConfigManager.java","id":"sourceFile"}
    java.nio.file.Path getModuleConfig(java.lang.String) -> mINESoUlSRpxCH
    java.nio.file.Path getModuleConfig(java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    java.nio.file.Path getModuleConfigDir(java.lang.String) -> MINeSoulsrppRw
    pro.gravit.launcher.config.SimpleConfigurable getConfigurable(java.lang.Class,java.nio.file.Path) -> mINESoUlSRpxCH
    17:17:pro.gravit.launcher.config.SimpleConfigurable getConfigurable(java.lang.Class,java.lang.String) -> mINESoUlSRpxCH
    21:21:pro.gravit.launcher.config.SimpleConfigurable getConfigurable(java.lang.Class,java.lang.String,java.lang.String) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.events.ClosePhase -> pro.gravit.launcher.MINesOUlsrpDPp:
# {"fileName":"ClosePhase.java","id":"sourceFile"}
    5:5:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.events.InitPhase -> pro.gravit.launcher.miNesouLsRPFVq:
# {"fileName":"InitPhase.java","id":"sourceFile"}
    5:5:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.events.OfflineModeEvent -> pro.gravit.launcher.MineSOulsRP5f4:
# {"fileName":"OfflineModeEvent.java","id":"sourceFile"}
    pro.gravit.launcher.request.RequestService service -> mINESoUlSRpxCH
    9:11:void <init>(pro.gravit.launcher.request.RequestService) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.events.PostInitPhase -> pro.gravit.launcher.MinesOUlSrpWYm:
# {"fileName":"PostInitPhase.java","id":"sourceFile"}
    5:5:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.events.PreConfigPhase -> pro.gravit.launcher.MINesOULSrp9Xs:
# {"fileName":"PreConfigPhase.java","id":"sourceFile"}
    5:5:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.events.PreGsonPhase -> pro.gravit.launcher.MINEsOulsRPhsn:
# {"fileName":"PreGsonPhase.java","id":"sourceFile"}
    com.google.gson.GsonBuilder gsonBuilder -> mINESoUlSRpxCH
    9:11:void <init>(com.google.gson.GsonBuilder) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.impl.SimpleModuleContext -> pro.gravit.launcher.mINeSOUlSRpq65:
# {"fileName":"SimpleModuleContext.java","id":"sourceFile"}
    pro.gravit.launcher.modules.LauncherModulesManager modulesManager -> mINESoUlSRpxCH
    pro.gravit.launcher.modules.ModulesConfigManager configManager -> MINeSoulsrppRw
    11:14:void <init>(pro.gravit.launcher.modules.LauncherModulesManager,pro.gravit.launcher.modules.ModulesConfigManager) -> <init>
    18:18:pro.gravit.launcher.modules.LauncherModulesManager getModulesManager() -> mINESoUlSRpxCH
    23:23:pro.gravit.launcher.modules.ModulesConfigManager getModulesConfigManager() -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.impl.SimpleModuleManager -> pro.gravit.launcher.mineSoULSrPceN:
# {"fileName":"SimpleModuleManager.java","id":"sourceFile"}
    java.lang.invoke.MethodType VOID_TYPE -> MineSoUlsRPEJI
    java.util.List modules -> mINESoUlSRpxCH
    java.util.List moduleNames -> MINeSoulsrppRw
    pro.gravit.launcher.modules.impl.SimpleModuleContext context -> miNeSOUlSRPT7R
    pro.gravit.launcher.modules.ModulesConfigManager modulesConfigManager -> MINeSOUlsRPerH
    java.nio.file.Path modulesDir -> MinESoulSRp3Ah
    pro.gravit.launcher.LauncherTrustManager trustManager -> mINeSoULsRpkjm
    pro.gravit.utils.PublicURLClassLoader classLoader -> MINESOULsRPuTS
    pro.gravit.launcher.modules.LauncherInitContext initContext -> MInEsOulsRPpPn
    30:44:void <init>(java.nio.file.Path,java.nio.file.Path) -> <init>
    30:51:void <init>(java.nio.file.Path,java.nio.file.Path,pro.gravit.launcher.LauncherTrustManager) -> <init>
    55:57:java.security.cert.X509Certificate[] getCertificates(java.lang.Class) -> mINeSoULsRpkjm
    61:62:void autoload() -> mINESoUlSRpxCH
    65:69:void autoload(java.nio.file.Path) -> mINESoUlSRpxCH
    72:102:void initModules(pro.gravit.launcher.modules.LauncherInitContext) -> mINESoUlSRpxCH
    105:112:boolean checkDepend(pro.gravit.launcher.modules.LauncherModule) -> MINeSoulsrppRw
    117:133:pro.gravit.launcher.modules.LauncherModule loadModule(pro.gravit.launcher.modules.LauncherModule) -> mINESoUlSRpxCH
    138:169:pro.gravit.launcher.modules.LauncherModule loadModule(java.nio.file.Path) -> MINeSoulsrppRw
    174:176:pro.gravit.launcher.LauncherTrustManager$CheckClassResult checkModuleClass(java.lang.Class) -> MinESoulSRp3Ah
    180:181:boolean verifyClassCheckResult(pro.gravit.launcher.LauncherTrustManager$CheckClassResult) -> mINESoUlSRpxCH
    185:187:void verifyClassCheckResultExceptional(pro.gravit.launcher.LauncherTrustManager$CheckClassResult) -> MINeSoulsrppRw
    192:197:pro.gravit.launcher.modules.LauncherModule getModule(java.lang.String) -> mINESoUlSRpxCH
    202:202:pro.gravit.launcher.modules.LauncherModule getCoreModule() -> miNeSOUlSRPT7R
    207:207:java.lang.ClassLoader getModuleClassLoader() -> MINeSOUlsRPerH
    213:216:pro.gravit.launcher.modules.LauncherModule getModule(java.lang.Class) -> MINeSoulsrppRw
    222:225:java.lang.Object getModuleByInterface(java.lang.Class) -> miNeSOUlSRPT7R
    231:235:java.util.List getModulesByInterface(java.lang.Class) -> MINeSOUlsRPerH
    241:246:pro.gravit.launcher.modules.LauncherModule findModule(java.lang.Class,java.util.function.Predicate) -> mINESoUlSRpxCH
    251:256:pro.gravit.launcher.modules.LauncherModule findModule(java.lang.String,java.util.function.Predicate) -> mINESoUlSRpxCH
    261:265:void invokeEvent(pro.gravit.launcher.modules.LauncherModule$Event) -> mINESoUlSRpxCH
    269:269:pro.gravit.launcher.modules.ModulesConfigManager getConfigManager() -> MinESoulSRp3Ah
    74:76:int lambda$initModules$3(pro.gravit.launcher.modules.LauncherModule,pro.gravit.launcher.modules.LauncherModule) -> mINESoUlSRpxCH
    57:57:java.security.cert.X509Certificate[] lambda$getCertificates$2(int) -> mINESoUlSRpxCH
    57:57:java.security.cert.X509Certificate lambda$getCertificates$1(java.lang.Object) -> mINESoUlSRpxCH
    57:57:boolean lambda$getCertificates$0(java.lang.Object) -> MINeSoulsrppRw
    29:29:void <clinit>() -> <clinit>
pro.gravit.launcher.modules.impl.SimpleModuleManager$1 -> pro.gravit.launcher.miNESOULSrPipf:
# {"fileName":"SimpleModuleManager.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.modules.impl.SimpleModuleManager$ModulesVisitor -> pro.gravit.launcher.MinEsOulSRpQef:
# {"fileName":"SimpleModuleManager.java","id":"sourceFile"}
    pro.gravit.launcher.modules.impl.SimpleModuleManager this$0 -> mINESoUlSRpxCH
    273:274:void <init>(pro.gravit.launcher.modules.impl.SimpleModuleManager) -> <init>
    278:280:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> mINESoUlSRpxCH
    272:272:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    272:272:void <init>(pro.gravit.launcher.modules.impl.SimpleModuleManager,pro.gravit.launcher.modules.impl.SimpleModuleManager$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfile -> pro.gravit.launcher.profiles.ClientProfile:
# {"fileName":"ClientProfile.java","id":"sourceFile"}
    pro.gravit.launcher.hasher.FileNameMatcher ASSET_MATCHER -> ASSET_MATCHER
    java.lang.String title -> title
    java.util.UUID uuid -> uuid
    pro.gravit.launcher.profiles.ClientProfile$Version version -> version
    java.lang.String info -> info
    java.lang.String dir -> dir
    int sortIndex -> sortIndex
    java.lang.String assetIndex -> assetIndex
    java.lang.String assetDir -> assetDir
    java.util.List update -> update
    java.util.List updateExclusions -> updateExclusions
    java.util.List updateShared -> updateShared
    java.util.List updateVerify -> updateVerify
    java.util.Set updateOptional -> updateOptional
    java.util.List jvmArgs -> jvmArgs
    java.util.List classPath -> classPath
    java.util.List modulePath -> modulePath
    java.util.List modules -> modules
    java.util.List altClassPath -> altClassPath
    java.util.List clientArgs -> clientArgs
    java.util.List compatClasses -> compatClasses
    java.util.Map properties -> properties
    java.util.List servers -> servers
    pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig classLoaderConfig -> classLoaderConfig
    java.util.List flags -> flags
    int recommendJavaVersion -> recommendJavaVersion
    int minJavaVersion -> minJavaVersion
    int maxJavaVersion -> maxJavaVersion
    pro.gravit.launcher.profiles.ClientProfile$ProfileDefaultSettings settings -> settings
    boolean limited -> limited
    java.lang.String mainClass -> mainClass
    51:100:void <init>() -> <init>
    51:132:void <init>(java.util.List,java.util.List,java.util.List,java.util.List,java.util.Set,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.Map,java.util.List,pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig,java.util.List,pro.gravit.launcher.profiles.ClientProfile$Version,java.lang.String,java.lang.String,java.lang.String,int,int,int,pro.gravit.launcher.profiles.ClientProfile$ProfileDefaultSettings,int,java.util.UUID,java.lang.String,java.lang.String,java.lang.String) -> <init>
    135:138:pro.gravit.launcher.profiles.ClientProfile$ServerProfile getDefaultServerProfile() -> getDefaultServerProfile
    143:143:int compareTo(pro.gravit.launcher.profiles.ClientProfile) -> compareTo
    147:147:java.lang.String getAssetIndex() -> getAssetIndex
    151:151:pro.gravit.launcher.hasher.FileNameMatcher getAssetUpdateMatcher() -> getAssetUpdateMatcher
    155:155:java.lang.String[] getClassPath() -> getClassPath
    159:159:java.util.List getModulePath() -> getModulePath
    163:163:java.util.List getModules() -> getModules
    167:167:java.lang.String[] getAlternativeClassPath() -> getAlternativeClassPath
    171:171:java.lang.String[] getClientArgs() -> getClientArgs
    175:175:java.lang.String getDir() -> getDir
    179:180:void setDir(java.lang.String) -> setDir
    183:183:java.lang.String getAssetDir() -> getAssetDir
    187:187:java.util.List getUpdateExclusions() -> getUpdateExclusions
    191:203:pro.gravit.launcher.hasher.FileNameMatcher getClientUpdateMatcher() -> getClientUpdateMatcher
    207:207:java.lang.String[] getJvmArgs() -> getJvmArgs
    211:211:java.lang.String getMainClass() -> getMainClass
    215:215:java.util.List getServers() -> getServers
    219:220:java.lang.String getServerAddress() -> getServerAddress
    224:224:java.util.Set getOptional() -> getOptional
    228:228:int getRecommendJavaVersion() -> getRecommendJavaVersion
    232:232:int getMinJavaVersion() -> getMinJavaVersion
    236:236:int getMaxJavaVersion() -> getMaxJavaVersion
    240:240:pro.gravit.launcher.profiles.ClientProfile$ProfileDefaultSettings getSettings() -> getSettings
    244:258:void updateOptionalGraph() -> updateOptionalGraph
    261:263:pro.gravit.launcher.profiles.optional.OptionalFile getOptionalFile(java.lang.String) -> getOptionalFile
    267:267:java.util.Collection getShared() -> getShared
    271:272:int getServerPort() -> getServerPort
    276:276:int getSortIndex() -> getSortIndex
    280:280:java.lang.String getTitle() -> getTitle
    284:285:void setTitle(java.lang.String) -> setTitle
    288:288:java.lang.String getInfo() -> getInfo
    292:293:void setInfo(java.lang.String) -> setInfo
    296:296:pro.gravit.launcher.profiles.ClientProfile$Version getVersion() -> getVersion
    300:301:void setVersion(pro.gravit.launcher.profiles.ClientProfile$Version) -> setVersion
    305:305:boolean isUpdateFastCheck() -> isUpdateFastCheck
    310:310:java.lang.String toString() -> toString
    314:314:java.util.UUID getUUID() -> getUUID
    318:319:void setUUID(java.util.UUID) -> setUUID
    322:322:boolean hasFlag(pro.gravit.launcher.profiles.ClientProfile$CompatibilityFlags) -> hasFlag
    327:379:void verify() -> verify
    382:382:java.lang.String getProperty(java.lang.String) -> getProperty
    386:387:void putProperty(java.lang.String,java.lang.String) -> putProperty
    390:390:boolean containsProperty(java.lang.String) -> containsProperty
    394:395:void clearProperties() -> clearProperties
    398:398:java.util.Map getProperties() -> getProperties
    402:402:java.util.List getCompatClasses() -> getCompatClasses
    407:410:boolean equals(java.lang.Object) -> equals
    415:415:int hashCode() -> hashCode
    419:419:pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig getClassLoaderConfig() -> getClassLoaderConfig
    423:424:void setClassLoaderConfig(pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig) -> setClassLoaderConfig
    427:427:boolean isLimited() -> isLimited
    431:431:java.util.List getFlags() -> getFlags
    16:16:int compareTo(java.lang.Object) -> compareTo
    17:17:void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig -> pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig:
# {"fileName":"ClientProfile.java","id":"sourceFile"}
    pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig AGENT -> AGENT
    pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig LAUNCHER -> LAUNCHER
    pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig MODULE -> MODULE
    pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig SYSTEM_ARGS -> SYSTEM_ARGS
    pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig[] $VALUES -> $VALUES
    434:434:pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig[] values() -> values
    434:434:pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig valueOf(java.lang.String) -> valueOf
    434:434:void <init>(java.lang.String,int) -> <init>
    434:434:pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig[] $values() -> $values
    434:435:void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfile$CompatibilityFlags -> pro.gravit.launcher.profiles.ClientProfile$CompatibilityFlags:
# {"fileName":"ClientProfile.java","id":"sourceFile"}
    pro.gravit.launcher.profiles.ClientProfile$CompatibilityFlags LEGACY_NATIVES_DIR -> LEGACY_NATIVES_DIR
    pro.gravit.launcher.profiles.ClientProfile$CompatibilityFlags[] $VALUES -> $VALUES
    438:438:pro.gravit.launcher.profiles.ClientProfile$CompatibilityFlags[] values() -> values
    438:438:pro.gravit.launcher.profiles.ClientProfile$CompatibilityFlags valueOf(java.lang.String) -> valueOf
    438:438:void <init>(java.lang.String,int) -> <init>
    438:438:pro.gravit.launcher.profiles.ClientProfile$CompatibilityFlags[] $values() -> $values
    438:439:void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfile$ProfileDefaultSettings -> pro.gravit.launcher.profiles.ClientProfile$ProfileDefaultSettings:
# {"fileName":"ClientProfile.java","id":"sourceFile"}
    int ram -> ram
    boolean autoEnter -> autoEnter
    boolean fullScreen -> fullScreen
    571:571:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfile$ServerProfile -> pro.gravit.launcher.profiles.ClientProfile$ServerProfile:
# {"fileName":"ClientProfile.java","id":"sourceFile"}
    java.lang.String name -> name
    java.lang.String serverAddress -> serverAddress
    int serverPort -> serverPort
    boolean isDefault -> isDefault
    int protocol -> protocol
    boolean socketPing -> socketPing
    546:551:void <init>() -> <init>
    546:557:void <init>(java.lang.String,java.lang.String,int) -> <init>
    546:564:void <init>(java.lang.String,java.lang.String,int,boolean) -> <init>
    567:567:java.net.InetSocketAddress toSocketAddress() -> toSocketAddress
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfile$Version -> pro.gravit.launcher.profiles.ClientProfile$Version:
# {"fileName":"ClientProfile.java","id":"sourceFile"}
    long[] data -> data
    java.lang.String original -> original
    boolean isObjectSerialized -> isObjectSerialized
    448:452:pro.gravit.launcher.profiles.ClientProfile$Version of(java.lang.String) -> of
    455:459:void <init>(long[],java.lang.String) -> <init>
    461:465:void <init>(long[],java.lang.String,boolean) -> <init>
    469:492:int compareTo(pro.gravit.launcher.profiles.ClientProfile$Version) -> compareTo
    496:496:java.lang.String toCleanString() -> toCleanString
    500:500:java.lang.String join(long[]) -> join
    505:505:java.lang.String toString() -> toString
    442:442:int compareTo(java.lang.Object) -> compareTo
    500:500:java.lang.String[] lambda$join$1(int) -> lambda$join$1
    451:451:boolean lambda$of$0(java.lang.String) -> lambda$of$0
    442:442:java.lang.String access$000(long[]) -> access$000
    442:442:boolean access$100(pro.gravit.launcher.profiles.ClientProfile$Version) -> access$100
    442:442:java.lang.String access$200(pro.gravit.launcher.profiles.ClientProfile$Version) -> access$200
    442:442:long[] access$300(pro.gravit.launcher.profiles.ClientProfile$Version) -> access$300
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfile$Version$GsonSerializer -> pro.gravit.launcher.profiles.ClientProfile$Version$GsonSerializer:
# {"fileName":"ClientProfile.java","id":"sourceFile"}
    508:508:void <init>() -> <init>
    512:521:pro.gravit.launcher.profiles.ClientProfile$Version deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    527:537:com.google.gson.JsonElement serialize(pro.gravit.launcher.profiles.ClientProfile$Version,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    508:508:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    508:508:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfileBuilder -> pro.gravit.launcher.profiles.ClientProfileBuilder:
# {"fileName":"ClientProfileBuilder.java","id":"sourceFile"}
    java.util.List update -> update
    java.util.List updateExclusions -> updateExclusions
    java.util.List updateShared -> updateShared
    java.util.List updateVerify -> updateVerify
    java.util.Set updateOptional -> updateOptional
    java.util.List jvmArgs -> jvmArgs
    java.util.List classPath -> classPath
    java.util.List modulePath -> modulePath
    java.util.List modules -> modules
    java.util.List altClassPath -> altClassPath
    java.util.List clientArgs -> clientArgs
    java.util.List compatClasses -> compatClasses
    java.util.Map properties -> properties
    java.util.List servers -> servers
    pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig classLoaderConfig -> classLoaderConfig
    java.util.List flags -> flags
    pro.gravit.launcher.profiles.ClientProfile$Version version -> version
    java.lang.String assetIndex -> assetIndex
    java.lang.String dir -> dir
    java.lang.String assetDir -> assetDir
    int recommendJavaVersion -> recommendJavaVersion
    int minJavaVersion -> minJavaVersion
    int maxJavaVersion -> maxJavaVersion
    pro.gravit.launcher.profiles.ClientProfile$ProfileDefaultSettings settings -> settings
    int sortIndex -> sortIndex
    java.util.UUID uuid -> uuid
    java.lang.String title -> title
    java.lang.String info -> info
    java.lang.String mainClass -> mainClass
    7:31:void <init>() -> <init>
    39:40:void setUpdate(java.util.List) -> setUpdate
    43:44:pro.gravit.launcher.profiles.ClientProfileBuilder setUpdateExclusions(java.util.List) -> setUpdateExclusions
    48:49:pro.gravit.launcher.profiles.ClientProfileBuilder setUpdateShared(java.util.List) -> setUpdateShared
    53:54:void setUpdateVerify(java.util.List) -> setUpdateVerify
    57:58:void setUpdateOptional(java.util.Set) -> setUpdateOptional
    61:62:void setJvmArgs(java.util.List) -> setJvmArgs
    65:66:void setClassPath(java.util.List) -> setClassPath
    69:70:void setAltClassPath(java.util.List) -> setAltClassPath
    73:74:void setClientArgs(java.util.List) -> setClientArgs
    77:78:pro.gravit.launcher.profiles.ClientProfileBuilder setCompatClasses(java.util.List) -> setCompatClasses
    82:83:pro.gravit.launcher.profiles.ClientProfileBuilder setProperties(java.util.Map) -> setProperties
    87:88:void setServers(java.util.List) -> setServers
    91:92:void setClassLoaderConfig(pro.gravit.launcher.profiles.ClientProfile$ClassLoaderConfig) -> setClassLoaderConfig
    95:96:void setVersion(pro.gravit.launcher.profiles.ClientProfile$Version) -> setVersion
    99:100:void setAssetIndex(java.lang.String) -> setAssetIndex
    103:104:void setDir(java.lang.String) -> setDir
    107:108:void setAssetDir(java.lang.String) -> setAssetDir
    111:112:void setRecommendJavaVersion(int) -> setRecommendJavaVersion
    115:116:pro.gravit.launcher.profiles.ClientProfileBuilder setModulePath(java.util.List) -> setModulePath
    120:121:pro.gravit.launcher.profiles.ClientProfileBuilder setModules(java.util.List) -> setModules
    125:126:void setMinJavaVersion(int) -> setMinJavaVersion
    129:130:void setMaxJavaVersion(int) -> setMaxJavaVersion
    133:134:pro.gravit.launcher.profiles.ClientProfileBuilder setSettings(pro.gravit.launcher.profiles.ClientProfile$ProfileDefaultSettings) -> setSettings
    138:139:pro.gravit.launcher.profiles.ClientProfileBuilder setSortIndex(int) -> setSortIndex
    143:144:void setUuid(java.util.UUID) -> setUuid
    147:148:void setTitle(java.lang.String) -> setTitle
    151:152:void setInfo(java.lang.String) -> setInfo
    155:156:void setMainClass(java.lang.String) -> setMainClass
    159:160:pro.gravit.launcher.profiles.ClientProfileBuilder setFlags(java.util.List) -> setFlags
    164:164:pro.gravit.launcher.profiles.ClientProfile createClientProfile() -> createClientProfile
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.ClientProfileVersions -> pro.gravit.launcher.profiles.ClientProfileVersions:
# {"fileName":"ClientProfileVersions.java","id":"sourceFile"}
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_6_4 -> MINECRAFT_1_6_4
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_7_2 -> MINECRAFT_1_7_2
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_7_10 -> MINECRAFT_1_7_10
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_9_4 -> MINECRAFT_1_9_4
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_12_2 -> MINECRAFT_1_12_2
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_13 -> MINECRAFT_1_13
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_16_5 -> MINECRAFT_1_16_5
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_17 -> MINECRAFT_1_17
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_18 -> MINECRAFT_1_18
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_19 -> MINECRAFT_1_19
    pro.gravit.launcher.profiles.ClientProfile$Version MINECRAFT_1_20 -> MINECRAFT_1_20
    4:5:void <init>() -> <init>
    7:18:void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.PlayerProfile -> pro.gravit.launcher.profiles.PlayerProfile:
# {"fileName":"PlayerProfile.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    java.lang.String username -> username
    java.util.Map assets -> assets
    java.util.Map properties -> properties
    20:21:void <init>(java.util.UUID,java.lang.String,pro.gravit.launcher.profiles.Texture,pro.gravit.launcher.profiles.Texture) -> <init>
    24:35:void <init>(java.util.UUID,java.lang.String,pro.gravit.launcher.profiles.Texture,pro.gravit.launcher.profiles.Texture,java.util.Map) -> <init>
    37:42:void <init>(java.util.UUID,java.lang.String,java.util.Map,java.util.Map) -> <init>
    45:45:pro.gravit.launcher.profiles.PlayerProfile newOfflineProfile(java.lang.String) -> newOfflineProfile
    49:49:java.util.UUID offlineUUID(java.lang.String) -> offlineUUID
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.Texture -> pro.gravit.launcher.profiles.Texture:
# {"fileName":"Texture.java","id":"sourceFile"}
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm DIGEST_ALGO -> DIGEST_ALGO
    java.lang.String url -> url
    byte[] digest -> digest
    java.util.Map metadata -> metadata
    27:42:void <init>(java.lang.String,boolean,java.util.Map) -> <init>
    44:55:void <init>(java.lang.String,java.nio.file.Path,boolean,java.util.Map) -> <init>
    59:63:void <init>(java.lang.String,byte[]) -> <init>
    65:69:void <init>(java.lang.String,byte[],java.util.Map) -> <init>
    73:75:void write(pro.gravit.launcher.serialize.HOutput) -> write
    79:81:java.lang.String toString() -> toString
    17:17:void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.OptionalDepend -> pro.gravit.launcher.profiles.optional.OptionalDepend:
# {"fileName":"OptionalDepend.java","id":"sourceFile"}
    java.lang.String name -> name
    5:5:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.OptionalFile -> pro.gravit.launcher.profiles.optional.OptionalFile:
# {"fileName":"OptionalFile.java","id":"sourceFile"}
    java.util.List actions -> actions
    boolean mark -> mark
    boolean visible -> visible
    java.lang.String name -> name
    java.lang.String info -> info
    java.util.List triggersList -> triggersList
    pro.gravit.launcher.profiles.optional.OptionalDepend[] dependenciesFile -> dependenciesFile
    pro.gravit.launcher.profiles.optional.OptionalDepend[] conflictFile -> conflictFile
    pro.gravit.launcher.profiles.optional.OptionalFile[] dependencies -> dependencies
    pro.gravit.launcher.profiles.optional.OptionalFile[] conflict -> conflict
    int subTreeLevel -> subTreeLevel
    boolean isPreset -> isPreset
    boolean limited -> limited
    9:30:void <init>() -> <init>
    39:42:boolean equals(java.lang.Object) -> equals
    46:46:int hashCode() -> hashCode
    50:50:java.lang.String getName() -> getName
    54:54:boolean isVisible() -> isVisible
    58:58:boolean isMark() -> isMark
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.OptionalView -> pro.gravit.launcher.profiles.optional.OptionalView:
# {"fileName":"OptionalView.java","id":"sourceFile"}
    java.util.Set enabled -> enabled
    java.util.Map installInfo -> installInfo
    java.util.Set all -> all
    13:22:void <init>(pro.gravit.launcher.profiles.ClientProfile) -> <init>
    13:28:void <init>(pro.gravit.launcher.profiles.optional.OptionalView) -> <init>
    31:43:void <init>(pro.gravit.launcher.profiles.ClientProfile,pro.gravit.launcher.profiles.optional.OptionalView) -> <init>
    47:57:java.util.Set getActionsByClass(java.lang.Class) -> getActionsByClass
    61:66:pro.gravit.launcher.profiles.optional.OptionalFile findByName(java.lang.String) -> findByName
    70:70:boolean isEnabled(pro.gravit.launcher.profiles.optional.OptionalFile) -> isEnabled
    74:80:java.util.Set getEnabledActions() -> getEnabledActions
    84:91:java.util.Set getDisabledActions() -> getDisabledActions
    95:114:void enable(pro.gravit.launcher.profiles.optional.OptionalFile,boolean,java.util.function.BiConsumer) -> enable
    117:132:void disable(pro.gravit.launcher.profiles.optional.OptionalFile,java.util.function.BiConsumer) -> disable
    135:140:boolean contains(pro.gravit.launcher.profiles.optional.OptionalFile,pro.gravit.launcher.profiles.optional.OptionalFile[]) -> contains
    40:40:void lambda$new$1(pro.gravit.launcher.profiles.optional.OptionalFile,java.lang.Boolean) -> lambda$new$1
    38:38:void lambda$new$0(pro.gravit.launcher.profiles.optional.OptionalFile,java.lang.Boolean) -> lambda$new$0
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.OptionalView$OptionalFileInstallInfo -> pro.gravit.launcher.profiles.optional.OptionalView$OptionalFileInstallInfo:
# {"fileName":"OptionalView.java","id":"sourceFile"}
    boolean isManual -> isManual
    143:143:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.actions.OptionalAction -> pro.gravit.launcher.profiles.optional.actions.OptionalAction:
# {"fileName":"OptionalAction.java","id":"sourceFile"}
    pro.gravit.utils.ProviderMap providers -> providers
    boolean registerProviders -> registerProviders
    5:5:void <init>() -> <init>
    10:17:void registerProviders() -> registerProviders
    6:7:void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.actions.OptionalActionClassPath -> pro.gravit.launcher.profiles.optional.actions.OptionalActionClassPath:
# {"fileName":"OptionalActionClassPath.java","id":"sourceFile"}
    java.lang.String[] args -> args
    boolean useAltClasspath -> useAltClasspath
    5:8:void <init>() -> <init>
    5:12:void <init>(java.lang.String[]) -> <init>
    5:17:void <init>(java.lang.String[],boolean) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.actions.OptionalActionClientArgs -> pro.gravit.launcher.profiles.optional.actions.OptionalActionClientArgs:
# {"fileName":"OptionalActionClientArgs.java","id":"sourceFile"}
    java.util.List args -> args
    8:9:void <init>() -> <init>
    11:13:void <init>(java.util.List) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.actions.OptionalActionFile -> pro.gravit.launcher.profiles.optional.actions.OptionalActionFile:
# {"fileName":"OptionalActionFile.java","id":"sourceFile"}
    java.util.Map files -> files
    11:12:void <init>() -> <init>
    14:16:void <init>(java.util.Map) -> <init>
    19:29:void injectToHashedDir(pro.gravit.launcher.hasher.HashedDir) -> injectToHashedDir
    32:37:void disableInHashedDir(pro.gravit.launcher.hasher.HashedDir) -> disableInHashedDir
    34:36:void lambda$disableInHashedDir$1(pro.gravit.launcher.hasher.HashedDir,java.lang.String,java.lang.String) -> lambda$disableInHashedDir$1
    21:28:void lambda$injectToHashedDir$0(pro.gravit.launcher.hasher.HashedDir,java.lang.String,java.lang.String) -> lambda$injectToHashedDir$0
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.actions.OptionalActionJvmArgs -> pro.gravit.launcher.profiles.optional.actions.OptionalActionJvmArgs:
# {"fileName":"OptionalActionJvmArgs.java","id":"sourceFile"}
    java.util.List args -> args
    8:9:void <init>() -> <init>
    11:13:void <init>(java.util.List) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.triggers.ArchTrigger -> pro.gravit.launcher.profiles.optional.triggers.ArchTrigger:
# {"fileName":"ArchTrigger.java","id":"sourceFile"}
    pro.gravit.utils.helper.JVMHelper$ARCH arch -> arch
    6:6:void <init>() -> <init>
    11:11:boolean isTriggered(pro.gravit.launcher.profiles.optional.OptionalFile,pro.gravit.launcher.profiles.optional.triggers.OptionalTriggerContext) -> isTriggered
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.triggers.JavaTrigger -> pro.gravit.launcher.profiles.optional.triggers.JavaTrigger:
# {"fileName":"JavaTrigger.java","id":"sourceFile"}
    int minVersion -> minVersion
    int maxVersion -> maxVersion
    boolean requireJavaFX -> requireJavaFX
    11:15:void <init>(int,int,boolean) -> <init>
    17:21:void <init>(int,int) -> <init>
    23:27:void <init>() -> <init>
    31:34:boolean isTriggered(pro.gravit.launcher.profiles.optional.OptionalFile,pro.gravit.launcher.profiles.optional.triggers.OptionalTriggerContext) -> isTriggered
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.triggers.OSTrigger -> pro.gravit.launcher.profiles.optional.triggers.OSTrigger:
# {"fileName":"OSTrigger.java","id":"sourceFile"}
    pro.gravit.utils.helper.JVMHelper$OS os -> os
    9:11:void <init>(pro.gravit.utils.helper.JVMHelper$OS) -> <init>
    15:15:boolean isTriggered(pro.gravit.launcher.profiles.optional.OptionalFile,pro.gravit.launcher.profiles.optional.triggers.OptionalTriggerContext) -> isTriggered
    void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.triggers.OptionalTrigger -> pro.gravit.launcher.profiles.optional.triggers.OptionalTrigger:
# {"fileName":"OptionalTrigger.java","id":"sourceFile"}
    pro.gravit.utils.ProviderMap providers -> providers
    boolean isRegisteredProviders -> isRegisteredProviders
    boolean required -> required
    boolean inverted -> inverted
    6:6:void <init>() -> <init>
    13:19:void registerProviders() -> registerProviders
    boolean isTriggered(pro.gravit.launcher.profiles.optional.OptionalFile,pro.gravit.launcher.profiles.optional.triggers.OptionalTriggerContext) -> isTriggered
    24:26:boolean check(pro.gravit.launcher.profiles.optional.OptionalFile,pro.gravit.launcher.profiles.optional.triggers.OptionalTriggerContext) -> check
    7:8:void <clinit>() -> <clinit>
pro.gravit.launcher.profiles.optional.triggers.OptionalTriggerContext -> pro.gravit.launcher.profiles.optional.triggers.OptionalTriggerContext:
# {"fileName":"OptionalTriggerContext.java","id":"sourceFile"}
    pro.gravit.launcher.profiles.ClientProfile getProfile() -> getProfile
    java.lang.String getUsername() -> getUsername
    pro.gravit.utils.helper.JavaHelper$JavaVersion getJavaVersion() -> getJavaVersion
    16:16:pro.gravit.launcher.ClientPermissions getPermissions() -> getPermissions
    20:20:pro.gravit.launcher.profiles.PlayerProfile getPlayerProfile() -> getPlayerProfile
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.JsonResultSerializeAdapter -> pro.gravit.launcher.request.JsonResultSerializeAdapter:
# {"fileName":"JsonResultSerializeAdapter.java","id":"sourceFile"}
    java.lang.String PROP_NAME -> PROP_NAME
    7:7:void <init>() -> <init>
    13:18:com.google.gson.JsonElement serialize(pro.gravit.launcher.request.WebSocketEvent,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    7:7:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.PingRequest -> pro.gravit.launcher.request.PingRequest:
# {"fileName":"PingRequest.java","id":"sourceFile"}
    3:3:void <init>() -> <init>
    7:7:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.Request -> pro.gravit.launcher.request.Request:
# {"fileName":"Request.java","id":"sourceFile"}
    java.util.List extendedTokenCallbacks -> extendedTokenCallbacks
    java.util.List oauthChangeHandlers -> oauthChangeHandlers
    pro.gravit.launcher.request.websockets.StdWebSocketService service -> service
    pro.gravit.launcher.request.RequestService requestService -> requestService
    pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent oauth -> oauth
    java.util.Map extendedTokens -> extendedTokens
    java.lang.String authId -> authId
    long tokenExpiredTime -> tokenExpiredTime
    java.util.UUID requestUUID -> requestUUID
    java.util.concurrent.atomic.AtomicBoolean started -> started
    17:29:void <init>() -> <init>
    32:32:pro.gravit.launcher.request.RequestService getRequestService() -> getRequestService
    36:40:void setRequestService(pro.gravit.launcher.request.RequestService) -> setRequestService
    43:43:boolean isAvailable() -> isAvailable
    47:57:void setOAuth(java.lang.String,pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent) -> setOAuth
    60:60:pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent getOAuth() -> getOAuth
    64:64:java.lang.String getAuthId() -> getAuthId
    68:71:java.util.Map getExtendedTokens() -> getExtendedTokens
    76:79:void clearExtendedTokens() -> clearExtendedTokens
    82:86:void addExtendedToken(java.lang.String,java.lang.String) -> addExtendedToken
    89:93:void addAllExtendedToken(java.util.Map) -> addAllExtendedToken
    96:99:void setOAuth(java.lang.String,pro.gravit.launcher.events.request.AuthRequestEvent$OAuthRequestEvent,long) -> setOAuth
    102:104:boolean isTokenExpired() -> isTokenExpired
    108:108:long getTokenExpiredTime() -> getTokenExpiredTime
    112:112:java.lang.String getAccessToken() -> getAccessToken
    116:116:java.lang.String getRefreshToken() -> getRefreshToken
    120:122:void reconnect() -> reconnect
    125:162:pro.gravit.launcher.request.Request$RequestRestoreReport restore() -> restore
    166:166:void requestError(java.lang.String) -> requestError
    170:171:void addExtendedTokenCallback(pro.gravit.launcher.request.Request$ExtendedTokenCallback) -> addExtendedTokenCallback
    174:175:void removeExtendedTokenCallback(pro.gravit.launcher.request.Request$ExtendedTokenCallback) -> removeExtendedTokenCallback
    178:179:void addOAuthChangeHandler(java.util.function.BiConsumer) -> addOAuthChangeHandler
    182:183:void removeOAuthChangeHandler(java.util.function.BiConsumer) -> removeOAuthChangeHandler
    186:191:pro.gravit.launcher.request.WebSocketEvent request() -> request
    196:198:pro.gravit.launcher.request.WebSocketEvent request(pro.gravit.launcher.request.websockets.StdWebSocketService) -> request
    202:204:pro.gravit.launcher.request.WebSocketEvent request(pro.gravit.launcher.request.RequestService) -> request
    208:208:pro.gravit.launcher.request.WebSocketEvent requestDo(pro.gravit.launcher.request.RequestService) -> requestDo
    18:19:void <clinit>() -> <clinit>
pro.gravit.launcher.request.Request$ExtendedTokenCallback -> pro.gravit.launcher.request.Request$ExtendedTokenCallback:
# {"fileName":"Request.java","id":"sourceFile"}
    java.lang.String tryGetNewToken(java.lang.String) -> tryGetNewToken
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.Request$RequestRestoreReport -> pro.gravit.launcher.request.Request$RequestRestoreReport:
# {"fileName":"Request.java","id":"sourceFile"}
    boolean legacySession -> legacySession
    boolean refreshed -> refreshed
    java.util.List invalidExtendedTokens -> invalidExtendedTokens
    220:224:void <init>(boolean,boolean,java.util.List) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.RequestException -> pro.gravit.launcher.request.RequestException:
# {"fileName":"RequestException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    10:11:void <init>(java.lang.String) -> <init>
    15:16:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    20:21:void <init>(java.lang.Throwable) -> <init>
    25:25:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.RequestService -> pro.gravit.launcher.request.RequestService:
# {"fileName":"RequestService.java","id":"sourceFile"}
    java.util.concurrent.CompletableFuture request(pro.gravit.launcher.request.Request) -> request
    void registerEventHandler(pro.gravit.launcher.request.RequestService$EventHandler) -> registerEventHandler
    void unregisterEventHandler(pro.gravit.launcher.request.RequestService$EventHandler) -> unregisterEventHandler
    16:24:pro.gravit.launcher.request.WebSocketEvent requestSync(pro.gravit.launcher.request.Request) -> requestSync
    boolean isClosed() -> isClosed
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.RequestService$EventHandler -> pro.gravit.launcher.request.RequestService$EventHandler:
# {"fileName":"RequestService.java","id":"sourceFile"}
    boolean eventHandle(pro.gravit.launcher.request.WebSocketEvent) -> eventHandle
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.WebSocketEvent -> pro.gravit.launcher.request.WebSocketEvent:
# {"fileName":"WebSocketEvent.java","id":"sourceFile"}
    java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.AdditionalDataRequest -> pro.gravit.launcher.request.auth.AdditionalDataRequest:
# {"fileName":"AdditionalDataRequest.java","id":"sourceFile"}
    java.lang.String username -> username
    java.util.UUID uuid -> uuid
    12:14:void <init>(java.lang.String) -> <init>
    16:18:void <init>(java.util.UUID) -> <init>
    22:22:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.AuthRequest -> pro.gravit.launcher.request.auth.AuthRequest:
# {"fileName":"AuthRequest.java","id":"sourceFile"}
    pro.gravit.utils.ProviderMap providers -> providers
    boolean registerProviders -> registerProviders
    java.lang.String login -> login
    pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface password -> password
    java.lang.String auth_id -> auth_id
    boolean getSession -> getSession
    pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes authType -> authType
    24:30:void <init>(java.lang.String,java.lang.String,java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes) -> <init>
    32:38:void <init>(java.lang.String,pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface,java.lang.String,boolean,pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes) -> <init>
    41:53:void registerProviders() -> registerProviders
    57:57:java.lang.String getType() -> getType
    11:12:void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface -> pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface:
# {"fileName":"AuthRequest.java","id":"sourceFile"}
    boolean check() -> check
    71:71:boolean isAllowSave() -> isAllowSave
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes -> pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes:
# {"fileName":"AuthRequest.java","id":"sourceFile"}
    pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes CLIENT -> CLIENT
    pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes API -> API
    pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes[] $VALUES -> $VALUES
    60:60:pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes[] values() -> values
    60:60:pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes valueOf(java.lang.String) -> valueOf
    60:60:void <init>(java.lang.String,int) -> <init>
    60:60:pro.gravit.launcher.request.auth.AuthRequest$ConnectTypes[] $values() -> $values
    60:63:void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.CheckServerRequest -> pro.gravit.launcher.request.auth.CheckServerRequest:
# {"fileName":"CheckServerRequest.java","id":"sourceFile"}
    java.lang.String username -> username
    java.lang.String serverID -> serverID
    16:19:void <init>(java.lang.String,java.lang.String) -> <init>
    23:23:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.CurrentUserRequest -> pro.gravit.launcher.request.auth.CurrentUserRequest:
# {"fileName":"CurrentUserRequest.java","id":"sourceFile"}
    6:6:void <init>() -> <init>
    9:9:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.ExitRequest -> pro.gravit.launcher.request.auth.ExitRequest:
# {"fileName":"ExitRequest.java","id":"sourceFile"}
    boolean exitAll -> exitAll
    java.lang.String username -> username
    10:13:void <init>() -> <init>
    15:18:void <init>(boolean) -> <init>
    20:23:void <init>(boolean,java.lang.String) -> <init>
    27:27:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.FetchClientProfileKeyRequest -> pro.gravit.launcher.request.auth.FetchClientProfileKeyRequest:
# {"fileName":"FetchClientProfileKeyRequest.java","id":"sourceFile"}
    7:8:void <init>() -> <init>
    12:12:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.GetAvailabilityAuthRequest -> pro.gravit.launcher.request.auth.GetAvailabilityAuthRequest:
# {"fileName":"GetAvailabilityAuthRequest.java","id":"sourceFile"}
    pro.gravit.utils.ProviderMap providers -> providers
    boolean registeredProviders -> registeredProviders
    12:12:void <init>() -> <init>
    18:25:void registerProviders() -> registerProviders
    29:29:java.lang.String getType() -> getType
    14:15:void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.GetPublicKeyRequest -> pro.gravit.launcher.request.auth.GetPublicKeyRequest:
# {"fileName":"GetPublicKeyRequest.java","id":"sourceFile"}
    7:8:void <init>() -> <init>
    12:12:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.JoinServerRequest -> pro.gravit.launcher.request.auth.JoinServerRequest:
# {"fileName":"JoinServerRequest.java","id":"sourceFile"}
    java.lang.String username -> username
    java.lang.String accessToken -> accessToken
    java.lang.String serverID -> serverID
    20:24:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    28:28:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.RefreshTokenRequest -> pro.gravit.launcher.request.auth.RefreshTokenRequest:
# {"fileName":"RefreshTokenRequest.java","id":"sourceFile"}
    java.lang.String authId -> authId
    java.lang.String refreshToken -> refreshToken
    10:13:void <init>(java.lang.String,java.lang.String) -> <init>
    17:17:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.RestoreRequest -> pro.gravit.launcher.request.auth.RestoreRequest:
# {"fileName":"RestoreRequest.java","id":"sourceFile"}
    java.lang.String authId -> authId
    java.lang.String accessToken -> accessToken
    java.util.Map extended -> extended
    boolean needUserInfo -> needUserInfo
    14:15:void <init>() -> <init>
    17:22:void <init>(java.lang.String,java.lang.String,java.util.Map,boolean) -> <init>
    26:26:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.SetProfileRequest -> pro.gravit.launcher.request.auth.SetProfileRequest:
# {"fileName":"SetProfileRequest.java","id":"sourceFile"}
    java.lang.String client -> client
    13:15:void <init>(pro.gravit.launcher.profiles.ClientProfile) -> <init>
    19:19:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.details.AuthLoginOnlyDetails -> pro.gravit.launcher.request.auth.details.AuthLoginOnlyDetails:
# {"fileName":"AuthLoginOnlyDetails.java","id":"sourceFile"}
    5:5:void <init>() -> <init>
    8:8:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.details.AuthPasswordDetails -> pro.gravit.launcher.request.auth.details.AuthPasswordDetails:
# {"fileName":"AuthPasswordDetails.java","id":"sourceFile"}
    5:5:void <init>() -> <init>
    8:8:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.details.AuthTotpDetails -> pro.gravit.launcher.request.auth.details.AuthTotpDetails:
# {"fileName":"AuthTotpDetails.java","id":"sourceFile"}
    java.lang.String alg -> alg
    int maxKeyLength -> maxKeyLength
    9:12:void <init>(java.lang.String,int) -> <init>
    14:17:void <init>(java.lang.String) -> <init>
    21:21:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.details.AuthWebViewDetails -> pro.gravit.launcher.request.auth.details.AuthWebViewDetails:
# {"fileName":"AuthWebViewDetails.java","id":"sourceFile"}
    java.lang.String url -> url
    java.lang.String redirectUrl -> redirectUrl
    boolean canBrowser -> canBrowser
    boolean onlyBrowser -> onlyBrowser
    11:16:void <init>(java.lang.String,java.lang.String,boolean,boolean) -> <init>
    18:23:void <init>(java.lang.String,java.lang.String) -> <init>
    27:27:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.Auth2FAPassword -> pro.gravit.launcher.request.auth.password.Auth2FAPassword:
# {"fileName":"Auth2FAPassword.java","id":"sourceFile"}
    pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface firstPassword -> firstPassword
    pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface secondPassword -> secondPassword
    5:5:void <init>() -> <init>
    11:11:boolean check() -> check
    16:16:boolean isAllowSave() -> isAllowSave
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.AuthAESPassword -> pro.gravit.launcher.request.auth.password.AuthAESPassword:
# {"fileName":"AuthAESPassword.java","id":"sourceFile"}
    byte[] password -> password
    10:12:void <init>(byte[]) -> <init>
    16:16:boolean check() -> check
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.AuthCodePassword -> pro.gravit.launcher.request.auth.password.AuthCodePassword:
# {"fileName":"AuthCodePassword.java","id":"sourceFile"}
    java.lang.String code -> code
    8:10:void <init>(java.lang.String) -> <init>
    14:14:boolean check() -> check
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.AuthMultiPassword -> pro.gravit.launcher.request.auth.password.AuthMultiPassword:
# {"fileName":"AuthMultiPassword.java","id":"sourceFile"}
    java.util.List list -> list
    7:7:void <init>() -> <init>
    12:12:boolean check() -> check
    17:17:boolean isAllowSave() -> isAllowSave
    17:17:boolean lambda$isAllowSave$1(pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> lambda$isAllowSave$1
    12:12:boolean lambda$check$0(pro.gravit.launcher.request.auth.AuthRequest$AuthPasswordInterface) -> lambda$check$0
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.AuthOAuthPassword -> pro.gravit.launcher.request.auth.password.AuthOAuthPassword:
# {"fileName":"AuthOAuthPassword.java","id":"sourceFile"}
    java.lang.String accessToken -> accessToken
    java.lang.String refreshToken -> refreshToken
    int expire -> expire
    10:14:void <init>(java.lang.String,java.lang.String,int) -> <init>
    16:20:void <init>(java.lang.String,int) -> <init>
    22:26:void <init>(java.lang.String) -> <init>
    30:30:boolean check() -> check
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.AuthPlainPassword -> pro.gravit.launcher.request.auth.password.AuthPlainPassword:
# {"fileName":"AuthPlainPassword.java","id":"sourceFile"}
    java.lang.String password -> password
    10:12:void <init>(java.lang.String) -> <init>
    16:16:boolean check() -> check
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.AuthRSAPassword -> pro.gravit.launcher.request.auth.password.AuthRSAPassword:
# {"fileName":"AuthRSAPassword.java","id":"sourceFile"}
    byte[] password -> password
    8:10:void <init>(byte[]) -> <init>
    14:14:boolean check() -> check
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.AuthSignaturePassword -> pro.gravit.launcher.request.auth.password.AuthSignaturePassword:
# {"fileName":"AuthSignaturePassword.java","id":"sourceFile"}
    byte[] signature -> signature
    byte[] publicKey -> publicKey
    byte[] salt -> salt
    10:14:void <init>(byte[],byte[],byte[]) -> <init>
    18:18:boolean check() -> check
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.auth.password.AuthTOTPPassword -> pro.gravit.launcher.request.auth.password.AuthTOTPPassword:
# {"fileName":"AuthTOTPPassword.java","id":"sourceFile"}
    java.lang.String totp -> totp
    5:5:void <init>() -> <init>
    10:10:boolean check() -> check
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.management.FeaturesRequest -> pro.gravit.launcher.request.management.FeaturesRequest:
# {"fileName":"FeaturesRequest.java","id":"sourceFile"}
    6:6:void <init>() -> <init>
    9:9:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.secure.GetSecureLevelInfoRequest -> pro.gravit.launcher.request.secure.GetSecureLevelInfoRequest:
# {"fileName":"GetSecureLevelInfoRequest.java","id":"sourceFile"}
    6:6:void <init>() -> <init>
    9:9:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.secure.HardwareReportRequest -> pro.gravit.launcher.request.secure.HardwareReportRequest:
# {"fileName":"HardwareReportRequest.java","id":"sourceFile"}
    pro.gravit.launcher.request.secure.HardwareReportRequest$HardwareInfo hardware -> hardware
    8:8:void <init>() -> <init>
    13:13:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.secure.HardwareReportRequest$HardwareInfo -> pro.gravit.launcher.request.secure.HardwareReportRequest$HardwareInfo:
# {"fileName":"HardwareReportRequest.java","id":"sourceFile"}
    int bitness -> bitness
    long totalMemory -> totalMemory
    int logicalProcessors -> logicalProcessors
    int physicalProcessors -> physicalProcessors
    long processorMaxFreq -> processorMaxFreq
    boolean battery -> battery
    java.lang.String hwDiskId -> hwDiskId
    byte[] displayId -> displayId
    java.lang.String baseboardSerialNumber -> baseboardSerialNumber
    java.lang.String graphicCard -> graphicCard
    16:16:void <init>() -> <init>
    30:38:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.secure.SecurityReportRequest -> pro.gravit.launcher.request.secure.SecurityReportRequest:
# {"fileName":"SecurityReportRequest.java","id":"sourceFile"}
    java.lang.String reportType -> reportType
    java.lang.String smallData -> smallData
    java.lang.String largeData -> largeData
    byte[] smallBytes -> smallBytes
    byte[] largeBytes -> largeBytes
    13:19:void <init>(java.lang.String,java.lang.String,java.lang.String,byte[],byte[]) -> <init>
    21:27:void <init>(java.lang.String,java.lang.String,java.lang.String,byte[]) -> <init>
    29:35:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    37:43:void <init>(java.lang.String,java.lang.String,byte[]) -> <init>
    45:51:void <init>(java.lang.String,byte[],byte[]) -> <init>
    53:59:void <init>(java.lang.String,byte[]) -> <init>
    61:67:void <init>(java.lang.String,java.lang.String) -> <init>
    69:75:void <init>(java.lang.String) -> <init>
    79:79:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.secure.VerifySecureLevelKeyRequest -> pro.gravit.launcher.request.secure.VerifySecureLevelKeyRequest:
# {"fileName":"VerifySecureLevelKeyRequest.java","id":"sourceFile"}
    byte[] publicKey -> publicKey
    byte[] signature -> signature
    10:13:void <init>(byte[],byte[]) -> <init>
    17:17:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.update.LauncherRequest -> pro.gravit.launcher.request.update.LauncherRequest:
# {"fileName":"LauncherRequest.java","id":"sourceFile"}
    java.nio.file.Path BINARY_PATH -> BINARY_PATH
    boolean EXE_BINARY -> EXE_BINARY
    java.lang.String secureHash -> secureHash
    java.lang.String secureSalt -> secureSalt
    byte[] digest -> digest
    int launcher_type -> launcher_type
    25:38:void <init>() -> <init>
    42:42:pro.gravit.launcher.events.request.LauncherRequestEvent requestDo(pro.gravit.launcher.request.RequestService) -> requestDo
    47:47:java.lang.String getType() -> getType
    16:16:pro.gravit.launcher.request.WebSocketEvent requestDo(pro.gravit.launcher.request.RequestService) -> requestDo
    17:18:void <clinit>() -> <clinit>
pro.gravit.launcher.request.update.ProfilesRequest -> pro.gravit.launcher.request.update.ProfilesRequest:
# {"fileName":"ProfilesRequest.java","id":"sourceFile"}
    7:7:void <init>() -> <init>
    11:11:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.update.UpdateListRequest -> pro.gravit.launcher.request.update.UpdateListRequest:
# {"fileName":"UpdateListRequest.java","id":"sourceFile"}
    7:7:void <init>() -> <init>
    11:11:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.update.UpdateRequest -> pro.gravit.launcher.request.update.UpdateRequest:
# {"fileName":"UpdateRequest.java","id":"sourceFile"}
    java.lang.String dirName -> dirName
    14:16:void <init>(java.lang.String) -> <init>
    20:20:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.uuid.BatchProfileByUsernameRequest -> pro.gravit.launcher.request.uuid.BatchProfileByUsernameRequest:
# {"fileName":"BatchProfileByUsernameRequest.java","id":"sourceFile"}
    pro.gravit.launcher.request.uuid.BatchProfileByUsernameRequest$Entry[] list -> list
    15:23:void <init>(java.lang.String[]) -> <init>
    27:27:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.uuid.BatchProfileByUsernameRequest$Entry -> pro.gravit.launcher.request.uuid.BatchProfileByUsernameRequest$Entry:
# {"fileName":"BatchProfileByUsernameRequest.java","id":"sourceFile"}
    java.lang.String username -> username
    java.lang.String client -> client
    30:30:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.uuid.ProfileByUUIDRequest -> pro.gravit.launcher.request.uuid.ProfileByUUIDRequest:
# {"fileName":"ProfileByUUIDRequest.java","id":"sourceFile"}
    java.util.UUID uuid -> uuid
    16:18:void <init>(java.util.UUID) -> <init>
    22:22:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.uuid.ProfileByUsernameRequest -> pro.gravit.launcher.request.uuid.ProfileByUsernameRequest:
# {"fileName":"ProfileByUsernameRequest.java","id":"sourceFile"}
    java.lang.String username -> username
    13:15:void <init>(java.lang.String) -> <init>
    19:19:java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.ClientJSONPoint -> pro.gravit.launcher.request.websockets.ClientJSONPoint:
# {"fileName":"ClientJSONPoint.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicInteger counter -> counter
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    pro.gravit.repackage.io.netty.channel.EventLoopGroup group -> group
    boolean isCertificatePinning -> isCertificatePinning
    pro.gravit.repackage.io.netty.bootstrap.Bootstrap bootstrap -> bootstrap
    java.net.URI uri -> uri
    boolean isClosed -> isClosed
    pro.gravit.repackage.io.netty.channel.Channel ch -> ch
    pro.gravit.launcher.request.websockets.WebSocketClientHandler webSocketClientHandler -> webSocketClientHandler
    boolean ssl -> ssl
    int port -> port
    51:52:void <init>(java.lang.String) -> <init>
    42:94:void <init>(java.net.URI) -> <init>
    98:104:void open() -> open
    108:127:void openAsync(java.lang.Runnable,java.util.function.Consumer) -> openAsync
    130:132:void send(java.lang.String) -> send
    void onMessage(java.lang.String) -> onMessage
    void onDisconnect() -> onDisconnect
    void onOpen() -> onOpen
    142:149:void close() -> close
    152:153:void eval(java.lang.String) -> eval
    114:126:void lambda$openAsync$2(pro.gravit.repackage.io.netty.channel.ChannelFuture,java.lang.Runnable,java.util.function.Consumer,pro.gravit.repackage.io.netty.util.concurrent.Future) -> lambda$openAsync$2
    117:122:void lambda$openAsync$1(java.lang.Runnable,java.util.function.Consumer,pro.gravit.repackage.io.netty.util.concurrent.Future) -> lambda$openAsync$1
    34:37:java.lang.Thread lambda$static$0(java.lang.Runnable) -> lambda$static$0
    32:39:void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.ClientJSONPoint$1 -> pro.gravit.launcher.request.websockets.ClientJSONPoint$1:
# {"fileName":"ClientJSONPoint.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslContext val$sslCtx -> val$sslCtx
    java.net.URI val$uri -> val$uri
    pro.gravit.launcher.request.websockets.ClientJSONPoint this$0 -> this$0
    82:82:void <init>(pro.gravit.launcher.request.websockets.ClientJSONPoint,pro.gravit.repackage.io.netty.handler.ssl.SslContext,java.net.URI) -> <init>
    85:92:void initChannel(pro.gravit.repackage.io.netty.channel.socket.SocketChannel) -> initChannel
    82:82:void initChannel(pro.gravit.repackage.io.netty.channel.Channel) -> initChannel
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.ClientWebSocketService -> pro.gravit.launcher.request.websockets.ClientWebSocketService:
# {"fileName":"ClientWebSocketService.java","id":"sourceFile"}
    pro.gravit.utils.ProviderMap results -> results
    pro.gravit.utils.ProviderMap requests -> requests
    boolean resultsRegistered -> resultsRegistered
    com.google.gson.Gson gson -> gson
    java.lang.Boolean onConnect -> onConnect
    java.lang.Object waitObject -> waitObject
    pro.gravit.launcher.request.websockets.ClientWebSocketService$OnCloseCallback onCloseCallback -> onCloseCallback
    pro.gravit.launcher.request.websockets.ClientWebSocketService$ReconnectCallback reconnectCallback -> reconnectCallback
    32:40:void <init>(java.lang.String) -> <init>
    43:51:void appendTypeAdapters(com.google.gson.GsonBuilder) -> appendTypeAdapters
    55:57:java.net.URI createURL(java.lang.String) -> createURL
    63:65:void onMessage(java.lang.String) -> onMessage
    void eventHandle(pro.gravit.launcher.request.WebSocketEvent) -> eventHandle
    71:73:void onDisconnect() -> onDisconnect
    77:80:void onOpen() -> onOpen
    84:84:void registerRequests() -> registerRequests
    87:116:void registerResults() -> registerResults
    119:119:void waitIfNotConnected() -> waitIfNotConnected
    122:125:void sendObject(java.lang.Object) -> sendObject
    128:131:void sendObject(java.lang.Object,java.lang.reflect.Type) -> sendObject
    27:29:void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.ClientWebSocketService$EventHandler -> pro.gravit.launcher.request.websockets.ClientWebSocketService$EventHandler:
# {"fileName":"ClientWebSocketService.java","id":"sourceFile"}
    boolean eventHandle(pro.gravit.launcher.request.WebSocketEvent) -> eventHandle
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.ClientWebSocketService$OnCloseCallback -> pro.gravit.launcher.request.websockets.ClientWebSocketService$OnCloseCallback:
# {"fileName":"ClientWebSocketService.java","id":"sourceFile"}
    void onClose(int,java.lang.String,boolean) -> onClose
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.ClientWebSocketService$ReconnectCallback -> pro.gravit.launcher.request.websockets.ClientWebSocketService$ReconnectCallback:
# {"fileName":"ClientWebSocketService.java","id":"sourceFile"}
    void onReconnect() -> onReconnect
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.OfflineRequestService -> pro.gravit.launcher.request.websockets.OfflineRequestService:
# {"fileName":"OfflineRequestService.java","id":"sourceFile"}
    java.util.HashSet eventHandlers -> eventHandlers
    java.util.Map processors -> processors
    15:17:void <init>() -> <init>
    22:44:java.util.concurrent.CompletableFuture request(pro.gravit.launcher.request.Request) -> request
    49:50:void registerEventHandler(pro.gravit.launcher.request.RequestService$EventHandler) -> registerEventHandler
    54:55:void unregisterEventHandler(pro.gravit.launcher.request.RequestService$EventHandler) -> unregisterEventHandler
    59:59:boolean isClosed() -> isClosed
    63:64:void registerRequestProcessor(java.lang.Class,pro.gravit.launcher.request.websockets.OfflineRequestService$RequestProcessor) -> registerRequestProcessor
    67:68:void unregisterRequestProcessor(java.lang.Class) -> unregisterRequestProcessor
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.OfflineRequestService$RequestProcessor -> pro.gravit.launcher.request.websockets.OfflineRequestService$RequestProcessor:
# {"fileName":"OfflineRequestService.java","id":"sourceFile"}
    pro.gravit.launcher.request.WebSocketEvent process(pro.gravit.launcher.request.websockets.WebSocketRequest) -> process
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.StdWebSocketService -> pro.gravit.launcher.request.websockets.StdWebSocketService:
# {"fileName":"StdWebSocketService.java","id":"sourceFile"}
    java.util.concurrent.ConcurrentHashMap futureMap -> futureMap
    java.util.HashSet eventHandlers -> eventHandlers
    java.util.HashSet legacyEventHandlers -> legacyEventHandlers
    21:28:void <init>(java.lang.String) -> <init>
    33:50:java.util.concurrent.CompletableFuture initWebSockets(java.lang.String) -> initWebSockets
    56:57:void registerEventHandler(pro.gravit.launcher.request.websockets.ClientWebSocketService$EventHandler) -> registerEventHandler
    61:62:void unregisterEventHandler(pro.gravit.launcher.request.websockets.ClientWebSocketService$EventHandler) -> unregisterEventHandler
    65:71:void processEventHandlers(pro.gravit.launcher.request.WebSocketEvent) -> processEventHandlers
    75:100:void eventHandle(pro.gravit.launcher.request.WebSocketEvent) -> eventHandle
    103:106:java.util.concurrent.CompletableFuture request(pro.gravit.launcher.request.Request) -> request
    111:112:void registerEventHandler(pro.gravit.launcher.request.RequestService$EventHandler) -> registerEventHandler
    116:117:void unregisterEventHandler(pro.gravit.launcher.request.RequestService$EventHandler) -> unregisterEventHandler
    121:129:pro.gravit.launcher.request.WebSocketEvent requestSync(pro.gravit.launcher.request.Request) -> requestSync
    136:136:boolean isClosed() -> isClosed
    49:49:void lambda$initWebSockets$2(java.util.concurrent.CompletableFuture,java.lang.Throwable) -> lambda$initWebSockets$2
    41:49:void lambda$initWebSockets$1(java.util.concurrent.CompletableFuture,pro.gravit.launcher.request.websockets.StdWebSocketService) -> lambda$initWebSockets$1
    44:48:void lambda$initWebSockets$0(pro.gravit.launcher.request.websockets.StdWebSocketService) -> lambda$initWebSockets$0
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.VoidRequestService -> pro.gravit.launcher.request.websockets.VoidRequestService:
# {"fileName":"VoidRequestService.java","id":"sourceFile"}
    java.lang.Throwable ex -> ex
    13:15:void <init>(java.lang.Throwable) -> <init>
    17:19:void <init>() -> <init>
    23:25:java.util.concurrent.CompletableFuture request(pro.gravit.launcher.request.Request) -> request
    31:31:void registerEventHandler(pro.gravit.launcher.request.RequestService$EventHandler) -> registerEventHandler
    36:36:void unregisterEventHandler(pro.gravit.launcher.request.RequestService$EventHandler) -> unregisterEventHandler
    40:40:boolean isClosed() -> isClosed
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.WebSocketClientHandler -> pro.gravit.launcher.request.websockets.WebSocketClientHandler:
# {"fileName":"WebSocketClientHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker -> handshaker
    pro.gravit.launcher.request.websockets.ClientJSONPoint clientJSONPoint -> clientJSONPoint
    pro.gravit.repackage.io.netty.channel.ChannelPromise handshakeFuture -> handshakeFuture
    17:20:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,pro.gravit.launcher.request.websockets.ClientJSONPoint) -> <init>
    23:23:pro.gravit.repackage.io.netty.channel.ChannelFuture handshakeFuture() -> handshakeFuture
    28:29:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    33:36:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    41:42:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    46:80:void channelRead0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead0
    84:90:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    35:35:void lambda$channelActive$0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> lambda$channelActive$0
    void <clinit>() -> <clinit>
pro.gravit.launcher.request.websockets.WebSocketRequest -> pro.gravit.launcher.request.websockets.WebSocketRequest:
# {"fileName":"WebSocketRequest.java","id":"sourceFile"}
    java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.launcher.serialize.HInput -> pro.gravit.launcher.MIneSOUlsrpaZQ:
# {"fileName":"HInput.java","id":"sourceFile"}
    java.io.InputStream stream -> mINESoUlSRpxCH
    18:20:void <init>(byte[]) -> <init>
    23:25:void <init>(java.io.InputStream) -> <init>
    29:30:void close() -> close
    34:34:java.lang.String readASCII(int) -> mINESoUlSRpxCH
    39:39:java.math.BigInteger readBigInteger(int) -> MINeSoulsrppRw
    44:51:boolean readBoolean() -> mINESoUlSRpxCH
    57:59:byte[] readByteArray(int) -> miNeSOUlSRPT7R
    64:64:int readInt() -> MINeSoulsrppRw
    69:71:int readLength(int) -> MINeSOUlsRPerH
    76:76:long readLong() -> miNeSOUlSRPT7R
    81:81:short readShort() -> MINeSOUlsRPerH
    86:86:java.lang.String readString(int) -> MinESoulSRp3Ah
    91:94:int readUnsignedByte() -> MinESoulSRp3Ah
    99:99:int readUnsignedShort() -> mINeSoULsRpkjm
    104:104:java.util.UUID readUUID() -> MINESOULsRPuTS
    109:118:int readVarInt() -> MInEsOulsRPpPn
    123:132:long readVarLong() -> MineSoUlsRPEJI
    void <clinit>() -> <clinit>
pro.gravit.launcher.serialize.HOutput -> pro.gravit.launcher.mINESOULsRp8YW:
# {"fileName":"HOutput.java","id":"sourceFile"}
    java.io.OutputStream stream -> mINESoUlSRpxCH
    17:19:void <init>(java.io.OutputStream) -> <init>
    23:24:void close() -> close
    28:29:void flush() -> flush
    33:34:void writeASCII(java.lang.String,int) -> mINESoUlSRpxCH
    38:39:void writeBigInteger(java.math.BigInteger,int) -> mINESoUlSRpxCH
    43:44:void writeBoolean(boolean) -> mINESoUlSRpxCH
    48:50:void writeByteArray(byte[],int) -> mINESoUlSRpxCH
    54:58:void writeInt(int) -> mINESoUlSRpxCH
    62:65:void writeLength(int,int) -> mINESoUlSRpxCH
    69:71:void writeLong(long) -> mINESoUlSRpxCH
    75:77:void writeShort(short) -> mINESoUlSRpxCH
    81:82:void writeString(java.lang.String,int) -> MINeSoulsrppRw
    86:87:void writeUnsignedByte(int) -> MINeSoulsrppRw
    91:93:void writeUUID(java.util.UUID) -> mINESoUlSRpxCH
    97:102:void writeVarInt(int) -> miNeSOUlSRPT7R
    106:111:void writeVarLong(long) -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.serialize.signed.DigestBytesHolder -> pro.gravit.launcher.MiNEsOULsrPBoS:
# {"fileName":"DigestBytesHolder.java","id":"sourceFile"}
    byte[] bytes -> mINESoUlSRpxCH
    byte[] digest -> MINeSoulsrppRw
    17:22:void <init>(byte[],byte[],pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm) -> <init>
    25:28:void <init>(byte[],pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm) -> <init>
    32:33:void <init>(pro.gravit.launcher.serialize.HInput,pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm) -> <init>
    37:37:byte[] getBytes() -> mINESoUlSRpxCH
    42:42:byte[] getDigest() -> MINeSoulsrppRw
    47:49:void write(pro.gravit.launcher.serialize.HOutput) -> write
    void <clinit>() -> <clinit>
pro.gravit.launcher.serialize.stream.EnumSerializer -> pro.gravit.launcher.MinEsouLsrPG0M:
# {"fileName":"EnumSerializer.java","id":"sourceFile"}
    java.util.Map map -> mINESoUlSRpxCH
    13:19:void <init>(java.lang.Class) -> <init>
    22:23:void write(pro.gravit.launcher.serialize.HOutput,pro.gravit.launcher.serialize.stream.EnumSerializer$Itf) -> mINESoUlSRpxCH
    26:27:java.lang.Enum read(pro.gravit.launcher.serialize.HInput) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.serialize.stream.EnumSerializer$Itf -> pro.gravit.launcher.mINesOuLSRP5Az:
# {"fileName":"EnumSerializer.java","id":"sourceFile"}
    int getNumber() -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.serialize.stream.StreamObject -> pro.gravit.launcher.mInESoUlSrpuGo:
# {"fileName":"StreamObject.java","id":"sourceFile"}
    10:10:void <init>() -> <init>
    14:19:byte[] write() -> write
    void write(pro.gravit.launcher.serialize.HOutput) -> write
    void <clinit>() -> <clinit>
pro.gravit.launcher.serialize.stream.StreamObject$Adapter -> pro.gravit.launcher.minEsoULsRp3M2:
# {"fileName":"StreamObject.java","id":"sourceFile"}
    pro.gravit.launcher.serialize.stream.StreamObject convert(pro.gravit.launcher.serialize.HInput) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.utils.ApiBridgeService -> pro.gravit.launcher.mInESouLsrPSs1:
# {"fileName":"ApiBridgeService.java","id":"sourceFile"}
    9:9:void <init>() -> <init>
    11:12:pro.gravit.launcher.LauncherTrustManager$CheckClassResult checkCertificates(java.security.cert.X509Certificate[]) -> mINESoUlSRpxCH
    16:18:void checkCertificatesSuccess(java.security.cert.X509Certificate[]) -> MINeSoulsrppRw
    21:25:java.lang.String findLibrary(java.lang.ClassLoader,java.lang.String) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.utils.DirWatcher -> pro.gravit.launcher.mINEsoULSrpKU3:
# {"fileName":"DirWatcher.java","id":"sourceFile"}
    boolean FILE_TREE_SUPPORTED -> mINESoUlSRpxCH
    java.lang.String IGN_OVERFLOW -> MINeSoulsrppRw
    java.nio.file.WatchEvent$Kind[] KINDS -> miNeSOUlSRPT7R
    boolean PROP_IGN_OVERFLOW -> MINeSOUlsRPerH
    java.nio.file.Path dir -> MinESoulSRp3Ah
    pro.gravit.launcher.hasher.HashedDir hdir -> mINeSoULsRpkjm
    pro.gravit.launcher.hasher.FileNameMatcher matcher -> MINESOULsRPuTS
    java.nio.file.WatchService service -> MInEsOulsRPpPn
    boolean digest -> MineSoUlsRPEJI
    36:46:void <init>(java.nio.file.Path,pro.gravit.launcher.hasher.HashedDir,pro.gravit.launcher.hasher.FileNameMatcher,boolean) -> <init>
    49:51:void handleError(java.lang.Throwable) -> mINESoUlSRpxCH
    54:57:java.util.Deque toPath(java.lang.Iterable) -> mINESoUlSRpxCH
    62:63:void close() -> close
    66:91:void processKey(java.nio.file.WatchKey) -> mINESoUlSRpxCH
    94:98:void processLoop() -> MINeSoulsrppRw
    104:111:void run() -> run
    21:21:java.nio.file.WatchService access$100(pro.gravit.launcher.utils.DirWatcher) -> mINESoUlSRpxCH
    21:21:java.nio.file.WatchEvent$Kind[] access$200() -> mINESoUlSRpxCH
    22:28:void <clinit>() -> <clinit>
pro.gravit.launcher.utils.DirWatcher$1 -> pro.gravit.launcher.MINeSOuLsrPdvY:
# {"fileName":"DirWatcher.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.launcher.utils.DirWatcher$RegisterFileVisitor -> pro.gravit.launcher.mINeSOuLSrpvpo:
# {"fileName":"DirWatcher.java","id":"sourceFile"}
    pro.gravit.launcher.utils.DirWatcher this$0 -> mINESoUlSRpxCH
    113:113:void <init>(pro.gravit.launcher.utils.DirWatcher) -> <init>
    117:126:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> mINESoUlSRpxCH
    113:113:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    113:113:void <init>(pro.gravit.launcher.utils.DirWatcher,pro.gravit.launcher.utils.DirWatcher$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.launcher.utils.HWIDProvider -> pro.gravit.launcher.minESoULsrP5qV:
# {"fileName":"HWIDProvider.java","id":"sourceFile"}
    oshi.SystemInfo systemInfo -> mINESoUlSRpxCH
    oshi.software.os.OperatingSystem system -> MINeSoulsrppRw
    oshi.hardware.HardwareAbstractionLayer hardware -> miNeSOUlSRPT7R
    15:19:void <init>() -> <init>
    23:23:int getBitness() -> mINESoUlSRpxCH
    27:27:long getTotalMemory() -> MINeSoulsrppRw
    31:31:long getProcessorMaxFreq() -> miNeSOUlSRPT7R
    35:35:int getProcessorPhysicalCount() -> MINeSOUlsRPerH
    39:39:int getProcessorLogicalCount() -> MinESoulSRp3Ah
    43:44:boolean isBattery() -> mINeSoULsRpkjm
    49:61:java.lang.String getHWDiskID() -> MINESOULsRPuTS
    65:75:oshi.hardware.GraphicsCard getGraphicCard() -> MInEsOulsRPpPn
    79:83:java.lang.String getGraphicCardName() -> MineSoUlsRPEJI
    87:91:long getGraphicCardMemory() -> MInEsouLsrPIPY
    95:100:byte[] getDisplayID() -> miNesoULsRPW9z
    104:104:java.lang.String getBaseboardSerialNumber() -> miNEsOULSrPj2c
    108:121:pro.gravit.launcher.request.secure.HardwareReportRequest$HardwareInfo getHardwareInfo(boolean) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.launcher.utils.LauncherUpdater -> pro.gravit.launcher.miNEsoulsrp9tr:
# {"fileName":"LauncherUpdater.java","id":"sourceFile"}
    boolean isCertificatePinning -> mINESoUlSRpxCH
    26:26:void <init>() -> <init>
    32:32:void nothing() -> mINESoUlSRpxCH
    35:41:java.nio.file.Path getLauncherPath() -> miNeSOUlSRPT7R
    46:63:java.nio.file.Path prepareUpdate(java.net.URL) -> mINESoUlSRpxCH
    67:79:void restart() -> MINeSoulsrppRw
    void <clinit>() -> <clinit>
pro.gravit.launcher.utils.NativeJVMHalt -> pro.gravit.launcher.mINESoULsRPq69:
# {"fileName":"NativeJVMHalt.java","id":"sourceFile"}
    int haltCode -> mINESoUlSRpxCH
    10:13:void <init>(int) -> <init>
    17:17:void initFunc() -> mINESoUlSRpxCH
    20:32:void haltA(int) -> mINESoUlSRpxCH
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap -> pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap:
# {"fileName":"AbstractBootstrap.java","id":"sourceFile"}
    java.util.Map$Entry[] EMPTY_OPTION_ARRAY -> EMPTY_OPTION_ARRAY
    java.util.Map$Entry[] EMPTY_ATTRIBUTE_ARRAY -> EMPTY_ATTRIBUTE_ARRAY
    pro.gravit.repackage.io.netty.channel.EventLoopGroup group -> group
    pro.gravit.repackage.io.netty.bootstrap.ChannelFactory channelFactory -> channelFactory
    java.net.SocketAddress localAddress -> localAddress
    java.util.Map options -> options
    java.util.Map attrs -> attrs
    pro.gravit.repackage.io.netty.channel.ChannelHandler handler -> handler
    66:72:void <init>() -> <init>
    66:83:void <init>(pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap) -> <init>
    90:95:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap group(pro.gravit.repackage.io.netty.channel.EventLoopGroup) -> group
    100:100:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap self() -> self
    109:110:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class) -> channel
    119:125:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap channelFactory(pro.gravit.repackage.io.netty.bootstrap.ChannelFactory) -> channelFactory
    137:137:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap channelFactory(pro.gravit.repackage.io.netty.channel.ChannelFactory) -> channelFactory
    144:145:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap localAddress(java.net.SocketAddress) -> localAddress
    152:152:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap localAddress(int) -> localAddress
    159:159:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap localAddress(java.lang.String,int) -> localAddress
    166:166:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap localAddress(java.net.InetAddress,int) -> localAddress
    174:182:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap option(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> option
    190:196:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap attr(pro.gravit.repackage.io.netty.util.AttributeKey,java.lang.Object) -> attr
    204:210:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap validate() -> validate
    pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap clone() -> clone
    226:227:pro.gravit.repackage.io.netty.channel.ChannelFuture register() -> register
    234:239:pro.gravit.repackage.io.netty.channel.ChannelFuture bind() -> bind
    246:246:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(int) -> bind
    253:253:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.lang.String,int) -> bind
    260:260:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.InetAddress,int) -> bind
    267:268:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    272:303:pro.gravit.repackage.io.netty.channel.ChannelFuture doBind(java.net.SocketAddress) -> doBind
    308:341:pro.gravit.repackage.io.netty.channel.ChannelFuture initAndRegister() -> initAndRegister
    void init(pro.gravit.repackage.io.netty.channel.Channel) -> init
    352:362:void doBind0(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.Channel,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> doBind0
    368:369:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap handler(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> handler
    379:379:pro.gravit.repackage.io.netty.channel.EventLoopGroup group() -> group
    pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrapConfig config() -> config
    389:389:java.util.Map$Entry[] newOptionsArray() -> newOptionsArray
    393:395:java.util.Map$Entry[] newOptionsArray(java.util.Map) -> newOptionsArray
    399:399:java.util.Map$Entry[] newAttributesArray() -> newAttributesArray
    403:403:java.util.Map$Entry[] newAttributesArray(java.util.Map) -> newAttributesArray
    407:407:java.util.Map options0() -> options0
    411:411:java.util.Map attrs0() -> attrs0
    415:415:java.net.SocketAddress localAddress() -> localAddress
    420:420:pro.gravit.repackage.io.netty.bootstrap.ChannelFactory channelFactory() -> channelFactory
    424:424:pro.gravit.repackage.io.netty.channel.ChannelHandler handler() -> handler
    428:430:java.util.Map options() -> options
    434:434:java.util.Map attrs() -> attrs
    438:441:java.util.Map copiedMap(java.util.Map) -> copiedMap
    445:450:void setAttributes(pro.gravit.repackage.io.netty.channel.Channel,java.util.Map$Entry[]) -> setAttributes
    454:457:void setChannelOptions(pro.gravit.repackage.io.netty.channel.Channel,java.util.Map$Entry[],pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger) -> setChannelOptions
    463:470:void setChannelOption(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object,pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger) -> setChannelOption
    474:477:java.lang.String toString() -> toString
    53:53:java.lang.Object clone() -> clone
    53:53:void access$000(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.Channel,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$000
    55:57:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$1 -> pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$1:
# {"fileName":"AbstractBootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.ChannelFuture val$regFuture -> val$regFuture
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$localAddress -> val$localAddress
    pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap this$0 -> this$0
    286:286:void <init>(pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap,pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.Channel,java.net.SocketAddress) -> <init>
    289:301:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    286:286:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$2 -> pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$2:
# {"fileName":"AbstractBootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelFuture val$regFuture -> val$regFuture
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$localAddress -> val$localAddress
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    352:352:void <init>(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.Channel,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    355:360:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise -> pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise:
# {"fileName":"AbstractBootstrap.java","id":"sourceFile"}
    boolean registered -> registered
    487:488:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    491:492:void registered() -> registered
    496:503:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrapConfig -> pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrapConfig:
# {"fileName":"AbstractBootstrapConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap bootstrap -> bootstrap
    36:38:void <init>(pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap) -> <init>
    44:44:java.net.SocketAddress localAddress() -> localAddress
    52:52:pro.gravit.repackage.io.netty.bootstrap.ChannelFactory channelFactory() -> channelFactory
    59:59:pro.gravit.repackage.io.netty.channel.ChannelHandler handler() -> handler
    66:66:java.util.Map options() -> options
    73:73:java.util.Map attrs() -> attrs
    81:81:pro.gravit.repackage.io.netty.channel.EventLoopGroup group() -> group
    86:133:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.Bootstrap -> pro.gravit.repackage.io.netty.bootstrap.Bootstrap:
# {"fileName":"Bootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.resolver.AddressResolverGroup DEFAULT_RESOLVER -> DEFAULT_RESOLVER
    pro.gravit.repackage.io.netty.bootstrap.BootstrapConfig config -> config
    pro.gravit.repackage.io.netty.resolver.AddressResolverGroup resolver -> resolver
    java.net.SocketAddress remoteAddress -> remoteAddress
    52:59:void <init>() -> <init>
    52:65:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap) -> <init>
    77:78:pro.gravit.repackage.io.netty.bootstrap.Bootstrap resolver(pro.gravit.repackage.io.netty.resolver.AddressResolverGroup) -> resolver
    86:87:pro.gravit.repackage.io.netty.bootstrap.Bootstrap remoteAddress(java.net.SocketAddress) -> remoteAddress
    94:95:pro.gravit.repackage.io.netty.bootstrap.Bootstrap remoteAddress(java.lang.String,int) -> remoteAddress
    102:103:pro.gravit.repackage.io.netty.bootstrap.Bootstrap remoteAddress(java.net.InetAddress,int) -> remoteAddress
    110:116:pro.gravit.repackage.io.netty.channel.ChannelFuture connect() -> connect
    123:123:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.lang.String,int) -> connect
    130:130:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.InetAddress,int) -> connect
    137:139:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    146:148:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    155:184:pro.gravit.repackage.io.netty.channel.ChannelFuture doResolveAndConnect(java.net.SocketAddress,java.net.SocketAddress) -> doResolveAndConnect
    191:237:pro.gravit.repackage.io.netty.channel.ChannelFuture doResolveAndConnect0(pro.gravit.repackage.io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> doResolveAndConnect0
    245:257:void doConnect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> doConnect
    261:266:void init(pro.gravit.repackage.io.netty.channel.Channel) -> init
    270:274:pro.gravit.repackage.io.netty.bootstrap.Bootstrap validate() -> validate
    280:280:pro.gravit.repackage.io.netty.bootstrap.Bootstrap clone() -> clone
    289:291:pro.gravit.repackage.io.netty.bootstrap.Bootstrap clone(pro.gravit.repackage.io.netty.channel.EventLoopGroup) -> clone
    296:296:pro.gravit.repackage.io.netty.bootstrap.BootstrapConfig config() -> config
    300:300:java.net.SocketAddress remoteAddress() -> remoteAddress
    304:304:pro.gravit.repackage.io.netty.resolver.AddressResolverGroup resolver() -> resolver
    46:46:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrapConfig config() -> config
    46:46:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap clone() -> clone
    46:46:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap validate() -> validate
    46:46:java.lang.Object clone() -> clone
    46:46:pro.gravit.repackage.io.netty.channel.ChannelFuture access$000(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$000
    46:46:void access$100(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$100
    48:50:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.Bootstrap$1 -> pro.gravit.repackage.io.netty.bootstrap.Bootstrap$1:
# {"fileName":"Bootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    java.net.SocketAddress val$localAddress -> val$localAddress
    pro.gravit.repackage.io.netty.bootstrap.Bootstrap this$0 -> this$0
    166:166:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise,pro.gravit.repackage.io.netty.channel.Channel,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    171:182:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    166:166:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.Bootstrap$2 -> pro.gravit.repackage.io.netty.bootstrap.Bootstrap$2:
# {"fileName":"Bootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    java.net.SocketAddress val$localAddress -> val$localAddress
    pro.gravit.repackage.io.netty.bootstrap.Bootstrap this$0 -> this$0
    223:223:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise,java.net.SocketAddress) -> <init>
    226:232:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.Bootstrap$3 -> pro.gravit.repackage.io.netty.bootstrap.Bootstrap$3:
# {"fileName":"Bootstrap.java","id":"sourceFile"}
    java.net.SocketAddress val$localAddress -> val$localAddress
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$connectPromise -> val$connectPromise
    246:246:void <init>(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.Channel,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    249:255:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.BootstrapConfig -> pro.gravit.repackage.io.netty.bootstrap.BootstrapConfig:
# {"fileName":"BootstrapConfig.java","id":"sourceFile"}
    29:30:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap) -> <init>
    36:36:java.net.SocketAddress remoteAddress() -> remoteAddress
    43:43:pro.gravit.repackage.io.netty.resolver.AddressResolverGroup resolver() -> resolver
    48:56:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.ChannelFactory -> pro.gravit.repackage.io.netty.bootstrap.ChannelFactory:
# {"fileName":"ChannelFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel newChannel() -> newChannel
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.FailedChannel -> pro.gravit.repackage.io.netty.bootstrap.FailedChannel:
# {"fileName":"FailedChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    pro.gravit.repackage.io.netty.channel.ChannelConfig config -> config
    30:34:void <init>() -> <init>
    38:38:pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    43:43:boolean isCompatible(pro.gravit.repackage.io.netty.channel.EventLoop) -> isCompatible
    48:48:java.net.SocketAddress localAddress0() -> localAddress0
    53:53:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    58:58:void doBind(java.net.SocketAddress) -> doBind
    63:63:void doDisconnect() -> doDisconnect
    68:68:void doClose() -> doClose
    73:73:void doBeginRead() -> doBeginRead
    78:78:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    83:83:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    88:88:boolean isOpen() -> isOpen
    93:93:boolean isActive() -> isActive
    98:98:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.FailedChannel$1 -> pro.gravit.repackage.io.netty.bootstrap.FailedChannel$1:
# {"fileName":"FailedChannel.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.FailedChannel$FailedChannelUnsafe -> pro.gravit.repackage.io.netty.bootstrap.FailedChannel$FailedChannelUnsafe:
# {"fileName":"FailedChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.bootstrap.FailedChannel this$0 -> this$0
    101:101:void <init>(pro.gravit.repackage.io.netty.bootstrap.FailedChannel) -> <init>
    104:105:void connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    101:101:void <init>(pro.gravit.repackage.io.netty.bootstrap.FailedChannel,pro.gravit.repackage.io.netty.bootstrap.FailedChannel$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap -> pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap:
# {"fileName":"ServerBootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Map childOptions -> childOptions
    java.util.Map childAttrs -> childAttrs
    pro.gravit.repackage.io.netty.bootstrap.ServerBootstrapConfig config -> config
    pro.gravit.repackage.io.netty.channel.EventLoopGroup childGroup -> childGroup
    pro.gravit.repackage.io.netty.channel.ChannelHandler childHandler -> childHandler
    51:57:void <init>() -> <init>
    51:67:void <init>(pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap) -> <init>
    74:74:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap group(pro.gravit.repackage.io.netty.channel.EventLoopGroup) -> group
    83:88:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap group(pro.gravit.repackage.io.netty.channel.EventLoopGroup,pro.gravit.repackage.io.netty.channel.EventLoopGroup) -> group
    97:105:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap childOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> childOption
    113:119:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap childAttr(pro.gravit.repackage.io.netty.util.AttributeKey,java.lang.Object) -> childAttr
    126:127:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap childHandler(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> childHandler
    132:160:void init(pro.gravit.repackage.io.netty.channel.Channel) -> init
    164:172:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap validate() -> validate
    251:251:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap clone() -> clone
    262:262:pro.gravit.repackage.io.netty.channel.EventLoopGroup childGroup() -> childGroup
    266:266:pro.gravit.repackage.io.netty.channel.ChannelHandler childHandler() -> childHandler
    270:272:java.util.Map childOptions() -> childOptions
    276:276:java.util.Map childAttrs() -> childAttrs
    281:281:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrapConfig config() -> config
    45:45:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrapConfig config() -> config
    45:45:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap clone() -> clone
    45:45:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap validate() -> validate
    45:45:pro.gravit.repackage.io.netty.bootstrap.AbstractBootstrap group(pro.gravit.repackage.io.netty.channel.EventLoopGroup) -> group
    45:45:java.lang.Object clone() -> clone
    45:45:pro.gravit.repackage.io.netty.bootstrap.ServerBootstrapConfig access$000(pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap) -> access$000
    45:45:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$100() -> access$100
    47:47:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$1 -> pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$1:
# {"fileName":"ServerBootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.EventLoopGroup val$currentChildGroup -> val$currentChildGroup
    pro.gravit.repackage.io.netty.channel.ChannelHandler val$currentChildHandler -> val$currentChildHandler
    java.util.Map$Entry[] val$currentChildOptions -> val$currentChildOptions
    java.util.Map$Entry[] val$currentChildAttrs -> val$currentChildAttrs
    pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap this$0 -> this$0
    142:142:void <init>(pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap,pro.gravit.repackage.io.netty.channel.EventLoopGroup,pro.gravit.repackage.io.netty.channel.ChannelHandler,java.util.Map$Entry[],java.util.Map$Entry[]) -> <init>
    145:158:void initChannel(pro.gravit.repackage.io.netty.channel.Channel) -> initChannel
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$1$1 -> pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$1$1:
# {"fileName":"ServerBootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    pro.gravit.repackage.io.netty.channel.Channel val$ch -> val$ch
    pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$1 this$1 -> this$1
    151:151:void <init>(pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$1,pro.gravit.repackage.io.netty.channel.ChannelPipeline,pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    154:156:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor -> pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor:
# {"fileName":"ServerBootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.EventLoopGroup childGroup -> childGroup
    pro.gravit.repackage.io.netty.channel.ChannelHandler childHandler -> childHandler
    java.util.Map$Entry[] childOptions -> childOptions
    java.util.Map$Entry[] childAttrs -> childAttrs
    java.lang.Runnable enableAutoReadTask -> enableAutoReadTask
    185:202:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.EventLoopGroup,pro.gravit.repackage.io.netty.channel.ChannelHandler,java.util.Map$Entry[],java.util.Map$Entry[]) -> <init>
    207:226:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    229:231:void forceClose(pro.gravit.repackage.io.netty.channel.Channel,java.lang.Throwable) -> forceClose
    235:245:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    175:175:void access$200(pro.gravit.repackage.io.netty.channel.Channel,java.lang.Throwable) -> access$200
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1 -> pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1:
# {"fileName":"ServerBootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor this$0 -> this$0
    196:196:void <init>(pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor,pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    199:200:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2 -> pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2:
# {"fileName":"ServerBootstrap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel val$child -> val$child
    pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor this$0 -> this$0
    215:215:void <init>(pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor,pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    218:221:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    215:215:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.bootstrap.ServerBootstrapConfig -> pro.gravit.repackage.io.netty.bootstrap.ServerBootstrapConfig:
# {"fileName":"ServerBootstrapConfig.java","id":"sourceFile"}
    33:34:void <init>(pro.gravit.repackage.io.netty.bootstrap.ServerBootstrap) -> <init>
    42:42:pro.gravit.repackage.io.netty.channel.EventLoopGroup childGroup() -> childGroup
    50:50:pro.gravit.repackage.io.netty.channel.ChannelHandler childHandler() -> childHandler
    57:57:java.util.Map childOptions() -> childOptions
    64:64:java.util.Map childAttrs() -> childAttrs
    69:103:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractByteBuf -> pro.gravit.repackage.io.netty.buffer.AbstractByteBuf:
# {"fileName":"AbstractByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String LEGACY_PROP_CHECK_ACCESSIBLE -> LEGACY_PROP_CHECK_ACCESSIBLE
    java.lang.String PROP_CHECK_ACCESSIBLE -> PROP_CHECK_ACCESSIBLE
    boolean checkAccessible -> checkAccessible
    java.lang.String PROP_CHECK_BOUNDS -> PROP_CHECK_BOUNDS
    boolean checkBounds -> checkBounds
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    int readerIndex -> readerIndex
    int writerIndex -> writerIndex
    int markedReaderIndex -> markedReaderIndex
    int markedWriterIndex -> markedWriterIndex
    int maxCapacity -> maxCapacity
    77:80:void <init>(int) -> <init>
    84:84:boolean isReadOnly() -> isReadOnly
    90:93:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    98:98:int maxCapacity() -> maxCapacity
    102:103:void maxCapacity(int) -> maxCapacity
    107:107:int readerIndex() -> readerIndex
    111:116:void checkIndexBounds(int,int,int) -> checkIndexBounds
    120:124:pro.gravit.repackage.io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    129:129:int writerIndex() -> writerIndex
    134:138:pro.gravit.repackage.io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    143:147:pro.gravit.repackage.io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    152:153:pro.gravit.repackage.io.netty.buffer.ByteBuf clear() -> clear
    158:158:boolean isReadable() -> isReadable
    163:163:boolean isReadable(int) -> isReadable
    168:168:boolean isWritable() -> isWritable
    173:173:boolean isWritable(int) -> isWritable
    178:178:int readableBytes() -> readableBytes
    183:183:int writableBytes() -> writableBytes
    188:188:int maxWritableBytes() -> maxWritableBytes
    193:194:pro.gravit.repackage.io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    199:200:pro.gravit.repackage.io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    205:206:pro.gravit.repackage.io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    211:212:pro.gravit.repackage.io.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    217:232:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    237:254:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    258:269:void adjustMarkers(int) -> adjustMarkers
    273:276:void trimIndicesToCapacity(int) -> trimIndicesToCapacity
    280:281:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    285:306:void ensureWritable0(int) -> ensureWritable0
    310:334:int ensureWritable(int,boolean) -> ensureWritable
    339:343:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    350:350:pro.gravit.repackage.io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    355:356:byte getByte(int) -> getByte
    byte _getByte(int) -> _getByte
    363:363:boolean getBoolean(int) -> getBoolean
    368:368:short getUnsignedByte(int) -> getUnsignedByte
    373:374:short getShort(int) -> getShort
    short _getShort(int) -> _getShort
    381:382:short getShortLE(int) -> getShortLE
    short _getShortLE(int) -> _getShortLE
    389:389:int getUnsignedShort(int) -> getUnsignedShort
    394:394:int getUnsignedShortLE(int) -> getUnsignedShortLE
    399:400:int getUnsignedMedium(int) -> getUnsignedMedium
    int _getUnsignedMedium(int) -> _getUnsignedMedium
    407:408:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    415:419:int getMedium(int) -> getMedium
    424:428:int getMediumLE(int) -> getMediumLE
    433:434:int getInt(int) -> getInt
    int _getInt(int) -> _getInt
    441:442:int getIntLE(int) -> getIntLE
    int _getIntLE(int) -> _getIntLE
    449:449:long getUnsignedInt(int) -> getUnsignedInt
    454:454:long getUnsignedIntLE(int) -> getUnsignedIntLE
    459:460:long getLong(int) -> getLong
    long _getLong(int) -> _getLong
    467:468:long getLongLE(int) -> getLongLE
    long _getLongLE(int) -> _getLongLE
    475:475:char getChar(int) -> getChar
    480:480:float getFloat(int) -> getFloat
    485:485:double getDouble(int) -> getDouble
    490:491:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    496:497:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    502:504:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    509:513:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    518:520:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    525:527:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    void _setByte(int,int) -> _setByte
    534:535:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    540:542:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    void _setShort(int,int) -> _setShort
    549:551:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    void _setShortLE(int,int) -> _setShortLE
    558:559:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    564:566:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    void _setMedium(int,int) -> _setMedium
    573:575:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    void _setMediumLE(int,int) -> _setMediumLE
    582:584:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    void _setInt(int,int) -> _setInt
    591:593:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    void _setIntLE(int,int) -> _setIntLE
    600:601:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    606:608:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    void _setLong(int,long) -> _setLong
    615:617:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    void _setLongLE(int,long) -> _setLongLE
    624:625:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    630:631:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    636:637:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    641:645:void checkReadableBounds(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> checkReadableBounds
    649:657:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    662:690:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    695:695:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    699:725:int setCharSequence0(int,java.lang.CharSequence,java.nio.charset.Charset,boolean) -> setCharSequence0
    730:734:byte readByte() -> readByte
    739:739:boolean readBoolean() -> readBoolean
    744:744:short readUnsignedByte() -> readUnsignedByte
    749:752:short readShort() -> readShort
    757:760:short readShortLE() -> readShortLE
    765:765:int readUnsignedShort() -> readUnsignedShort
    770:770:int readUnsignedShortLE() -> readUnsignedShortLE
    775:779:int readMedium() -> readMedium
    784:788:int readMediumLE() -> readMediumLE
    793:796:int readUnsignedMedium() -> readUnsignedMedium
    801:804:int readUnsignedMediumLE() -> readUnsignedMediumLE
    809:812:int readInt() -> readInt
    817:820:int readIntLE() -> readIntLE
    825:825:long readUnsignedInt() -> readUnsignedInt
    830:830:long readUnsignedIntLE() -> readUnsignedIntLE
    835:838:long readLong() -> readLong
    843:846:long readLongLE() -> readLongLE
    851:851:char readChar() -> readChar
    856:856:float readFloat() -> readFloat
    861:861:double readDouble() -> readDouble
    866:874:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    879:882:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    887:890:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    895:898:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    903:904:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    909:910:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    915:923:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    928:931:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    936:940:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    946:949:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    955:958:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    963:966:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    971:973:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    978:979:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    984:986:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    991:994:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    999:1002:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    1007:1010:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    1015:1018:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    1023:1026:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    1031:1034:pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    1039:1042:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    1047:1050:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    1055:1056:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    1061:1062:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    1067:1068:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    1073:1076:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    1081:1082:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    1087:1088:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    1093:1098:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    1103:1106:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    1111:1115:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    1121:1126:int writeBytes(java.io.InputStream,int) -> writeBytes
    1131:1136:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    1141:1146:int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    1151:1182:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    1187:1189:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    1194:1194:pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    1199:1200:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    1205:1205:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    1210:1210:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    1215:1215:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    1220:1221:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    1226:1226:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    1231:1231:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    1236:1236:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    1241:1241:java.lang.String toString(java.nio.charset.Charset) -> toString
    1246:1246:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    1251:1254:int indexOf(int,int,byte) -> indexOf
    1259:1259:int bytesBefore(byte) -> bytesBefore
    1264:1265:int bytesBefore(int,byte) -> bytesBefore
    1270:1274:int bytesBefore(int,int,byte) -> bytesBefore
    1279:1284:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    1290:1295:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    1300:1306:int forEachByteAsc0(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteAsc0
    1311:1316:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    1322:1327:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    1332:1337:int forEachByteDesc0(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc0
    1342:1342:int hashCode() -> hashCode
    1347:1347:boolean equals(java.lang.Object) -> equals
    1352:1352:int compareTo(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compareTo
    1357:1375:java.lang.String toString() -> toString
    1379:1380:void checkIndex(int) -> checkIndex
    1383:1385:void checkIndex(int,int) -> checkIndex
    1389:1393:void checkRangeBounds(java.lang.String,int,int,int) -> checkRangeBounds
    1396:1399:void checkIndex0(int,int) -> checkIndex0
    1402:1406:void checkSrcIndex(int,int,int,int) -> checkSrcIndex
    1409:1413:void checkDstIndex(int,int,int,int) -> checkDstIndex
    1416:1420:void checkDstIndex(int,int,int) -> checkDstIndex
    1428:1429:void checkReadableBytes(int) -> checkReadableBytes
    1432:1437:void checkNewCapacity(int) -> checkNewCapacity
    1440:1446:void checkReadableBytes0(int) -> checkReadableBytes0
    1453:1456:void ensureAccessible() -> ensureAccessible
    1459:1461:void setIndex0(int,int) -> setIndex0
    1464:1465:void discardMarks() -> discardMarks
    47:47:int compareTo(java.lang.Object) -> compareTo
    48:69:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractByteBufAllocator -> pro.gravit.repackage.io.netty.buffer.AbstractByteBufAllocator:
# {"fileName":"AbstractByteBufAllocator.java","id":"sourceFile"}
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    int DEFAULT_MAX_CAPACITY -> DEFAULT_MAX_CAPACITY
    int DEFAULT_MAX_COMPONENTS -> DEFAULT_MAX_COMPONENTS
    int CALCULATE_THRESHOLD -> CALCULATE_THRESHOLD
    boolean directByDefault -> directByDefault
    pro.gravit.repackage.io.netty.buffer.ByteBuf emptyBuf -> emptyBuf
    42:59:pro.gravit.repackage.io.netty.buffer.ByteBuf toLeakAwareBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> toLeakAwareBuffer
    64:81:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf toLeakAwareBuffer(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf) -> toLeakAwareBuffer
    91:92:void <init>() -> <init>
    100:103:void <init>(boolean) -> <init>
    107:110:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer() -> buffer
    115:118:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int) -> buffer
    123:126:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    131:134:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    139:142:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    147:150:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer(int,int) -> ioBuffer
    155:155:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    160:160:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    165:169:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    174:174:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    179:179:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    184:188:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    193:196:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    201:204:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    209:209:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    214:214:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    219:219:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    224:224:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    228:234:void validate(int,int) -> validate
    pro.gravit.repackage.io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    248:248:java.lang.String toString() -> toString
    253:278:int calculateNewCapacity(int,int) -> calculateNewCapacity
    37:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractByteBufAllocator$1 -> pro.gravit.repackage.io.netty.buffer.AbstractByteBufAllocator$1:
# {"fileName":"AbstractByteBufAllocator.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$util$ResourceLeakDetector$Level -> $SwitchMap$io$netty$util$ResourceLeakDetector$Level
    42:42:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractDerivedByteBuf -> pro.gravit.repackage.io.netty.buffer.AbstractDerivedByteBuf:
# {"fileName":"AbstractDerivedByteBuf.java","id":"sourceFile"}
    31:32:void <init>(int) -> <init>
    36:36:boolean isAccessible() -> isAccessible
    40:40:boolean isAccessible0() -> isAccessible0
    45:45:int refCnt() -> refCnt
    49:49:int refCnt0() -> refCnt0
    54:54:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    58:59:pro.gravit.repackage.io.netty.buffer.ByteBuf retain0() -> retain0
    64:64:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    68:69:pro.gravit.repackage.io.netty.buffer.ByteBuf retain0(int) -> retain0
    74:74:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    78:79:pro.gravit.repackage.io.netty.buffer.ByteBuf touch0() -> touch0
    84:84:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    88:89:pro.gravit.repackage.io.netty.buffer.ByteBuf touch0(java.lang.Object) -> touch0
    94:94:boolean release() -> release
    98:98:boolean release0() -> release0
    103:103:boolean release(int) -> release
    107:107:boolean release0(int) -> release0
    112:112:boolean isReadOnly() -> isReadOnly
    117:117:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    122:122:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    127:127:boolean isContiguous() -> isContiguous
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractPooledDerivedByteBuf -> pro.gravit.repackage.io.netty.buffer.AbstractPooledDerivedByteBuf:
# {"fileName":"AbstractPooledDerivedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle recyclerHandle -> recyclerHandle
    pro.gravit.repackage.io.netty.buffer.AbstractByteBuf rootParent -> rootParent
    pro.gravit.repackage.io.netty.buffer.ByteBuf parent -> parent
    boolean $assertionsDisabled -> $assertionsDisabled
    41:43:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    47:49:void parent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> parent
    53:53:pro.gravit.repackage.io.netty.buffer.AbstractByteBuf unwrap() -> unwrap
    58:76:pro.gravit.repackage.io.netty.buffer.AbstractPooledDerivedByteBuf init(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int) -> init
    84:87:void deallocate() -> deallocate
    91:91:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    97:97:java.nio.ByteOrder order() -> order
    102:102:boolean isReadOnly() -> isReadOnly
    107:107:boolean isDirect() -> isDirect
    112:112:boolean hasArray() -> hasArray
    117:117:byte[] array() -> array
    122:122:boolean hasMemoryAddress() -> hasMemoryAddress
    127:127:boolean isContiguous() -> isContiguous
    132:132:int nioBufferCount() -> nioBufferCount
    137:137:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    142:143:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    148:150:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    154:156:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate0() -> duplicate0
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf -> pro.gravit.repackage.io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf:
# {"fileName":"AbstractPooledDerivedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf referenceCountDelegate -> referenceCountDelegate
    163:165:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.AbstractByteBuf) -> <init>
    169:169:boolean isAccessible0() -> isAccessible0
    174:174:int refCnt0() -> refCnt0
    179:180:pro.gravit.repackage.io.netty.buffer.ByteBuf retain0() -> retain0
    185:186:pro.gravit.repackage.io.netty.buffer.ByteBuf retain0(int) -> retain0
    191:192:pro.gravit.repackage.io.netty.buffer.ByteBuf touch0() -> touch0
    197:198:pro.gravit.repackage.io.netty.buffer.ByteBuf touch0(java.lang.Object) -> touch0
    203:203:boolean release0() -> release0
    208:208:boolean release0(int) -> release0
    213:214:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    219:219:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    224:225:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    231:231:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    236:236:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf -> pro.gravit.repackage.io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf:
# {"fileName":"AbstractPooledDerivedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf referenceCountDelegate -> referenceCountDelegate
    245:247:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int) -> <init>
    251:251:boolean isAccessible0() -> isAccessible0
    256:256:int refCnt0() -> refCnt0
    261:262:pro.gravit.repackage.io.netty.buffer.ByteBuf retain0() -> retain0
    267:268:pro.gravit.repackage.io.netty.buffer.ByteBuf retain0(int) -> retain0
    273:274:pro.gravit.repackage.io.netty.buffer.ByteBuf touch0() -> touch0
    279:280:pro.gravit.repackage.io.netty.buffer.ByteBuf touch0(java.lang.Object) -> touch0
    285:285:boolean release0() -> release0
    290:290:boolean release0(int) -> release0
    295:297:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    302:302:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    307:308:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    314:314:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    319:319:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractReferenceCountedByteBuf -> pro.gravit.repackage.io.netty.buffer.AbstractReferenceCountedByteBuf:
# {"fileName":"AbstractReferenceCountedByteBuf.java","id":"sourceFile"}
    long REFCNT_FIELD_OFFSET -> REFCNT_FIELD_OFFSET
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater AIF_UPDATER -> AIF_UPDATER
    pro.gravit.repackage.io.netty.util.internal.ReferenceCountUpdater updater -> updater
    int refCnt -> refCnt
    49:51:void <init>(int) -> <init>
    57:57:boolean isAccessible() -> isAccessible
    62:62:int refCnt() -> refCnt
    69:70:void setRefCnt(int) -> setRefCnt
    76:77:void resetRefCnt() -> resetRefCnt
    81:81:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    86:86:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    91:91:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    96:96:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    101:101:boolean release() -> release
    106:106:boolean release(int) -> release
    110:113:boolean handleRelease(boolean) -> handleRelease
    void deallocate() -> deallocate
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    26:26:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$000() -> access$000
    26:26:long access$100() -> access$100
    27:32:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractReferenceCountedByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.AbstractReferenceCountedByteBuf$1:
# {"fileName":"AbstractReferenceCountedByteBuf.java","id":"sourceFile"}
    33:33:void <init>() -> <init>
    36:36:java.util.concurrent.atomic.AtomicIntegerFieldUpdater updater() -> updater
    40:40:long unsafeOffset() -> unsafeOffset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractUnpooledSlicedByteBuf -> pro.gravit.repackage.io.netty.buffer.AbstractUnpooledSlicedByteBuf:
# {"fileName":"AbstractUnpooledSlicedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    int adjustment -> adjustment
    37:53:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> <init>
    60:60:void initLength(int) -> initLength
    63:63:int length() -> length
    68:68:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    73:73:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    79:79:java.nio.ByteOrder order() -> order
    84:84:boolean isDirect() -> isDirect
    89:89:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    94:94:boolean hasArray() -> hasArray
    99:99:byte[] array() -> array
    104:104:int arrayOffset() -> arrayOffset
    109:109:boolean hasMemoryAddress() -> hasMemoryAddress
    114:114:long memoryAddress() -> memoryAddress
    119:120:byte getByte(int) -> getByte
    125:125:byte _getByte(int) -> _getByte
    130:131:short getShort(int) -> getShort
    136:136:short _getShort(int) -> _getShort
    141:142:short getShortLE(int) -> getShortLE
    147:147:short _getShortLE(int) -> _getShortLE
    152:153:int getUnsignedMedium(int) -> getUnsignedMedium
    158:158:int _getUnsignedMedium(int) -> _getUnsignedMedium
    163:164:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    169:169:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    174:175:int getInt(int) -> getInt
    180:180:int _getInt(int) -> _getInt
    185:186:int getIntLE(int) -> getIntLE
    191:191:int _getIntLE(int) -> _getIntLE
    196:197:long getLong(int) -> getLong
    202:202:long _getLong(int) -> _getLong
    207:208:long getLongLE(int) -> getLongLE
    213:213:long _getLongLE(int) -> _getLongLE
    218:218:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    223:224:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    229:230:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    235:237:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    242:244:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    249:251:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    256:258:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    263:264:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    269:270:void _setByte(int,int) -> _setByte
    274:276:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    281:282:void _setShort(int,int) -> _setShort
    286:288:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    293:294:void _setShortLE(int,int) -> _setShortLE
    298:300:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    305:306:void _setMedium(int,int) -> _setMedium
    310:312:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    317:318:void _setMediumLE(int,int) -> _setMediumLE
    322:324:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    329:330:void _setInt(int,int) -> _setInt
    334:336:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    341:342:void _setIntLE(int,int) -> _setIntLE
    346:348:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    353:354:void _setLong(int,long) -> _setLong
    358:360:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    365:366:void _setLongLE(int,long) -> _setLongLE
    370:372:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    377:379:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    384:386:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    391:393:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    398:399:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    404:405:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    410:411:int setBytes(int,java.io.InputStream,int) -> setBytes
    416:417:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    422:423:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    428:428:int nioBufferCount() -> nioBufferCount
    433:434:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    439:440:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    445:450:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    456:461:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    469:469:int idx(int) -> idx
    473:476:void checkSliceOutOfBounds(int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> checkSliceOutOfBounds
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AbstractUnsafeSwappedByteBuf -> pro.gravit.repackage.io.netty.buffer.AbstractUnsafeSwappedByteBuf:
# {"fileName":"AbstractUnsafeSwappedByteBuf.java","id":"sourceFile"}
    boolean nativeByteOrder -> nativeByteOrder
    pro.gravit.repackage.io.netty.buffer.AbstractByteBuf wrapped -> wrapped
    boolean $assertionsDisabled -> $assertionsDisabled
    32:36:void <init>(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf) -> <init>
    40:42:long getLong(int) -> getLong
    47:47:float getFloat(int) -> getFloat
    52:52:double getDouble(int) -> getDouble
    57:57:char getChar(int) -> getChar
    62:62:long getUnsignedInt(int) -> getUnsignedInt
    67:69:int getInt(int) -> getInt
    74:74:int getUnsignedShort(int) -> getUnsignedShort
    79:81:short getShort(int) -> getShort
    86:88:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    93:95:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    100:102:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    107:108:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    113:114:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    119:120:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    125:128:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    133:136:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    141:144:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    149:150:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    155:156:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    161:162:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    short _getShort(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getShort
    int _getInt(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getInt
    long _getLong(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getLong
    void _setShort(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,short) -> _setShort
    void _setInt(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int) -> _setInt
    void _setLong(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,long) -> _setLong
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AdvancedLeakAwareByteBuf -> pro.gravit.repackage.io.netty.buffer.AdvancedLeakAwareByteBuf:
# {"fileName":"AdvancedLeakAwareByteBuf.java","id":"sourceFile"}
    java.lang.String PROP_ACQUIRE_AND_RELEASE_ONLY -> PROP_ACQUIRE_AND_RELEASE_ONLY
    boolean ACQUIRE_AND_RELEASE_ONLY -> ACQUIRE_AND_RELEASE_ONLY
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    56:57:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> <init>
    60:61:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> <init>
    64:67:void recordLeakNonRefCountingOperation(pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> recordLeakNonRefCountingOperation
    71:72:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    77:78:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    83:84:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    89:90:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    95:96:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    101:102:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    107:108:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    113:114:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    119:120:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    125:126:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    131:132:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    137:138:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    143:144:int ensureWritable(int,boolean) -> ensureWritable
    149:150:boolean getBoolean(int) -> getBoolean
    155:156:byte getByte(int) -> getByte
    161:162:short getUnsignedByte(int) -> getUnsignedByte
    167:168:short getShort(int) -> getShort
    173:174:int getUnsignedShort(int) -> getUnsignedShort
    179:180:int getMedium(int) -> getMedium
    185:186:int getUnsignedMedium(int) -> getUnsignedMedium
    191:192:int getInt(int) -> getInt
    197:198:long getUnsignedInt(int) -> getUnsignedInt
    203:204:long getLong(int) -> getLong
    209:210:char getChar(int) -> getChar
    215:216:float getFloat(int) -> getFloat
    221:222:double getDouble(int) -> getDouble
    227:228:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    233:234:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    239:240:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    245:246:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    251:252:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    257:258:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    263:264:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    269:270:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    275:276:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    281:282:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    287:288:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    293:294:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    299:300:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    305:306:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    311:312:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    317:318:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    323:324:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    329:330:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    335:336:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    341:342:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    347:348:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    353:354:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    359:360:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    365:366:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    371:372:int setBytes(int,java.io.InputStream,int) -> setBytes
    377:378:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    383:384:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    389:390:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    395:396:boolean readBoolean() -> readBoolean
    401:402:byte readByte() -> readByte
    407:408:short readUnsignedByte() -> readUnsignedByte
    413:414:short readShort() -> readShort
    419:420:int readUnsignedShort() -> readUnsignedShort
    425:426:int readMedium() -> readMedium
    431:432:int readUnsignedMedium() -> readUnsignedMedium
    437:438:int readInt() -> readInt
    443:444:long readUnsignedInt() -> readUnsignedInt
    449:450:long readLong() -> readLong
    455:456:char readChar() -> readChar
    461:462:float readFloat() -> readFloat
    467:468:double readDouble() -> readDouble
    473:474:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    479:480:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    485:486:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    491:492:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    497:498:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    503:504:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    509:510:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    515:516:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    521:522:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    527:528:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    533:534:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    539:540:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    545:546:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    551:552:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    557:558:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    563:564:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    569:570:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    575:576:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    581:582:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    587:588:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    593:594:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    599:600:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    605:606:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    611:612:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    617:618:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    623:624:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    629:630:int writeBytes(java.io.InputStream,int) -> writeBytes
    635:636:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    641:642:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    647:648:int indexOf(int,int,byte) -> indexOf
    653:654:int bytesBefore(byte) -> bytesBefore
    659:660:int bytesBefore(int,byte) -> bytesBefore
    665:666:int bytesBefore(int,int,byte) -> bytesBefore
    671:672:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    677:678:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    683:684:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    689:690:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    695:696:pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    701:702:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    707:708:int nioBufferCount() -> nioBufferCount
    713:714:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    719:720:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    725:726:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    731:732:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    737:738:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    743:744:java.lang.String toString(java.nio.charset.Charset) -> toString
    749:750:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    755:756:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    761:762:short getShortLE(int) -> getShortLE
    767:768:int getUnsignedShortLE(int) -> getUnsignedShortLE
    773:774:int getMediumLE(int) -> getMediumLE
    779:780:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    785:786:int getIntLE(int) -> getIntLE
    791:792:long getUnsignedIntLE(int) -> getUnsignedIntLE
    797:798:long getLongLE(int) -> getLongLE
    803:804:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    809:810:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    815:816:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    821:822:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    827:828:short readShortLE() -> readShortLE
    833:834:int readUnsignedShortLE() -> readUnsignedShortLE
    839:840:int readMediumLE() -> readMediumLE
    845:846:int readUnsignedMediumLE() -> readUnsignedMediumLE
    851:852:int readIntLE() -> readIntLE
    857:858:long readUnsignedIntLE() -> readUnsignedIntLE
    863:864:long readLongLE() -> readLongLE
    869:870:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    875:876:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    881:882:pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    887:888:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    893:894:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    899:900:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    905:906:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    911:912:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    917:918:int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    923:924:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    929:930:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    935:936:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    941:942:boolean release() -> release
    947:948:boolean release(int) -> release
    953:954:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    959:960:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    966:966:pro.gravit.repackage.io.netty.buffer.AdvancedLeakAwareByteBuf newLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    36:36:pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    36:36:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    36:36:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    36:36:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    36:36:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    42:53:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.AdvancedLeakAwareCompositeByteBuf -> pro.gravit.repackage.io.netty.buffer.AdvancedLeakAwareCompositeByteBuf:
# {"fileName":"AdvancedLeakAwareCompositeByteBuf.java","id":"sourceFile"}
    39:40:void <init>(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> <init>
    44:45:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    50:51:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    56:57:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    62:63:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    68:69:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    74:75:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    80:81:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    86:87:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    92:93:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    98:99:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    104:105:boolean isReadOnly() -> isReadOnly
    110:111:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardReadBytes() -> discardReadBytes
    116:117:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    122:123:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf ensureWritable(int) -> ensureWritable
    128:129:int ensureWritable(int,boolean) -> ensureWritable
    134:135:boolean getBoolean(int) -> getBoolean
    140:141:byte getByte(int) -> getByte
    146:147:short getUnsignedByte(int) -> getUnsignedByte
    152:153:short getShort(int) -> getShort
    158:159:int getUnsignedShort(int) -> getUnsignedShort
    164:165:int getMedium(int) -> getMedium
    170:171:int getUnsignedMedium(int) -> getUnsignedMedium
    176:177:int getInt(int) -> getInt
    182:183:long getUnsignedInt(int) -> getUnsignedInt
    188:189:long getLong(int) -> getLong
    194:195:char getChar(int) -> getChar
    200:201:float getFloat(int) -> getFloat
    206:207:double getDouble(int) -> getDouble
    212:213:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    218:219:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    224:225:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    230:231:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> getBytes
    236:237:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> getBytes
    242:243:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    248:249:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    254:255:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    260:261:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    266:267:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBoolean(int,boolean) -> setBoolean
    272:273:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setByte(int,int) -> setByte
    278:279:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setShort(int,int) -> setShort
    284:285:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setMedium(int,int) -> setMedium
    290:291:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setInt(int,int) -> setInt
    296:297:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setLong(int,long) -> setLong
    302:303:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setChar(int,int) -> setChar
    308:309:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setFloat(int,float) -> setFloat
    314:315:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setDouble(int,double) -> setDouble
    320:321:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    326:327:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    332:333:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    338:339:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> setBytes
    344:345:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> setBytes
    350:351:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    356:357:int setBytes(int,java.io.InputStream,int) -> setBytes
    362:363:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    368:369:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setZero(int,int) -> setZero
    374:375:boolean readBoolean() -> readBoolean
    380:381:byte readByte() -> readByte
    386:387:short readUnsignedByte() -> readUnsignedByte
    392:393:short readShort() -> readShort
    398:399:int readUnsignedShort() -> readUnsignedShort
    404:405:int readMedium() -> readMedium
    410:411:int readUnsignedMedium() -> readUnsignedMedium
    416:417:int readInt() -> readInt
    422:423:long readUnsignedInt() -> readUnsignedInt
    428:429:long readLong() -> readLong
    434:435:char readChar() -> readChar
    440:441:float readFloat() -> readFloat
    446:447:double readDouble() -> readDouble
    452:453:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    458:459:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    464:465:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    470:471:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    476:477:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> readBytes
    482:483:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> readBytes
    488:489:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    494:495:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    500:501:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    506:507:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    512:513:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf skipBytes(int) -> skipBytes
    518:519:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBoolean(boolean) -> writeBoolean
    524:525:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeByte(int) -> writeByte
    530:531:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeShort(int) -> writeShort
    536:537:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeMedium(int) -> writeMedium
    542:543:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeInt(int) -> writeInt
    548:549:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeLong(long) -> writeLong
    554:555:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeChar(int) -> writeChar
    560:561:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeFloat(float) -> writeFloat
    566:567:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeDouble(double) -> writeDouble
    572:573:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    578:579:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    584:585:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    590:591:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> writeBytes
    596:597:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> writeBytes
    602:603:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    608:609:int writeBytes(java.io.InputStream,int) -> writeBytes
    614:615:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    620:621:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeZero(int) -> writeZero
    626:627:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    632:633:int indexOf(int,int,byte) -> indexOf
    638:639:int bytesBefore(byte) -> bytesBefore
    644:645:int bytesBefore(int,byte) -> bytesBefore
    650:651:int bytesBefore(int,int,byte) -> bytesBefore
    656:657:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    662:663:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    668:669:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    674:675:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    680:681:pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    686:687:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    692:693:int nioBufferCount() -> nioBufferCount
    698:699:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    704:705:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    710:711:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    716:717:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    722:723:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    728:729:java.lang.String toString(java.nio.charset.Charset) -> toString
    734:735:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    740:741:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf capacity(int) -> capacity
    746:747:short getShortLE(int) -> getShortLE
    752:753:int getUnsignedShortLE(int) -> getUnsignedShortLE
    758:759:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    764:765:int getMediumLE(int) -> getMediumLE
    770:771:int getIntLE(int) -> getIntLE
    776:777:long getUnsignedIntLE(int) -> getUnsignedIntLE
    782:783:long getLongLE(int) -> getLongLE
    788:789:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    794:795:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    800:801:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    806:807:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    812:813:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    818:819:short readShortLE() -> readShortLE
    824:825:int readUnsignedShortLE() -> readUnsignedShortLE
    830:831:int readMediumLE() -> readMediumLE
    836:837:int readUnsignedMediumLE() -> readUnsignedMediumLE
    842:843:int readIntLE() -> readIntLE
    848:849:long readUnsignedIntLE() -> readUnsignedIntLE
    854:855:long readLongLE() -> readLongLE
    860:861:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    866:867:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    872:873:pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    878:879:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    884:885:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    890:891:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    896:897:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(java.lang.Iterable) -> addComponents
    902:903:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    908:909:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(int,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    914:915:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(int,java.lang.Iterable) -> addComponents
    920:921:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    926:927:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    932:933:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(boolean,java.lang.Iterable) -> addComponents
    938:939:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    944:945:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addFlattenedComponents(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addFlattenedComponents
    950:951:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf removeComponent(int) -> removeComponent
    956:957:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf removeComponents(int,int) -> removeComponents
    962:963:java.util.Iterator iterator() -> iterator
    968:969:java.util.List decompose(int,int) -> decompose
    974:975:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf consolidate() -> consolidate
    980:981:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardReadComponents() -> discardReadComponents
    986:987:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf consolidate(int,int) -> consolidate
    992:993:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    998:999:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    1004:1005:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    1010:1011:int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    1016:1017:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf retain() -> retain
    1022:1023:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf retain(int) -> retain
    1028:1029:boolean release() -> release
    1034:1035:boolean release(int) -> release
    1040:1041:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf touch() -> touch
    1046:1047:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> touch
    1053:1053:pro.gravit.repackage.io.netty.buffer.AdvancedLeakAwareByteBuf newLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    36:36:pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    36:36:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    36:36:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    36:36:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    36:36:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBuf -> pro.gravit.repackage.io.netty.buffer.ByteBuf:
# {"fileName":"ByteBuf.java","id":"sourceFile"}
    248:248:void <init>() -> <init>
    int capacity() -> capacity
    pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    int maxCapacity() -> maxCapacity
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    java.nio.ByteOrder order() -> order
    pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    boolean isDirect() -> isDirect
    boolean isReadOnly() -> isReadOnly
    pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    int readerIndex() -> readerIndex
    pro.gravit.repackage.io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    int writerIndex() -> writerIndex
    pro.gravit.repackage.io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    pro.gravit.repackage.io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    int readableBytes() -> readableBytes
    int writableBytes() -> writableBytes
    int maxWritableBytes() -> maxWritableBytes
    430:430:int maxFastWritableBytes() -> maxFastWritableBytes
    boolean isReadable() -> isReadable
    boolean isReadable(int) -> isReadable
    boolean isWritable() -> isWritable
    boolean isWritable(int) -> isWritable
    pro.gravit.repackage.io.netty.buffer.ByteBuf clear() -> clear
    pro.gravit.repackage.io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    pro.gravit.repackage.io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    pro.gravit.repackage.io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    pro.gravit.repackage.io.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    int ensureWritable(int,boolean) -> ensureWritable
    boolean getBoolean(int) -> getBoolean
    byte getByte(int) -> getByte
    short getUnsignedByte(int) -> getUnsignedByte
    short getShort(int) -> getShort
    short getShortLE(int) -> getShortLE
    int getUnsignedShort(int) -> getUnsignedShort
    int getUnsignedShortLE(int) -> getUnsignedShortLE
    int getMedium(int) -> getMedium
    int getMediumLE(int) -> getMediumLE
    int getUnsignedMedium(int) -> getUnsignedMedium
    int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    int getInt(int) -> getInt
    int getIntLE(int) -> getIntLE
    long getUnsignedInt(int) -> getUnsignedInt
    long getUnsignedIntLE(int) -> getUnsignedIntLE
    long getLong(int) -> getLong
    long getLongLE(int) -> getLongLE
    char getChar(int) -> getChar
    float getFloat(int) -> getFloat
    780:780:float getFloatLE(int) -> getFloatLE
    double getDouble(int) -> getDouble
    805:805:double getDoubleLE(int) -> getDoubleLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    1140:1140:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloatLE(int,float) -> setFloatLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    1166:1166:pro.gravit.repackage.io.netty.buffer.ByteBuf setDoubleLE(int,double) -> setDoubleLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    int setBytes(int,java.io.InputStream,int) -> setBytes
    int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    short readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    short readShortLE() -> readShortLE
    int readUnsignedShort() -> readUnsignedShort
    int readUnsignedShortLE() -> readUnsignedShortLE
    int readMedium() -> readMedium
    int readMediumLE() -> readMediumLE
    int readUnsignedMedium() -> readUnsignedMedium
    int readUnsignedMediumLE() -> readUnsignedMediumLE
    int readInt() -> readInt
    int readIntLE() -> readIntLE
    long readUnsignedInt() -> readUnsignedInt
    long readUnsignedIntLE() -> readUnsignedIntLE
    long readLong() -> readLong
    long readLongLE() -> readLongLE
    char readChar() -> readChar
    float readFloat() -> readFloat
    1540:1540:float readFloatLE() -> readFloatLE
    double readDouble() -> readDouble
    1561:1561:double readDoubleLE() -> readDoubleLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    1882:1882:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloatLE(float) -> writeFloatLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    1902:1902:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDoubleLE(double) -> writeDoubleLE
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    int writeBytes(java.io.InputStream,int) -> writeBytes
    int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    int indexOf(int,int,byte) -> indexOf
    int bytesBefore(byte) -> bytesBefore
    int bytesBefore(int,byte) -> bytesBefore
    int bytesBefore(int,int,byte) -> bytesBefore
    int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    int nioBufferCount() -> nioBufferCount
    java.nio.ByteBuffer nioBuffer() -> nioBuffer
    java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    boolean hasArray() -> hasArray
    byte[] array() -> array
    int arrayOffset() -> arrayOffset
    boolean hasMemoryAddress() -> hasMemoryAddress
    long memoryAddress() -> memoryAddress
    2399:2399:boolean isContiguous() -> isContiguous
    2408:2408:pro.gravit.repackage.io.netty.buffer.ByteBuf asByteBuf() -> asByteBuf
    java.lang.String toString(java.nio.charset.Charset) -> toString
    java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compareTo
    java.lang.String toString() -> toString
    pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    2490:2490:boolean isAccessible() -> isAccessible
    248:248:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    248:248:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    248:248:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    248:248:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    248:248:int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufAllocator -> pro.gravit.repackage.io.netty.buffer.ByteBufAllocator:
# {"fileName":"ByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator DEFAULT -> DEFAULT
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer() -> buffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int) -> buffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer(int,int) -> ioBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    boolean isDirectBufferPooled() -> isDirectBufferPooled
    int calculateNewCapacity(int,int) -> calculateNewCapacity
    24:24:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufAllocatorMetric -> pro.gravit.repackage.io.netty.buffer.ByteBufAllocatorMetric:
# {"fileName":"ByteBufAllocatorMetric.java","id":"sourceFile"}
    long usedHeapMemory() -> usedHeapMemory
    long usedDirectMemory() -> usedDirectMemory
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufAllocatorMetricProvider -> pro.gravit.repackage.io.netty.buffer.ByteBufAllocatorMetricProvider:
# {"fileName":"ByteBufAllocatorMetricProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocatorMetric metric() -> metric
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufConvertible -> pro.gravit.repackage.io.netty.buffer.ByteBufConvertible:
# {"fileName":"ByteBufConvertible.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf asByteBuf() -> asByteBuf
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufHolder -> pro.gravit.repackage.io.netty.buffer.ByteBufHolder:
# {"fileName":"ByteBufHolder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufInputStream -> pro.gravit.repackage.io.netty.buffer.ByteBufInputStream:
# {"fileName":"ByteBufInputStream.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    int startIndex -> startIndex
    int endIndex -> endIndex
    boolean closed -> closed
    boolean releaseOnClose -> releaseOnClose
    java.lang.StringBuilder lineBuf -> lineBuf
    66:67:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    80:81:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> <init>
    92:93:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> <init>
    107:128:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,boolean) -> <init>
    134:134:int readBytes() -> readBytes
    140:148:void close() -> close
    152:152:int available() -> available
    158:159:void mark(int) -> mark
    163:163:boolean markSupported() -> markSupported
    168:172:int read() -> read
    177:184:int read(byte[],int,int) -> read
    190:191:void reset() -> reset
    195:198:long skip(long) -> skip
    204:205:boolean readBoolean() -> readBoolean
    210:214:byte readByte() -> readByte
    219:219:char readChar() -> readChar
    224:224:double readDouble() -> readDouble
    229:229:float readFloat() -> readFloat
    234:235:void readFully(byte[]) -> readFully
    239:241:void readFully(byte[],int,int) -> readFully
    245:246:int readInt() -> readInt
    253:284:java.lang.String readLine() -> readLine
    289:290:long readLong() -> readLong
    295:296:short readShort() -> readShort
    301:301:java.lang.String readUTF() -> readUTF
    306:306:int readUnsignedByte() -> readUnsignedByte
    311:311:int readUnsignedShort() -> readUnsignedShort
    316:318:int skipBytes(int) -> skipBytes
    322:329:void checkAvailable(int) -> checkAvailable
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufOutputStream -> pro.gravit.repackage.io.netty.buffer.ByteBufOutputStream:
# {"fileName":"ByteBufOutputStream.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    int startIndex -> startIndex
    java.io.DataOutputStream utf8out -> utf8out
    boolean closed -> closed
    49:52:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    58:58:int writtenBytes() -> writtenBytes
    63:68:void write(byte[],int,int) -> write
    72:73:void write(byte[]) -> write
    77:78:void write(int) -> write
    82:83:void writeBoolean(boolean) -> writeBoolean
    87:88:void writeByte(int) -> writeByte
    92:93:void writeBytes(java.lang.String) -> writeBytes
    97:98:void writeChar(int) -> writeChar
    102:106:void writeChars(java.lang.String) -> writeChars
    110:111:void writeDouble(double) -> writeDouble
    115:116:void writeFloat(float) -> writeFloat
    120:121:void writeInt(int) -> writeInt
    125:126:void writeLong(long) -> writeLong
    130:131:void writeShort(int) -> writeShort
    135:144:void writeUTF(java.lang.String) -> writeUTF
    150:150:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer() -> buffer
    155:167:void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_NUL -> FIND_NUL
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_NON_NUL -> FIND_NON_NUL
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_CR -> FIND_CR
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_NON_CR -> FIND_NON_CR
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_LF -> FIND_LF
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_NON_LF -> FIND_NON_LF
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_CRLF -> FIND_CRLF
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_NON_CRLF -> FIND_NON_CRLF
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_LINEAR_WHITESPACE -> FIND_LINEAR_WHITESPACE
    pro.gravit.repackage.io.netty.buffer.ByteBufProcessor FIND_NON_LINEAR_WHITESPACE -> FIND_NON_LINEAR_WHITESPACE
    31:130:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$1 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$1:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    31:31:void <init>() -> <init>
    34:34:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$10 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$10:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    130:130:void <init>() -> <init>
    133:133:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$2 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$2:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    42:42:void <init>() -> <init>
    45:45:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$3 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$3:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    53:53:void <init>() -> <init>
    56:56:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$4 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$4:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    64:64:void <init>() -> <init>
    67:67:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$5 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$5:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    75:75:void <init>() -> <init>
    78:78:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$6 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$6:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    86:86:void <init>() -> <init>
    89:89:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$7 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$7:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    97:97:void <init>() -> <init>
    100:100:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$8 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$8:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    108:108:void <init>() -> <init>
    111:111:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$9 -> pro.gravit.repackage.io.netty.buffer.ByteBufProcessor$9:
# {"fileName":"ByteBufProcessor.java","id":"sourceFile"}
    119:119:void <init>() -> <init>
    122:122:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal BYTE_ARRAYS -> BYTE_ARRAYS
    byte WRITE_UTF_UNKNOWN -> WRITE_UTF_UNKNOWN
    int MAX_CHAR_BUFFER_SIZE -> MAX_CHAR_BUFFER_SIZE
    int THREAD_LOCAL_BUFFER_SIZE -> THREAD_LOCAL_BUFFER_SIZE
    int MAX_BYTES_PER_CHAR_UTF8 -> MAX_BYTES_PER_CHAR_UTF8
    int WRITE_CHUNK_SIZE -> WRITE_CHUNK_SIZE
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator DEFAULT_ALLOCATOR -> DEFAULT_ALLOCATOR
    int MAX_TL_ARRAY_LEN -> MAX_TL_ARRAY_LEN
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_NON_ASCII -> FIND_NON_ASCII
    boolean $assertionsDisabled -> $assertionsDisabled
    108:109:byte[] threadLocalTempArray(int) -> threadLocalTempArray
    116:116:boolean isAccessible(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> isAccessible
    124:127:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureAccessible(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> ensureAccessible
    135:135:java.lang.String hexDump(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> hexDump
    143:143:java.lang.String hexDump(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> hexDump
    151:151:java.lang.String hexDump(byte[]) -> hexDump
    159:159:java.lang.String hexDump(byte[],int,int) -> hexDump
    166:166:byte decodeHexByte(java.lang.CharSequence,int) -> decodeHexByte
    173:173:byte[] decodeHexDump(java.lang.CharSequence) -> decodeHexDump
    180:180:byte[] decodeHexDump(java.lang.CharSequence,int,int) -> decodeHexDump
    191:191:boolean ensureWritableSuccess(int) -> ensureWritableSuccess
    199:225:int hashCode(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> hashCode
    234:315:int indexOf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> indexOf
    319:346:long maxSuf(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,boolean) -> maxSuf
    358:398:boolean equals(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> equals
    407:414:boolean equals(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> equals
    422:460:int compare(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compare
    465:471:long compareUintBigEndian(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int) -> compareUintBigEndian
    476:482:long compareUintLittleEndian(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int) -> compareUintLittleEndian
    487:495:long compareUintBigEndianA(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int) -> compareUintBigEndianA
    500:508:long compareUintBigEndianB(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int) -> compareUintBigEndianB
    512:512:long uintFromLE(long) -> uintFromLE
    531:571:int unrolledFirstIndexOf(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int,byte) -> unrolledFirstIndexOf
    579:615:int firstIndexOf(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int,byte) -> firstIndexOf
    619:624:int linearFirstIndexOf(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int,byte) -> linearFirstIndexOf
    632:632:int indexOf(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,byte) -> indexOf
    639:639:short swapShort(short) -> swapShort
    646:650:int swapMedium(int) -> swapMedium
    657:657:int swapInt(int) -> swapInt
    664:664:long swapLong(long) -> swapLong
    672:673:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortBE(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeShortBE
    681:682:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortBE(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setShortBE
    690:691:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumBE(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeMediumBE
    698:708:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    712:725:int lastIndexOf(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int,byte) -> lastIndexOf
    729:733:java.lang.CharSequence checkCharSequenceBounds(java.lang.CharSequence,int,int) -> checkCharSequenceBounds
    746:748:pro.gravit.repackage.io.netty.buffer.ByteBuf writeUtf8(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.CharSequence) -> writeUtf8
    760:761:int writeUtf8(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.CharSequence) -> writeUtf8
    769:770:int writeUtf8(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.CharSequence,int,int) -> writeUtf8
    783:783:int reserveAndWriteUtf8(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.CharSequence,int) -> reserveAndWriteUtf8
    794:794:int reserveAndWriteUtf8(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.CharSequence,int,int,int) -> reserveAndWriteUtf8
    799:814:int reserveAndWriteUtf8Seq(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.CharSequence,int,int,int) -> reserveAndWriteUtf8Seq
    820:820:int writeUtf8(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int,java.lang.CharSequence,int) -> writeUtf8
    826:849:int writeUtf8(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int,java.lang.CharSequence,int,int) -> writeUtf8
    854:872:void writeAsciiString(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,pro.gravit.repackage.io.netty.util.AsciiString,int,int) -> writeAsciiString
    876:918:int safeDirectWriteUtf8(java.nio.ByteBuffer,int,java.lang.CharSequence,int,int) -> safeDirectWriteUtf8
    923:965:int safeWriteUtf8(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,java.lang.CharSequence,int,int) -> safeWriteUtf8
    970:1008:int safeArrayWriteUtf8(byte[],int,java.lang.CharSequence,int,int) -> safeArrayWriteUtf8
    1014:1055:int unsafeWriteUtf8(byte[],long,int,java.lang.CharSequence,int,int) -> unsafeWriteUtf8
    1062:1062:int utf8MaxBytes(int) -> utf8MaxBytes
    1071:1071:int utf8MaxBytes(java.lang.CharSequence) -> utf8MaxBytes
    1080:1080:int utf8Bytes(java.lang.CharSequence) -> utf8Bytes
    1090:1090:int utf8Bytes(java.lang.CharSequence,int,int) -> utf8Bytes
    1094:1103:int utf8ByteCount(java.lang.CharSequence,int,int) -> utf8ByteCount
    1107:1137:int utf8BytesNonAscii(java.lang.CharSequence,int,int) -> utf8BytesNonAscii
    1150:1152:pro.gravit.repackage.io.netty.buffer.ByteBuf writeAscii(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.CharSequence) -> writeAscii
    1164:1185:int writeAscii(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.CharSequence) -> writeAscii
    1195:1198:int writeAscii(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,java.lang.CharSequence,int) -> writeAscii
    1206:1206:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeString(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.CharBuffer,java.nio.charset.Charset) -> encodeString
    1219:1219:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeString(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.CharBuffer,java.nio.charset.Charset,int) -> encodeString
    1224:1253:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeString0(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,java.nio.CharBuffer,java.nio.charset.Charset,int) -> encodeString0
    1258:1276:java.lang.String decodeString(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,java.nio.charset.Charset) -> decodeString
    1285:1292:pro.gravit.repackage.io.netty.buffer.ByteBuf threadLocalDirectBuffer() -> threadLocalDirectBuffer
    1301:1301:byte[] getBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    1309:1309:byte[] getBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    1319:1337:byte[] getBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,boolean) -> getBytes
    1347:1348:void copy(pro.gravit.repackage.io.netty.util.AsciiString,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> copy
    1362:1368:void copy(pro.gravit.repackage.io.netty.util.AsciiString,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> copy
    1379:1385:void copy(pro.gravit.repackage.io.netty.util.AsciiString,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> copy
    1391:1391:java.lang.String prettyHexDump(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> prettyHexDump
    1399:1399:java.lang.String prettyHexDump(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> prettyHexDump
    1407:1408:void appendPrettyHexDump(java.lang.StringBuilder,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> appendPrettyHexDump
    1416:1417:void appendPrettyHexDump(java.lang.StringBuilder,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> appendPrettyHexDump
    1685:1685:boolean isText(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.nio.charset.Charset) -> isText
    1700:1726:boolean isText(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,java.nio.charset.Charset) -> isText
    1750:1750:boolean isAscii(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> isAscii
    1797:1871:boolean isUtf8(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> isUtf8
    1880:1900:void readBytes(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer,int,int,java.io.OutputStream) -> readBytes
    1905:1910:void getBytes(java.nio.ByteBuffer,byte[],int,int,java.io.OutputStream,int) -> getBytes
    1912:1912:void <init>() -> <init>
    57:57:int access$700() -> access$700
    57:1734:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil$1 -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil$1:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    60:60:void <init>() -> <init>
    63:63:byte[] initialValue() -> initialValue
    60:60:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil$2 -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil$2:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    1734:1734:void <init>() -> <init>
    1737:1737:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil$HexUtil -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil$HexUtil:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    char[] BYTE2CHAR -> BYTE2CHAR
    char[] HEXDUMP_TABLE -> HEXDUMP_TABLE
    java.lang.String[] HEXPADDING -> HEXPADDING
    java.lang.String[] HEXDUMP_ROWPREFIXES -> HEXDUMP_ROWPREFIXES
    java.lang.String[] BYTE2HEX -> BYTE2HEX
    java.lang.String[] BYTEPADDING -> BYTEPADDING
    1420:1420:void <init>() -> <init>
    1484:1500:java.lang.String hexDump(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> hexDump
    1504:1520:java.lang.String hexDump(byte[],int,int) -> hexDump
    1524:1530:java.lang.String prettyHexDump(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> prettyHexDump
    1535:1595:void appendPrettyHexDump(java.lang.StringBuilder,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> appendPrettyHexDump
    1598:1606:void appendHexDumpRowPrefix(java.lang.StringBuilder,int,int) -> appendHexDumpRowPrefix
    1420:1420:java.lang.String access$000(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> access$000
    1420:1420:java.lang.String access$100(byte[],int,int) -> access$100
    1420:1420:java.lang.String access$400(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> access$400
    1420:1420:void access$500(java.lang.StringBuilder,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> access$500
    1422:1481:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil$SWARByteSearch -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil$SWARByteSearch:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    515:515:void <init>() -> <init>
    518:518:long compilePattern(byte) -> compilePattern
    522:526:int firstAnyPattern(long,long,boolean) -> firstAnyPattern
    515:515:long access$200(byte) -> access$200
    515:515:int access$300(long,long,boolean) -> access$300
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle handle -> handle
    1654:1656:pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf newInstance() -> newInstance
    1662:1664:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    1668:1674:void deallocate() -> deallocate
    1643:1643:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.buffer.ByteBufUtil$1) -> <init>
    1645:1645:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf$1:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    1646:1646:void <init>() -> <init>
    1649:1649:pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalDirectByteBuf newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    1646:1646:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle handle -> handle
    1620:1622:pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newInstance() -> newInstance
    1628:1630:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    1634:1640:void deallocate() -> deallocate
    1609:1609:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.buffer.ByteBufUtil$1) -> <init>
    1611:1612:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf$1:
# {"fileName":"ByteBufUtil.java","id":"sourceFile"}
    1612:1612:void <init>() -> <init>
    1615:1615:pro.gravit.repackage.io.netty.buffer.ByteBufUtil$ThreadLocalUnsafeDirectByteBuf newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    1612:1612:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.CompositeByteBuf -> pro.gravit.repackage.io.netty.buffer.CompositeByteBuf:
# {"fileName":"CompositeByteBuf.java","id":"sourceFile"}
    java.nio.ByteBuffer EMPTY_NIO_BUFFER -> EMPTY_NIO_BUFFER
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc -> alloc
    boolean direct -> direct
    int maxNumComponents -> maxNumComponents
    int componentCount -> componentCount
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component[] components -> components
    boolean freed -> freed
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$ByteWrapper BYTE_ARRAY_WRAPPER -> BYTE_ARRAY_WRAPPER
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$ByteWrapper BYTE_BUFFER_WRAPPER -> BYTE_BUFFER_WRAPPER
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component lastAccessed -> lastAccessed
    boolean $assertionsDisabled -> $assertionsDisabled
    64:75:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,int,int) -> <init>
    78:79:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,int) -> <init>
    82:83:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> <init>
    87:92:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf[],int) -> <init>
    96:101:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,int,java.lang.Iterable) -> <init>
    133:138:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,int,pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$ByteWrapper,java.lang.Object[],int) -> <init>
    141:142:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component[] newCompArray(int,int) -> newCompArray
    147:152:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> <init>
    165:165:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    180:180:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    195:195:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(java.lang.Iterable) -> addComponents
    210:210:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    222:222:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    235:238:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    251:251:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(boolean,java.lang.Iterable) -> addComponents
    264:267:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    271:275:void checkForOverflow(int,int) -> checkForOverflow
    281:309:int addComponent0(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent0
    313:316:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureAccessible(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> ensureAccessible
    321:347:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component newComponent(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> newComponent
    365:368:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(int,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    373:419:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents0(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf[],int) -> addComponents0
    424:440:int addComponents0(boolean,int,pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$ByteWrapper,java.lang.Object[],int) -> addComponents0
    457:457:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(int,java.lang.Iterable) -> addComponents
    471:528:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addFlattenedComponents(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addFlattenedComponents
    535:559:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(boolean,int,java.lang.Iterable) -> addComponents
    569:573:void consolidateIfNeeded() -> consolidateIfNeeded
    576:582:void checkComponentIndex(int) -> checkComponentIndex
    585:592:void checkComponentIndex(int,int) -> checkComponentIndex
    595:606:void updateComponentOffsets(int) -> updateComponentOffsets
    614:625:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf removeComponent(int) -> removeComponent
    635:658:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf removeComponents(int,int) -> removeComponents
    663:664:java.util.Iterator iterator() -> iterator
    669:690:int forEachByteAsc0(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteAsc0
    695:716:int forEachByteDesc0(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc0
    723:758:java.util.List decompose(int,int) -> decompose
    763:772:boolean isDirect() -> isDirect
    777:783:boolean hasArray() -> hasArray
    789:795:byte[] array() -> array
    801:808:int arrayOffset() -> arrayOffset
    814:820:boolean hasMemoryAddress() -> hasMemoryAddress
    826:833:long memoryAddress() -> memoryAddress
    839:840:int capacity() -> capacity
    845:885:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf capacity(int) -> capacity
    890:890:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    895:895:java.nio.ByteOrder order() -> order
    902:902:int numComponents() -> numComponents
    909:909:int maxNumComponents() -> maxNumComponents
    916:917:int toComponentIndex(int) -> toComponentIndex
    921:944:int toComponentIndex0(int) -> toComponentIndex0
    948:949:int toByteIndex(int) -> toByteIndex
    954:955:byte getByte(int) -> getByte
    960:961:byte _getByte(int) -> _getByte
    966:972:short _getShort(int) -> _getShort
    978:984:short _getShortLE(int) -> _getShortLE
    990:996:int _getUnsignedMedium(int) -> _getUnsignedMedium
    1002:1008:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    1014:1020:int _getInt(int) -> _getInt
    1026:1032:int _getIntLE(int) -> _getIntLE
    1038:1044:long _getLong(int) -> _getLong
    1050:1056:long _getLongLE(int) -> _getLongLE
    1062:1077:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> getBytes
    1082:1104:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    1109:1124:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    1130:1138:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    1146:1157:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    1163:1177:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    1182:1184:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setByte(int,int) -> setByte
    1189:1191:void _setByte(int,int) -> _setByte
    1195:1197:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setShort(int,int) -> setShort
    1202:1212:void _setShort(int,int) -> _setShort
    1216:1226:void _setShortLE(int,int) -> _setShortLE
    1230:1232:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setMedium(int,int) -> setMedium
    1237:1247:void _setMedium(int,int) -> _setMedium
    1251:1261:void _setMediumLE(int,int) -> _setMediumLE
    1265:1267:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setInt(int,int) -> setInt
    1272:1282:void _setInt(int,int) -> _setInt
    1286:1296:void _setIntLE(int,int) -> _setIntLE
    1300:1302:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setLong(int,long) -> setLong
    1307:1317:void _setLong(int,long) -> _setLong
    1321:1331:void _setLongLE(int,long) -> _setLongLE
    1335:1350:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> setBytes
    1355:1377:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    1382:1397:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    1402:1434:int setBytes(int,java.io.InputStream,int) -> setBytes
    1439:1476:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    1481:1518:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    1523:1528:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    1532:1546:void copyTo(int,int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> copyTo
    1555:1556:pro.gravit.repackage.io.netty.buffer.ByteBuf component(int) -> component
    1566:1566:pro.gravit.repackage.io.netty.buffer.ByteBuf componentAtOffset(int) -> componentAtOffset
    1576:1577:pro.gravit.repackage.io.netty.buffer.ByteBuf internalComponent(int) -> internalComponent
    1587:1587:pro.gravit.repackage.io.netty.buffer.ByteBuf internalComponentAtOffset(int) -> internalComponentAtOffset
    1594:1600:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component findComponent(int) -> findComponent
    1604:1608:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component findComponent0(int) -> findComponent0
    1612:1629:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component findIt(int) -> findIt
    1634:1645:int nioBufferCount() -> nioBufferCount
    1651:1657:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    1663:1691:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    1696:1726:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    1733:1735:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf consolidate() -> consolidate
    1745:1747:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf consolidate(int,int) -> consolidate
    1751:1769:void consolidate0(int,int) -> consolidate0
    1775:1818:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardReadComponents() -> discardReadComponents
    1823:1875:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardReadBytes() -> discardReadBytes
    1879:1879:pro.gravit.repackage.io.netty.buffer.ByteBuf allocBuffer(int) -> allocBuffer
    1884:1886:java.lang.String toString() -> toString
    1965:1966:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readerIndex(int) -> readerIndex
    1971:1972:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writerIndex(int) -> writerIndex
    1977:1978:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setIndex(int,int) -> setIndex
    1983:1984:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf clear() -> clear
    1989:1990:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf markReaderIndex() -> markReaderIndex
    1995:1996:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf resetReaderIndex() -> resetReaderIndex
    2001:2002:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf markWriterIndex() -> markWriterIndex
    2007:2008:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf resetWriterIndex() -> resetWriterIndex
    2013:2014:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf ensureWritable(int) -> ensureWritable
    2019:2019:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    2024:2026:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    2031:2031:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> getBytes
    2036:2036:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBoolean(int,boolean) -> setBoolean
    2041:2041:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setChar(int,int) -> setChar
    2046:2046:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setFloat(int,float) -> setFloat
    2051:2051:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setDouble(int,double) -> setDouble
    2056:2057:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    2062:2063:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    2068:2068:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> setBytes
    2073:2074:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setZero(int,int) -> setZero
    2079:2080:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    2085:2086:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    2091:2092:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    2097:2098:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> readBytes
    2103:2104:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> readBytes
    2109:2110:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    2115:2116:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    2121:2122:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf skipBytes(int) -> skipBytes
    2127:2128:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBoolean(boolean) -> writeBoolean
    2133:2135:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeByte(int) -> writeByte
    2140:2141:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeShort(int) -> writeShort
    2146:2147:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeMedium(int) -> writeMedium
    2152:2153:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeInt(int) -> writeInt
    2158:2159:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeLong(long) -> writeLong
    2164:2165:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeChar(int) -> writeChar
    2170:2171:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeFloat(float) -> writeFloat
    2176:2177:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeDouble(double) -> writeDouble
    2182:2183:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    2188:2189:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    2194:2195:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    2200:2201:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> writeBytes
    2206:2207:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> writeBytes
    2212:2213:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    2218:2219:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeZero(int) -> writeZero
    2224:2225:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf retain(int) -> retain
    2230:2231:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf retain() -> retain
    2236:2236:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf touch() -> touch
    2241:2241:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> touch
    2246:2246:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    2251:2251:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    2256:2266:void deallocate() -> deallocate
    2270:2270:boolean isAccessible() -> isAccessible
    2275:2275:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    2311:2312:void clearComps() -> clearComps
    2315:2316:void removeComp(int) -> removeComp
    2319:2332:void removeCompRange(int,int) -> removeCompRange
    2335:2337:void addComp(int,pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component) -> addComp
    2340:2362:void shiftComps(int,int) -> shiftComps
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf clear() -> clear
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    49:49:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    49:49:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    49:49:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    49:49:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    49:49:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component[] access$200(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf) -> access$200
    49:120:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$1:
# {"fileName":"CompositeByteBuf.java","id":"sourceFile"}
    109:109:void <init>() -> <init>
    112:112:pro.gravit.repackage.io.netty.buffer.ByteBuf wrap(byte[]) -> wrap
    116:116:boolean isEmpty(byte[]) -> isEmpty
    109:109:boolean isEmpty(java.lang.Object) -> isEmpty
    109:109:pro.gravit.repackage.io.netty.buffer.ByteBuf wrap(java.lang.Object) -> wrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$2 -> pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$2:
# {"fileName":"CompositeByteBuf.java","id":"sourceFile"}
    120:120:void <init>() -> <init>
    123:123:pro.gravit.repackage.io.netty.buffer.ByteBuf wrap(java.nio.ByteBuffer) -> wrap
    127:127:boolean isEmpty(java.nio.ByteBuffer) -> isEmpty
    120:120:boolean isEmpty(java.lang.Object) -> isEmpty
    120:120:pro.gravit.repackage.io.netty.buffer.ByteBuf wrap(java.lang.Object) -> wrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$ByteWrapper -> pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$ByteWrapper:
# {"fileName":"CompositeByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf wrap(java.lang.Object) -> wrap
    boolean isEmpty(java.lang.Object) -> isEmpty
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component -> pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component:
# {"fileName":"CompositeByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf srcBuf -> srcBuf
    pro.gravit.repackage.io.netty.buffer.ByteBuf buf -> buf
    int srcAdjustment -> srcAdjustment
    int adjustment -> adjustment
    int offset -> offset
    int endOffset -> endOffset
    pro.gravit.repackage.io.netty.buffer.ByteBuf slice -> slice
    1902:1910:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    1913:1913:int srcIdx(int) -> srcIdx
    1917:1917:int idx(int) -> idx
    1921:1921:int length() -> length
    1925:1930:void reposition(int) -> reposition
    1934:1936:void transferTo(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> transferTo
    1939:1943:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    1947:1947:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    1952:1952:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    1956:1960:void free() -> free
    1889:1889:pro.gravit.repackage.io.netty.buffer.ByteBuf access$100(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component) -> access$100
    1889:1889:pro.gravit.repackage.io.netty.buffer.ByteBuf access$102(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$Component,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> access$102
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator -> pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:
# {"fileName":"CompositeByteBuf.java","id":"sourceFile"}
    int size -> size
    int index -> index
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf this$0 -> this$0
    2278:2279:void <init>(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf) -> <init>
    2284:2284:boolean hasNext() -> hasNext
    2289:2298:pro.gravit.repackage.io.netty.buffer.ByteBuf next() -> next
    2304:2304:void remove() -> remove
    2278:2278:java.lang.Object next() -> next
    2278:2278:void <init>(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf,pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.DefaultByteBufHolder -> pro.gravit.repackage.io.netty.buffer.DefaultByteBufHolder:
# {"fileName":"DefaultByteBufHolder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf data -> data
    29:31:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    35:35:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    45:45:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    55:55:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    65:65:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    77:77:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    82:82:int refCnt() -> refCnt
    87:88:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    93:94:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    99:100:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    105:106:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    111:111:boolean release() -> release
    116:116:boolean release(int) -> release
    124:124:java.lang.String contentToString() -> contentToString
    129:129:java.lang.String toString() -> toString
    145:151:boolean equals(java.lang.Object) -> equals
    156:156:int hashCode() -> hashCode
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.DuplicatedByteBuf -> pro.gravit.repackage.io.netty.buffer.DuplicatedByteBuf:
# {"fileName":"DuplicatedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    42:43:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    46:59:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> <init>
    63:63:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    68:68:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    74:74:java.nio.ByteOrder order() -> order
    79:79:boolean isDirect() -> isDirect
    84:84:int capacity() -> capacity
    89:90:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    95:95:boolean hasArray() -> hasArray
    100:100:byte[] array() -> array
    105:105:int arrayOffset() -> arrayOffset
    110:110:boolean hasMemoryAddress() -> hasMemoryAddress
    115:115:long memoryAddress() -> memoryAddress
    120:120:byte getByte(int) -> getByte
    125:125:byte _getByte(int) -> _getByte
    130:130:short getShort(int) -> getShort
    135:135:short _getShort(int) -> _getShort
    140:140:short getShortLE(int) -> getShortLE
    145:145:short _getShortLE(int) -> _getShortLE
    150:150:int getUnsignedMedium(int) -> getUnsignedMedium
    155:155:int _getUnsignedMedium(int) -> _getUnsignedMedium
    160:160:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    165:165:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    170:170:int getInt(int) -> getInt
    175:175:int _getInt(int) -> _getInt
    180:180:int getIntLE(int) -> getIntLE
    185:185:int _getIntLE(int) -> _getIntLE
    190:190:long getLong(int) -> getLong
    195:195:long _getLong(int) -> _getLong
    200:200:long getLongLE(int) -> getLongLE
    205:205:long _getLongLE(int) -> _getLongLE
    210:210:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    215:215:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    220:221:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    226:227:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    232:233:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    238:239:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    244:245:void _setByte(int,int) -> _setByte
    249:250:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    255:256:void _setShort(int,int) -> _setShort
    260:261:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    266:267:void _setShortLE(int,int) -> _setShortLE
    271:272:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    277:278:void _setMedium(int,int) -> _setMedium
    282:283:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    288:289:void _setMediumLE(int,int) -> _setMediumLE
    293:294:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    299:300:void _setInt(int,int) -> _setInt
    304:305:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    310:311:void _setIntLE(int,int) -> _setIntLE
    315:316:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    321:322:void _setLong(int,long) -> _setLong
    326:327:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    332:333:void _setLongLE(int,long) -> _setLongLE
    337:338:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    343:344:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    349:350:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    356:357:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    363:363:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    369:369:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    375:375:int setBytes(int,java.io.InputStream,int) -> setBytes
    381:381:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    387:387:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    392:392:int nioBufferCount() -> nioBufferCount
    397:397:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    402:402:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    407:407:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.EmptyByteBuf -> pro.gravit.repackage.io.netty.buffer.EmptyByteBuf:
# {"fileName":"EmptyByteBuf.java","id":"sourceFile"}
    int EMPTY_BYTE_BUF_HASH_CODE -> EMPTY_BYTE_BUF_HASH_CODE
    java.nio.ByteBuffer EMPTY_BYTE_BUFFER -> EMPTY_BYTE_BUFFER
    long EMPTY_BYTE_BUFFER_ADDRESS -> EMPTY_BYTE_BUFFER_ADDRESS
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc -> alloc
    java.nio.ByteOrder order -> order
    java.lang.String str -> str
    pro.gravit.repackage.io.netty.buffer.EmptyByteBuf swapped -> swapped
    64:65:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> <init>
    67:71:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.ByteOrder) -> <init>
    75:75:int capacity() -> capacity
    80:80:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    85:85:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    90:90:java.nio.ByteOrder order() -> order
    95:95:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    100:100:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    105:105:boolean isReadOnly() -> isReadOnly
    110:110:boolean isDirect() -> isDirect
    115:115:int maxCapacity() -> maxCapacity
    120:130:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    135:135:int readerIndex() -> readerIndex
    140:140:pro.gravit.repackage.io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    145:145:int writerIndex() -> writerIndex
    150:150:pro.gravit.repackage.io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    155:157:pro.gravit.repackage.io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    162:162:int readableBytes() -> readableBytes
    167:167:int writableBytes() -> writableBytes
    172:172:int maxWritableBytes() -> maxWritableBytes
    177:177:boolean isReadable() -> isReadable
    182:182:boolean isWritable() -> isWritable
    187:187:pro.gravit.repackage.io.netty.buffer.ByteBuf clear() -> clear
    192:192:pro.gravit.repackage.io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    197:197:pro.gravit.repackage.io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    202:202:pro.gravit.repackage.io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    207:207:pro.gravit.repackage.io.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    212:212:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    217:217:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    222:226:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    231:237:int ensureWritable(int,boolean) -> ensureWritable
    242:242:boolean getBoolean(int) -> getBoolean
    247:247:byte getByte(int) -> getByte
    252:252:short getUnsignedByte(int) -> getUnsignedByte
    257:257:short getShort(int) -> getShort
    262:262:short getShortLE(int) -> getShortLE
    267:267:int getUnsignedShort(int) -> getUnsignedShort
    272:272:int getUnsignedShortLE(int) -> getUnsignedShortLE
    277:277:int getMedium(int) -> getMedium
    282:282:int getMediumLE(int) -> getMediumLE
    287:287:int getUnsignedMedium(int) -> getUnsignedMedium
    292:292:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    297:297:int getInt(int) -> getInt
    302:302:int getIntLE(int) -> getIntLE
    307:307:long getUnsignedInt(int) -> getUnsignedInt
    312:312:long getUnsignedIntLE(int) -> getUnsignedIntLE
    317:317:long getLong(int) -> getLong
    322:322:long getLongLE(int) -> getLongLE
    327:327:char getChar(int) -> getChar
    332:332:float getFloat(int) -> getFloat
    337:337:double getDouble(int) -> getDouble
    342:342:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    347:347:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    352:352:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    357:357:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    362:362:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    367:367:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    372:372:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    377:378:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    383:384:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    389:390:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    395:395:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    400:400:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    405:405:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    410:410:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    415:415:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    420:420:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    425:425:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    430:430:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    435:435:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    440:440:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    445:445:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    450:450:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    455:455:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    460:460:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    465:465:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    470:470:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    475:475:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    480:480:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    485:485:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    490:491:int setBytes(int,java.io.InputStream,int) -> setBytes
    496:497:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    502:503:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    508:508:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    513:513:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    518:518:boolean readBoolean() -> readBoolean
    523:523:byte readByte() -> readByte
    528:528:short readUnsignedByte() -> readUnsignedByte
    533:533:short readShort() -> readShort
    538:538:short readShortLE() -> readShortLE
    543:543:int readUnsignedShort() -> readUnsignedShort
    548:548:int readUnsignedShortLE() -> readUnsignedShortLE
    553:553:int readMedium() -> readMedium
    558:558:int readMediumLE() -> readMediumLE
    563:563:int readUnsignedMedium() -> readUnsignedMedium
    568:568:int readUnsignedMediumLE() -> readUnsignedMediumLE
    573:573:int readInt() -> readInt
    578:578:int readIntLE() -> readIntLE
    583:583:long readUnsignedInt() -> readUnsignedInt
    588:588:long readUnsignedIntLE() -> readUnsignedIntLE
    593:593:long readLong() -> readLong
    598:598:long readLongLE() -> readLongLE
    603:603:char readChar() -> readChar
    608:608:float readFloat() -> readFloat
    613:613:double readDouble() -> readDouble
    618:618:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    623:623:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    628:628:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    633:633:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    638:638:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    643:643:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    648:648:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    653:653:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    658:658:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    663:663:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    668:669:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    674:675:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    680:681:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    686:686:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    691:691:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    696:696:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    701:701:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    706:706:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    711:711:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    716:716:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    721:721:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    726:726:pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    731:731:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    736:736:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    741:741:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    746:746:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    751:751:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    756:756:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    761:761:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    766:766:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    771:771:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    776:776:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    781:781:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    786:787:int writeBytes(java.io.InputStream,int) -> writeBytes
    792:793:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    798:799:int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    804:804:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    809:809:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    814:816:int indexOf(int,int,byte) -> indexOf
    821:821:int bytesBefore(byte) -> bytesBefore
    826:827:int bytesBefore(int,byte) -> bytesBefore
    832:833:int bytesBefore(int,int,byte) -> bytesBefore
    838:838:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    843:844:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    849:849:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    854:855:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    860:860:pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    865:865:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    870:870:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    875:875:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    880:880:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    885:885:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    890:890:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    895:895:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    900:900:int nioBufferCount() -> nioBufferCount
    905:905:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    910:911:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    916:916:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    921:922:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    927:927:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    932:932:boolean hasArray() -> hasArray
    937:937:byte[] array() -> array
    942:942:int arrayOffset() -> arrayOffset
    947:947:boolean hasMemoryAddress() -> hasMemoryAddress
    952:955:long memoryAddress() -> memoryAddress
    961:961:boolean isContiguous() -> isContiguous
    966:966:java.lang.String toString(java.nio.charset.Charset) -> toString
    971:972:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    977:977:int hashCode() -> hashCode
    982:982:boolean equals(java.lang.Object) -> equals
    987:987:int compareTo(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compareTo
    992:992:java.lang.String toString() -> toString
    997:997:boolean isReadable(int) -> isReadable
    1002:1002:boolean isWritable(int) -> isWritable
    1007:1007:int refCnt() -> refCnt
    1012:1012:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    1017:1017:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    1022:1022:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    1027:1027:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    1032:1032:boolean release() -> release
    1037:1037:boolean release(int) -> release
    1041:1044:pro.gravit.repackage.io.netty.buffer.ByteBuf checkIndex(int) -> checkIndex
    1048:1052:pro.gravit.repackage.io.netty.buffer.ByteBuf checkIndex(int,int) -> checkIndex
    1056:1060:pro.gravit.repackage.io.netty.buffer.ByteBuf checkLength(int) -> checkLength
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    40:40:int compareTo(java.lang.Object) -> compareTo
    43:56:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.FixedCompositeByteBuf -> pro.gravit.repackage.io.netty.buffer.FixedCompositeByteBuf:
# {"fileName":"FixedCompositeByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf[] EMPTY -> EMPTY
    int nioBufferCount -> nioBufferCount
    int capacity -> capacity
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator allocator -> allocator
    java.nio.ByteOrder order -> order
    pro.gravit.repackage.io.netty.buffer.ByteBuf[] buffers -> buffers
    boolean direct -> direct
    46:77:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> <init>
    81:81:boolean isWritable() -> isWritable
    86:86:boolean isWritable(int) -> isWritable
    91:91:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    96:96:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    101:101:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    106:106:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    111:111:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    116:116:void _setByte(int,int) -> _setByte
    121:121:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    126:126:void _setShort(int,int) -> _setShort
    131:131:void _setShortLE(int,int) -> _setShortLE
    136:136:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    141:141:void _setMedium(int,int) -> _setMedium
    146:146:void _setMediumLE(int,int) -> _setMediumLE
    151:151:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    156:156:void _setInt(int,int) -> _setInt
    161:161:void _setIntLE(int,int) -> _setIntLE
    166:166:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    171:171:void _setLong(int,long) -> _setLong
    176:176:void _setLongLE(int,long) -> _setLongLE
    181:181:int setBytes(int,java.io.InputStream,int) -> setBytes
    186:186:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    191:191:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    196:196:int capacity() -> capacity
    201:201:int maxCapacity() -> maxCapacity
    206:206:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    211:211:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    216:216:java.nio.ByteOrder order() -> order
    221:221:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    226:226:boolean isDirect() -> isDirect
    230:249:pro.gravit.repackage.io.netty.buffer.FixedCompositeByteBuf$Component findComponent(int) -> findComponent
    256:257:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int) -> buffer
    262:262:byte getByte(int) -> getByte
    267:268:byte _getByte(int) -> _getByte
    273:279:short _getShort(int) -> _getShort
    285:291:short _getShortLE(int) -> _getShortLE
    297:303:int _getUnsignedMedium(int) -> _getUnsignedMedium
    309:315:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    321:327:int _getInt(int) -> _getInt
    333:339:int _getIntLE(int) -> _getIntLE
    345:351:long _getLong(int) -> _getLong
    357:363:long _getLongLE(int) -> _getLongLE
    369:390:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    395:423:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    428:449:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    455:463:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    471:482:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    489:509:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    514:525:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    530:530:int nioBufferCount() -> nioBufferCount
    535:551:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    556:559:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    564:599:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    604:610:boolean hasArray() -> hasArray
    616:622:byte[] array() -> array
    628:634:int arrayOffset() -> arrayOffset
    640:646:boolean hasMemoryAddress() -> hasMemoryAddress
    652:658:long memoryAddress() -> memoryAddress
    664:667:void deallocate() -> deallocate
    671:673:java.lang.String toString() -> toString
    37:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.FixedCompositeByteBuf$Component -> pro.gravit.repackage.io.netty.buffer.FixedCompositeByteBuf$Component:
# {"fileName":"FixedCompositeByteBuf.java","id":"sourceFile"}
    int index -> index
    int offset -> offset
    int endOffset -> endOffset
    682:686:void <init>(int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    676:676:int access$000(pro.gravit.repackage.io.netty.buffer.FixedCompositeByteBuf$Component) -> access$000
    676:676:int access$100(pro.gravit.repackage.io.netty.buffer.FixedCompositeByteBuf$Component) -> access$100
    676:676:int access$200(pro.gravit.repackage.io.netty.buffer.FixedCompositeByteBuf$Component) -> access$200
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.HeapByteBufUtil -> pro.gravit.repackage.io.netty.buffer.HeapByteBufUtil:
# {"fileName":"HeapByteBufUtil.java","id":"sourceFile"}
    24:24:byte getByte(byte[],int) -> getByte
    28:28:short getShort(byte[],int) -> getShort
    32:32:short getShortLE(byte[],int) -> getShortLE
    36:36:int getUnsignedMedium(byte[],int) -> getUnsignedMedium
    42:42:int getUnsignedMediumLE(byte[],int) -> getUnsignedMediumLE
    48:48:int getInt(byte[],int) -> getInt
    55:55:int getIntLE(byte[],int) -> getIntLE
    62:62:long getLong(byte[],int) -> getLong
    73:73:long getLongLE(byte[],int) -> getLongLE
    84:85:void setByte(byte[],int,int) -> setByte
    88:90:void setShort(byte[],int,int) -> setShort
    93:95:void setShortLE(byte[],int,int) -> setShortLE
    98:101:void setMedium(byte[],int,int) -> setMedium
    104:107:void setMediumLE(byte[],int,int) -> setMediumLE
    110:114:void setInt(byte[],int,int) -> setInt
    117:121:void setIntLE(byte[],int,int) -> setIntLE
    124:132:void setLong(byte[],int,long) -> setLong
    135:143:void setLongLE(byte[],int,long) -> setLongLE
    145:145:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.LongLongHashMap -> pro.gravit.repackage.io.netty.buffer.LongLongHashMap:
# {"fileName":"LongLongHashMap.java","id":"sourceFile"}
    int MASK_TEMPLATE -> MASK_TEMPLATE
    int mask -> mask
    long[] array -> array
    int maxProbe -> maxProbe
    long zeroVal -> zeroVal
    long emptyVal -> emptyVal
    30:37:void <init>(long) -> <init>
    40:67:long put(long,long) -> put
    71:84:void remove(long) -> remove
    87:98:long get(long) -> get
    103:108:int index(long) -> index
    112:122:void expand() -> expand
    125:128:void computeMaskAndProbe() -> computeMaskAndProbe
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.LongPriorityQueue -> pro.gravit.repackage.io.netty.buffer.LongPriorityQueue:
# {"fileName":"LongPriorityQueue.java","id":"sourceFile"}
    int NO_VALUE -> NO_VALUE
    long[] array -> array
    int size -> size
    24:26:void <init>() -> <init>
    30:40:void offer(long) -> offer
    43:51:void remove(long) -> remove
    54:57:long peek() -> peek
    61:69:long poll() -> poll
    73:73:boolean isEmpty() -> isEmpty
    78:82:void lift(int) -> lift
    86:96:void sink(int) -> sink
    99:99:boolean subord(int,int) -> subord
    103:106:void swap(int,int) -> swap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolArena -> pro.gravit.repackage.io.netty.buffer.PoolArena:
# {"fileName":"PoolArena.java","id":"sourceFile"}
    boolean HAS_UNSAFE -> HAS_UNSAFE
    pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator parent -> parent
    int numSmallSubpagePools -> numSmallSubpagePools
    int directMemoryCacheAlignment -> directMemoryCacheAlignment
    pro.gravit.repackage.io.netty.buffer.PoolSubpage[] smallSubpagePools -> smallSubpagePools
    pro.gravit.repackage.io.netty.buffer.PoolChunkList q050 -> q050
    pro.gravit.repackage.io.netty.buffer.PoolChunkList q025 -> q025
    pro.gravit.repackage.io.netty.buffer.PoolChunkList q000 -> q000
    pro.gravit.repackage.io.netty.buffer.PoolChunkList qInit -> qInit
    pro.gravit.repackage.io.netty.buffer.PoolChunkList q075 -> q075
    pro.gravit.repackage.io.netty.buffer.PoolChunkList q100 -> q100
    java.util.List chunkListMetrics -> chunkListMetrics
    long allocationsNormal -> allocationsNormal
    pro.gravit.repackage.io.netty.util.internal.LongCounter allocationsSmall -> allocationsSmall
    pro.gravit.repackage.io.netty.util.internal.LongCounter allocationsHuge -> allocationsHuge
    pro.gravit.repackage.io.netty.util.internal.LongCounter activeBytesHuge -> activeBytesHuge
    long deallocationsSmall -> deallocationsSmall
    long deallocationsNormal -> deallocationsNormal
    pro.gravit.repackage.io.netty.util.internal.LongCounter deallocationsHuge -> deallocationsHuge
    java.util.concurrent.atomic.AtomicInteger numThreadCaches -> numThreadCaches
    java.util.concurrent.locks.ReentrantLock lock -> lock
    boolean $assertionsDisabled -> $assertionsDisabled
    59:111:void <init>(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator,int,int,int,int) -> <init>
    114:117:pro.gravit.repackage.io.netty.buffer.PoolSubpage newSubpagePoolHead() -> newSubpagePoolHead
    122:122:pro.gravit.repackage.io.netty.buffer.PoolSubpage[] newSubpagePoolArray(int) -> newSubpagePoolArray
    boolean isDirect() -> isDirect
    128:130:pro.gravit.repackage.io.netty.buffer.PooledByteBuf allocate(pro.gravit.repackage.io.netty.buffer.PoolThreadCache,int,int) -> allocate
    134:146:void allocate(pro.gravit.repackage.io.netty.buffer.PoolThreadCache,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int) -> allocate
    151:187:void tcacheAllocateSmall(pro.gravit.repackage.io.netty.buffer.PoolThreadCache,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,int) -> tcacheAllocateSmall
    191:202:void tcacheAllocateNormal(pro.gravit.repackage.io.netty.buffer.PoolThreadCache,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,int) -> tcacheAllocateNormal
    205:219:void allocateNormal(pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> allocateNormal
    222:223:void incSmallAllocation() -> incSmallAllocation
    226:230:void allocateHuge(pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int) -> allocateHuge
    233:247:void free(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> free
    250:250:pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass sizeClass(long) -> sizeClass
    256:280:void freeChunk(pro.gravit.repackage.io.netty.buffer.PoolChunk,long,int,pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass,java.nio.ByteBuffer,boolean) -> freeChunk
    283:283:pro.gravit.repackage.io.netty.buffer.PoolSubpage findSubpagePoolHead(int) -> findSubpagePoolHead
    287:314:void reallocate(pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,boolean) -> reallocate
    318:318:int numThreadCaches() -> numThreadCaches
    323:323:int numTinySubpages() -> numTinySubpages
    328:328:int numSmallSubpages() -> numSmallSubpages
    333:333:int numChunkLists() -> numChunkLists
    338:338:java.util.List tinySubpages() -> tinySubpages
    343:343:java.util.List smallSubpages() -> smallSubpages
    348:348:java.util.List chunkLists() -> chunkLists
    352:366:java.util.List subPageMetricList(pro.gravit.repackage.io.netty.buffer.PoolSubpage[]) -> subPageMetricList
    372:378:long numAllocations() -> numAllocations
    383:383:long numTinyAllocations() -> numTinyAllocations
    388:388:long numSmallAllocations() -> numSmallAllocations
    393:398:long numNormalAllocations() -> numNormalAllocations
    404:410:long numDeallocations() -> numDeallocations
    415:415:long numTinyDeallocations() -> numTinyDeallocations
    420:425:long numSmallDeallocations() -> numSmallDeallocations
    430:435:long numNormalDeallocations() -> numNormalDeallocations
    440:440:long numHugeAllocations() -> numHugeAllocations
    445:445:long numHugeDeallocations() -> numHugeDeallocations
    450:458:long numActiveAllocations() -> numActiveAllocations
    463:463:long numActiveTinyAllocations() -> numActiveTinyAllocations
    468:468:long numActiveSmallAllocations() -> numActiveSmallAllocations
    474:480:long numActiveNormalAllocations() -> numActiveNormalAllocations
    485:485:long numActiveHugeAllocations() -> numActiveHugeAllocations
    490:501:long numActiveBytes() -> numActiveBytes
    509:520:long numPinnedBytes() -> numPinnedBytes
    pro.gravit.repackage.io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    pro.gravit.repackage.io.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    pro.gravit.repackage.io.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    void memoryCopy(java.lang.Object,int,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int) -> memoryCopy
    void destroyChunk(pro.gravit.repackage.io.netty.buffer.PoolChunk) -> destroyChunk
    531:564:java.lang.String toString() -> toString
    568:586:void appendPoolSubPages(java.lang.StringBuilder,pro.gravit.repackage.io.netty.buffer.PoolSubpage[]) -> appendPoolSubPages
    591:596:void finalize() -> finalize
    599:602:void destroyPoolSubPages(pro.gravit.repackage.io.netty.buffer.PoolSubpage[]) -> destroyPoolSubPages
    605:608:void destroyPoolChunkLists(pro.gravit.repackage.io.netty.buffer.PoolChunkList[]) -> destroyPoolChunkLists
    744:745:void lock() -> lock
    748:749:void unlock() -> unlock
    33:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolArena$1 -> pro.gravit.repackage.io.netty.buffer.PoolArena$1:
# {"fileName":"PoolArena.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$buffer$PoolArena$SizeClass -> $SwitchMap$io$netty$buffer$PoolArena$SizeClass
    261:261:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolArena$DirectArena -> pro.gravit.repackage.io.netty.buffer.PoolArena$DirectArena:
# {"fileName":"PoolArena.java","id":"sourceFile"}
    663:665:void <init>(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator,int,int,int,int) -> <init>
    669:669:boolean isDirect() -> isDirect
    675:683:pro.gravit.repackage.io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    689:696:pro.gravit.repackage.io.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    700:701:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    706:711:void destroyChunk(pro.gravit.repackage.io.netty.buffer.PoolChunk) -> destroyChunk
    715:718:pro.gravit.repackage.io.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    724:740:void memoryCopy(java.nio.ByteBuffer,int,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int) -> memoryCopy
    659:659:void memoryCopy(java.lang.Object,int,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int) -> memoryCopy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolArena$HeapArena -> pro.gravit.repackage.io.netty.buffer.PoolArena$HeapArena:
# {"fileName":"PoolArena.java","id":"sourceFile"}
    614:616:void <init>(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator,int,int,int) -> <init>
    619:619:byte[] newByteArray(int) -> newByteArray
    624:624:boolean isDirect() -> isDirect
    629:630:pro.gravit.repackage.io.netty.buffer.PoolChunk newChunk(int,int,int,int) -> newChunk
    635:635:pro.gravit.repackage.io.netty.buffer.PoolChunk newUnpooledChunk(int) -> newUnpooledChunk
    641:641:void destroyChunk(pro.gravit.repackage.io.netty.buffer.PoolChunk) -> destroyChunk
    645:646:pro.gravit.repackage.io.netty.buffer.PooledByteBuf newByteBuf(int) -> newByteBuf
    651:656:void memoryCopy(byte[],int,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int) -> memoryCopy
    610:610:void memoryCopy(java.lang.Object,int,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int) -> memoryCopy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass -> pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass:
# {"fileName":"PoolArena.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass Small -> Small
    pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass Normal -> Normal
    pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass[] $VALUES -> $VALUES
    36:36:pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass[] values() -> values
    36:36:pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolArenaMetric -> pro.gravit.repackage.io.netty.buffer.PoolArenaMetric:
# {"fileName":"PoolArenaMetric.java","id":"sourceFile"}
    int numThreadCaches() -> numThreadCaches
    int numTinySubpages() -> numTinySubpages
    int numSmallSubpages() -> numSmallSubpages
    int numChunkLists() -> numChunkLists
    java.util.List tinySubpages() -> tinySubpages
    java.util.List smallSubpages() -> smallSubpages
    java.util.List chunkLists() -> chunkLists
    long numAllocations() -> numAllocations
    long numTinyAllocations() -> numTinyAllocations
    long numSmallAllocations() -> numSmallAllocations
    long numNormalAllocations() -> numNormalAllocations
    long numHugeAllocations() -> numHugeAllocations
    long numDeallocations() -> numDeallocations
    long numTinyDeallocations() -> numTinyDeallocations
    long numSmallDeallocations() -> numSmallDeallocations
    long numNormalDeallocations() -> numNormalDeallocations
    long numHugeDeallocations() -> numHugeDeallocations
    long numActiveAllocations() -> numActiveAllocations
    long numActiveTinyAllocations() -> numActiveTinyAllocations
    long numActiveSmallAllocations() -> numActiveSmallAllocations
    long numActiveNormalAllocations() -> numActiveNormalAllocations
    long numActiveHugeAllocations() -> numActiveHugeAllocations
    long numActiveBytes() -> numActiveBytes
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolChunk -> pro.gravit.repackage.io.netty.buffer.PoolChunk:
# {"fileName":"PoolChunk.java","id":"sourceFile"}
    int SIZE_BIT_LENGTH -> SIZE_BIT_LENGTH
    int INUSED_BIT_LENGTH -> INUSED_BIT_LENGTH
    int SUBPAGE_BIT_LENGTH -> SUBPAGE_BIT_LENGTH
    int BITMAP_IDX_BIT_LENGTH -> BITMAP_IDX_BIT_LENGTH
    int IS_SUBPAGE_SHIFT -> IS_SUBPAGE_SHIFT
    int IS_USED_SHIFT -> IS_USED_SHIFT
    int SIZE_SHIFT -> SIZE_SHIFT
    int RUN_OFFSET_SHIFT -> RUN_OFFSET_SHIFT
    pro.gravit.repackage.io.netty.buffer.PoolArena arena -> arena
    java.lang.Object base -> base
    java.lang.Object memory -> memory
    boolean unpooled -> unpooled
    pro.gravit.repackage.io.netty.buffer.LongLongHashMap runsAvailMap -> runsAvailMap
    pro.gravit.repackage.io.netty.buffer.LongPriorityQueue[] runsAvail -> runsAvail
    java.util.concurrent.locks.ReentrantLock runsAvailLock -> runsAvailLock
    pro.gravit.repackage.io.netty.buffer.PoolSubpage[] subpages -> subpages
    pro.gravit.repackage.io.netty.util.internal.LongCounter pinnedBytes -> pinnedBytes
    int pageSize -> pageSize
    int pageShifts -> pageShifts
    int chunkSize -> chunkSize
    java.util.Deque cachedNioBuffers -> cachedNioBuffers
    int freeBytes -> freeBytes
    pro.gravit.repackage.io.netty.buffer.PoolChunkList parent -> parent
    pro.gravit.repackage.io.netty.buffer.PoolChunk prev -> prev
    pro.gravit.repackage.io.netty.buffer.PoolChunk next -> next
    boolean $assertionsDisabled -> $assertionsDisabled
    172:216:void <init>(pro.gravit.repackage.io.netty.buffer.PoolArena,java.lang.Object,java.lang.Object,int,int,int,int) -> <init>
    172:232:void <init>(pro.gravit.repackage.io.netty.buffer.PoolArena,java.lang.Object,java.lang.Object,int) -> <init>
    235:239:pro.gravit.repackage.io.netty.buffer.LongPriorityQueue[] newRunsAvailqueueArray(int) -> newRunsAvailqueueArray
    243:253:void insertAvailRun(int,int,long) -> insertAvailRun
    256:258:void insertAvailRun0(int,long) -> insertAvailRun0
    261:264:void removeAvailRun(long) -> removeAvailRun
    267:277:void removeAvailRun(pro.gravit.repackage.io.netty.buffer.LongPriorityQueue,long) -> removeAvailRun
    280:280:int lastPage(int,int) -> lastPage
    284:284:long getAvailRunByOffset(int) -> getAvailRunByOffset
    290:296:int usage() -> usage
    300:308:int usage(int) -> usage
    313:333:boolean allocate(pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> allocate
    337:365:long allocateRun(int) -> allocateRun
    369:390:int calculateRunSize(int) -> calculateRunSize
    394:403:int runFirstBestFit(int) -> runFirstBestFit
    407:428:long splitLargeRun(long,int) -> splitLargeRun
    442:464:long allocateSubpage(int) -> allocateSubpage
    475:522:void free(long,int,java.nio.ByteBuffer) -> free
    525:525:long collapseRuns(long) -> collapseRuns
    530:549:long collapsePast(long) -> collapsePast
    554:573:long collapseNext(long) -> collapseNext
    577:577:long toRunHandle(int,int,int) -> toRunHandle
    584:591:void initBuf(pro.gravit.repackage.io.netty.buffer.PooledByteBuf,java.nio.ByteBuffer,long,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> initBuf
    595:604:void initBufWithSubpage(pro.gravit.repackage.io.netty.buffer.PooledByteBuf,java.nio.ByteBuffer,long,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> initBufWithSubpage
    607:609:void incrementPinnedMemory(int) -> incrementPinnedMemory
    612:614:void decrementPinnedMemory(int) -> decrementPinnedMemory
    618:618:int chunkSize() -> chunkSize
    623:628:int freeBytes() -> freeBytes
    632:632:int pinnedBytes() -> pinnedBytes
    638:655:java.lang.String toString() -> toString
    659:660:void destroy() -> destroy
    663:663:int runOffset(long) -> runOffset
    667:667:int runSize(int,long) -> runSize
    671:671:int runPages(long) -> runPages
    675:675:boolean isUsed(long) -> isUsed
    679:679:boolean isRun(long) -> isRun
    683:683:boolean isSubpage(long) -> isSubpage
    687:687:int bitmapIdx(long) -> bitmapIdx
    136:136:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolChunkList -> pro.gravit.repackage.io.netty.buffer.PoolChunkList:
# {"fileName":"PoolChunkList.java","id":"sourceFile"}
    java.util.Iterator EMPTY_METRICS -> EMPTY_METRICS
    pro.gravit.repackage.io.netty.buffer.PoolArena arena -> arena
    pro.gravit.repackage.io.netty.buffer.PoolChunkList nextList -> nextList
    int minUsage -> minUsage
    int maxUsage -> maxUsage
    int maxCapacity -> maxCapacity
    pro.gravit.repackage.io.netty.buffer.PoolChunk head -> head
    int freeMinThreshold -> freeMinThreshold
    int freeMaxThreshold -> freeMaxThreshold
    pro.gravit.repackage.io.netty.buffer.PoolChunkList prevList -> prevList
    boolean $assertionsDisabled -> $assertionsDisabled
    47:72:void <init>(pro.gravit.repackage.io.netty.buffer.PoolArena,pro.gravit.repackage.io.netty.buffer.PoolChunkList,int,int,int) -> <init>
    79:91:int calculateMaxCapacity(int,int) -> calculateMaxCapacity
    95:97:void prevList(pro.gravit.repackage.io.netty.buffer.PoolChunkList) -> prevList
    100:116:boolean allocate(pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> allocate
    120:126:boolean free(pro.gravit.repackage.io.netty.buffer.PoolChunk,long,int,java.nio.ByteBuffer) -> free
    130:139:boolean move(pro.gravit.repackage.io.netty.buffer.PoolChunk) -> move
    147:153:boolean move0(pro.gravit.repackage.io.netty.buffer.PoolChunk) -> move0
    157:162:void add(pro.gravit.repackage.io.netty.buffer.PoolChunk) -> add
    168:179:void add0(pro.gravit.repackage.io.netty.buffer.PoolChunk) -> add0
    182:194:void remove(pro.gravit.repackage.io.netty.buffer.PoolChunk) -> remove
    198:198:int minUsage() -> minUsage
    203:203:int maxUsage() -> maxUsage
    207:207:int minUsage0(int) -> minUsage0
    212:228:java.util.Iterator iterator() -> iterator
    233:251:java.lang.String toString() -> toString
    255:261:void destroy(pro.gravit.repackage.io.netty.buffer.PoolArena) -> destroy
    30:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolChunkListMetric -> pro.gravit.repackage.io.netty.buffer.PoolChunkListMetric:
# {"fileName":"PoolChunkListMetric.java","id":"sourceFile"}
    int minUsage() -> minUsage
    int maxUsage() -> maxUsage
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolChunkMetric -> pro.gravit.repackage.io.netty.buffer.PoolChunkMetric:
# {"fileName":"PoolChunkMetric.java","id":"sourceFile"}
    int usage() -> usage
    int chunkSize() -> chunkSize
    int freeBytes() -> freeBytes
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolSubpage -> pro.gravit.repackage.io.netty.buffer.PoolSubpage:
# {"fileName":"PoolSubpage.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.PoolChunk chunk -> chunk
    int elemSize -> elemSize
    int pageShifts -> pageShifts
    int runOffset -> runOffset
    int runSize -> runSize
    long[] bitmap -> bitmap
    pro.gravit.repackage.io.netty.buffer.PoolSubpage prev -> prev
    pro.gravit.repackage.io.netty.buffer.PoolSubpage next -> next
    boolean doNotDestroy -> doNotDestroy
    int maxNumElems -> maxNumElems
    int bitmapLength -> bitmapLength
    int nextAvail -> nextAvail
    int numAvail -> numAvail
    java.util.concurrent.locks.ReentrantLock lock -> lock
    boolean $assertionsDisabled -> $assertionsDisabled
    45:58:void <init>() -> <init>
    45:78:void <init>(pro.gravit.repackage.io.netty.buffer.PoolSubpage,pro.gravit.repackage.io.netty.buffer.PoolChunk,int,int,int,int) -> <init>
    84:104:long allocate() -> allocate
    112:145:boolean free(pro.gravit.repackage.io.netty.buffer.PoolSubpage,int) -> free
    150:155:void addToPool(pro.gravit.repackage.io.netty.buffer.PoolSubpage) -> addToPool
    158:163:void removeFromPool() -> removeFromPool
    166:167:void setNextAvail(int) -> setNextAvail
    170:175:int getNextAvail() -> getNextAvail
    179:187:int findNextAvail() -> findNextAvail
    191:205:int findNextAvail0(int,long) -> findNextAvail0
    209:210:long toHandle(int) -> toHandle
    223:251:java.lang.String toString() -> toString
    257:266:int maxNumElements() -> maxNumElements
    271:281:int numAvailable() -> numAvailable
    286:296:int elementSize() -> elementSize
    301:301:int pageSize() -> pageSize
    305:308:void destroy() -> destroy
    311:312:void lock() -> lock
    315:316:void unlock() -> unlock
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolSubpageMetric -> pro.gravit.repackage.io.netty.buffer.PoolSubpageMetric:
# {"fileName":"PoolSubpageMetric.java","id":"sourceFile"}
    int maxNumElements() -> maxNumElements
    int numAvailable() -> numAvailable
    int elementSize() -> elementSize
    int pageSize() -> pageSize
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolThreadCache -> pro.gravit.repackage.io.netty.buffer.PoolThreadCache:
# {"fileName":"PoolThreadCache.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int INTEGER_SIZE_MINUS_ONE -> INTEGER_SIZE_MINUS_ONE
    pro.gravit.repackage.io.netty.buffer.PoolArena heapArena -> heapArena
    pro.gravit.repackage.io.netty.buffer.PoolArena directArena -> directArena
    pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[] smallSubPageHeapCaches -> smallSubPageHeapCaches
    pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[] smallSubPageDirectCaches -> smallSubPageDirectCaches
    pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[] normalHeapCaches -> normalHeapCaches
    pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[] normalDirectCaches -> normalDirectCaches
    int freeSweepAllocationThreshold -> freeSweepAllocationThreshold
    java.util.concurrent.atomic.AtomicBoolean freed -> freed
    int allocations -> allocations
    59:108:void <init>(pro.gravit.repackage.io.netty.buffer.PoolArena,pro.gravit.repackage.io.netty.buffer.PoolArena,int,int,int,int) -> <init>
    112:121:pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[] createSubPageCaches(int,int) -> createSubPageCaches
    128:138:pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[] createNormalCaches(int,int,pro.gravit.repackage.io.netty.buffer.PoolArena) -> createNormalCaches
    144:144:int log2(int) -> log2
    151:151:boolean allocateSmall(pro.gravit.repackage.io.netty.buffer.PoolArena,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,int) -> allocateSmall
    158:158:boolean allocateNormal(pro.gravit.repackage.io.netty.buffer.PoolArena,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,int) -> allocateNormal
    163:172:boolean allocate(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int) -> allocate
    182:190:boolean add(pro.gravit.repackage.io.netty.buffer.PoolArena,pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,int,pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass) -> add
    194:200:pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache cache(pro.gravit.repackage.io.netty.buffer.PoolArena,int,pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass) -> cache
    208:212:void finalize() -> finalize
    220:245:void free(boolean) -> free
    248:254:void checkCacheMayLeak(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[],java.lang.String) -> checkCacheMayLeak
    257:265:int free(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[],boolean) -> free
    269:272:int free(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache,boolean) -> free
    276:280:void trim() -> trim
    283:289:void trim(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[]) -> trim
    292:296:void trim(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache) -> trim
    299:302:pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForSmall(pro.gravit.repackage.io.netty.buffer.PoolArena,int) -> cacheForSmall
    307:311:pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache cacheForNormal(pro.gravit.repackage.io.netty.buffer.PoolArena,int) -> cacheForNormal
    315:318:pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache cache(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache[],int) -> cache
    46:46:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolThreadCache$1 -> pro.gravit.repackage.io.netty.buffer.PoolThreadCache$1:
# {"fileName":"PoolThreadCache.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$buffer$PoolArena$SizeClass -> $SwitchMap$io$netty$buffer$PoolArena$SizeClass
    194:194:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache -> pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache:
# {"fileName":"PoolThreadCache.java","id":"sourceFile"}
    int size -> size
    java.util.Queue queue -> queue
    pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass sizeClass -> sizeClass
    int allocations -> allocations
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    359:363:void <init>(int,pro.gravit.repackage.io.netty.buffer.PoolArena$SizeClass) -> <init>
    void initBuf(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> initBuf
    376:383:boolean add(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,int) -> add
    390:399:boolean allocate(pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> allocate
    406:406:int free(boolean) -> free
    410:420:int free(int,boolean) -> free
    427:434:void trim() -> trim
    439:451:void freeEntry(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry,boolean) -> freeEntry
    474:479:pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry newEntry(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,int) -> newEntry
    353:353:java.util.Queue access$000(pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache) -> access$000
    483:483:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache$1 -> pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache$1:
# {"fileName":"PoolThreadCache.java","id":"sourceFile"}
    483:483:void <init>() -> <init>
    487:487:pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    483:483:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry -> pro.gravit.repackage.io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry:
# {"fileName":"PoolThreadCache.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle recyclerHandle -> recyclerHandle
    pro.gravit.repackage.io.netty.buffer.PoolChunk chunk -> chunk
    java.nio.ByteBuffer nioBuffer -> nioBuffer
    long handle -> handle
    int normCapacity -> normCapacity
    457:462:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    465:469:void recycle() -> recycle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache -> pro.gravit.repackage.io.netty.buffer.PoolThreadCache$NormalMemoryRegionCache:
# {"fileName":"PoolThreadCache.java","id":"sourceFile"}
    342:343:void <init>(int) -> <init>
    349:350:void initBuf(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> initBuf
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache -> pro.gravit.repackage.io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache:
# {"fileName":"PoolThreadCache.java","id":"sourceFile"}
    326:327:void <init>(int) -> <init>
    333:334:void initBuf(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,pro.gravit.repackage.io.netty.buffer.PooledByteBuf,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> initBuf
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledByteBuf -> pro.gravit.repackage.io.netty.buffer.PooledByteBuf:
# {"fileName":"PooledByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle recyclerHandle -> recyclerHandle
    pro.gravit.repackage.io.netty.buffer.PoolChunk chunk -> chunk
    long handle -> handle
    java.lang.Object memory -> memory
    int offset -> offset
    int length -> length
    int maxLength -> maxLength
    pro.gravit.repackage.io.netty.buffer.PoolThreadCache cache -> cache
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator allocator -> allocator
    boolean $assertionsDisabled -> $assertionsDisabled
    45:47:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int) -> <init>
    51:52:void init(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,int,int,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> init
    55:56:void initUnpooled(pro.gravit.repackage.io.netty.buffer.PoolChunk,int) -> initUnpooled
    60:75:void init0(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,int,int,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> init0
    81:85:void reuse(int) -> reuse
    89:89:int capacity() -> capacity
    94:94:int maxFastWritableBytes() -> maxFastWritableBytes
    99:123:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    128:128:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    133:133:java.nio.ByteOrder order() -> order
    138:138:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    143:143:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    148:149:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    154:154:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    158:164:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    171:182:void deallocate() -> deallocate
    185:186:void recycle() -> recycle
    189:189:int idx(int) -> idx
    193:196:java.nio.ByteBuffer _internalNioBuffer(int,int,boolean) -> _internalNioBuffer
    200:201:java.nio.ByteBuffer duplicateInternalNioBuffer(int,int) -> duplicateInternalNioBuffer
    206:207:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    212:212:int nioBufferCount() -> nioBufferCount
    217:217:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    222:222:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    227:227:boolean isContiguous() -> isContiguous
    232:232:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    237:240:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    245:245:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    250:253:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    259:261:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    268:270:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator -> pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator:
# {"fileName":"PooledByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_NUM_HEAP_ARENA -> DEFAULT_NUM_HEAP_ARENA
    int DEFAULT_NUM_DIRECT_ARENA -> DEFAULT_NUM_DIRECT_ARENA
    int DEFAULT_PAGE_SIZE -> DEFAULT_PAGE_SIZE
    int DEFAULT_MAX_ORDER -> DEFAULT_MAX_ORDER
    int DEFAULT_SMALL_CACHE_SIZE -> DEFAULT_SMALL_CACHE_SIZE
    int DEFAULT_NORMAL_CACHE_SIZE -> DEFAULT_NORMAL_CACHE_SIZE
    int DEFAULT_MAX_CACHED_BUFFER_CAPACITY -> DEFAULT_MAX_CACHED_BUFFER_CAPACITY
    int DEFAULT_CACHE_TRIM_INTERVAL -> DEFAULT_CACHE_TRIM_INTERVAL
    long DEFAULT_CACHE_TRIM_INTERVAL_MILLIS -> DEFAULT_CACHE_TRIM_INTERVAL_MILLIS
    boolean DEFAULT_USE_CACHE_FOR_ALL_THREADS -> DEFAULT_USE_CACHE_FOR_ALL_THREADS
    int DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT -> DEFAULT_DIRECT_MEMORY_CACHE_ALIGNMENT
    int DEFAULT_MAX_CACHED_BYTEBUFFERS_PER_CHUNK -> DEFAULT_MAX_CACHED_BYTEBUFFERS_PER_CHUNK
    int MIN_PAGE_SIZE -> MIN_PAGE_SIZE
    int MAX_CHUNK_SIZE -> MAX_CHUNK_SIZE
    int CACHE_NOT_USED -> CACHE_NOT_USED
    java.lang.Runnable trimTask -> trimTask
    pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator DEFAULT -> DEFAULT
    pro.gravit.repackage.io.netty.buffer.PoolArena[] heapArenas -> heapArenas
    pro.gravit.repackage.io.netty.buffer.PoolArena[] directArenas -> directArenas
    int smallCacheSize -> smallCacheSize
    int normalCacheSize -> normalCacheSize
    java.util.List heapArenaMetrics -> heapArenaMetrics
    java.util.List directArenaMetrics -> directArenaMetrics
    pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache threadCache -> threadCache
    int chunkSize -> chunkSize
    pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocatorMetric metric -> metric
    boolean $assertionsDisabled -> $assertionsDisabled
    195:196:void <init>() -> <init>
    200:201:void <init>(boolean) -> <init>
    205:206:void <init>(int,int,int,int) -> <init>
    214:216:void <init>(boolean,int,int,int,int) -> <init>
    225:227:void <init>(boolean,int,int,int,int,int,int,int) -> <init>
    238:241:void <init>(boolean,int,int,int,int,int,int,int,boolean) -> <init>
    247:250:void <init>(boolean,int,int,int,int,int,int,boolean) -> <init>
    260:263:void <init>(boolean,int,int,int,int,int,int,int,boolean,int) -> <init>
    60:330:void <init>(boolean,int,int,int,int,int,int,boolean,int) -> <init>
    334:334:pro.gravit.repackage.io.netty.buffer.PoolArena[] newArenaArray(int) -> newArenaArray
    338:352:int validateAndCalculatePageShifts(int,int) -> validateAndCalculatePageShifts
    356:369:int validateAndCalculateChunkSize(int,int) -> validateAndCalculateChunkSize
    374:386:pro.gravit.repackage.io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    391:403:pro.gravit.repackage.io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    410:410:int defaultNumHeapArena() -> defaultNumHeapArena
    417:417:int defaultNumDirectArena() -> defaultNumDirectArena
    424:424:int defaultPageSize() -> defaultPageSize
    431:431:int defaultMaxOrder() -> defaultMaxOrder
    438:438:boolean defaultUseCacheForAllThreads() -> defaultUseCacheForAllThreads
    445:445:boolean defaultPreferDirect() -> defaultPreferDirect
    455:455:int defaultTinyCacheSize() -> defaultTinyCacheSize
    462:462:int defaultSmallCacheSize() -> defaultSmallCacheSize
    469:469:int defaultNormalCacheSize() -> defaultNormalCacheSize
    476:476:boolean isDirectMemoryCacheAlignmentSupported() -> isDirectMemoryCacheAlignmentSupported
    481:481:boolean isDirectBufferPooled() -> isDirectBufferPooled
    491:491:boolean hasThreadLocalCache() -> hasThreadLocalCache
    500:501:void freeThreadLocalCache() -> freeThreadLocalCache
    569:569:pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocatorMetric metric() -> metric
    579:579:int numHeapArenas() -> numHeapArenas
    589:589:int numDirectArenas() -> numDirectArenas
    599:599:java.util.List heapArenas() -> heapArenas
    609:609:java.util.List directArenas() -> directArenas
    619:629:int numThreadLocalCaches() -> numThreadLocalCaches
    639:639:int tinyCacheSize() -> tinyCacheSize
    649:649:int smallCacheSize() -> smallCacheSize
    659:659:int normalCacheSize() -> normalCacheSize
    669:669:int chunkSize() -> chunkSize
    673:673:long usedHeapMemory() -> usedHeapMemory
    677:677:long usedDirectMemory() -> usedDirectMemory
    681:691:long usedMemory(pro.gravit.repackage.io.netty.buffer.PoolArena[]) -> usedMemory
    701:701:long pinnedHeapMemory() -> pinnedHeapMemory
    711:711:long pinnedDirectMemory() -> pinnedDirectMemory
    715:725:long pinnedMemory(pro.gravit.repackage.io.netty.buffer.PoolArena[]) -> pinnedMemory
    729:731:pro.gravit.repackage.io.netty.buffer.PoolThreadCache threadCache() -> threadCache
    741:746:boolean trimCurrentThreadCache() -> trimCurrentThreadCache
    754:776:java.lang.String dumpStats() -> dumpStats
    38:38:pro.gravit.repackage.io.netty.buffer.ByteBufAllocatorMetric metric() -> metric
    38:38:pro.gravit.repackage.io.netty.buffer.PoolArena[] access$000(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator) -> access$000
    38:38:pro.gravit.repackage.io.netty.buffer.PoolArena[] access$100(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator) -> access$100
    38:38:int access$200(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator) -> access$200
    38:38:int access$300(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator) -> access$300
    38:38:int access$400() -> access$400
    38:38:long access$500() -> access$500
    38:38:java.lang.Runnable access$600(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator) -> access$600
    38:182:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator$1 -> pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator$1:
# {"fileName":"PooledByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator this$0 -> this$0
    60:60:void <init>(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator) -> <init>
    63:64:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache -> pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator$PoolThreadLocalCache:
# {"fileName":"PooledByteBufAllocator.java","id":"sourceFile"}
    boolean useCacheForAllThreads -> useCacheForAllThreads
    pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator this$0 -> this$0
    506:508:void <init>(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator,boolean) -> <init>
    512:537:pro.gravit.repackage.io.netty.buffer.PoolThreadCache initialValue() -> initialValue
    542:543:void onRemoval(pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> onRemoval
    546:563:pro.gravit.repackage.io.netty.buffer.PoolArena leastUsedArena(pro.gravit.repackage.io.netty.buffer.PoolArena[]) -> leastUsedArena
    503:503:void onRemoval(java.lang.Object) -> onRemoval
    503:503:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocatorMetric -> pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocatorMetric:
# {"fileName":"PooledByteBufAllocatorMetric.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator allocator -> allocator
    30:32:void <init>(pro.gravit.repackage.io.netty.buffer.PooledByteBufAllocator) -> <init>
    38:38:int numHeapArenas() -> numHeapArenas
    45:45:int numDirectArenas() -> numDirectArenas
    52:52:java.util.List heapArenas() -> heapArenas
    59:59:java.util.List directArenas() -> directArenas
    66:66:int numThreadLocalCaches() -> numThreadLocalCaches
    76:76:int tinyCacheSize() -> tinyCacheSize
    83:83:int smallCacheSize() -> smallCacheSize
    90:90:int normalCacheSize() -> normalCacheSize
    97:97:int chunkSize() -> chunkSize
    102:102:long usedHeapMemory() -> usedHeapMemory
    107:107:long usedDirectMemory() -> usedDirectMemory
    112:122:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.PooledDirectByteBuf:
# {"fileName":"PooledDirectByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    39:41:pro.gravit.repackage.io.netty.buffer.PooledDirectByteBuf newInstance(int) -> newInstance
    45:46:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int) -> <init>
    50:50:java.nio.ByteBuffer newInternalNioBuffer(java.nio.ByteBuffer) -> newInternalNioBuffer
    55:55:boolean isDirect() -> isDirect
    60:60:byte _getByte(int) -> _getByte
    65:65:short _getShort(int) -> _getShort
    70:70:short _getShortLE(int) -> _getShortLE
    75:78:int _getUnsignedMedium(int) -> _getUnsignedMedium
    83:86:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    91:91:int _getInt(int) -> _getInt
    96:96:int _getIntLE(int) -> _getIntLE
    101:101:long _getLong(int) -> _getLong
    106:106:long _getLongLE(int) -> _getLongLE
    111:123:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    128:130:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    135:138:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    143:144:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    149:153:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    158:159:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    163:168:void getBytes(int,java.io.OutputStream,int,boolean) -> getBytes
    172:175:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    180:181:void _setByte(int,int) -> _setByte
    185:186:void _setShort(int,int) -> _setShort
    190:191:void _setShortLE(int,int) -> _setShortLE
    195:199:void _setMedium(int,int) -> _setMedium
    203:207:void _setMediumLE(int,int) -> _setMediumLE
    211:212:void _setInt(int,int) -> _setInt
    216:217:void _setIntLE(int,int) -> _setIntLE
    221:222:void _setLong(int,long) -> _setLong
    226:227:void _setLongLE(int,long) -> _setLongLE
    231:243:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    248:250:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    255:265:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    270:279:int setBytes(int,java.io.InputStream,int) -> setBytes
    284:286:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    291:291:boolean hasArray() -> hasArray
    296:296:byte[] array() -> array
    301:301:int arrayOffset() -> arrayOffset
    306:306:boolean hasMemoryAddress() -> hasMemoryAddress
    311:311:long memoryAddress() -> memoryAddress
    28:28:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    28:28:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int,pro.gravit.repackage.io.netty.buffer.PooledDirectByteBuf$1) -> <init>
    30:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledDirectByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.PooledDirectByteBuf$1:
# {"fileName":"PooledDirectByteBuf.java","id":"sourceFile"}
    31:31:void <init>() -> <init>
    34:34:pro.gravit.repackage.io.netty.buffer.PooledDirectByteBuf newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    31:31:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledDuplicatedByteBuf -> pro.gravit.repackage.io.netty.buffer.PooledDuplicatedByteBuf:
# {"fileName":"PooledDuplicatedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    44:49:pro.gravit.repackage.io.netty.buffer.PooledDuplicatedByteBuf newInstance(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> newInstance
    53:54:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    58:58:int capacity() -> capacity
    63:64:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    69:69:int arrayOffset() -> arrayOffset
    74:74:long memoryAddress() -> memoryAddress
    79:79:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    84:84:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    89:89:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    94:94:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    99:99:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    104:104:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    109:109:byte getByte(int) -> getByte
    114:114:byte _getByte(int) -> _getByte
    119:119:short getShort(int) -> getShort
    124:124:short _getShort(int) -> _getShort
    129:129:short getShortLE(int) -> getShortLE
    134:134:short _getShortLE(int) -> _getShortLE
    139:139:int getUnsignedMedium(int) -> getUnsignedMedium
    144:144:int _getUnsignedMedium(int) -> _getUnsignedMedium
    149:149:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    154:154:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    159:159:int getInt(int) -> getInt
    164:164:int _getInt(int) -> _getInt
    169:169:int getIntLE(int) -> getIntLE
    174:174:int _getIntLE(int) -> _getIntLE
    179:179:long getLong(int) -> getLong
    184:184:long _getLong(int) -> _getLong
    189:189:long getLongLE(int) -> getLongLE
    194:194:long _getLongLE(int) -> _getLongLE
    199:200:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    205:206:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    211:212:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    217:218:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    223:224:void _setByte(int,int) -> _setByte
    228:229:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    234:235:void _setShort(int,int) -> _setShort
    239:240:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    245:246:void _setShortLE(int,int) -> _setShortLE
    250:251:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    256:257:void _setMedium(int,int) -> _setMedium
    261:262:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    267:268:void _setMediumLE(int,int) -> _setMediumLE
    272:273:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    278:279:void _setInt(int,int) -> _setInt
    283:284:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    289:290:void _setIntLE(int,int) -> _setIntLE
    294:295:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    300:301:void _setLong(int,long) -> _setLong
    305:306:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    311:312:void _setLongLE(int,long) -> _setLongLE
    316:317:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    322:323:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    328:329:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    335:336:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    342:342:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    348:348:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    354:354:int setBytes(int,java.io.InputStream,int) -> setBytes
    360:360:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    366:366:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    371:371:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    376:376:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    32:32:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.buffer.PooledDuplicatedByteBuf$1) -> <init>
    34:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledDuplicatedByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.PooledDuplicatedByteBuf$1:
# {"fileName":"PooledDuplicatedByteBuf.java","id":"sourceFile"}
    35:35:void <init>() -> <init>
    38:38:pro.gravit.repackage.io.netty.buffer.PooledDuplicatedByteBuf newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    35:35:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledHeapByteBuf -> pro.gravit.repackage.io.netty.buffer.PooledHeapByteBuf:
# {"fileName":"PooledHeapByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    38:40:pro.gravit.repackage.io.netty.buffer.PooledHeapByteBuf newInstance(int) -> newInstance
    44:45:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int) -> <init>
    49:49:boolean isDirect() -> isDirect
    54:54:byte _getByte(int) -> _getByte
    59:59:short _getShort(int) -> _getShort
    64:64:short _getShortLE(int) -> _getShortLE
    69:69:int _getUnsignedMedium(int) -> _getUnsignedMedium
    74:74:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    79:79:int _getInt(int) -> _getInt
    84:84:int _getIntLE(int) -> _getIntLE
    89:89:long _getLong(int) -> _getLong
    94:94:long _getLongLE(int) -> _getLongLE
    99:107:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    112:114:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    119:122:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    127:129:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    134:135:void _setByte(int,int) -> _setByte
    139:140:void _setShort(int,int) -> _setShort
    144:145:void _setShortLE(int,int) -> _setShortLE
    149:150:void _setMedium(int,int) -> _setMedium
    154:155:void _setMediumLE(int,int) -> _setMediumLE
    159:160:void _setInt(int,int) -> _setInt
    164:165:void _setIntLE(int,int) -> _setIntLE
    169:170:void _setLong(int,long) -> _setLong
    174:175:void _setLongLE(int,long) -> _setLongLE
    179:187:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    192:194:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    199:202:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    207:208:int setBytes(int,java.io.InputStream,int) -> setBytes
    213:215:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    220:221:java.nio.ByteBuffer duplicateInternalNioBuffer(int,int) -> duplicateInternalNioBuffer
    226:226:boolean hasArray() -> hasArray
    231:232:byte[] array() -> array
    237:237:int arrayOffset() -> arrayOffset
    242:242:boolean hasMemoryAddress() -> hasMemoryAddress
    247:247:long memoryAddress() -> memoryAddress
    252:252:java.nio.ByteBuffer newInternalNioBuffer(byte[]) -> newInternalNioBuffer
    27:27:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledHeapByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.PooledHeapByteBuf$1:
# {"fileName":"PooledHeapByteBuf.java","id":"sourceFile"}
    30:30:void <init>() -> <init>
    33:33:pro.gravit.repackage.io.netty.buffer.PooledHeapByteBuf newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    30:30:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledSlicedByteBuf -> pro.gravit.repackage.io.netty.buffer.PooledSlicedByteBuf:
# {"fileName":"PooledSlicedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    int adjustment -> adjustment
    46:47:pro.gravit.repackage.io.netty.buffer.PooledSlicedByteBuf newInstance(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> newInstance
    52:57:pro.gravit.repackage.io.netty.buffer.PooledSlicedByteBuf newInstance0(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> newInstance0
    63:64:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    68:68:int capacity() -> capacity
    73:73:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    78:78:int arrayOffset() -> arrayOffset
    83:83:long memoryAddress() -> memoryAddress
    88:89:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    94:95:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    100:101:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    106:107:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    112:113:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    118:118:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    123:123:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    128:129:byte getByte(int) -> getByte
    134:134:byte _getByte(int) -> _getByte
    139:140:short getShort(int) -> getShort
    145:145:short _getShort(int) -> _getShort
    150:151:short getShortLE(int) -> getShortLE
    156:156:short _getShortLE(int) -> _getShortLE
    161:162:int getUnsignedMedium(int) -> getUnsignedMedium
    167:167:int _getUnsignedMedium(int) -> _getUnsignedMedium
    172:173:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    178:178:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    183:184:int getInt(int) -> getInt
    189:189:int _getInt(int) -> _getInt
    194:195:int getIntLE(int) -> getIntLE
    200:200:int _getIntLE(int) -> _getIntLE
    205:206:long getLong(int) -> getLong
    211:211:long _getLong(int) -> _getLong
    216:217:long getLongLE(int) -> getLongLE
    222:222:long _getLongLE(int) -> _getLongLE
    227:229:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    234:236:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    241:243:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    248:250:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    255:256:void _setByte(int,int) -> _setByte
    260:262:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    267:268:void _setShort(int,int) -> _setShort
    272:274:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    279:280:void _setShortLE(int,int) -> _setShortLE
    284:286:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    291:292:void _setMedium(int,int) -> _setMedium
    296:298:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    303:304:void _setMediumLE(int,int) -> _setMediumLE
    308:310:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    315:316:void _setInt(int,int) -> _setInt
    320:322:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    327:328:void _setIntLE(int,int) -> _setIntLE
    332:334:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    339:340:void _setLong(int,long) -> _setLong
    344:346:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    351:352:void _setLongLE(int,long) -> _setLongLE
    356:358:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    363:365:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    370:372:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    378:380:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    386:387:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    393:394:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    400:401:int setBytes(int,java.io.InputStream,int) -> setBytes
    407:408:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    414:415:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    420:425:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    430:435:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    439:439:int idx(int) -> idx
    34:34:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.buffer.PooledSlicedByteBuf$1) -> <init>
    36:36:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledSlicedByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.PooledSlicedByteBuf$1:
# {"fileName":"PooledSlicedByteBuf.java","id":"sourceFile"}
    37:37:void <init>() -> <init>
    40:40:pro.gravit.repackage.io.netty.buffer.PooledSlicedByteBuf newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    37:37:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledUnsafeDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.PooledUnsafeDirectByteBuf:
# {"fileName":"PooledUnsafeDirectByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    long memoryAddress -> memoryAddress
    39:41:pro.gravit.repackage.io.netty.buffer.PooledUnsafeDirectByteBuf newInstance(int) -> newInstance
    47:48:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int) -> <init>
    53:55:void init(pro.gravit.repackage.io.netty.buffer.PoolChunk,java.nio.ByteBuffer,long,int,int,int,pro.gravit.repackage.io.netty.buffer.PoolThreadCache) -> init
    59:61:void initUnpooled(pro.gravit.repackage.io.netty.buffer.PoolChunk,int) -> initUnpooled
    64:65:void initMemoryAddress() -> initMemoryAddress
    69:69:java.nio.ByteBuffer newInternalNioBuffer(java.nio.ByteBuffer) -> newInternalNioBuffer
    74:74:boolean isDirect() -> isDirect
    79:79:byte _getByte(int) -> _getByte
    84:84:short _getShort(int) -> _getShort
    89:89:short _getShortLE(int) -> _getShortLE
    94:94:int _getUnsignedMedium(int) -> _getUnsignedMedium
    99:99:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    104:104:int _getInt(int) -> _getInt
    109:109:int _getIntLE(int) -> _getIntLE
    114:114:long _getLong(int) -> _getLong
    119:119:long _getLongLE(int) -> _getLongLE
    124:125:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    130:131:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    136:137:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    142:143:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    148:149:void _setByte(int,int) -> _setByte
    153:154:void _setShort(int,int) -> _setShort
    158:159:void _setShortLE(int,int) -> _setShortLE
    163:164:void _setMedium(int,int) -> _setMedium
    168:169:void _setMediumLE(int,int) -> _setMediumLE
    173:174:void _setInt(int,int) -> _setInt
    178:179:void _setIntLE(int,int) -> _setIntLE
    183:184:void _setLong(int,long) -> _setLong
    188:189:void _setLongLE(int,long) -> _setLongLE
    193:194:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    199:200:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    205:206:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    211:211:int setBytes(int,java.io.InputStream,int) -> setBytes
    216:216:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    221:221:boolean hasArray() -> hasArray
    226:226:byte[] array() -> array
    231:231:int arrayOffset() -> arrayOffset
    236:236:boolean hasMemoryAddress() -> hasMemoryAddress
    241:242:long memoryAddress() -> memoryAddress
    246:246:long addr(int) -> addr
    251:255:pro.gravit.repackage.io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    260:262:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    267:271:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    29:29:java.nio.ByteBuffer newInternalNioBuffer(java.lang.Object) -> newInternalNioBuffer
    29:29:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int,pro.gravit.repackage.io.netty.buffer.PooledUnsafeDirectByteBuf$1) -> <init>
    30:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledUnsafeDirectByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.PooledUnsafeDirectByteBuf$1:
# {"fileName":"PooledUnsafeDirectByteBuf.java","id":"sourceFile"}
    31:31:void <init>() -> <init>
    34:34:pro.gravit.repackage.io.netty.buffer.PooledUnsafeDirectByteBuf newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    31:31:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledUnsafeHeapByteBuf -> pro.gravit.repackage.io.netty.buffer.PooledUnsafeHeapByteBuf:
# {"fileName":"PooledUnsafeHeapByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    34:36:pro.gravit.repackage.io.netty.buffer.PooledUnsafeHeapByteBuf newUnsafeInstance(int) -> newUnsafeInstance
    40:41:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int) -> <init>
    45:45:byte _getByte(int) -> _getByte
    50:50:short _getShort(int) -> _getShort
    55:55:short _getShortLE(int) -> _getShortLE
    60:60:int _getUnsignedMedium(int) -> _getUnsignedMedium
    65:65:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    70:70:int _getInt(int) -> _getInt
    75:75:int _getIntLE(int) -> _getIntLE
    80:80:long _getLong(int) -> _getLong
    85:85:long _getLongLE(int) -> _getLongLE
    90:91:void _setByte(int,int) -> _setByte
    95:96:void _setShort(int,int) -> _setShort
    100:101:void _setShortLE(int,int) -> _setShortLE
    105:106:void _setMedium(int,int) -> _setMedium
    110:111:void _setMediumLE(int,int) -> _setMediumLE
    115:116:void _setInt(int,int) -> _setInt
    120:121:void _setIntLE(int,int) -> _setIntLE
    125:126:void _setLong(int,long) -> _setLong
    130:131:void _setLongLE(int,long) -> _setLongLE
    135:141:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    146:154:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    160:164:pro.gravit.repackage.io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    23:23:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int,pro.gravit.repackage.io.netty.buffer.PooledUnsafeHeapByteBuf$1) -> <init>
    25:25:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.PooledUnsafeHeapByteBuf$1 -> pro.gravit.repackage.io.netty.buffer.PooledUnsafeHeapByteBuf$1:
# {"fileName":"PooledUnsafeHeapByteBuf.java","id":"sourceFile"}
    26:26:void <init>() -> <init>
    29:29:pro.gravit.repackage.io.netty.buffer.PooledUnsafeHeapByteBuf newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    26:26:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ReadOnlyByteBuf -> pro.gravit.repackage.io.netty.buffer.ReadOnlyByteBuf:
# {"fileName":"ReadOnlyByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    43:51:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    55:55:boolean isReadOnly() -> isReadOnly
    60:60:boolean isWritable() -> isWritable
    65:65:boolean isWritable(int) -> isWritable
    70:70:int ensureWritable(int,boolean) -> ensureWritable
    75:75:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    80:80:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    85:85:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    91:91:java.nio.ByteOrder order() -> order
    96:96:boolean isDirect() -> isDirect
    101:101:boolean hasArray() -> hasArray
    106:106:byte[] array() -> array
    111:111:int arrayOffset() -> arrayOffset
    116:116:boolean hasMemoryAddress() -> hasMemoryAddress
    121:121:long memoryAddress() -> memoryAddress
    126:126:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    131:131:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    136:136:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    141:141:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    146:146:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    151:151:void _setByte(int,int) -> _setByte
    156:156:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    161:161:void _setShort(int,int) -> _setShort
    166:166:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    171:171:void _setShortLE(int,int) -> _setShortLE
    176:176:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    181:181:void _setMedium(int,int) -> _setMedium
    186:186:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    191:191:void _setMediumLE(int,int) -> _setMediumLE
    196:196:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    201:201:void _setInt(int,int) -> _setInt
    206:206:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    211:211:void _setIntLE(int,int) -> _setIntLE
    216:216:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    221:221:void _setLong(int,long) -> _setLong
    226:226:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    231:231:void _setLongLE(int,long) -> _setLongLE
    236:236:int setBytes(int,java.io.InputStream,int) -> setBytes
    241:241:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    246:246:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    252:252:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    258:258:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    264:265:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    270:271:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    276:277:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    282:283:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    288:288:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    293:293:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    298:298:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    303:303:byte getByte(int) -> getByte
    308:308:byte _getByte(int) -> _getByte
    313:313:short getShort(int) -> getShort
    318:318:short _getShort(int) -> _getShort
    323:323:short getShortLE(int) -> getShortLE
    328:328:short _getShortLE(int) -> _getShortLE
    333:333:int getUnsignedMedium(int) -> getUnsignedMedium
    338:338:int _getUnsignedMedium(int) -> _getUnsignedMedium
    343:343:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    348:348:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    353:353:int getInt(int) -> getInt
    358:358:int _getInt(int) -> _getInt
    363:363:int getIntLE(int) -> getIntLE
    368:368:int _getIntLE(int) -> _getIntLE
    373:373:long getLong(int) -> getLong
    378:378:long _getLong(int) -> _getLong
    383:383:long getLongLE(int) -> getLongLE
    388:388:long _getLongLE(int) -> _getLongLE
    393:393:int nioBufferCount() -> nioBufferCount
    398:398:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    403:403:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    408:408:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    413:413:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    418:418:int capacity() -> capacity
    423:423:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    428:428:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ReadOnlyByteBufferBuf -> pro.gravit.repackage.io.netty.buffer.ReadOnlyByteBufferBuf:
# {"fileName":"ReadOnlyByteBufferBuf.java","id":"sourceFile"}
    java.nio.ByteBuffer buffer -> buffer
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator allocator -> allocator
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    41:49:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer) -> <init>
    52:52:void deallocate() -> deallocate
    56:56:boolean isWritable() -> isWritable
    61:61:boolean isWritable(int) -> isWritable
    66:66:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    71:71:int ensureWritable(int,boolean) -> ensureWritable
    76:77:byte getByte(int) -> getByte
    82:82:byte _getByte(int) -> _getByte
    87:88:short getShort(int) -> getShort
    93:93:short _getShort(int) -> _getShort
    98:99:short getShortLE(int) -> getShortLE
    104:104:short _getShortLE(int) -> _getShortLE
    109:110:int getUnsignedMedium(int) -> getUnsignedMedium
    115:117:int _getUnsignedMedium(int) -> _getUnsignedMedium
    122:123:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    128:130:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    135:136:int getInt(int) -> getInt
    141:141:int _getInt(int) -> _getInt
    146:147:int getIntLE(int) -> getIntLE
    152:152:int _getIntLE(int) -> _getIntLE
    157:158:long getLong(int) -> getLong
    163:163:long _getLong(int) -> _getLong
    168:169:long getLongLE(int) -> getLongLE
    174:174:long _getLongLE(int) -> _getLongLE
    179:191:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    196:201:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    206:211:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    216:216:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    221:221:void _setByte(int,int) -> _setByte
    226:226:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    231:231:void _setShort(int,int) -> _setShort
    236:236:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    241:241:void _setShortLE(int,int) -> _setShortLE
    246:246:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    251:251:void _setMedium(int,int) -> _setMedium
    256:256:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    261:261:void _setMediumLE(int,int) -> _setMediumLE
    266:266:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    271:271:void _setInt(int,int) -> _setInt
    276:276:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    281:281:void _setIntLE(int,int) -> _setIntLE
    286:286:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    291:291:void _setLong(int,long) -> _setLong
    296:296:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    301:301:void _setLongLE(int,long) -> _setLongLE
    306:306:int capacity() -> capacity
    311:311:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    316:316:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    321:321:java.nio.ByteOrder order() -> order
    326:326:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    331:331:boolean isReadOnly() -> isReadOnly
    336:336:boolean isDirect() -> isDirect
    341:355:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    360:367:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    372:379:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    384:384:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    389:389:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    394:394:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    399:399:int setBytes(int,java.io.InputStream,int) -> setBytes
    404:404:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    409:409:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    413:417:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    422:432:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    437:437:int nioBufferCount() -> nioBufferCount
    442:442:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    447:448:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    453:454:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    459:459:boolean isContiguous() -> isContiguous
    464:464:boolean hasArray() -> hasArray
    469:469:byte[] array() -> array
    474:474:int arrayOffset() -> arrayOffset
    479:479:boolean hasMemoryAddress() -> hasMemoryAddress
    484:484:long memoryAddress() -> memoryAddress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.ReadOnlyUnsafeDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.ReadOnlyUnsafeDirectByteBuf:
# {"fileName":"ReadOnlyUnsafeDirectByteBuf.java","id":"sourceFile"}
    long memoryAddress -> memoryAddress
    32:36:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer) -> <init>
    40:40:byte _getByte(int) -> _getByte
    45:45:short _getShort(int) -> _getShort
    50:50:int _getUnsignedMedium(int) -> _getUnsignedMedium
    55:55:int _getInt(int) -> _getInt
    60:60:long _getLong(int) -> _getLong
    65:78:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    83:93:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    98:108:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    113:113:boolean hasMemoryAddress() -> hasMemoryAddress
    118:118:long memoryAddress() -> memoryAddress
    122:122:long addr(int) -> addr
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf -> pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf:
# {"fileName":"SimpleLeakAwareByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf trackedByteBuf -> trackedByteBuf
    pro.gravit.repackage.io.netty.util.ResourceLeakTracker leak -> leak
    boolean $assertionsDisabled -> $assertionsDisabled
    36:39:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> <init>
    42:43:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> <init>
    47:47:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    52:52:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    57:57:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    62:62:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    67:67:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    72:72:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    77:77:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    82:82:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    87:87:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    92:92:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    97:97:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    102:106:boolean release() -> release
    111:115:boolean release(int) -> release
    121:123:void closeLeak() -> closeLeak
    127:130:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    137:150:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrappedDerived(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unwrappedDerived
    155:162:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrapSwapped(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unwrapSwapped
    167:167:pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> newSharedLeakAwareByteBuf
    172:172:pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    177:177:pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    25:25:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareCompositeByteBuf -> pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareCompositeByteBuf:
# {"fileName":"SimpleLeakAwareCompositeByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ResourceLeakTracker leak -> leak
    boolean $assertionsDisabled -> $assertionsDisabled
    29:31:void <init>(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> <init>
    37:42:boolean release() -> release
    49:54:boolean release(int) -> release
    60:62:void closeLeak(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> closeLeak
    66:69:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    75:75:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    80:80:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    85:85:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    90:90:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    95:95:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    100:100:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    105:105:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    110:110:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    115:115:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    119:119:pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> newLeakAwareByteBuf
    124:124:pro.gravit.repackage.io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.util.ResourceLeakTracker) -> newLeakAwareByteBuf
    24:24:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.SizeClasses -> pro.gravit.repackage.io.netty.buffer.SizeClasses:
# {"fileName":"SizeClasses.java","id":"sourceFile"}
    int LOG2_QUANTUM -> LOG2_QUANTUM
    int LOG2_SIZE_CLASS_GROUP -> LOG2_SIZE_CLASS_GROUP
    int LOG2_MAX_LOOKUP_SIZE -> LOG2_MAX_LOOKUP_SIZE
    int INDEX_IDX -> INDEX_IDX
    int LOG2GROUP_IDX -> LOG2GROUP_IDX
    int LOG2DELTA_IDX -> LOG2DELTA_IDX
    int NDELTA_IDX -> NDELTA_IDX
    int PAGESIZE_IDX -> PAGESIZE_IDX
    int SUBPAGE_IDX -> SUBPAGE_IDX
    int LOG2_DELTA_LOOKUP_IDX -> LOG2_DELTA_LOOKUP_IDX
    byte no -> no
    byte yes -> yes
    int pageSize -> pageSize
    int pageShifts -> pageShifts
    int chunkSize -> chunkSize
    int directMemoryCacheAlignment -> directMemoryCacheAlignment
    int nSizes -> nSizes
    int nSubpages -> nSubpages
    int nPSizes -> nPSizes
    int lookupMaxSize -> lookupMaxSize
    int smallMaxSizeIdx -> smallMaxSizeIdx
    int[] pageIdx2sizeTab -> pageIdx2sizeTab
    int[] sizeIdx2sizeTab -> sizeIdx2sizeTab
    int[] size2idxTab -> size2idxTab
    boolean $assertionsDisabled -> $assertionsDisabled
    118:187:void <init>(int,int,int,int) -> <init>
    192:216:short[] newSizeClass(int,int,int,int,int) -> newSizeClass
    223:229:int[] newIdx2SizeTab(short[][],int,int) -> newIdx2SizeTab
    233:233:int calculateSize(int,int,int) -> calculateSize
    237:243:int sizeOf(short[],int) -> sizeOf
    248:256:int[] newPageIdx2sizeTab(short[][],int,int,int) -> newPageIdx2sizeTab
    260:273:int[] newSize2idxTab(int,short[][]) -> newSize2idxTab
    278:278:int sizeIdx2size(int) -> sizeIdx2size
    283:293:int sizeIdx2sizeCompute(int) -> sizeIdx2sizeCompute
    298:298:long pageIdx2size(int) -> pageIdx2size
    303:313:long pageIdx2sizeCompute(int) -> pageIdx2sizeCompute
    318:343:int size2SizeIdx(int) -> size2SizeIdx
    348:348:int pages2pageIdx(int) -> pages2pageIdx
    353:353:int pages2pageIdxFloor(int) -> pages2pageIdxFloor
    357:380:int pages2pageIdxCompute(int,boolean) -> pages2pageIdxCompute
    385:389:int alignSizeIfNeeded(int,int) -> alignSizeIfNeeded
    394:403:int normalizeSize(int) -> normalizeSize
    407:412:int normalizeSizeCompute(int) -> normalizeSizeCompute
    81:81:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.SizeClassesMetric -> pro.gravit.repackage.io.netty.buffer.SizeClassesMetric:
# {"fileName":"SizeClassesMetric.java","id":"sourceFile"}
    int sizeIdx2size(int) -> sizeIdx2size
    int sizeIdx2sizeCompute(int) -> sizeIdx2sizeCompute
    long pageIdx2size(int) -> pageIdx2size
    long pageIdx2sizeCompute(int) -> pageIdx2sizeCompute
    int size2SizeIdx(int) -> size2SizeIdx
    int pages2pageIdx(int) -> pages2pageIdx
    int pages2pageIdxFloor(int) -> pages2pageIdxFloor
    int normalizeSize(int) -> normalizeSize
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.SlicedByteBuf -> pro.gravit.repackage.io.netty.buffer.SlicedByteBuf:
# {"fileName":"SlicedByteBuf.java","id":"sourceFile"}
    int length -> length
    32:33:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> <init>
    37:38:void initLength(int) -> initLength
    42:42:int length() -> length
    47:47:int capacity() -> capacity
    26:26:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    26:26:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    26:26:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    26:26:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    26:26:int nioBufferCount() -> nioBufferCount
    26:26:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    26:26:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    26:26:int setBytes(int,java.io.InputStream,int) -> setBytes
    26:26:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    26:26:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    26:26:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    26:26:long getLongLE(int) -> getLongLE
    26:26:long getLong(int) -> getLong
    26:26:int getIntLE(int) -> getIntLE
    26:26:int getInt(int) -> getInt
    26:26:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    26:26:int getUnsignedMedium(int) -> getUnsignedMedium
    26:26:short getShortLE(int) -> getShortLE
    26:26:short getShort(int) -> getShort
    26:26:byte getByte(int) -> getByte
    26:26:long memoryAddress() -> memoryAddress
    26:26:boolean hasMemoryAddress() -> hasMemoryAddress
    26:26:int arrayOffset() -> arrayOffset
    26:26:byte[] array() -> array
    26:26:boolean hasArray() -> hasArray
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    26:26:boolean isDirect() -> isDirect
    26:26:java.nio.ByteOrder order() -> order
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.SwappedByteBuf -> pro.gravit.repackage.io.netty.buffer.SwappedByteBuf:
# {"fileName":"SwappedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buf -> buf
    java.nio.ByteOrder order -> order
    43:50:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    54:54:java.nio.ByteOrder order() -> order
    59:62:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    67:67:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    72:72:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    77:77:int capacity() -> capacity
    82:83:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    88:88:int maxCapacity() -> maxCapacity
    93:93:boolean isReadOnly() -> isReadOnly
    98:98:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    103:103:boolean isDirect() -> isDirect
    108:108:int readerIndex() -> readerIndex
    113:114:pro.gravit.repackage.io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    119:119:int writerIndex() -> writerIndex
    124:125:pro.gravit.repackage.io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    130:131:pro.gravit.repackage.io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    136:136:int readableBytes() -> readableBytes
    141:141:int writableBytes() -> writableBytes
    146:146:int maxWritableBytes() -> maxWritableBytes
    151:151:int maxFastWritableBytes() -> maxFastWritableBytes
    156:156:boolean isReadable() -> isReadable
    161:161:boolean isReadable(int) -> isReadable
    166:166:boolean isWritable() -> isWritable
    171:171:boolean isWritable(int) -> isWritable
    176:177:pro.gravit.repackage.io.netty.buffer.ByteBuf clear() -> clear
    182:183:pro.gravit.repackage.io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    188:189:pro.gravit.repackage.io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    194:195:pro.gravit.repackage.io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    200:201:pro.gravit.repackage.io.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    206:207:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    212:213:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    218:219:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    224:224:int ensureWritable(int,boolean) -> ensureWritable
    229:229:boolean getBoolean(int) -> getBoolean
    234:234:byte getByte(int) -> getByte
    239:239:short getUnsignedByte(int) -> getUnsignedByte
    244:244:short getShort(int) -> getShort
    249:249:short getShortLE(int) -> getShortLE
    254:254:int getUnsignedShort(int) -> getUnsignedShort
    259:259:int getUnsignedShortLE(int) -> getUnsignedShortLE
    264:264:int getMedium(int) -> getMedium
    269:269:int getMediumLE(int) -> getMediumLE
    274:274:int getUnsignedMedium(int) -> getUnsignedMedium
    279:279:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    284:284:int getInt(int) -> getInt
    289:289:int getIntLE(int) -> getIntLE
    294:294:long getUnsignedInt(int) -> getUnsignedInt
    299:299:long getUnsignedIntLE(int) -> getUnsignedIntLE
    304:304:long getLong(int) -> getLong
    309:309:long getLongLE(int) -> getLongLE
    314:314:char getChar(int) -> getChar
    319:319:float getFloat(int) -> getFloat
    324:324:double getDouble(int) -> getDouble
    329:330:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    335:336:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    341:342:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    347:348:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    353:354:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    359:360:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    365:366:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    371:371:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    376:376:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    381:381:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    386:387:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    392:393:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    398:399:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    404:405:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    410:411:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    416:417:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    422:423:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    428:429:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    434:435:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    440:441:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    446:447:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    452:453:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    458:459:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    464:465:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    470:471:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    476:477:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    482:483:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    488:489:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    494:495:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    500:500:int setBytes(int,java.io.InputStream,int) -> setBytes
    505:505:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    510:510:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    515:516:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    521:521:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    526:526:boolean readBoolean() -> readBoolean
    531:531:byte readByte() -> readByte
    536:536:short readUnsignedByte() -> readUnsignedByte
    541:541:short readShort() -> readShort
    546:546:short readShortLE() -> readShortLE
    551:551:int readUnsignedShort() -> readUnsignedShort
    556:556:int readUnsignedShortLE() -> readUnsignedShortLE
    561:561:int readMedium() -> readMedium
    566:566:int readMediumLE() -> readMediumLE
    571:571:int readUnsignedMedium() -> readUnsignedMedium
    576:576:int readUnsignedMediumLE() -> readUnsignedMediumLE
    581:581:int readInt() -> readInt
    586:586:int readIntLE() -> readIntLE
    591:591:long readUnsignedInt() -> readUnsignedInt
    596:596:long readUnsignedIntLE() -> readUnsignedIntLE
    601:601:long readLong() -> readLong
    606:606:long readLongLE() -> readLongLE
    611:611:char readChar() -> readChar
    616:616:float readFloat() -> readFloat
    621:621:double readDouble() -> readDouble
    626:626:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    631:631:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    636:636:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    641:642:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    647:648:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    653:654:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    659:660:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    665:666:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    671:672:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    677:678:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    683:683:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    688:688:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    693:693:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    698:699:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    704:705:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    710:711:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    716:717:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    722:723:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    728:729:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    734:735:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    740:741:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    746:747:pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    752:753:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    758:759:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    764:765:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    770:771:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    776:777:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    782:783:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    788:789:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    794:795:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    800:801:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    806:807:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    812:813:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    818:818:int writeBytes(java.io.InputStream,int) -> writeBytes
    823:823:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    828:828:int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    833:834:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    839:839:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    844:844:int indexOf(int,int,byte) -> indexOf
    849:849:int bytesBefore(byte) -> bytesBefore
    854:854:int bytesBefore(int,byte) -> bytesBefore
    859:859:int bytesBefore(int,int,byte) -> bytesBefore
    864:864:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    869:869:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    874:874:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    879:879:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    884:884:pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    889:889:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    894:894:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    899:899:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    904:904:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    909:909:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    914:914:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    919:919:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    924:924:int nioBufferCount() -> nioBufferCount
    929:929:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    934:934:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    939:939:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    944:948:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    953:957:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    962:962:boolean hasArray() -> hasArray
    967:967:byte[] array() -> array
    972:972:int arrayOffset() -> arrayOffset
    977:977:boolean hasMemoryAddress() -> hasMemoryAddress
    982:982:boolean isContiguous() -> isContiguous
    987:987:long memoryAddress() -> memoryAddress
    992:992:java.lang.String toString(java.nio.charset.Charset) -> toString
    997:997:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    1002:1002:int refCnt() -> refCnt
    1007:1007:boolean isAccessible() -> isAccessible
    1012:1013:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    1018:1019:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    1024:1025:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    1030:1031:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    1036:1036:boolean release() -> release
    1041:1041:boolean release(int) -> release
    1046:1046:int hashCode() -> hashCode
    1051:1054:boolean equals(java.lang.Object) -> equals
    1059:1059:int compareTo(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compareTo
    1064:1064:java.lang.String toString() -> toString
    37:37:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    37:37:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    37:37:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    37:37:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    37:37:int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.Unpooled -> pro.gravit.repackage.io.netty.buffer.Unpooled:
# {"fileName":"Unpooled.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator ALLOC -> ALLOC
    java.nio.ByteOrder BIG_ENDIAN -> BIG_ENDIAN
    java.nio.ByteOrder LITTLE_ENDIAN -> LITTLE_ENDIAN
    pro.gravit.repackage.io.netty.buffer.ByteBuf EMPTY_BUFFER -> EMPTY_BUFFER
    boolean $assertionsDisabled -> $assertionsDisabled
    102:102:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer() -> buffer
    110:110:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    119:119:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int) -> buffer
    128:128:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    138:138:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    148:148:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    157:160:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(byte[]) -> wrappedBuffer
    169:177:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(byte[],int,int) -> wrappedBuffer
    186:208:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(java.nio.ByteBuffer) -> wrappedBuffer
    218:218:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(long,int,boolean) -> wrappedBuffer
    230:234:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> wrappedBuffer
    244:244:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(byte[][]) -> wrappedBuffer
    255:255:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> wrappedBuffer
    264:264:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(java.nio.ByteBuffer[]) -> wrappedBuffer
    268:288:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(int,pro.gravit.repackage.io.netty.buffer.CompositeByteBuf$ByteWrapper,java.lang.Object[]) -> wrappedBuffer
    297:297:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(int,byte[][]) -> wrappedBuffer
    310:331:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(int,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> wrappedBuffer
    340:340:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedBuffer(int,java.nio.ByteBuffer[]) -> wrappedBuffer
    347:347:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    354:354:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    363:366:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(byte[]) -> copiedBuffer
    376:381:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(byte[],int,int) -> copiedBuffer
    391:400:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(java.nio.ByteBuffer) -> copiedBuffer
    410:416:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> copiedBuffer
    427:459:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(byte[][]) -> copiedBuffer
    473:514:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> copiedBuffer
    528:571:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(java.nio.ByteBuffer[]) -> copiedBuffer
    581:592:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset) -> copiedBuffer
    596:607:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBufferUtf8(java.lang.CharSequence) -> copiedBufferUtf8
    611:622:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBufferAscii(java.lang.CharSequence) -> copiedBufferAscii
    633:653:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,int,int,java.nio.charset.Charset) -> copiedBuffer
    663:664:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(char[],java.nio.charset.Charset) -> copiedBuffer
    674:678:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(char[],int,int,java.nio.charset.Charset) -> copiedBuffer
    682:682:pro.gravit.repackage.io.netty.buffer.ByteBuf copiedBuffer(java.nio.CharBuffer,java.nio.charset.Charset) -> copiedBuffer
    695:700:pro.gravit.repackage.io.netty.buffer.ByteBuf unmodifiableBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unmodifiableBuffer
    707:709:pro.gravit.repackage.io.netty.buffer.ByteBuf copyInt(int) -> copyInt
    716:723:pro.gravit.repackage.io.netty.buffer.ByteBuf copyInt(int[]) -> copyInt
    730:732:pro.gravit.repackage.io.netty.buffer.ByteBuf copyShort(int) -> copyShort
    739:746:pro.gravit.repackage.io.netty.buffer.ByteBuf copyShort(short[]) -> copyShort
    753:760:pro.gravit.repackage.io.netty.buffer.ByteBuf copyShort(int[]) -> copyShort
    767:769:pro.gravit.repackage.io.netty.buffer.ByteBuf copyMedium(int) -> copyMedium
    776:783:pro.gravit.repackage.io.netty.buffer.ByteBuf copyMedium(int[]) -> copyMedium
    790:792:pro.gravit.repackage.io.netty.buffer.ByteBuf copyLong(long) -> copyLong
    799:806:pro.gravit.repackage.io.netty.buffer.ByteBuf copyLong(long[]) -> copyLong
    813:815:pro.gravit.repackage.io.netty.buffer.ByteBuf copyBoolean(boolean) -> copyBoolean
    822:829:pro.gravit.repackage.io.netty.buffer.ByteBuf copyBoolean(boolean[]) -> copyBoolean
    836:838:pro.gravit.repackage.io.netty.buffer.ByteBuf copyFloat(float) -> copyFloat
    845:852:pro.gravit.repackage.io.netty.buffer.ByteBuf copyFloat(float[]) -> copyFloat
    859:861:pro.gravit.repackage.io.netty.buffer.ByteBuf copyDouble(double) -> copyDouble
    868:875:pro.gravit.repackage.io.netty.buffer.ByteBuf copyDouble(double[]) -> copyDouble
    882:882:pro.gravit.repackage.io.netty.buffer.ByteBuf unreleasableBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unreleasableBuffer
    893:893:pro.gravit.repackage.io.netty.buffer.ByteBuf unmodifiableBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> unmodifiableBuffer
    903:903:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedUnmodifiableBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> wrappedUnmodifiableBuffer
    907:916:pro.gravit.repackage.io.netty.buffer.ByteBuf wrappedUnmodifiableBuffer(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> wrappedUnmodifiableBuffer
    920:922:void <init>() -> <init>
    73:95:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator -> pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator:
# {"fileName":"UnpooledByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric -> metric
    boolean disableLeakDetector -> disableLeakDetector
    boolean noCleaner -> noCleaner
    pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator DEFAULT -> DEFAULT
    46:47:void <init>(boolean) -> <init>
    59:60:void <init>(boolean,boolean) -> <init>
    29:78:void <init>(boolean,boolean,boolean) -> <init>
    82:82:pro.gravit.repackage.io.netty.buffer.ByteBuf newHeapBuffer(int,int) -> newHeapBuffer
    90:96:pro.gravit.repackage.io.netty.buffer.ByteBuf newDirectBuffer(int,int) -> newDirectBuffer
    101:102:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    107:108:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    113:113:boolean isDirectBufferPooled() -> isDirectBufferPooled
    118:118:pro.gravit.repackage.io.netty.buffer.ByteBufAllocatorMetric metric() -> metric
    122:123:void incrementDirect(int) -> incrementDirect
    126:127:void decrementDirect(int) -> decrementDirect
    130:131:void incrementHeap(int) -> incrementHeap
    134:135:void decrementHeap(int) -> decrementHeap
    36:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$1 -> pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$1:
# {"fileName":"UnpooledByteBufAllocator.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf:
# {"fileName":"UnpooledByteBufAllocator.java","id":"sourceFile"}
    231:232:void <init>(pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    236:238:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    243:246:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf:
# {"fileName":"UnpooledByteBufAllocator.java","id":"sourceFile"}
    159:160:void <init>(pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    164:166:byte[] allocateArray(int) -> allocateArray
    171:174:void freeArray(byte[]) -> freeArray
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf:
# {"fileName":"UnpooledByteBufAllocator.java","id":"sourceFile"}
    210:211:void <init>(pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    215:217:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    222:225:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf:
# {"fileName":"UnpooledByteBufAllocator.java","id":"sourceFile"}
    139:140:void <init>(pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    144:146:byte[] allocateArray(int) -> allocateArray
    151:154:void freeArray(byte[]) -> freeArray
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf:
# {"fileName":"UnpooledByteBufAllocator.java","id":"sourceFile"}
    181:182:void <init>(pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator,int,int) -> <init>
    186:188:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    193:196:java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer,int) -> reallocateDirect
    201:204:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric -> pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric:
# {"fileName":"UnpooledByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.LongCounter directCounter -> directCounter
    pro.gravit.repackage.io.netty.util.internal.LongCounter heapCounter -> heapCounter
    249:251:void <init>() -> <init>
    255:255:long usedHeapMemory() -> usedHeapMemory
    260:260:long usedDirectMemory() -> usedDirectMemory
    265:266:java.lang.String toString() -> toString
    249:249:void <init>(pro.gravit.repackage.io.netty.buffer.UnpooledByteBufAllocator$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledDirectByteBuf:
# {"fileName":"UnpooledDirectByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc -> alloc
    java.nio.ByteBuffer buffer -> buffer
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    int capacity -> capacity
    boolean doNotFree -> doNotFree
    54:65:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    73:74:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer,int) -> <init>
    78:98:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer,int,boolean,boolean) -> <init>
    104:104:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    111:112:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    115:129:void setByteBuffer(java.nio.ByteBuffer,boolean) -> setByteBuffer
    133:133:boolean isDirect() -> isDirect
    138:138:int capacity() -> capacity
    143:161:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    166:166:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    171:171:java.nio.ByteOrder order() -> order
    176:176:boolean hasArray() -> hasArray
    181:181:byte[] array() -> array
    186:186:int arrayOffset() -> arrayOffset
    191:191:boolean hasMemoryAddress() -> hasMemoryAddress
    196:196:long memoryAddress() -> memoryAddress
    201:202:byte getByte(int) -> getByte
    207:207:byte _getByte(int) -> _getByte
    212:213:short getShort(int) -> getShort
    218:218:short _getShort(int) -> _getShort
    223:223:short _getShortLE(int) -> _getShortLE
    228:229:int getUnsignedMedium(int) -> getUnsignedMedium
    234:236:int _getUnsignedMedium(int) -> _getUnsignedMedium
    241:243:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    248:249:int getInt(int) -> getInt
    254:254:int _getInt(int) -> _getInt
    259:259:int _getIntLE(int) -> _getIntLE
    264:265:long getLong(int) -> getLong
    270:270:long _getLong(int) -> _getLong
    275:275:long _getLongLE(int) -> _getLongLE
    280:292:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    297:298:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    302:312:void getBytes(int,byte[],int,int,boolean) -> getBytes
    316:319:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    324:325:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    329:339:void getBytes(int,java.nio.ByteBuffer,boolean) -> getBytes
    343:347:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    352:354:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    359:360:void _setByte(int,int) -> _setByte
    364:366:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    371:372:void _setShort(int,int) -> _setShort
    376:377:void _setShortLE(int,int) -> _setShortLE
    381:383:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    388:391:void _setMedium(int,int) -> _setMedium
    395:398:void _setMediumLE(int,int) -> _setMediumLE
    402:404:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    409:410:void _setInt(int,int) -> _setInt
    414:415:void _setIntLE(int,int) -> _setIntLE
    419:421:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    426:427:void _setLong(int,long) -> _setLong
    431:432:void _setLongLE(int,long) -> _setLongLE
    436:446:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    451:455:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    460:468:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    473:474:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    478:483:void getBytes(int,java.io.OutputStream,int,boolean) -> getBytes
    487:490:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    495:495:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    499:511:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    516:516:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    520:527:int getBytes(int,java.nio.channels.FileChannel,long,int,boolean) -> getBytes
    532:535:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    540:543:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    548:560:int setBytes(int,java.io.InputStream,int) -> setBytes
    566:572:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    578:584:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    590:590:int nioBufferCount() -> nioBufferCount
    595:595:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    600:600:boolean isContiguous() -> isContiguous
    605:613:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    618:619:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    623:627:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    632:633:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    638:648:void deallocate() -> deallocate
    652:652:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledDuplicatedByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledDuplicatedByteBuf:
# {"fileName":"UnpooledDuplicatedByteBuf.java","id":"sourceFile"}
    24:25:void <init>(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf) -> <init>
    29:29:pro.gravit.repackage.io.netty.buffer.AbstractByteBuf unwrap() -> unwrap
    34:34:byte _getByte(int) -> _getByte
    39:39:short _getShort(int) -> _getShort
    44:44:short _getShortLE(int) -> _getShortLE
    49:49:int _getUnsignedMedium(int) -> _getUnsignedMedium
    54:54:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    59:59:int _getInt(int) -> _getInt
    64:64:int _getIntLE(int) -> _getIntLE
    69:69:long _getLong(int) -> _getLong
    74:74:long _getLongLE(int) -> _getLongLE
    79:80:void _setByte(int,int) -> _setByte
    84:85:void _setShort(int,int) -> _setShort
    89:90:void _setShortLE(int,int) -> _setShortLE
    94:95:void _setMedium(int,int) -> _setMedium
    99:100:void _setMediumLE(int,int) -> _setMediumLE
    104:105:void _setInt(int,int) -> _setInt
    109:110:void _setIntLE(int,int) -> _setIntLE
    114:115:void _setLong(int,long) -> _setLong
    119:120:void _setLongLE(int,long) -> _setLongLE
    22:22:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledHeapByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledHeapByteBuf:
# {"fileName":"UnpooledHeapByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc -> alloc
    byte[] array -> array
    java.nio.ByteBuffer tmpNioBuf -> tmpNioBuf
    51:61:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    70:82:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,byte[],int) -> <init>
    85:85:byte[] allocateArray(int) -> allocateArray
    90:90:void freeArray(byte[]) -> freeArray
    93:95:void setArray(byte[]) -> setArray
    99:99:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    104:104:java.nio.ByteOrder order() -> order
    109:109:boolean isDirect() -> isDirect
    114:114:int capacity() -> capacity
    119:137:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    142:142:boolean hasArray() -> hasArray
    147:148:byte[] array() -> array
    153:153:int arrayOffset() -> arrayOffset
    158:158:boolean hasMemoryAddress() -> hasMemoryAddress
    163:163:long memoryAddress() -> memoryAddress
    168:176:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    181:183:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    188:190:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    195:197:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    202:203:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    208:209:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    213:220:int getBytes(int,java.nio.channels.GatheringByteChannel,int,boolean) -> getBytes
    224:226:int getBytes(int,java.nio.channels.FileChannel,long,int,boolean) -> getBytes
    231:234:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    239:242:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    247:255:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    260:262:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    267:269:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    274:275:int setBytes(int,java.io.InputStream,int) -> setBytes
    280:284:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    290:294:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    300:300:int nioBufferCount() -> nioBufferCount
    305:306:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    311:311:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    316:317:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    322:322:boolean isContiguous() -> isContiguous
    327:328:byte getByte(int) -> getByte
    333:333:byte _getByte(int) -> _getByte
    338:339:short getShort(int) -> getShort
    344:344:short _getShort(int) -> _getShort
    349:350:short getShortLE(int) -> getShortLE
    355:355:short _getShortLE(int) -> _getShortLE
    360:361:int getUnsignedMedium(int) -> getUnsignedMedium
    366:366:int _getUnsignedMedium(int) -> _getUnsignedMedium
    371:372:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    377:377:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    382:383:int getInt(int) -> getInt
    388:388:int _getInt(int) -> _getInt
    393:394:int getIntLE(int) -> getIntLE
    399:399:int _getIntLE(int) -> _getIntLE
    404:405:long getLong(int) -> getLong
    410:410:long _getLong(int) -> _getLong
    415:416:long getLongLE(int) -> getLongLE
    421:421:long _getLongLE(int) -> _getLongLE
    426:428:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    433:434:void _setByte(int,int) -> _setByte
    438:440:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    445:446:void _setShort(int,int) -> _setShort
    450:452:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    457:458:void _setShortLE(int,int) -> _setShortLE
    462:464:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    469:470:void _setMedium(int,int) -> _setMedium
    474:476:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    481:482:void _setMediumLE(int,int) -> _setMediumLE
    486:488:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    493:494:void _setInt(int,int) -> _setInt
    498:500:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    505:506:void _setIntLE(int,int) -> _setIntLE
    510:512:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    517:518:void _setLong(int,long) -> _setLong
    522:524:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    529:530:void _setLongLE(int,long) -> _setLongLE
    534:535:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    539:543:java.nio.ByteBuffer internalNioBuffer() -> internalNioBuffer
    548:550:void deallocate() -> deallocate
    554:554:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledSlicedByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledSlicedByteBuf:
# {"fileName":"UnpooledSlicedByteBuf.java","id":"sourceFile"}
    24:25:void <init>(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int) -> <init>
    29:29:int capacity() -> capacity
    34:34:pro.gravit.repackage.io.netty.buffer.AbstractByteBuf unwrap() -> unwrap
    39:39:byte _getByte(int) -> _getByte
    44:44:short _getShort(int) -> _getShort
    49:49:short _getShortLE(int) -> _getShortLE
    54:54:int _getUnsignedMedium(int) -> _getUnsignedMedium
    59:59:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    64:64:int _getInt(int) -> _getInt
    69:69:int _getIntLE(int) -> _getIntLE
    74:74:long _getLong(int) -> _getLong
    79:79:long _getLongLE(int) -> _getLongLE
    84:85:void _setByte(int,int) -> _setByte
    89:90:void _setShort(int,int) -> _setShort
    94:95:void _setShortLE(int,int) -> _setShortLE
    99:100:void _setMedium(int,int) -> _setMedium
    104:105:void _setMediumLE(int,int) -> _setMediumLE
    109:110:void _setInt(int,int) -> _setInt
    114:115:void _setIntLE(int,int) -> _setIntLE
    119:120:void _setLong(int,long) -> _setLong
    124:125:void _setLongLE(int,long) -> _setLongLE
    22:22:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledUnsafeDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledUnsafeDirectByteBuf:
# {"fileName":"UnpooledUnsafeDirectByteBuf.java","id":"sourceFile"}
    long memoryAddress -> memoryAddress
    41:42:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    59:60:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer,int) -> <init>
    63:64:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.nio.ByteBuffer,int,boolean) -> <init>
    68:70:void setByteBuffer(java.nio.ByteBuffer,boolean) -> setByteBuffer
    74:74:boolean hasMemoryAddress() -> hasMemoryAddress
    79:80:long memoryAddress() -> memoryAddress
    85:86:byte getByte(int) -> getByte
    91:91:byte _getByte(int) -> _getByte
    96:97:short getShort(int) -> getShort
    102:102:short _getShort(int) -> _getShort
    107:107:short _getShortLE(int) -> _getShortLE
    112:113:int getUnsignedMedium(int) -> getUnsignedMedium
    118:118:int _getUnsignedMedium(int) -> _getUnsignedMedium
    123:123:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    128:129:int getInt(int) -> getInt
    134:134:int _getInt(int) -> _getInt
    139:139:int _getIntLE(int) -> _getIntLE
    144:145:long getLong(int) -> getLong
    150:150:long _getLong(int) -> _getLong
    155:155:long _getLongLE(int) -> _getLongLE
    160:161:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    166:167:void getBytes(int,byte[],int,int,boolean) -> getBytes
    171:172:void getBytes(int,java.nio.ByteBuffer,boolean) -> getBytes
    176:178:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    183:184:void _setByte(int,int) -> _setByte
    188:190:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    195:196:void _setShort(int,int) -> _setShort
    200:201:void _setShortLE(int,int) -> _setShortLE
    205:207:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    212:213:void _setMedium(int,int) -> _setMedium
    217:218:void _setMediumLE(int,int) -> _setMediumLE
    222:224:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    229:230:void _setInt(int,int) -> _setInt
    234:235:void _setIntLE(int,int) -> _setIntLE
    239:241:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    246:247:void _setLong(int,long) -> _setLong
    251:252:void _setLongLE(int,long) -> _setLongLE
    256:257:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    262:263:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    268:269:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    274:275:void getBytes(int,java.io.OutputStream,int,boolean) -> getBytes
    279:279:int setBytes(int,java.io.InputStream,int) -> setBytes
    284:284:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    288:288:long addr(int) -> addr
    293:297:pro.gravit.repackage.io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    302:304:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    309:313:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledUnsafeHeapByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledUnsafeHeapByteBuf:
# {"fileName":"UnpooledUnsafeHeapByteBuf.java","id":"sourceFile"}
    34:35:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    39:39:byte[] allocateArray(int) -> allocateArray
    44:45:byte getByte(int) -> getByte
    50:50:byte _getByte(int) -> _getByte
    55:56:short getShort(int) -> getShort
    61:61:short _getShort(int) -> _getShort
    66:67:short getShortLE(int) -> getShortLE
    72:72:short _getShortLE(int) -> _getShortLE
    77:78:int getUnsignedMedium(int) -> getUnsignedMedium
    83:83:int _getUnsignedMedium(int) -> _getUnsignedMedium
    88:89:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    94:94:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    99:100:int getInt(int) -> getInt
    105:105:int _getInt(int) -> _getInt
    110:111:int getIntLE(int) -> getIntLE
    116:116:int _getIntLE(int) -> _getIntLE
    121:122:long getLong(int) -> getLong
    127:127:long _getLong(int) -> _getLong
    132:133:long getLongLE(int) -> getLongLE
    138:138:long _getLongLE(int) -> _getLongLE
    143:145:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    150:151:void _setByte(int,int) -> _setByte
    155:157:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    162:163:void _setShort(int,int) -> _setShort
    167:169:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    174:175:void _setShortLE(int,int) -> _setShortLE
    179:181:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    186:187:void _setMedium(int,int) -> _setMedium
    191:193:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    198:199:void _setMediumLE(int,int) -> _setMediumLE
    203:205:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    210:211:void _setInt(int,int) -> _setInt
    215:217:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    222:223:void _setIntLE(int,int) -> _setIntLE
    227:229:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    234:235:void _setLong(int,long) -> _setLong
    239:241:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    246:247:void _setLongLE(int,long) -> _setLongLE
    251:257:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    262:270:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    276:280:pro.gravit.repackage.io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf:
# {"fileName":"UnpooledUnsafeNoCleanerDirectByteBuf.java","id":"sourceFile"}
    25:26:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> <init>
    30:30:java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    34:34:java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer,int) -> reallocateDirect
    39:40:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    44:53:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnreleasableByteBuf -> pro.gravit.repackage.io.netty.buffer.UnreleasableByteBuf:
# {"fileName":"UnreleasableByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.SwappedByteBuf swappedBuf -> swappedBuf
    31:32:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    36:44:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    54:54:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    62:62:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    67:67:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    75:75:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    80:80:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    88:88:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    93:93:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    101:101:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    106:106:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    111:111:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    116:116:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    121:121:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    126:126:boolean release() -> release
    131:131:boolean release(int) -> release
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnsafeByteBufUtil -> pro.gravit.repackage.io.netty.buffer.UnsafeByteBufUtil:
# {"fileName":"UnsafeByteBufUtil.java","id":"sourceFile"}
    boolean UNALIGNED -> UNALIGNED
    byte ZERO -> ZERO
    boolean $assertionsDisabled -> $assertionsDisabled
    39:39:byte getByte(long) -> getByte
    43:47:short getShort(long) -> getShort
    51:55:short getShortLE(long) -> getShortLE
    59:66:int getUnsignedMedium(long) -> getUnsignedMedium
    70:77:int getUnsignedMediumLE(long) -> getUnsignedMediumLE
    81:88:int getInt(long) -> getInt
    92:99:int getIntLE(long) -> getIntLE
    103:114:long getLong(long) -> getLong
    118:129:long getLongLE(long) -> getLongLE
    133:134:void setByte(long,int) -> setByte
    137:144:void setShort(long,int) -> setShort
    147:154:void setShortLE(long,int) -> setShortLE
    157:165:void setMedium(long,int) -> setMedium
    168:176:void setMediumLE(long,int) -> setMediumLE
    179:187:void setInt(long,int) -> setInt
    190:198:void setIntLE(long,int) -> setIntLE
    201:213:void setLong(long,long) -> setLong
    216:228:void setLongLE(long,long) -> setLongLE
    231:231:byte getByte(byte[],int) -> getByte
    235:240:short getShort(byte[],int) -> getShort
    244:249:short getShortLE(byte[],int) -> getShortLE
    253:261:int getUnsignedMedium(byte[],int) -> getUnsignedMedium
    265:272:int getUnsignedMediumLE(byte[],int) -> getUnsignedMediumLE
    276:283:int getInt(byte[],int) -> getInt
    287:294:int getIntLE(byte[],int) -> getIntLE
    298:309:long getLong(byte[],int) -> getLong
    313:324:long getLongLE(byte[],int) -> getLongLE
    328:329:void setByte(byte[],int,int) -> setByte
    332:339:void setShort(byte[],int,int) -> setShort
    342:349:void setShortLE(byte[],int,int) -> setShortLE
    352:361:void setMedium(byte[],int,int) -> setMedium
    364:373:void setMediumLE(byte[],int,int) -> setMediumLE
    376:384:void setInt(byte[],int,int) -> setInt
    387:395:void setIntLE(byte[],int,int) -> setIntLE
    398:410:void setLong(byte[],int,long) -> setLong
    413:425:void setLongLE(byte[],int,long) -> setLongLE
    428:432:void setZero(byte[],int,int) -> setZero
    435:445:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,int) -> copy
    449:461:int setBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,java.io.InputStream,int) -> setBytes
    465:478:void getBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    481:489:void getBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,byte[],int,int) -> getBytes
    492:513:void getBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,java.nio.ByteBuffer) -> getBytes
    516:531:void setBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    534:545:void setBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,byte[],int,int) -> setBytes
    548:574:void setBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,java.nio.ByteBuffer) -> setBytes
    578:588:void setSingleBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,java.nio.ByteBuffer,int) -> setSingleBytes
    591:608:void getBytes(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,long,int,java.io.OutputStream,int) -> getBytes
    613:619:void getBytes(long,byte[],int,int,java.io.OutputStream,int) -> getBytes
    622:627:void setZero(long,int) -> setZero
    631:634:pro.gravit.repackage.io.netty.buffer.UnpooledUnsafeDirectByteBuf newUnsafeDirectByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> newUnsafeDirectByteBuf
    637:637:void <init>() -> <init>
    34:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnsafeDirectSwappedByteBuf -> pro.gravit.repackage.io.netty.buffer.UnsafeDirectSwappedByteBuf:
# {"fileName":"UnsafeDirectSwappedByteBuf.java","id":"sourceFile"}
    27:28:void <init>(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf) -> <init>
    35:35:long addr(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> addr
    40:40:long _getLong(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getLong
    45:45:int _getInt(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getInt
    50:50:short _getShort(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getShort
    55:56:void _setShort(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,short) -> _setShort
    60:61:void _setInt(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int) -> _setInt
    65:66:void _setLong(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,long) -> _setLong
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.UnsafeHeapSwappedByteBuf -> pro.gravit.repackage.io.netty.buffer.UnsafeHeapSwappedByteBuf:
# {"fileName":"UnsafeHeapSwappedByteBuf.java","id":"sourceFile"}
    27:28:void <init>(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf) -> <init>
    31:31:int idx(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> idx
    36:36:long _getLong(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getLong
    41:41:int _getInt(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getInt
    46:46:short _getShort(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int) -> _getShort
    51:52:void _setShort(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,short) -> _setShort
    56:57:void _setInt(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,int) -> _setInt
    61:62:void _setLong(pro.gravit.repackage.io.netty.buffer.AbstractByteBuf,int,long) -> _setLong
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.WrappedByteBuf -> pro.gravit.repackage.io.netty.buffer.WrappedByteBuf:
# {"fileName":"WrappedByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buf -> buf
    44:46:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    50:50:boolean hasMemoryAddress() -> hasMemoryAddress
    55:55:boolean isContiguous() -> isContiguous
    60:60:long memoryAddress() -> memoryAddress
    65:65:int capacity() -> capacity
    70:71:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    76:76:int maxCapacity() -> maxCapacity
    81:81:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    86:86:java.nio.ByteOrder order() -> order
    91:91:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    96:96:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    101:101:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    106:106:boolean isReadOnly() -> isReadOnly
    111:111:boolean isDirect() -> isDirect
    116:116:int readerIndex() -> readerIndex
    121:122:pro.gravit.repackage.io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    127:127:int writerIndex() -> writerIndex
    132:133:pro.gravit.repackage.io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    138:139:pro.gravit.repackage.io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    144:144:int readableBytes() -> readableBytes
    149:149:int writableBytes() -> writableBytes
    154:154:int maxWritableBytes() -> maxWritableBytes
    159:159:int maxFastWritableBytes() -> maxFastWritableBytes
    164:164:boolean isReadable() -> isReadable
    169:169:boolean isWritable() -> isWritable
    174:175:pro.gravit.repackage.io.netty.buffer.ByteBuf clear() -> clear
    180:181:pro.gravit.repackage.io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    186:187:pro.gravit.repackage.io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    192:193:pro.gravit.repackage.io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    198:199:pro.gravit.repackage.io.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    204:205:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    210:211:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    216:217:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    222:222:int ensureWritable(int,boolean) -> ensureWritable
    227:227:boolean getBoolean(int) -> getBoolean
    232:232:byte getByte(int) -> getByte
    237:237:short getUnsignedByte(int) -> getUnsignedByte
    242:242:short getShort(int) -> getShort
    247:247:short getShortLE(int) -> getShortLE
    252:252:int getUnsignedShort(int) -> getUnsignedShort
    257:257:int getUnsignedShortLE(int) -> getUnsignedShortLE
    262:262:int getMedium(int) -> getMedium
    267:267:int getMediumLE(int) -> getMediumLE
    272:272:int getUnsignedMedium(int) -> getUnsignedMedium
    277:277:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    282:282:int getInt(int) -> getInt
    287:287:int getIntLE(int) -> getIntLE
    292:292:long getUnsignedInt(int) -> getUnsignedInt
    297:297:long getUnsignedIntLE(int) -> getUnsignedIntLE
    302:302:long getLong(int) -> getLong
    307:307:long getLongLE(int) -> getLongLE
    312:312:char getChar(int) -> getChar
    317:317:float getFloat(int) -> getFloat
    322:322:double getDouble(int) -> getDouble
    327:328:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    333:334:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    339:340:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    345:346:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    351:352:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    357:358:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    363:364:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    369:369:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    374:374:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    379:379:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    384:385:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    390:391:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    396:397:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    402:403:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    408:409:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    414:415:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    420:421:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    426:427:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    432:433:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    438:439:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    444:445:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    450:451:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    456:457:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    462:463:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    468:469:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    474:475:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    480:481:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    486:487:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    492:493:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    498:498:int setBytes(int,java.io.InputStream,int) -> setBytes
    503:503:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    508:508:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    513:514:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    519:519:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    524:524:boolean readBoolean() -> readBoolean
    529:529:byte readByte() -> readByte
    534:534:short readUnsignedByte() -> readUnsignedByte
    539:539:short readShort() -> readShort
    544:544:short readShortLE() -> readShortLE
    549:549:int readUnsignedShort() -> readUnsignedShort
    554:554:int readUnsignedShortLE() -> readUnsignedShortLE
    559:559:int readMedium() -> readMedium
    564:564:int readMediumLE() -> readMediumLE
    569:569:int readUnsignedMedium() -> readUnsignedMedium
    574:574:int readUnsignedMediumLE() -> readUnsignedMediumLE
    579:579:int readInt() -> readInt
    584:584:int readIntLE() -> readIntLE
    589:589:long readUnsignedInt() -> readUnsignedInt
    594:594:long readUnsignedIntLE() -> readUnsignedIntLE
    599:599:long readLong() -> readLong
    604:604:long readLongLE() -> readLongLE
    609:609:char readChar() -> readChar
    614:614:float readFloat() -> readFloat
    619:619:double readDouble() -> readDouble
    624:624:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    629:629:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    634:634:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    639:640:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    645:646:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    651:652:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    657:658:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    663:664:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    669:670:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    675:676:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    681:681:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    686:686:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    691:691:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    696:697:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    702:703:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    708:709:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    714:715:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    720:721:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    726:727:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    732:733:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    738:739:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    744:745:pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    750:751:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    756:757:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    762:763:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    768:769:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    774:775:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    780:781:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    786:787:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    792:793:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    798:799:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    804:805:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    810:811:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    816:816:int writeBytes(java.io.InputStream,int) -> writeBytes
    821:821:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    826:826:int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    831:832:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    837:837:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    842:842:int indexOf(int,int,byte) -> indexOf
    847:847:int bytesBefore(byte) -> bytesBefore
    852:852:int bytesBefore(int,byte) -> bytesBefore
    857:857:int bytesBefore(int,int,byte) -> bytesBefore
    862:862:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    867:867:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    872:872:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    877:877:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    882:882:pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    887:887:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    892:892:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    897:897:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    902:902:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    907:907:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    912:912:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    917:917:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    922:922:int nioBufferCount() -> nioBufferCount
    927:927:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    932:932:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    937:937:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    942:942:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    947:947:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    952:952:boolean hasArray() -> hasArray
    957:957:byte[] array() -> array
    962:962:int arrayOffset() -> arrayOffset
    967:967:java.lang.String toString(java.nio.charset.Charset) -> toString
    972:972:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    977:977:int hashCode() -> hashCode
    983:983:boolean equals(java.lang.Object) -> equals
    988:988:int compareTo(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compareTo
    993:993:java.lang.String toString() -> toString
    998:999:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    1004:1005:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    1010:1011:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    1016:1017:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    1022:1022:boolean isReadable(int) -> isReadable
    1027:1027:boolean isWritable(int) -> isWritable
    1032:1032:int refCnt() -> refCnt
    1037:1037:boolean release() -> release
    1042:1042:boolean release(int) -> release
    1047:1047:boolean isAccessible() -> isAccessible
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    40:40:int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.WrappedCompositeByteBuf -> pro.gravit.repackage.io.netty.buffer.WrappedCompositeByteBuf:
# {"fileName":"WrappedCompositeByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.CompositeByteBuf wrapped -> wrapped
    37:39:void <init>(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf) -> <init>
    43:43:boolean release() -> release
    48:48:boolean release(int) -> release
    53:53:int maxCapacity() -> maxCapacity
    58:58:int readerIndex() -> readerIndex
    63:63:int writerIndex() -> writerIndex
    68:68:boolean isReadable() -> isReadable
    73:73:boolean isReadable(int) -> isReadable
    78:78:boolean isWritable() -> isWritable
    83:83:boolean isWritable(int) -> isWritable
    88:88:int readableBytes() -> readableBytes
    93:93:int writableBytes() -> writableBytes
    98:98:int maxWritableBytes() -> maxWritableBytes
    103:103:int maxFastWritableBytes() -> maxFastWritableBytes
    108:108:int ensureWritable(int,boolean) -> ensureWritable
    113:113:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    118:118:boolean getBoolean(int) -> getBoolean
    123:123:short getUnsignedByte(int) -> getUnsignedByte
    128:128:short getShort(int) -> getShort
    133:133:short getShortLE(int) -> getShortLE
    138:138:int getUnsignedShort(int) -> getUnsignedShort
    143:143:int getUnsignedShortLE(int) -> getUnsignedShortLE
    148:148:int getUnsignedMedium(int) -> getUnsignedMedium
    153:153:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    158:158:int getMedium(int) -> getMedium
    163:163:int getMediumLE(int) -> getMediumLE
    168:168:int getInt(int) -> getInt
    173:173:int getIntLE(int) -> getIntLE
    178:178:long getUnsignedInt(int) -> getUnsignedInt
    183:183:long getUnsignedIntLE(int) -> getUnsignedIntLE
    188:188:long getLong(int) -> getLong
    193:193:long getLongLE(int) -> getLongLE
    198:198:char getChar(int) -> getChar
    203:203:float getFloat(int) -> getFloat
    208:208:double getDouble(int) -> getDouble
    213:213:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    218:218:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    223:223:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    228:228:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    233:233:byte readByte() -> readByte
    238:238:boolean readBoolean() -> readBoolean
    243:243:short readUnsignedByte() -> readUnsignedByte
    248:248:short readShort() -> readShort
    253:253:short readShortLE() -> readShortLE
    258:258:int readUnsignedShort() -> readUnsignedShort
    263:263:int readUnsignedShortLE() -> readUnsignedShortLE
    268:268:int readMedium() -> readMedium
    273:273:int readMediumLE() -> readMediumLE
    278:278:int readUnsignedMedium() -> readUnsignedMedium
    283:283:int readUnsignedMediumLE() -> readUnsignedMediumLE
    288:288:int readInt() -> readInt
    293:293:int readIntLE() -> readIntLE
    298:298:long readUnsignedInt() -> readUnsignedInt
    303:303:long readUnsignedIntLE() -> readUnsignedIntLE
    308:308:long readLong() -> readLong
    313:313:long readLongLE() -> readLongLE
    318:318:char readChar() -> readChar
    323:323:float readFloat() -> readFloat
    328:328:double readDouble() -> readDouble
    333:333:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    338:338:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    343:343:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    348:348:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    353:353:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    358:358:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    363:363:java.lang.String toString(java.nio.charset.Charset) -> toString
    368:368:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    373:373:int indexOf(int,int,byte) -> indexOf
    378:378:int bytesBefore(byte) -> bytesBefore
    383:383:int bytesBefore(int,byte) -> bytesBefore
    388:388:int bytesBefore(int,int,byte) -> bytesBefore
    393:393:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    398:398:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    403:403:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    408:408:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    413:413:int forEachByteAsc0(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteAsc0
    418:418:int forEachByteDesc0(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc0
    423:423:int hashCode() -> hashCode
    428:428:boolean equals(java.lang.Object) -> equals
    433:433:int compareTo(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compareTo
    438:438:int refCnt() -> refCnt
    443:443:boolean isAccessible() -> isAccessible
    448:448:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    453:453:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    458:458:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    463:463:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    468:468:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    473:473:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    478:478:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    483:483:pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    488:488:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    493:493:int writeBytes(java.io.InputStream,int) -> writeBytes
    498:498:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    503:503:pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    508:509:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    514:515:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    520:521:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(java.lang.Iterable) -> addComponents
    526:527:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    532:533:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(int,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    538:539:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(int,java.lang.Iterable) -> addComponents
    544:545:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    550:551:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> addComponents
    556:557:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponents(boolean,java.lang.Iterable) -> addComponents
    562:563:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addComponent(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addComponent
    568:569:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf addFlattenedComponents(boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> addFlattenedComponents
    574:575:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf removeComponent(int) -> removeComponent
    580:581:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf removeComponents(int,int) -> removeComponents
    586:586:java.util.Iterator iterator() -> iterator
    591:591:java.util.List decompose(int,int) -> decompose
    596:596:boolean isDirect() -> isDirect
    601:601:boolean hasArray() -> hasArray
    606:606:byte[] array() -> array
    611:611:int arrayOffset() -> arrayOffset
    616:616:boolean hasMemoryAddress() -> hasMemoryAddress
    621:621:long memoryAddress() -> memoryAddress
    626:626:int capacity() -> capacity
    631:632:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf capacity(int) -> capacity
    637:637:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    642:642:java.nio.ByteOrder order() -> order
    647:647:int numComponents() -> numComponents
    652:652:int maxNumComponents() -> maxNumComponents
    657:657:int toComponentIndex(int) -> toComponentIndex
    662:662:int toByteIndex(int) -> toByteIndex
    667:667:byte getByte(int) -> getByte
    672:672:byte _getByte(int) -> _getByte
    677:677:short _getShort(int) -> _getShort
    682:682:short _getShortLE(int) -> _getShortLE
    687:687:int _getUnsignedMedium(int) -> _getUnsignedMedium
    692:692:int _getUnsignedMediumLE(int) -> _getUnsignedMediumLE
    697:697:int _getInt(int) -> _getInt
    702:702:int _getIntLE(int) -> _getIntLE
    707:707:long _getLong(int) -> _getLong
    712:712:long _getLongLE(int) -> _getLongLE
    717:718:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,byte[],int,int) -> getBytes
    723:724:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    729:730:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    735:735:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    740:741:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    746:747:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setByte(int,int) -> setByte
    752:753:void _setByte(int,int) -> _setByte
    757:758:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setShort(int,int) -> setShort
    763:764:void _setShort(int,int) -> _setShort
    768:769:void _setShortLE(int,int) -> _setShortLE
    773:774:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setMedium(int,int) -> setMedium
    779:780:void _setMedium(int,int) -> _setMedium
    784:785:void _setMediumLE(int,int) -> _setMediumLE
    789:790:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setInt(int,int) -> setInt
    795:796:void _setInt(int,int) -> _setInt
    800:801:void _setIntLE(int,int) -> _setIntLE
    805:806:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setLong(int,long) -> setLong
    811:812:void _setLong(int,long) -> _setLong
    816:817:void _setLongLE(int,long) -> _setLongLE
    821:822:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,byte[],int,int) -> setBytes
    827:828:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    833:834:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    839:839:int setBytes(int,java.io.InputStream,int) -> setBytes
    844:844:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    849:849:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    854:854:pro.gravit.repackage.io.netty.buffer.ByteBuf component(int) -> component
    859:859:pro.gravit.repackage.io.netty.buffer.ByteBuf componentAtOffset(int) -> componentAtOffset
    864:864:pro.gravit.repackage.io.netty.buffer.ByteBuf internalComponent(int) -> internalComponent
    869:869:pro.gravit.repackage.io.netty.buffer.ByteBuf internalComponentAtOffset(int) -> internalComponentAtOffset
    874:874:int nioBufferCount() -> nioBufferCount
    879:879:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    884:884:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    889:889:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    894:895:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf consolidate() -> consolidate
    900:901:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf consolidate(int,int) -> consolidate
    906:907:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardReadComponents() -> discardReadComponents
    912:913:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardReadBytes() -> discardReadBytes
    918:918:java.lang.String toString() -> toString
    923:924:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readerIndex(int) -> readerIndex
    929:930:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writerIndex(int) -> writerIndex
    935:936:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setIndex(int,int) -> setIndex
    941:942:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf clear() -> clear
    947:948:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf markReaderIndex() -> markReaderIndex
    953:954:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf resetReaderIndex() -> resetReaderIndex
    959:960:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf markWriterIndex() -> markWriterIndex
    965:966:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf resetWriterIndex() -> resetWriterIndex
    971:972:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf ensureWritable(int) -> ensureWritable
    977:978:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    983:984:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    989:990:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf getBytes(int,byte[]) -> getBytes
    995:996:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBoolean(int,boolean) -> setBoolean
    1001:1002:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setChar(int,int) -> setChar
    1007:1008:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setFloat(int,float) -> setFloat
    1013:1014:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setDouble(int,double) -> setDouble
    1019:1020:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    1025:1026:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    1031:1032:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setBytes(int,byte[]) -> setBytes
    1037:1038:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf setZero(int,int) -> setZero
    1043:1044:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    1049:1050:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    1055:1056:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    1061:1062:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(byte[]) -> readBytes
    1067:1068:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int) -> readBytes
    1073:1074:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    1079:1080:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    1085:1085:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    1090:1090:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    1095:1095:boolean isReadOnly() -> isReadOnly
    1100:1100:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    1105:1105:pro.gravit.repackage.io.netty.buffer.SwappedByteBuf newSwappedByteBuf() -> newSwappedByteBuf
    1110:1110:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    1115:1115:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    1120:1120:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    1125:1125:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    1130:1130:int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    1135:1135:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    1140:1141:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf skipBytes(int) -> skipBytes
    1146:1147:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBoolean(boolean) -> writeBoolean
    1152:1153:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeByte(int) -> writeByte
    1158:1159:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeShort(int) -> writeShort
    1164:1165:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeMedium(int) -> writeMedium
    1170:1171:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeInt(int) -> writeInt
    1176:1177:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeLong(long) -> writeLong
    1182:1183:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeChar(int) -> writeChar
    1188:1189:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeFloat(float) -> writeFloat
    1194:1195:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeDouble(double) -> writeDouble
    1200:1201:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    1206:1207:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    1212:1213:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    1218:1219:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(byte[]) -> writeBytes
    1224:1225:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int) -> writeBytes
    1230:1231:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    1236:1237:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf writeZero(int) -> writeZero
    1242:1243:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf retain(int) -> retain
    1248:1249:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf retain() -> retain
    1254:1255:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf touch() -> touch
    1260:1261:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf touch(java.lang.Object) -> touch
    1266:1266:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    1271:1272:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    1277:1278:void deallocate() -> deallocate
    1282:1282:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf clear() -> clear
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    32:32:int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.WrappedUnpooledUnsafeDirectByteBuf -> pro.gravit.repackage.io.netty.buffer.WrappedUnpooledUnsafeDirectByteBuf:
# {"fileName":"WrappedUnpooledUnsafeDirectByteBuf.java","id":"sourceFile"}
    25:26:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,long,int,boolean) -> <init>
    30:31:void freeDirect(java.nio.ByteBuffer) -> freeDirect
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.AbstractMultiSearchProcessorFactory -> pro.gravit.repackage.io.netty.buffer.search.AbstractMultiSearchProcessorFactory:
# {"fileName":"AbstractMultiSearchProcessorFactory.java","id":"sourceFile"}
    69:69:void <init>() -> <init>
    91:91:pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory newAhoCorasicSearchProcessorFactory(byte[][]) -> newAhoCorasicSearchProcessorFactory
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.AbstractSearchProcessorFactory -> pro.gravit.repackage.io.netty.buffer.search.AbstractSearchProcessorFactory:
# {"fileName":"AbstractSearchProcessorFactory.java","id":"sourceFile"}
    72:72:void <init>() -> <init>
    92:92:pro.gravit.repackage.io.netty.buffer.search.KmpSearchProcessorFactory newKmpSearchProcessorFactory(byte[]) -> newKmpSearchProcessorFactory
    112:112:pro.gravit.repackage.io.netty.buffer.search.BitapSearchProcessorFactory newBitapSearchProcessorFactory(byte[]) -> newBitapSearchProcessorFactory
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory -> pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory:
# {"fileName":"AhoCorasicSearchProcessorFactory.java","id":"sourceFile"}
    int[] jumpTable -> jumpTable
    int[] matchForNeedleId -> matchForNeedleId
    int BITS_PER_SYMBOL -> BITS_PER_SYMBOL
    int ALPHABET_SIZE -> ALPHABET_SIZE
    78:97:void <init>(byte[][]) -> <init>
    101:144:pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context buildTrie(byte[][]) -> buildTrie
    149:181:void linkSuffixes() -> linkSuffixes
    188:188:pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Processor newSearchProcessor() -> newSearchProcessor
    33:33:pro.gravit.repackage.io.netty.buffer.search.MultiSearchProcessor newSearchProcessor() -> newSearchProcessor
    33:33:pro.gravit.repackage.io.netty.buffer.search.SearchProcessor newSearchProcessor() -> newSearchProcessor
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$1 -> pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$1:
# {"fileName":"AhoCorasicSearchProcessorFactory.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context -> pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Context:
# {"fileName":"AhoCorasicSearchProcessorFactory.java","id":"sourceFile"}
    int[] jumpTable -> jumpTable
    int[] matchForNeedleId -> matchForNeedleId
    41:41:void <init>() -> <init>
    41:41:void <init>(pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Processor -> pro.gravit.repackage.io.netty.buffer.search.AhoCorasicSearchProcessorFactory$Processor:
# {"fileName":"AhoCorasicSearchProcessorFactory.java","id":"sourceFile"}
    int[] jumpTable -> jumpTable
    int[] matchForNeedleId -> matchForNeedleId
    long currentPosition -> currentPosition
    52:55:void <init>(int[],int[]) -> <init>
    59:64:boolean process(byte) -> process
    69:69:int getFoundNeedleId() -> getFoundNeedleId
    74:75:void reset() -> reset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.BitapSearchProcessorFactory -> pro.gravit.repackage.io.netty.buffer.search.BitapSearchProcessorFactory:
# {"fileName":"BitapSearchProcessorFactory.java","id":"sourceFile"}
    long[] bitMasks -> bitMasks
    long successBit -> successBit
    29:67:void <init>(byte[]) -> <init>
    74:74:pro.gravit.repackage.io.netty.buffer.search.BitapSearchProcessorFactory$Processor newSearchProcessor() -> newSearchProcessor
    27:27:pro.gravit.repackage.io.netty.buffer.search.SearchProcessor newSearchProcessor() -> newSearchProcessor
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.BitapSearchProcessorFactory$Processor -> pro.gravit.repackage.io.netty.buffer.search.BitapSearchProcessorFactory$Processor:
# {"fileName":"BitapSearchProcessorFactory.java","id":"sourceFile"}
    long[] bitMasks -> bitMasks
    long successBit -> successBit
    long currentMask -> currentMask
    38:41:void <init>(long[],long) -> <init>
    45:46:boolean process(byte) -> process
    51:52:void reset() -> reset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.KmpSearchProcessorFactory -> pro.gravit.repackage.io.netty.buffer.search.KmpSearchProcessorFactory:
# {"fileName":"KmpSearchProcessorFactory.java","id":"sourceFile"}
    int[] jumpTable -> jumpTable
    byte[] needle -> needle
    67:81:void <init>(byte[]) -> <init>
    88:88:pro.gravit.repackage.io.netty.buffer.search.KmpSearchProcessorFactory$Processor newSearchProcessor() -> newSearchProcessor
    29:29:pro.gravit.repackage.io.netty.buffer.search.SearchProcessor newSearchProcessor() -> newSearchProcessor
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.KmpSearchProcessorFactory$Processor -> pro.gravit.repackage.io.netty.buffer.search.KmpSearchProcessorFactory$Processor:
# {"fileName":"KmpSearchProcessorFactory.java","id":"sourceFile"}
    byte[] needle -> needle
    int[] jumpTable -> jumpTable
    long currentPosition -> currentPosition
    40:43:void <init>(byte[],int[]) -> <init>
    47:58:boolean process(byte) -> process
    63:64:void reset() -> reset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.MultiSearchProcessor -> pro.gravit.repackage.io.netty.buffer.search.MultiSearchProcessor:
# {"fileName":"MultiSearchProcessor.java","id":"sourceFile"}
    int getFoundNeedleId() -> getFoundNeedleId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.MultiSearchProcessorFactory -> pro.gravit.repackage.io.netty.buffer.search.MultiSearchProcessorFactory:
# {"fileName":"MultiSearchProcessorFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.search.MultiSearchProcessor newSearchProcessor() -> newSearchProcessor
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.SearchProcessor -> pro.gravit.repackage.io.netty.buffer.search.SearchProcessor:
# {"fileName":"SearchProcessor.java","id":"sourceFile"}
    void reset() -> reset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.buffer.search.SearchProcessorFactory -> pro.gravit.repackage.io.netty.buffer.search.SearchProcessorFactory:
# {"fileName":"SearchProcessorFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.search.SearchProcessor newSearchProcessor() -> newSearchProcessor
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel -> pro.gravit.repackage.io.netty.channel.AbstractChannel:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.channel.Channel parent -> parent
    pro.gravit.repackage.io.netty.channel.ChannelId id -> id
    pro.gravit.repackage.io.netty.channel.Channel$Unsafe unsafe -> unsafe
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    pro.gravit.repackage.io.netty.channel.VoidChannelPromise unsafeVoidPromise -> unsafeVoidPromise
    pro.gravit.repackage.io.netty.channel.AbstractChannel$CloseFuture closeFuture -> closeFuture
    java.net.SocketAddress localAddress -> localAddress
    java.net.SocketAddress remoteAddress -> remoteAddress
    pro.gravit.repackage.io.netty.channel.EventLoop eventLoop -> eventLoop
    boolean registered -> registered
    boolean closeInitiated -> closeInitiated
    java.lang.Throwable initialCloseCause -> initialCloseCause
    boolean strValActive -> strValActive
    java.lang.String strVal -> strVal
    51:76:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    51:89:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelId) -> <init>
    92:100:int maxMessagesPerWrite() -> maxMessagesPerWrite
    105:105:pro.gravit.repackage.io.netty.channel.ChannelId id() -> id
    113:113:pro.gravit.repackage.io.netty.channel.ChannelId newId() -> newId
    120:120:pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline newChannelPipeline() -> newChannelPipeline
    125:126:boolean isWritable() -> isWritable
    131:134:long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    139:142:long bytesBeforeWritable() -> bytesBeforeWritable
    147:147:pro.gravit.repackage.io.netty.channel.Channel parent() -> parent
    152:152:pro.gravit.repackage.io.netty.channel.ChannelPipeline pipeline() -> pipeline
    157:157:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    162:166:pro.gravit.repackage.io.netty.channel.EventLoop eventLoop() -> eventLoop
    171:182:java.net.SocketAddress localAddress() -> localAddress
    190:191:void invalidateLocalAddress() -> invalidateLocalAddress
    195:206:java.net.SocketAddress remoteAddress() -> remoteAddress
    214:215:void invalidateRemoteAddress() -> invalidateRemoteAddress
    219:219:boolean isRegistered() -> isRegistered
    224:224:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    229:229:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    234:234:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    239:239:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect() -> disconnect
    244:244:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    249:249:pro.gravit.repackage.io.netty.channel.ChannelFuture deregister() -> deregister
    254:255:pro.gravit.repackage.io.netty.channel.Channel flush() -> flush
    260:260:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    265:265:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    270:270:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    275:275:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    280:280:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    285:285:pro.gravit.repackage.io.netty.channel.ChannelFuture deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    290:291:pro.gravit.repackage.io.netty.channel.Channel read() -> read
    296:296:pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    301:301:pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    306:306:pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    311:311:pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writeAndFlush
    316:316:pro.gravit.repackage.io.netty.channel.ChannelPromise newPromise() -> newPromise
    321:321:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    326:326:pro.gravit.repackage.io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    331:331:pro.gravit.repackage.io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    336:336:pro.gravit.repackage.io.netty.channel.ChannelFuture closeFuture() -> closeFuture
    341:341:pro.gravit.repackage.io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    354:354:int hashCode() -> hashCode
    363:363:boolean equals(java.lang.Object) -> equals
    368:372:int compareTo(pro.gravit.repackage.io.netty.channel.Channel) -> compareTo
    383:418:java.lang.String toString() -> toString
    423:423:pro.gravit.repackage.io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    boolean isCompatible(pro.gravit.repackage.io.netty.channel.EventLoop) -> isCompatible
    java.net.SocketAddress localAddress0() -> localAddress0
    java.net.SocketAddress remoteAddress0() -> remoteAddress0
    1080:1080:void doRegister() -> doRegister
    void doBind(java.net.SocketAddress) -> doBind
    void doDisconnect() -> doDisconnect
    void doClose() -> doClose
    1103:1104:void doShutdownOutput() -> doShutdownOutput
    1113:1113:void doDeregister() -> doDeregister
    void doBeginRead() -> doBeginRead
    void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    1130:1130:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    1134:1135:void validateFileRegion(pro.gravit.repackage.io.netty.channel.DefaultFileRegion,long) -> validateFileRegion
    43:43:pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker flush() -> flush
    43:43:pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker read() -> read
    43:43:int compareTo(java.lang.Object) -> compareTo
    43:43:boolean access$000(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> access$000
    43:43:pro.gravit.repackage.io.netty.channel.EventLoop access$100(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> access$100
    43:43:pro.gravit.repackage.io.netty.channel.EventLoop access$102(pro.gravit.repackage.io.netty.channel.AbstractChannel,pro.gravit.repackage.io.netty.channel.EventLoop) -> access$102
    43:43:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    43:43:pro.gravit.repackage.io.netty.channel.AbstractChannel$CloseFuture access$400(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> access$400
    43:43:boolean access$002(pro.gravit.repackage.io.netty.channel.AbstractChannel,boolean) -> access$002
    43:43:pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline access$500(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> access$500
    43:43:java.net.SocketAddress access$602(pro.gravit.repackage.io.netty.channel.AbstractChannel,java.net.SocketAddress) -> access$602
    43:43:java.net.SocketAddress access$702(pro.gravit.repackage.io.netty.channel.AbstractChannel,java.net.SocketAddress) -> access$702
    43:43:boolean access$800(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> access$800
    43:43:boolean access$802(pro.gravit.repackage.io.netty.channel.AbstractChannel,boolean) -> access$802
    43:43:java.lang.Throwable access$1200(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> access$1200
    43:43:java.lang.Throwable access$1202(pro.gravit.repackage.io.netty.channel.AbstractChannel,java.lang.Throwable) -> access$1202
    43:43:pro.gravit.repackage.io.netty.channel.VoidChannelPromise access$1300(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> access$1300
    45:45:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer outboundBuffer -> outboundBuffer
    pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle recvHandle -> recvHandle
    boolean inFlush0 -> inFlush0
    boolean neverRegistered -> neverRegistered
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.AbstractChannel this$0 -> this$0
    429:435:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> <init>
    438:439:void assertEventLoop() -> assertEventLoop
    443:446:pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    451:451:pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
    456:456:java.net.SocketAddress localAddress() -> localAddress
    461:461:java.net.SocketAddress remoteAddress() -> remoteAddress
    466:498:void register(pro.gravit.repackage.io.netty.channel.EventLoop,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    504:537:void register0(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register0
    541:579:void bind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    583:612:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    616:621:void close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    629:631:void shutdownOutput(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownOutput
    639:668:void shutdownOutput(pro.gravit.repackage.io.netty.channel.ChannelPromise,java.lang.Throwable) -> shutdownOutput
    672:675:void closeOutboundBufferForShutdown(pro.gravit.repackage.io.netty.channel.ChannelPipeline,pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable) -> closeOutboundBufferForShutdown
    679:750:void close(pro.gravit.repackage.io.netty.channel.ChannelPromise,java.lang.Throwable,java.nio.channels.ClosedChannelException,boolean) -> close
    754:761:void doClose0(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> doClose0
    764:765:void fireChannelInactiveAndDeregister(boolean) -> fireChannelInactiveAndDeregister
    769:776:void closeForcibly() -> closeForcibly
    780:783:void deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    786:827:void deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise,boolean) -> deregister
    831:844:void beginRead() -> beginRead
    848:883:void write(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    887:896:void flush() -> flush
    900:937:void flush0() -> flush0
    940:959:void handleWriteError(java.lang.Throwable) -> handleWriteError
    962:967:java.nio.channels.ClosedChannelException newClosedChannelException(java.lang.Throwable,java.lang.String) -> newClosedChannelException
    972:974:pro.gravit.repackage.io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    978:983:boolean ensureOpen(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> ensureOpen
    990:993:void safeSetSuccess(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> safeSetSuccess
    999:1002:void safeSetFailure(pro.gravit.repackage.io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeSetFailure
    1005:1009:void closeIfClosed() -> closeIfClosed
    1024:1028:void invokeLater(java.lang.Runnable) -> invokeLater
    1034:1044:java.lang.Throwable annotateConnectException(java.lang.Throwable,java.net.SocketAddress) -> annotateConnectException
    1054:1054:java.util.concurrent.Executor prepareToClose() -> prepareToClose
    429:429:void access$200(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$200
    429:429:void access$900(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$900
    429:429:void access$1000(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,boolean) -> access$1000
    429:429:void access$1100(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,java.lang.Runnable) -> access$1100
    429:429:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$1 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$1:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    483:483:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    486:487:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$2 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$2:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    570:570:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    573:574:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$3 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$3:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    602:602:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe) -> <init>
    605:606:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$4 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$4:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    689:689:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    692:693:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    689:689:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$5 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$5:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer val$outboundBuffer -> val$outboundBuffer
    java.lang.Throwable val$cause -> val$cause
    boolean val$notify -> val$notify
    java.nio.channels.ClosedChannelException val$closeCause -> val$closeCause
    boolean val$wasActive -> val$wasActive
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    706:706:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable,boolean,java.nio.channels.ClosedChannelException,boolean) -> <init>
    711:726:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$5$1 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$5 this$2 -> this$2
    714:714:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$5) -> <init>
    717:723:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$6 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$6:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    boolean val$wasActive -> val$wasActive
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    740:740:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,boolean) -> <init>
    743:744:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$7 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$7:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    boolean val$fireChannelInactive -> val$fireChannelInactive
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    804:804:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,boolean,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    808:825:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$8 -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe$8:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    java.lang.Exception val$e -> val$e
    pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe this$1 -> this$1
    836:836:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe,java.lang.Exception) -> <init>
    839:840:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AnnotatedConnectException -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AnnotatedConnectException:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    1173:1175:void <init>(java.net.ConnectException,java.net.SocketAddress) -> <init>
    1180:1180:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AnnotatedNoRouteToHostException:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    1189:1191:void <init>(java.net.NoRouteToHostException,java.net.SocketAddress) -> <init>
    1196:1196:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$AnnotatedSocketException -> pro.gravit.repackage.io.netty.channel.AbstractChannel$AnnotatedSocketException:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    1205:1207:void <init>(java.net.SocketException,java.net.SocketAddress) -> <init>
    1212:1212:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannel$CloseFuture -> pro.gravit.repackage.io.netty.channel.AbstractChannel$CloseFuture:
# {"fileName":"AbstractChannel.java","id":"sourceFile"}
    1140:1141:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> <init>
    1145:1145:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    1150:1150:pro.gravit.repackage.io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    1155:1155:boolean trySuccess() -> trySuccess
    1160:1160:boolean tryFailure(java.lang.Throwable) -> tryFailure
    1164:1164:boolean setClosed() -> setClosed
    1137:1137:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext next -> next
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext prev -> prev
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater HANDLER_STATE_UPDATER -> HANDLER_STATE_UPDATER
    int ADD_PENDING -> ADD_PENDING
    int ADD_COMPLETE -> ADD_COMPLETE
    int REMOVE_COMPLETE -> REMOVE_COMPLETE
    int INIT -> INIT
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    java.lang.String name -> name
    boolean ordered -> ordered
    int executionMask -> executionMask
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    pro.gravit.repackage.io.netty.channel.ChannelFuture succeededFuture -> succeededFuture
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks invokeTasks -> invokeTasks
    int handlerState -> handlerState
    boolean $assertionsDisabled -> $assertionsDisabled
    102:112:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.String,java.lang.Class) -> <init>
    116:116:pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    121:121:pro.gravit.repackage.io.netty.channel.ChannelPipeline pipeline() -> pipeline
    126:126:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    131:134:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    140:140:java.lang.String name() -> name
    145:146:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    150:161:void invokeChannelRegistered(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelRegistered
    164:184:void invokeChannelRegistered() -> invokeChannelRegistered
    188:189:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    193:204:void invokeChannelUnregistered(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelUnregistered
    207:227:void invokeChannelUnregistered() -> invokeChannelUnregistered
    231:232:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    236:247:void invokeChannelActive(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelActive
    250:270:void invokeChannelActive() -> invokeChannelActive
    274:275:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    279:290:void invokeChannelInactive(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelInactive
    293:313:void invokeChannelInactive() -> invokeChannelInactive
    317:318:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    322:341:void invokeExceptionCaught(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> invokeExceptionCaught
    344:364:void invokeExceptionCaught(java.lang.Throwable) -> invokeExceptionCaught
    368:369:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    373:385:void invokeUserEventTriggered(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> invokeUserEventTriggered
    388:408:void invokeUserEventTriggered(java.lang.Object) -> invokeUserEventTriggered
    412:413:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    417:429:void invokeChannelRead(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> invokeChannelRead
    432:452:void invokeChannelRead(java.lang.Object) -> invokeChannelRead
    456:457:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    461:471:void invokeChannelReadComplete(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelReadComplete
    474:494:void invokeChannelReadComplete() -> invokeChannelReadComplete
    498:499:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    503:513:void invokeChannelWritabilityChanged(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> invokeChannelWritabilityChanged
    516:536:void invokeChannelWritabilityChanged() -> invokeChannelWritabilityChanged
    540:540:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    545:545:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    550:550:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    555:555:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect() -> disconnect
    560:560:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    565:565:pro.gravit.repackage.io.netty.channel.ChannelFuture deregister() -> deregister
    570:588:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    592:612:void invokeBind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> invokeBind
    616:616:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    622:641:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    645:665:void invokeConnect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> invokeConnect
    669:691:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    695:715:void invokeDisconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> invokeDisconnect
    719:737:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    741:761:void invokeClose(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> invokeClose
    765:783:pro.gravit.repackage.io.netty.channel.ChannelFuture deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    787:807:void invokeDeregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> invokeDeregister
    811:823:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext read() -> read
    827:847:void invokeRead() -> invokeRead
    851:851:pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    856:858:pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    862:867:void invokeWrite(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> invokeWrite
    874:886:void invokeWrite0(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> invokeWrite0
    890:902:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext flush() -> flush
    906:911:void invokeFlush() -> invokeFlush
    918:930:void invokeFlush0() -> invokeFlush0
    934:935:pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writeAndFlush
    939:945:void invokeWriteAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> invokeWriteAndFlush
    948:980:void write(java.lang.Object,boolean,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    984:984:pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    990:991:void notifyOutboundHandlerException(java.lang.Throwable,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> notifyOutboundHandlerException
    995:995:pro.gravit.repackage.io.netty.channel.ChannelPromise newPromise() -> newPromise
    1000:1000:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    1005:1009:pro.gravit.repackage.io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    1014:1014:pro.gravit.repackage.io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    1018:1049:boolean isNotValidPromise(pro.gravit.repackage.io.netty.channel.ChannelPromise,boolean) -> isNotValidPromise
    1053:1058:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext findContextInbound(int) -> findContextInbound
    1062:1067:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext findContextOutbound(int) -> findContextOutbound
    1073:1078:boolean skipContext(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,int,int) -> skipContext
    1083:1083:pro.gravit.repackage.io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    1087:1088:void setRemoved() -> setRemoved
    1092:1102:boolean setAddComplete() -> setAddComplete
    1106:1108:void setAddPending() -> setAddPending
    1113:1116:void callHandlerAdded() -> callHandlerAdded
    1121:1128:void callHandlerRemoved() -> callHandlerRemoved
    1140:1141:boolean invokeHandler() -> invokeHandler
    1146:1146:boolean isRemoved() -> isRemoved
    1151:1151:pro.gravit.repackage.io.netty.util.Attribute attr(pro.gravit.repackage.io.netty.util.AttributeKey) -> attr
    1156:1156:boolean hasAttr(pro.gravit.repackage.io.netty.util.AttributeKey) -> hasAttr
    1162:1176:boolean safeExecute(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Runnable,pro.gravit.repackage.io.netty.channel.ChannelPromise,java.lang.Object,boolean) -> safeExecute
    1182:1182:java.lang.String toHintString() -> toHintString
    1187:1187:java.lang.String toString() -> toString
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    61:61:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    61:61:pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker flush() -> flush
    61:61:pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker read() -> read
    61:61:void access$000(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$000
    61:61:void access$100(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$100
    61:61:void access$200(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$200
    61:61:void access$300(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$300
    61:61:void access$400(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> access$400
    61:61:void access$500(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> access$500
    61:61:void access$600(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> access$600
    61:61:void access$900(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$900
    61:61:void access$1000(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$1000
    61:61:void access$1100(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$1100
    61:61:void access$1200(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$1200
    61:61:void access$1300(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$1300
    61:61:pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline access$1700(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$1700
    61:61:void access$1900(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$1900
    61:61:void access$2000(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$2000
    61:61:void access$2100(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$2100
    61:61:void access$2200(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$2200
    61:68:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$1 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$1:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    154:154:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    157:158:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$10 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$10:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    684:684:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    687:688:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$11 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$11:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    729:729:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    732:733:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$12 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$12:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    775:775:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    778:779:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$2 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$2:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    197:197:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    200:201:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$3 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$3:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    240:240:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    243:244:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$4 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$4:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    283:283:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    286:287:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$5 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$5:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Throwable val$cause -> val$cause
    328:328:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Throwable) -> <init>
    331:332:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$6 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$6:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Object val$event -> val$event
    378:378:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> <init>
    381:382:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$7 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$7:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.lang.Object val$m -> val$m
    422:422:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Object) -> <init>
    425:426:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$8 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$8:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.net.SocketAddress val$localAddress -> val$localAddress
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    581:581:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    584:585:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$9 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$9:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$next -> val$next
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    java.net.SocketAddress val$localAddress -> val$localAddress
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext this$0 -> this$0
    634:634:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    637:638:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext next -> next
    java.lang.Runnable invokeChannelReadCompleteTask -> invokeChannelReadCompleteTask
    java.lang.Runnable invokeReadTask -> invokeReadTask
    java.lang.Runnable invokeChannelWritableStateChangedTask -> invokeChannelWritableStateChangedTask
    java.lang.Runnable invokeFlushTask -> invokeFlushTask
    1279:1306:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    1277:1277:java.lang.Runnable access$700(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> access$700
    1277:1277:java.lang.Runnable access$800(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> access$800
    1277:1277:java.lang.Runnable access$1400(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> access$1400
    1277:1277:java.lang.Runnable access$1500(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> access$1500
    1277:1277:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext access$1800(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> access$1800
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks$1 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks$1:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks this$0 -> this$0
    1279:1279:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> <init>
    1282:1283:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks$2 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks$2:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks this$0 -> this$0
    1285:1285:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> <init>
    1288:1289:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks$3 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks$3:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks this$0 -> this$0
    1291:1291:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> <init>
    1294:1295:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks$4 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks$4:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks this$0 -> this$0
    1297:1297:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$Tasks) -> <init>
    1300:1301:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$WriteTask -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$WriteTask:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    boolean ESTIMATE_TASK_SIZE_ON_SUBMIT -> ESTIMATE_TASK_SIZE_ON_SUBMIT
    int WRITE_TASK_OVERHEAD -> WRITE_TASK_OVERHEAD
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle handle -> handle
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext ctx -> ctx
    java.lang.Object msg -> msg
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    int size -> size
    1200:1202:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$WriteTask newInstance(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise,boolean) -> newInstance
    1219:1221:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    1225:1238:void init(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$WriteTask,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise,boolean) -> init
    1243:1252:void run() -> run
    1256:1260:void cancel() -> cancel
    1263:1266:void decrementPendingOutboundBytes() -> decrementPendingOutboundBytes
    1270:1274:void recycle() -> recycle
    1190:1190:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$1) -> <init>
    1191:1210:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$WriteTask$1 -> pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$WriteTask$1:
# {"fileName":"AbstractChannelHandlerContext.java","id":"sourceFile"}
    1191:1191:void <init>() -> <init>
    1194:1194:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext$WriteTask newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    1191:1191:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractCoalescingBufferQueue -> pro.gravit.repackage.io.netty.channel.AbstractCoalescingBufferQueue:
# {"fileName":"AbstractCoalescingBufferQueue.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.ArrayDeque bufAndListenerPairs -> bufAndListenerPairs
    pro.gravit.repackage.io.netty.channel.PendingBytesTracker tracker -> tracker
    int readableBytes -> readableBytes
    boolean $assertionsDisabled -> $assertionsDisabled
    45:48:void <init>(pro.gravit.repackage.io.netty.channel.Channel,int) -> <init>
    57:58:void addFirst(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> addFirst
    61:66:void addFirst(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.channel.ChannelFutureListener) -> addFirst
    72:73:void add(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> add
    84:85:void add(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> add
    96:101:void add(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.channel.ChannelFutureListener) -> add
    109:123:pro.gravit.repackage.io.netty.buffer.ByteBuf removeFirst(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> removeFirst
    138:187:pro.gravit.repackage.io.netty.buffer.ByteBuf remove(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> remove
    194:194:int readableBytes() -> readableBytes
    201:201:boolean isEmpty() -> isEmpty
    208:209:void releaseAndFailAll(pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker,java.lang.Throwable) -> releaseAndFailAll
    216:218:void copyTo(pro.gravit.repackage.io.netty.channel.AbstractCoalescingBufferQueue) -> copyTo
    225:264:void writeAndRemoveAll(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> writeAndRemoveAll
    268:268:java.lang.String toString() -> toString
    pro.gravit.repackage.io.netty.buffer.ByteBuf compose(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compose
    282:291:pro.gravit.repackage.io.netty.buffer.ByteBuf composeIntoComposite(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> composeIntoComposite
    302:312:pro.gravit.repackage.io.netty.buffer.ByteBuf copyAndCompose(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> copyAndCompose
    320:320:pro.gravit.repackage.io.netty.buffer.ByteBuf composeFirst(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> composeFirst
    pro.gravit.repackage.io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
    334:334:int size() -> size
    338:363:void releaseAndCompleteAll(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> releaseAndCompleteAll
    366:374:void incrementReadableBytes(int) -> incrementReadableBytes
    377:382:void decrementReadableBytes(int) -> decrementReadableBytes
    385:385:pro.gravit.repackage.io.netty.channel.ChannelFutureListener toChannelFutureListener(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> toChannelFutureListener
    31:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractEventLoop -> pro.gravit.repackage.io.netty.channel.AbstractEventLoop:
# {"fileName":"AbstractEventLoop.java","id":"sourceFile"}
    26:26:void <init>() -> <init>
    29:30:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup) -> <init>
    34:34:pro.gravit.repackage.io.netty.channel.EventLoopGroup parent() -> parent
    39:39:pro.gravit.repackage.io.netty.channel.EventLoop next() -> next
    24:24:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    24:24:pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractEventLoopGroup -> pro.gravit.repackage.io.netty.channel.AbstractEventLoopGroup:
# {"fileName":"AbstractEventLoopGroup.java","id":"sourceFile"}
    24:24:void <init>() -> <init>
    pro.gravit.repackage.io.netty.channel.EventLoop next() -> next
    24:24:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractServerChannel -> pro.gravit.repackage.io.netty.channel.AbstractServerChannel:
# {"fileName":"AbstractServerChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    38:39:void <init>() -> <init>
    43:43:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    48:48:java.net.SocketAddress remoteAddress() -> remoteAddress
    53:53:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    58:58:void doDisconnect() -> doDisconnect
    63:63:pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    68:68:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    73:73:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    32:32:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractServerChannel$1 -> pro.gravit.repackage.io.netty.channel.AbstractServerChannel$1:
# {"fileName":"AbstractServerChannel.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AbstractServerChannel$DefaultServerUnsafe -> pro.gravit.repackage.io.netty.channel.AbstractServerChannel$DefaultServerUnsafe:
# {"fileName":"AbstractServerChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractServerChannel this$0 -> this$0
    76:76:void <init>(pro.gravit.repackage.io.netty.channel.AbstractServerChannel) -> <init>
    79:80:void connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    76:76:void <init>(pro.gravit.repackage.io.netty.channel.AbstractServerChannel,pro.gravit.repackage.io.netty.channel.AbstractServerChannel$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AdaptiveRecvByteBufAllocator -> pro.gravit.repackage.io.netty.channel.AdaptiveRecvByteBufAllocator:
# {"fileName":"AdaptiveRecvByteBufAllocator.java","id":"sourceFile"}
    int DEFAULT_MINIMUM -> DEFAULT_MINIMUM
    int DEFAULT_INITIAL -> DEFAULT_INITIAL
    int DEFAULT_MAXIMUM -> DEFAULT_MAXIMUM
    int INDEX_INCREMENT -> INDEX_INCREMENT
    int INDEX_DECREMENT -> INDEX_DECREMENT
    int[] SIZE_TABLE -> SIZE_TABLE
    pro.gravit.repackage.io.netty.channel.AdaptiveRecvByteBufAllocator DEFAULT -> DEFAULT
    int minIndex -> minIndex
    int maxIndex -> maxIndex
    int initial -> initial
    71:91:int getSizeTableIndex(int) -> getSizeTableIndex
    158:159:void <init>() -> <init>
    168:192:void <init>(int,int,int) -> <init>
    197:197:pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    202:203:pro.gravit.repackage.io.netty.channel.AdaptiveRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    35:35:pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    35:35:int access$000(int) -> access$000
    35:35:int[] access$100() -> access$100
    48:68:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl -> pro.gravit.repackage.io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl:
# {"fileName":"AdaptiveRecvByteBufAllocator.java","id":"sourceFile"}
    int minIndex -> minIndex
    int maxIndex -> maxIndex
    int index -> index
    int nextReceiveBufferSize -> nextReceiveBufferSize
    boolean decreaseNow -> decreaseNow
    pro.gravit.repackage.io.netty.channel.AdaptiveRecvByteBufAllocator this$0 -> this$0
    101:107:void <init>(pro.gravit.repackage.io.netty.channel.AdaptiveRecvByteBufAllocator,int,int,int) -> <init>
    115:119:void lastBytesRead(int) -> lastBytesRead
    123:123:int guess() -> guess
    127:140:void record(int) -> record
    144:145:void readComplete() -> readComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.AddressedEnvelope -> pro.gravit.repackage.io.netty.channel.AddressedEnvelope:
# {"fileName":"AddressedEnvelope.java","id":"sourceFile"}
    java.lang.Object content() -> content
    java.net.SocketAddress sender() -> sender
    java.net.SocketAddress recipient() -> recipient
    pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain() -> retain
    pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain(int) -> retain
    pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch() -> touch
    pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.Channel -> pro.gravit.repackage.io.netty.channel.Channel:
# {"fileName":"Channel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelId id() -> id
    pro.gravit.repackage.io.netty.channel.EventLoop eventLoop() -> eventLoop
    pro.gravit.repackage.io.netty.channel.Channel parent() -> parent
    pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    boolean isOpen() -> isOpen
    boolean isRegistered() -> isRegistered
    boolean isActive() -> isActive
    pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    java.net.SocketAddress localAddress() -> localAddress
    java.net.SocketAddress remoteAddress() -> remoteAddress
    pro.gravit.repackage.io.netty.channel.ChannelFuture closeFuture() -> closeFuture
    boolean isWritable() -> isWritable
    long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    long bytesBeforeWritable() -> bytesBeforeWritable
    pro.gravit.repackage.io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    pro.gravit.repackage.io.netty.channel.ChannelPipeline pipeline() -> pipeline
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    pro.gravit.repackage.io.netty.channel.Channel read() -> read
    pro.gravit.repackage.io.netty.channel.Channel flush() -> flush
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.Channel$Unsafe -> pro.gravit.repackage.io.netty.channel.Channel$Unsafe:
# {"fileName":"Channel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    java.net.SocketAddress localAddress() -> localAddress
    java.net.SocketAddress remoteAddress() -> remoteAddress
    void register(pro.gravit.repackage.io.netty.channel.EventLoop,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    void bind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    void connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    void disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    void close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    void closeForcibly() -> closeForcibly
    void deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    void beginRead() -> beginRead
    void write(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    void flush() -> flush
    pro.gravit.repackage.io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelConfig -> pro.gravit.repackage.io.netty.channel.ChannelConfig:
# {"fileName":"ChannelConfig.java","id":"sourceFile"}
    java.util.Map getOptions() -> getOptions
    boolean setOptions(java.util.Map) -> setOptions
    java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    int getMaxMessagesPerRead() -> getMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    int getWriteSpinCount() -> getWriteSpinCount
    pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator getAllocator() -> getAllocator
    pro.gravit.repackage.io.netty.channel.ChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator getRecvByteBufAllocator() -> getRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.ChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    boolean isAutoRead() -> isAutoRead
    pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    boolean isAutoClose() -> isAutoClose
    pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    int getWriteBufferHighWaterMark() -> getWriteBufferHighWaterMark
    pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    int getWriteBufferLowWaterMark() -> getWriteBufferLowWaterMark
    pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    pro.gravit.repackage.io.netty.channel.MessageSizeEstimator getMessageSizeEstimator() -> getMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.ChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark getWriteBufferWaterMark() -> getWriteBufferWaterMark
    pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelDuplexHandler -> pro.gravit.repackage.io.netty.channel.ChannelDuplexHandler:
# {"fileName":"ChannelDuplexHandler.java","id":"sourceFile"}
    29:29:void <init>() -> <init>
    41:42:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    54:55:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    67:68:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    79:80:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    91:92:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    103:104:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    115:116:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    127:128:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelException -> pro.gravit.repackage.io.netty.channel.ChannelException:
# {"fileName":"ChannelException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    boolean $assertionsDisabled -> $assertionsDisabled
    33:34:void <init>() -> <init>
    40:41:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    47:48:void <init>(java.lang.String) -> <init>
    54:55:void <init>(java.lang.Throwable) -> <init>
    61:63:void <init>(java.lang.String,java.lang.Throwable,boolean) -> <init>
    67:72:pro.gravit.repackage.io.netty.channel.ChannelException newStatic(java.lang.String,java.lang.Class,java.lang.String) -> newStatic
    26:26:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelException$StacklessChannelException -> pro.gravit.repackage.io.netty.channel.ChannelException$StacklessChannelException:
# {"fileName":"ChannelException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    79:80:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    83:84:void <init>(java.lang.String,java.lang.Throwable,boolean) -> <init>
    91:91:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFactory -> pro.gravit.repackage.io.netty.channel.ChannelFactory:
# {"fileName":"ChannelFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel newChannel() -> newChannel
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier -> pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier:
# {"fileName":"ChannelFlushPromiseNotifier.java","id":"sourceFile"}
    long writeCounter -> writeCounter
    java.util.Queue flushCheckpoints -> flushCheckpoints
    boolean tryNotify -> tryNotify
    32:45:void <init>(boolean) -> <init>
    52:53:void <init>() -> <init>
    60:60:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier add(pro.gravit.repackage.io.netty.channel.ChannelPromise,int) -> add
    68:78:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier add(pro.gravit.repackage.io.netty.channel.ChannelPromise,long) -> add
    84:86:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier increaseWriteCounter(long) -> increaseWriteCounter
    93:93:long writeCounter() -> writeCounter
    104:105:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier notifyPromises() -> notifyPromises
    113:113:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures() -> notifyFlushFutures
    128:140:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier notifyPromises(java.lang.Throwable) -> notifyPromises
    148:148:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures(java.lang.Throwable) -> notifyFlushFutures
    168:180:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier notifyPromises(java.lang.Throwable,java.lang.Throwable) -> notifyPromises
    188:188:pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier notifyFlushFutures(java.lang.Throwable,java.lang.Throwable) -> notifyFlushFutures
    192:241:void notifyPromises0(java.lang.Throwable) -> notifyPromises0
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint -> pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier$DefaultFlushCheckpoint:
# {"fileName":"ChannelFlushPromiseNotifier.java","id":"sourceFile"}
    long checkpoint -> checkpoint
    pro.gravit.repackage.io.netty.channel.ChannelPromise future -> future
    253:256:void <init>(long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    260:260:long flushCheckpoint() -> flushCheckpoint
    265:266:void flushCheckpoint(long) -> flushCheckpoint
    270:270:pro.gravit.repackage.io.netty.channel.ChannelPromise promise() -> promise
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint -> pro.gravit.repackage.io.netty.channel.ChannelFlushPromiseNotifier$FlushCheckpoint:
# {"fileName":"ChannelFlushPromiseNotifier.java","id":"sourceFile"}
    long flushCheckpoint() -> flushCheckpoint
    void flushCheckpoint(long) -> flushCheckpoint
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise() -> promise
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFuture -> pro.gravit.repackage.io.netty.channel.ChannelFuture:
# {"fileName":"ChannelFuture.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    pro.gravit.repackage.io.netty.channel.ChannelFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.channel.ChannelFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.channel.ChannelFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.channel.ChannelFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.channel.ChannelFuture sync() -> sync
    pro.gravit.repackage.io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    pro.gravit.repackage.io.netty.channel.ChannelFuture await() -> await
    pro.gravit.repackage.io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    boolean isVoid() -> isVoid
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFutureListener -> pro.gravit.repackage.io.netty.channel.ChannelFutureListener:
# {"fileName":"ChannelFutureListener.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener CLOSE -> CLOSE
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener CLOSE_ON_FAILURE -> CLOSE_ON_FAILURE
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener FIRE_EXCEPTION_ON_FAILURE -> FIRE_EXCEPTION_ON_FAILURE
    41:65:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFutureListener$1 -> pro.gravit.repackage.io.netty.channel.ChannelFutureListener$1:
# {"fileName":"ChannelFutureListener.java","id":"sourceFile"}
    41:41:void <init>() -> <init>
    44:45:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    41:41:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFutureListener$2 -> pro.gravit.repackage.io.netty.channel.ChannelFutureListener$2:
# {"fileName":"ChannelFutureListener.java","id":"sourceFile"}
    52:52:void <init>() -> <init>
    55:58:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    52:52:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelFutureListener$3 -> pro.gravit.repackage.io.netty.channel.ChannelFutureListener$3:
# {"fileName":"ChannelFutureListener.java","id":"sourceFile"}
    65:65:void <init>() -> <init>
    68:71:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    65:65:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelHandler -> pro.gravit.repackage.io.netty.channel.ChannelHandler:
# {"fileName":"ChannelHandler.java","id":"sourceFile"}
    void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelHandler$Sharable -> pro.gravit.repackage.io.netty.channel.ChannelHandler$Sharable:
# {"fileName":"ChannelHandler.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelHandlerAdapter -> pro.gravit.repackage.io.netty.channel.ChannelHandlerAdapter:
# {"fileName":"ChannelHandlerAdapter.java","id":"sourceFile"}
    boolean added -> added
    27:27:void <init>() -> <init>
    36:39:void ensureNotSharable() -> ensureNotSharable
    54:61:boolean isSharable() -> isSharable
    70:70:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    78:78:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    92:93:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelHandlerContext -> pro.gravit.repackage.io.netty.channel.ChannelHandlerContext:
# {"fileName":"ChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    java.lang.String name() -> name
    pro.gravit.repackage.io.netty.channel.ChannelHandler handler() -> handler
    boolean isRemoved() -> isRemoved
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext read() -> read
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext flush() -> flush
    pro.gravit.repackage.io.netty.channel.ChannelPipeline pipeline() -> pipeline
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    pro.gravit.repackage.io.netty.util.Attribute attr(pro.gravit.repackage.io.netty.util.AttributeKey) -> attr
    boolean hasAttr(pro.gravit.repackage.io.netty.util.AttributeKey) -> hasAttr
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelHandlerMask -> pro.gravit.repackage.io.netty.channel.ChannelHandlerMask:
# {"fileName":"ChannelHandlerMask.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int MASK_EXCEPTION_CAUGHT -> MASK_EXCEPTION_CAUGHT
    int MASK_CHANNEL_REGISTERED -> MASK_CHANNEL_REGISTERED
    int MASK_CHANNEL_UNREGISTERED -> MASK_CHANNEL_UNREGISTERED
    int MASK_CHANNEL_ACTIVE -> MASK_CHANNEL_ACTIVE
    int MASK_CHANNEL_INACTIVE -> MASK_CHANNEL_INACTIVE
    int MASK_CHANNEL_READ -> MASK_CHANNEL_READ
    int MASK_CHANNEL_READ_COMPLETE -> MASK_CHANNEL_READ_COMPLETE
    int MASK_USER_EVENT_TRIGGERED -> MASK_USER_EVENT_TRIGGERED
    int MASK_CHANNEL_WRITABILITY_CHANGED -> MASK_CHANNEL_WRITABILITY_CHANGED
    int MASK_BIND -> MASK_BIND
    int MASK_CONNECT -> MASK_CONNECT
    int MASK_DISCONNECT -> MASK_DISCONNECT
    int MASK_CLOSE -> MASK_CLOSE
    int MASK_DEREGISTER -> MASK_DEREGISTER
    int MASK_READ -> MASK_READ
    int MASK_WRITE -> MASK_WRITE
    int MASK_FLUSH -> MASK_FLUSH
    int MASK_ONLY_INBOUND -> MASK_ONLY_INBOUND
    int MASK_ALL_INBOUND -> MASK_ALL_INBOUND
    int MASK_ONLY_OUTBOUND -> MASK_ONLY_OUTBOUND
    int MASK_ALL_OUTBOUND -> MASK_ALL_OUTBOUND
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal MASKS -> MASKS
    79:85:int mask(java.lang.Class) -> mask
    92:163:int mask0(java.lang.Class) -> mask0
    169:169:boolean isSkippable(java.lang.Class,java.lang.String,java.lang.Class[]) -> isSkippable
    187:187:void <init>() -> <init>
    35:35:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    36:65:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelHandlerMask$1 -> pro.gravit.repackage.io.netty.channel.ChannelHandlerMask$1:
# {"fileName":"ChannelHandlerMask.java","id":"sourceFile"}
    66:66:void <init>() -> <init>
    69:69:java.util.Map initialValue() -> initialValue
    66:66:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelHandlerMask$2 -> pro.gravit.repackage.io.netty.channel.ChannelHandlerMask$2:
# {"fileName":"ChannelHandlerMask.java","id":"sourceFile"}
    java.lang.Class val$handlerType -> val$handlerType
    java.lang.String val$methodName -> val$methodName
    java.lang.Class[] val$paramTypes -> val$paramTypes
    169:169:void <init>(java.lang.Class,java.lang.String,java.lang.Class[]) -> <init>
    174:182:java.lang.Boolean run() -> run
    169:169:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelHandlerMask$Skip -> pro.gravit.repackage.io.netty.channel.ChannelHandlerMask$Skip:
# {"fileName":"ChannelHandlerMask.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelId -> pro.gravit.repackage.io.netty.channel.ChannelId:
# {"fileName":"ChannelId.java","id":"sourceFile"}
    java.lang.String asShortText() -> asShortText
    java.lang.String asLongText() -> asLongText
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelInboundHandler -> pro.gravit.repackage.io.netty.channel.ChannelInboundHandler:
# {"fileName":"ChannelInboundHandler.java","id":"sourceFile"}
    void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    void channelUnregistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelInboundHandlerAdapter -> pro.gravit.repackage.io.netty.channel.ChannelInboundHandlerAdapter:
# {"fileName":"ChannelInboundHandlerAdapter.java","id":"sourceFile"}
    34:34:void <init>() -> <init>
    45:46:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    57:58:void channelUnregistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    69:70:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    81:82:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    93:94:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    105:106:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    117:118:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    129:130:void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    143:144:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker -> pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker:
# {"fileName":"ChannelInboundInvoker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelInitializer -> pro.gravit.repackage.io.netty.channel.ChannelInitializer:
# {"fileName":"ChannelInitializer.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Set initMap -> initMap
    54:59:void <init>() -> <init>
    void initChannel(pro.gravit.repackage.io.netty.channel.Channel) -> initChannel
    78:89:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    96:100:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    107:118:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    122:123:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    127:141:boolean initChannel(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> initChannel
    146:158:void removeState(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> removeState
    54:54:java.util.Set access$000(pro.gravit.repackage.io.netty.channel.ChannelInitializer) -> access$000
    56:56:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelInitializer$1 -> pro.gravit.repackage.io.netty.channel.ChannelInitializer$1:
# {"fileName":"ChannelInitializer.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelInitializer this$0 -> this$0
    151:151:void <init>(pro.gravit.repackage.io.netty.channel.ChannelInitializer,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    154:155:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelMetadata -> pro.gravit.repackage.io.netty.channel.ChannelMetadata:
# {"fileName":"ChannelMetadata.java","id":"sourceFile"}
    boolean hasDisconnect -> hasDisconnect
    int defaultMaxMessagesPerRead -> defaultMaxMessagesPerRead
    38:39:void <init>(boolean) -> <init>
    50:54:void <init>(boolean,int) -> <init>
    62:62:boolean hasDisconnect() -> hasDisconnect
    70:70:int defaultMaxMessagesPerRead() -> defaultMaxMessagesPerRead
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOption -> pro.gravit.repackage.io.netty.channel.ChannelOption:
# {"fileName":"ChannelOption.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ConstantPool pool -> pool
    pro.gravit.repackage.io.netty.channel.ChannelOption ALLOCATOR -> ALLOCATOR
    pro.gravit.repackage.io.netty.channel.ChannelOption RCVBUF_ALLOCATOR -> RCVBUF_ALLOCATOR
    pro.gravit.repackage.io.netty.channel.ChannelOption MESSAGE_SIZE_ESTIMATOR -> MESSAGE_SIZE_ESTIMATOR
    pro.gravit.repackage.io.netty.channel.ChannelOption CONNECT_TIMEOUT_MILLIS -> CONNECT_TIMEOUT_MILLIS
    pro.gravit.repackage.io.netty.channel.ChannelOption MAX_MESSAGES_PER_READ -> MAX_MESSAGES_PER_READ
    pro.gravit.repackage.io.netty.channel.ChannelOption MAX_MESSAGES_PER_WRITE -> MAX_MESSAGES_PER_WRITE
    pro.gravit.repackage.io.netty.channel.ChannelOption WRITE_SPIN_COUNT -> WRITE_SPIN_COUNT
    pro.gravit.repackage.io.netty.channel.ChannelOption WRITE_BUFFER_HIGH_WATER_MARK -> WRITE_BUFFER_HIGH_WATER_MARK
    pro.gravit.repackage.io.netty.channel.ChannelOption WRITE_BUFFER_LOW_WATER_MARK -> WRITE_BUFFER_LOW_WATER_MARK
    pro.gravit.repackage.io.netty.channel.ChannelOption WRITE_BUFFER_WATER_MARK -> WRITE_BUFFER_WATER_MARK
    pro.gravit.repackage.io.netty.channel.ChannelOption ALLOW_HALF_CLOSURE -> ALLOW_HALF_CLOSURE
    pro.gravit.repackage.io.netty.channel.ChannelOption AUTO_READ -> AUTO_READ
    pro.gravit.repackage.io.netty.channel.ChannelOption AUTO_CLOSE -> AUTO_CLOSE
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_BROADCAST -> SO_BROADCAST
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_KEEPALIVE -> SO_KEEPALIVE
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_SNDBUF -> SO_SNDBUF
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_RCVBUF -> SO_RCVBUF
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_REUSEADDR -> SO_REUSEADDR
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_LINGER -> SO_LINGER
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_BACKLOG -> SO_BACKLOG
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_TIMEOUT -> SO_TIMEOUT
    pro.gravit.repackage.io.netty.channel.ChannelOption IP_TOS -> IP_TOS
    pro.gravit.repackage.io.netty.channel.ChannelOption IP_MULTICAST_ADDR -> IP_MULTICAST_ADDR
    pro.gravit.repackage.io.netty.channel.ChannelOption IP_MULTICAST_IF -> IP_MULTICAST_IF
    pro.gravit.repackage.io.netty.channel.ChannelOption IP_MULTICAST_TTL -> IP_MULTICAST_TTL
    pro.gravit.repackage.io.netty.channel.ChannelOption IP_MULTICAST_LOOP_DISABLED -> IP_MULTICAST_LOOP_DISABLED
    pro.gravit.repackage.io.netty.channel.ChannelOption TCP_NODELAY -> TCP_NODELAY
    pro.gravit.repackage.io.netty.channel.ChannelOption TCP_FASTOPEN_CONNECT -> TCP_FASTOPEN_CONNECT
    pro.gravit.repackage.io.netty.channel.ChannelOption TCP_FASTOPEN -> TCP_FASTOPEN
    pro.gravit.repackage.io.netty.channel.ChannelOption DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION -> DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION
    pro.gravit.repackage.io.netty.channel.ChannelOption SINGLE_EVENTEXECUTOR_PER_GROUP -> SINGLE_EVENTEXECUTOR_PER_GROUP
    48:48:pro.gravit.repackage.io.netty.channel.ChannelOption valueOf(java.lang.String) -> valueOf
    56:56:pro.gravit.repackage.io.netty.channel.ChannelOption valueOf(java.lang.Class,java.lang.String) -> valueOf
    63:63:boolean exists(java.lang.String) -> exists
    75:75:pro.gravit.repackage.io.netty.channel.ChannelOption newInstance(java.lang.String) -> newInstance
    151:152:void <init>(int,java.lang.String) -> <init>
    156:157:void <init>(java.lang.String) -> <init>
    164:165:void validate(java.lang.Object) -> validate
    34:34:void <init>(int,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelOption$1) -> <init>
    36:145:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOption$1 -> pro.gravit.repackage.io.netty.channel.ChannelOption$1:
# {"fileName":"ChannelOption.java","id":"sourceFile"}
    36:36:void <init>() -> <init>
    39:39:pro.gravit.repackage.io.netty.channel.ChannelOption newConstant(int,java.lang.String) -> newConstant
    36:36:pro.gravit.repackage.io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer -> pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer:
# {"fileName":"ChannelOutboundBuffer.java","id":"sourceFile"}
    int CHANNEL_OUTBOUND_BUFFER_ENTRY_OVERHEAD -> CHANNEL_OUTBOUND_BUFFER_ENTRY_OVERHEAD
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal NIO_BUFFERS -> NIO_BUFFERS
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry flushedEntry -> flushedEntry
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry unflushedEntry -> unflushedEntry
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry tailEntry -> tailEntry
    int flushed -> flushed
    int nioBufferCount -> nioBufferCount
    long nioBufferSize -> nioBufferSize
    boolean inFail -> inFail
    java.util.concurrent.atomic.AtomicLongFieldUpdater TOTAL_PENDING_SIZE_UPDATER -> TOTAL_PENDING_SIZE_UPDATER
    long totalPendingSize -> totalPendingSize
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater UNWRITABLE_UPDATER -> UNWRITABLE_UPDATER
    int unwritable -> unwritable
    java.lang.Runnable fireChannelWritabilityChangedTask -> fireChannelWritabilityChangedTask
    boolean $assertionsDisabled -> $assertionsDisabled
    106:108:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannel) -> <init>
    115:130:void addMessage(java.lang.Object,int,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> addMessage
    141:160:void addFlush() -> addFlush
    167:168:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    171:179:void incrementPendingOutboundBytes(long,boolean) -> incrementPendingOutboundBytes
    186:187:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    190:198:void decrementPendingOutboundBytes(long,boolean,boolean) -> decrementPendingOutboundBytes
    201:210:long total(java.lang.Object) -> total
    217:222:java.lang.Object current() -> current
    230:234:long currentProgress() -> currentProgress
    241:249:void progress(long) -> progress
    257:279:boolean remove() -> remove
    288:288:boolean remove(java.lang.Throwable) -> remove
    292:315:boolean remove0(java.lang.Throwable,boolean) -> remove0
    319:329:void removeEntry(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry) -> removeEntry
    337:362:void removeBytes(long) -> removeBytes
    367:372:void clearNioBuffers() -> clearNioBuffers
    385:385:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    403:465:java.nio.ByteBuffer[] nioBuffers(int,long) -> nioBuffers
    469:484:int nioBuffers(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.nio.ByteBuffer[],int,int) -> nioBuffers
    488:503:java.nio.ByteBuffer[] expandNioBufferArray(java.nio.ByteBuffer[],int,int) -> expandNioBufferArray
    512:512:int nioBufferCount() -> nioBufferCount
    521:521:long nioBufferSize() -> nioBufferSize
    531:531:boolean isWritable() -> isWritable
    539:539:boolean getUserDefinedWritability(int) -> getUserDefinedWritability
    546:551:void setUserDefinedWritability(int,boolean) -> setUserDefinedWritability
    554:565:void setUserDefinedWritability(int) -> setUserDefinedWritability
    568:579:void clearUserDefinedWritability(int) -> clearUserDefinedWritability
    582:585:int writabilityMask(int) -> writabilityMask
    590:599:void setWritable(boolean) -> setWritable
    603:612:void setUnwritable(boolean) -> setUnwritable
    615:630:void fireChannelWritabilityChanged(boolean) -> fireChannelWritabilityChanged
    636:636:int size() -> size
    644:644:boolean isEmpty() -> isEmpty
    653:667:void failFlushed(java.lang.Throwable,boolean) -> failFlushed
    670:708:void close(java.lang.Throwable,boolean) -> close
    711:712:void close(java.nio.channels.ClosedChannelException) -> close
    717:718:void safeSuccess(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> safeSuccess
    723:724:void safeFail(pro.gravit.repackage.io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeFail
    729:729:void recycle() -> recycle
    732:732:long totalPendingWriteBytes() -> totalPendingWriteBytes
    740:747:long bytesBeforeUnwritable() -> bytesBeforeUnwritable
    755:762:long bytesBeforeWritable() -> bytesBeforeWritable
    771:786:void forEachFlushedMessage(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$MessageProcessor) -> forEachFlushedMessage
    789:789:boolean isFlushedEntry(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry) -> isFlushedEntry
    54:99:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$1 -> pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$1:
# {"fileName":"ChannelOutboundBuffer.java","id":"sourceFile"}
    67:67:void <init>() -> <init>
    70:70:java.nio.ByteBuffer[] initialValue() -> initialValue
    67:67:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$2 -> pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$2:
# {"fileName":"ChannelOutboundBuffer.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPipeline val$pipeline -> val$pipeline
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer this$0 -> this$0
    619:619:void <init>(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer,pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> <init>
    622:623:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$3 -> pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$3:
# {"fileName":"ChannelOutboundBuffer.java","id":"sourceFile"}
    java.lang.Throwable val$cause -> val$cause
    boolean val$allowChannelOpen -> val$allowChannelOpen
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer this$0 -> this$0
    671:671:void <init>(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer,java.lang.Throwable,boolean) -> <init>
    674:675:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry -> pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry:
# {"fileName":"ChannelOutboundBuffer.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle handle -> handle
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry next -> next
    java.lang.Object msg -> msg
    java.nio.ByteBuffer[] bufs -> bufs
    java.nio.ByteBuffer buf -> buf
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    long progress -> progress
    long total -> total
    int pendingSize -> pendingSize
    int count -> count
    boolean cancelled -> cancelled
    817:822:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    825:830:pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry newInstance(java.lang.Object,int,long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> newInstance
    834:849:int cancel() -> cancel
    853:864:void recycle() -> recycle
    867:869:pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry recycleAndGetNext() -> recycleAndGetNext
    800:800:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$1) -> <init>
    801:801:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry$1 -> pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry$1:
# {"fileName":"ChannelOutboundBuffer.java","id":"sourceFile"}
    801:801:void <init>() -> <init>
    804:804:pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$Entry newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    801:801:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$MessageProcessor -> pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer$MessageProcessor:
# {"fileName":"ChannelOutboundBuffer.java","id":"sourceFile"}
    boolean processMessage(java.lang.Object) -> processMessage
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundHandler -> pro.gravit.repackage.io.netty.channel.ChannelOutboundHandler:
# {"fileName":"ChannelOutboundHandler.java","id":"sourceFile"}
    void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundHandlerAdapter -> pro.gravit.repackage.io.netty.channel.ChannelOutboundHandlerAdapter:
# {"fileName":"ChannelOutboundHandlerAdapter.java","id":"sourceFile"}
    26:26:void <init>() -> <init>
    38:39:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    51:52:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    64:65:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    77:78:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    89:90:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    101:102:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    113:114:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    125:126:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker -> pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker:
# {"fileName":"ChannelOutboundInvoker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect() -> disconnect
    pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    pro.gravit.repackage.io.netty.channel.ChannelFuture deregister() -> deregister
    pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    pro.gravit.repackage.io.netty.channel.ChannelFuture deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker read() -> read
    pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker flush() -> flush
    pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writeAndFlush
    pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    pro.gravit.repackage.io.netty.channel.ChannelPromise newPromise() -> newPromise
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    pro.gravit.repackage.io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    pro.gravit.repackage.io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    pro.gravit.repackage.io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelPipeline -> pro.gravit.repackage.io.netty.channel.ChannelPipeline:
# {"fileName":"ChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addFirst
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addFirst
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addLast
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addLast
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addBefore
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addBefore(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addBefore
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addAfter
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addAfter(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addAfter
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> addFirst
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> addFirst
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> addLast
    pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> addLast
    pro.gravit.repackage.io.netty.channel.ChannelPipeline remove(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> remove
    pro.gravit.repackage.io.netty.channel.ChannelHandler remove(java.lang.String) -> remove
    pro.gravit.repackage.io.netty.channel.ChannelHandler remove(java.lang.Class) -> remove
    pro.gravit.repackage.io.netty.channel.ChannelHandler removeFirst() -> removeFirst
    pro.gravit.repackage.io.netty.channel.ChannelHandler removeLast() -> removeLast
    pro.gravit.repackage.io.netty.channel.ChannelPipeline replace(pro.gravit.repackage.io.netty.channel.ChannelHandler,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> replace
    pro.gravit.repackage.io.netty.channel.ChannelHandler replace(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> replace
    pro.gravit.repackage.io.netty.channel.ChannelHandler replace(java.lang.Class,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> replace
    pro.gravit.repackage.io.netty.channel.ChannelHandler first() -> first
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext firstContext() -> firstContext
    pro.gravit.repackage.io.netty.channel.ChannelHandler last() -> last
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext lastContext() -> lastContext
    pro.gravit.repackage.io.netty.channel.ChannelHandler get(java.lang.String) -> get
    pro.gravit.repackage.io.netty.channel.ChannelHandler get(java.lang.Class) -> get
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext context(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> context
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext context(java.lang.String) -> context
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext context(java.lang.Class) -> context
    pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    java.util.List names() -> names
    java.util.Map toMap() -> toMap
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelRegistered() -> fireChannelRegistered
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelUnregistered() -> fireChannelUnregistered
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelActive() -> fireChannelActive
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelInactive() -> fireChannelInactive
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object) -> fireChannelRead
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelReadComplete() -> fireChannelReadComplete
    pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    pro.gravit.repackage.io.netty.channel.ChannelPipeline flush() -> flush
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelPipelineException -> pro.gravit.repackage.io.netty.channel.ChannelPipelineException:
# {"fileName":"ChannelPipelineException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture -> pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture:
# {"fileName":"ChannelProgressiveFuture.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture sync() -> sync
    pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture await() -> await
    pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelProgressiveFutureListener -> pro.gravit.repackage.io.netty.channel.ChannelProgressiveFutureListener:
# {"fileName":"ChannelProgressiveFutureListener.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise -> pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise:
# {"fileName":"ChannelProgressivePromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise sync() -> sync
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise await() -> await
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise setSuccess(java.lang.Void) -> setSuccess
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise setSuccess() -> setSuccess
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise setProgress(long,long) -> setProgress
    pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise unvoid() -> unvoid
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelPromise -> pro.gravit.repackage.io.netty.channel.ChannelPromise:
# {"fileName":"ChannelPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    boolean trySuccess() -> trySuccess
    pro.gravit.repackage.io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    pro.gravit.repackage.io.netty.channel.ChannelPromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.channel.ChannelPromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.channel.ChannelPromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.channel.ChannelPromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.channel.ChannelPromise sync() -> sync
    pro.gravit.repackage.io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    pro.gravit.repackage.io.netty.channel.ChannelPromise await() -> await
    pro.gravit.repackage.io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    pro.gravit.repackage.io.netty.channel.ChannelPromise unvoid() -> unvoid
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelPromiseAggregator -> pro.gravit.repackage.io.netty.channel.ChannelPromiseAggregator:
# {"fileName":"ChannelPromiseAggregator.java","id":"sourceFile"}
    35:36:void <init>(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ChannelPromiseNotifier -> pro.gravit.repackage.io.netty.channel.ChannelPromiseNotifier:
# {"fileName":"ChannelPromiseNotifier.java","id":"sourceFile"}
    36:37:void <init>(pro.gravit.repackage.io.netty.channel.ChannelPromise[]) -> <init>
    46:47:void <init>(boolean,pro.gravit.repackage.io.netty.channel.ChannelPromise[]) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.CoalescingBufferQueue -> pro.gravit.repackage.io.netty.channel.CoalescingBufferQueue:
# {"fileName":"CoalescingBufferQueue.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    39:40:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    43:44:void <init>(pro.gravit.repackage.io.netty.channel.Channel,int) -> <init>
    47:49:void <init>(pro.gravit.repackage.io.netty.channel.Channel,int,boolean) -> <init>
    62:62:pro.gravit.repackage.io.netty.buffer.ByteBuf remove(int,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> remove
    69:70:void releaseAndFailAll(java.lang.Throwable) -> releaseAndFailAll
    74:79:pro.gravit.repackage.io.netty.buffer.ByteBuf compose(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compose
    84:84:pro.gravit.repackage.io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler -> pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler:
# {"fileName":"CombinedChannelDuplexHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext inboundCtx -> inboundCtx
    pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext outboundCtx -> outboundCtx
    boolean handlerAdded -> handlerAdded
    pro.gravit.repackage.io.netty.channel.ChannelInboundHandler inboundHandler -> inboundHandler
    pro.gravit.repackage.io.netty.channel.ChannelOutboundHandler outboundHandler -> outboundHandler
    boolean $assertionsDisabled -> $assertionsDisabled
    49:51:void <init>() -> <init>
    56:59:void <init>(pro.gravit.repackage.io.netty.channel.ChannelInboundHandler,pro.gravit.repackage.io.netty.channel.ChannelOutboundHandler) -> <init>
    70:73:void init(pro.gravit.repackage.io.netty.channel.ChannelInboundHandler,pro.gravit.repackage.io.netty.channel.ChannelOutboundHandler) -> init
    76:95:void validate(pro.gravit.repackage.io.netty.channel.ChannelInboundHandler,pro.gravit.repackage.io.netty.channel.ChannelOutboundHandler) -> validate
    98:98:pro.gravit.repackage.io.netty.channel.ChannelInboundHandler inboundHandler() -> inboundHandler
    102:102:pro.gravit.repackage.io.netty.channel.ChannelOutboundHandler outboundHandler() -> outboundHandler
    106:109:void checkAdded() -> checkAdded
    115:117:void removeInboundHandler() -> removeInboundHandler
    123:125:void removeOutboundHandler() -> removeOutboundHandler
    129:176:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    181:185:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    189:195:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    199:205:void channelUnregistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    209:215:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    219:225:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    229:235:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    239:245:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    249:255:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    259:265:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    269:275:void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    281:287:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    294:300:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    304:310:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    314:320:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    324:330:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    334:340:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    344:350:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    354:360:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    32:32:pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext access$000(pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler) -> access$000
    32:32:pro.gravit.repackage.io.netty.channel.ChannelOutboundHandler access$100(pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler) -> access$100
    32:32:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$200() -> access$200
    32:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$1 -> pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$1:
# {"fileName":"CombinedChannelDuplexHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler this$0 -> this$0
    137:137:void <init>(pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> <init>
    141:163:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    137:137:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext -> pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:
# {"fileName":"CombinedChannelDuplexHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    pro.gravit.repackage.io.netty.channel.ChannelHandler handler -> handler
    boolean removed -> removed
    368:371:void <init>(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> <init>
    375:375:pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    380:380:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    385:385:java.lang.String name() -> name
    390:390:pro.gravit.repackage.io.netty.channel.ChannelHandler handler() -> handler
    395:395:boolean isRemoved() -> isRemoved
    400:401:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelRegistered() -> fireChannelRegistered
    406:407:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelUnregistered() -> fireChannelUnregistered
    412:413:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelActive() -> fireChannelActive
    418:419:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelInactive() -> fireChannelInactive
    424:425:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    430:431:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    436:437:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object) -> fireChannelRead
    442:443:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelReadComplete() -> fireChannelReadComplete
    448:449:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    454:454:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    459:459:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    464:464:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    469:469:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect() -> disconnect
    474:474:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    479:479:pro.gravit.repackage.io.netty.channel.ChannelFuture deregister() -> deregister
    484:484:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    489:489:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    495:495:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    500:500:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    505:505:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    510:510:pro.gravit.repackage.io.netty.channel.ChannelFuture deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    515:516:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext read() -> read
    521:521:pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    526:526:pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    531:532:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext flush() -> flush
    537:537:pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writeAndFlush
    542:542:pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    547:547:pro.gravit.repackage.io.netty.channel.ChannelPipeline pipeline() -> pipeline
    552:552:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    557:557:pro.gravit.repackage.io.netty.channel.ChannelPromise newPromise() -> newPromise
    562:562:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    567:567:pro.gravit.repackage.io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    572:572:pro.gravit.repackage.io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    577:577:pro.gravit.repackage.io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    582:582:pro.gravit.repackage.io.netty.util.Attribute attr(pro.gravit.repackage.io.netty.util.AttributeKey) -> attr
    587:587:boolean hasAttr(pro.gravit.repackage.io.netty.util.AttributeKey) -> hasAttr
    591:602:void remove() -> remove
    605:614:void remove0() -> remove0
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    362:362:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    362:362:pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker flush() -> flush
    362:362:pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker read() -> read
    362:362:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$300(pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> access$300
    362:362:void access$400(pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> access$400
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1 -> pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:
# {"fileName":"CombinedChannelDuplexHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext this$0 -> this$0
    595:595:void <init>(pro.gravit.repackage.io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext) -> <init>
    598:599:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.CompleteChannelFuture -> pro.gravit.repackage.io.netty.channel.CompleteChannelFuture:
# {"fileName":"CompleteChannelFuture.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    38:40:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    44:48:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    54:55:pro.gravit.repackage.io.netty.channel.ChannelFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    60:61:pro.gravit.repackage.io.netty.channel.ChannelFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    66:67:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    72:73:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    78:78:pro.gravit.repackage.io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    83:83:pro.gravit.repackage.io.netty.channel.ChannelFuture sync() -> sync
    88:88:pro.gravit.repackage.io.netty.channel.ChannelFuture await() -> await
    93:93:pro.gravit.repackage.io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    98:98:pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    103:103:java.lang.Void getNow() -> getNow
    108:108:boolean isVoid() -> isVoid
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    28:28:java.lang.Object getNow() -> getNow
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ConnectTimeoutException -> pro.gravit.repackage.io.netty.channel.ConnectTimeoutException:
# {"fileName":"ConnectTimeoutException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    28:29:void <init>(java.lang.String) -> <init>
    31:32:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultAddressedEnvelope -> pro.gravit.repackage.io.netty.channel.DefaultAddressedEnvelope:
# {"fileName":"DefaultAddressedEnvelope.java","id":"sourceFile"}
    java.lang.Object message -> message
    java.net.SocketAddress sender -> sender
    java.net.SocketAddress recipient -> recipient
    42:51:void <init>(java.lang.Object,java.net.SocketAddress,java.net.SocketAddress) -> <init>
    58:59:void <init>(java.lang.Object,java.net.SocketAddress) -> <init>
    63:63:java.lang.Object content() -> content
    68:68:java.net.SocketAddress sender() -> sender
    73:73:java.net.SocketAddress recipient() -> recipient
    78:81:int refCnt() -> refCnt
    87:88:pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain() -> retain
    93:94:pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain(int) -> retain
    99:99:boolean release() -> release
    104:104:boolean release(int) -> release
    109:110:pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch() -> touch
    115:116:pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    121:125:java.lang.String toString() -> toString
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelConfig -> pro.gravit.repackage.io.netty.channel.DefaultChannelConfig:
# {"fileName":"DefaultChannelConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.MessageSizeEstimator DEFAULT_MSG_SIZE_ESTIMATOR -> DEFAULT_MSG_SIZE_ESTIMATOR
    int DEFAULT_CONNECT_TIMEOUT -> DEFAULT_CONNECT_TIMEOUT
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater AUTOREAD_UPDATER -> AUTOREAD_UPDATER
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater WATERMARK_UPDATER -> WATERMARK_UPDATER
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator allocator -> allocator
    pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator rcvBufAllocator -> rcvBufAllocator
    pro.gravit.repackage.io.netty.channel.MessageSizeEstimator msgSizeEstimator -> msgSizeEstimator
    int connectTimeoutMillis -> connectTimeoutMillis
    int writeSpinCount -> writeSpinCount
    int maxMessagesPerWrite -> maxMessagesPerWrite
    int autoRead -> autoRead
    boolean autoClose -> autoClose
    pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark writeBufferWaterMark -> writeBufferWaterMark
    boolean pinEventExecutor -> pinEventExecutor
    75:76:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    60:81:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> <init>
    86:86:java.util.Map getOptions() -> getOptions
    96:102:java.util.Map getOptions(java.util.Map,pro.gravit.repackage.io.netty.channel.ChannelOption[]) -> getOptions
    108:117:boolean setOptions(java.util.Map) -> setOptions
    123:164:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    170:202:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    206:207:void validate(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> validate
    211:211:int getConnectTimeoutMillis() -> getConnectTimeoutMillis
    216:218:pro.gravit.repackage.io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    231:234:int getMaxMessagesPerRead() -> getMaxMessagesPerRead
    249:253:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    263:263:int getMaxMessagesPerWrite() -> getMaxMessagesPerWrite
    271:272:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerWrite(int) -> setMaxMessagesPerWrite
    277:277:int getWriteSpinCount() -> getWriteSpinCount
    282:291:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    296:296:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator getAllocator() -> getAllocator
    301:302:pro.gravit.repackage.io.netty.channel.ChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    308:308:pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator getRecvByteBufAllocator() -> getRecvByteBufAllocator
    313:314:pro.gravit.repackage.io.netty.channel.ChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    324:330:void setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator,pro.gravit.repackage.io.netty.channel.ChannelMetadata) -> setRecvByteBufAllocator
    334:334:boolean isAutoRead() -> isAutoRead
    339:345:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    352:352:void autoReadCleared() -> autoReadCleared
    356:356:boolean isAutoClose() -> isAutoClose
    361:362:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    367:367:int getWriteBufferHighWaterMark() -> getWriteBufferHighWaterMark
    372:385:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    390:390:int getWriteBufferLowWaterMark() -> getWriteBufferLowWaterMark
    395:408:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    413:414:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    419:419:pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark getWriteBufferWaterMark() -> getWriteBufferWaterMark
    424:424:pro.gravit.repackage.io.netty.channel.MessageSizeEstimator getMessageSizeEstimator() -> getMessageSizeEstimator
    429:430:pro.gravit.repackage.io.netty.channel.ChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    434:435:pro.gravit.repackage.io.netty.channel.ChannelConfig setPinEventExecutorPerGroup(boolean) -> setPinEventExecutorPerGroup
    439:439:boolean getPinEventExecutorPerGroup() -> getPinEventExecutorPerGroup
    48:55:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelHandlerContext -> pro.gravit.repackage.io.netty.channel.DefaultChannelHandlerContext:
# {"fileName":"DefaultChannelHandlerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandler handler -> handler
    26:28:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> <init>
    32:32:pro.gravit.repackage.io.netty.channel.ChannelHandler handler() -> handler
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelId -> pro.gravit.repackage.io.netty.channel.DefaultChannelId:
# {"fileName":"DefaultChannelId.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    byte[] MACHINE_ID -> MACHINE_ID
    int PROCESS_ID_LEN -> PROCESS_ID_LEN
    int PROCESS_ID -> PROCESS_ID
    int SEQUENCE_LEN -> SEQUENCE_LEN
    int TIMESTAMP_LEN -> TIMESTAMP_LEN
    int RANDOM_LEN -> RANDOM_LEN
    java.util.concurrent.atomic.AtomicInteger nextSequence -> nextSequence
    byte[] data -> data
    int hashCode -> hashCode
    java.lang.String shortValue -> shortValue
    java.lang.String longValue -> longValue
    boolean $assertionsDisabled -> $assertionsDisabled
    55:55:pro.gravit.repackage.io.netty.channel.DefaultChannelId newInstance() -> newInstance
    110:128:int processHandlePid(java.lang.ClassLoader) -> processHandlePid
    135:173:int jmxPid(java.lang.ClassLoader) -> jmxPid
    177:182:int defaultProcessId() -> defaultProcessId
    191:214:void <init>() -> <init>
    217:221:int writeInt(int,int) -> writeInt
    225:233:int writeLong(int,long) -> writeLong
    238:242:java.lang.String asShortText() -> asShortText
    247:251:java.lang.String asLongText() -> asLongText
    255:263:java.lang.String newLongValue() -> newLongValue
    267:270:int appendHexDumpField(java.lang.StringBuilder,int,int) -> appendHexDumpField
    275:275:int hashCode() -> hashCode
    280:302:int compareTo(pro.gravit.repackage.io.netty.channel.ChannelId) -> compareTo
    307:314:boolean equals(java.lang.Object) -> equals
    319:319:java.lang.String toString() -> toString
    37:37:int compareTo(java.lang.Object) -> compareTo
    37:106:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String HEAD_NAME -> HEAD_NAME
    java.lang.String TAIL_NAME -> TAIL_NAME
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal nameCaches -> nameCaches
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ESTIMATOR -> ESTIMATOR
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$HeadContext head -> head
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$TailContext tail -> tail
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    pro.gravit.repackage.io.netty.channel.ChannelFuture succeededFuture -> succeededFuture
    pro.gravit.repackage.io.netty.channel.VoidChannelPromise voidPromise -> voidPromise
    boolean touch -> touch
    java.util.Map childExecutors -> childExecutors
    pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle estimatorHandle -> estimatorHandle
    boolean firstRegistration -> firstRegistration
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback pendingHandlerCallbackHead -> pendingHandlerCallbackHead
    boolean registered -> registered
    boolean $assertionsDisabled -> $assertionsDisabled
    70:102:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    105:112:pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle estimatorHandle() -> estimatorHandle
    116:116:java.lang.Object touch(java.lang.Object,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> touch
    120:120:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext newContext(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> newContext
    124:143:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor childExecutor(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup) -> childExecutor
    147:147:pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    152:152:pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addFirst
    158:182:pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addFirst
    186:191:void addFirst0(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> addFirst0
    195:195:pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addLast
    201:224:pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addLast
    228:233:void addLast0(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> addLast0
    237:237:pro.gravit.repackage.io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addBefore
    245:270:pro.gravit.repackage.io.netty.channel.ChannelPipeline addBefore(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addBefore
    274:278:void addBefore0(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> addBefore0
    281:285:java.lang.String filterName(java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> filterName
    290:290:pro.gravit.repackage.io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addAfter
    299:323:pro.gravit.repackage.io.netty.channel.ChannelPipeline addAfter(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addAfter
    327:331:void addAfter0(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> addAfter0
    334:334:pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addFirst
    339:339:pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> addFirst
    344:361:pro.gravit.repackage.io.netty.channel.ChannelPipeline addFirst(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> addFirst
    365:365:pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> addLast
    370:370:pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> addLast
    375:384:pro.gravit.repackage.io.netty.channel.ChannelPipeline addLast(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> addLast
    388:408:java.lang.String generateName(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> generateName
    412:412:java.lang.String generateName0(java.lang.Class) -> generateName0
    417:418:pro.gravit.repackage.io.netty.channel.ChannelPipeline remove(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> remove
    423:423:pro.gravit.repackage.io.netty.channel.ChannelHandler remove(java.lang.String) -> remove
    429:429:pro.gravit.repackage.io.netty.channel.ChannelHandler remove(java.lang.Class) -> remove
    433:433:pro.gravit.repackage.io.netty.channel.ChannelHandler removeIfExists(java.lang.String) -> removeIfExists
    437:437:pro.gravit.repackage.io.netty.channel.ChannelHandler removeIfExists(java.lang.Class) -> removeIfExists
    441:441:pro.gravit.repackage.io.netty.channel.ChannelHandler removeIfExists(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> removeIfExists
    446:449:pro.gravit.repackage.io.netty.channel.ChannelHandler removeIfExists(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> removeIfExists
    453:478:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext remove(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> remove
    485:489:void atomicRemoveFromHandlerList(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> atomicRemoveFromHandlerList
    493:496:pro.gravit.repackage.io.netty.channel.ChannelHandler removeFirst() -> removeFirst
    501:504:pro.gravit.repackage.io.netty.channel.ChannelHandler removeLast() -> removeLast
    509:510:pro.gravit.repackage.io.netty.channel.ChannelPipeline replace(pro.gravit.repackage.io.netty.channel.ChannelHandler,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> replace
    515:515:pro.gravit.repackage.io.netty.channel.ChannelHandler replace(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> replace
    522:522:pro.gravit.repackage.io.netty.channel.ChannelHandler replace(java.lang.Class,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> replace
    527:574:pro.gravit.repackage.io.netty.channel.ChannelHandler replace(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelHandler) -> replace
    578:593:void replace0(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> replace0
    596:605:void checkMultiplicity(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> checkMultiplicity
    609:632:void callHandlerAdded0(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> callHandlerAdded0
    637:642:void callHandlerRemoved0(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> callHandlerRemoved0
    645:652:void invokeHandlerAddedIfNeeded() -> invokeHandlerAddedIfNeeded
    656:660:pro.gravit.repackage.io.netty.channel.ChannelHandler first() -> first
    665:669:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext firstContext() -> firstContext
    674:678:pro.gravit.repackage.io.netty.channel.ChannelHandler last() -> last
    683:687:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext lastContext() -> lastContext
    692:696:pro.gravit.repackage.io.netty.channel.ChannelHandler get(java.lang.String) -> get
    703:707:pro.gravit.repackage.io.netty.channel.ChannelHandler get(java.lang.Class) -> get
    713:713:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext context(java.lang.String) -> context
    718:731:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext context(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> context
    737:747:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext context(java.lang.Class) -> context
    753:760:java.util.List names() -> names
    766:773:java.util.Map toMap() -> toMap
    779:779:java.util.Iterator iterator() -> iterator
    787:810:java.lang.String toString() -> toString
    815:816:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelRegistered() -> fireChannelRegistered
    821:822:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelUnregistered() -> fireChannelUnregistered
    836:837:void destroy() -> destroy
    840:863:void destroyUp(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,boolean) -> destroyUp
    867:891:void destroyDown(java.lang.Thread,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,boolean) -> destroyDown
    895:896:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelActive() -> fireChannelActive
    901:902:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelInactive() -> fireChannelInactive
    907:908:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    913:914:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    919:920:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object) -> fireChannelRead
    925:926:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelReadComplete() -> fireChannelReadComplete
    931:932:pro.gravit.repackage.io.netty.channel.ChannelPipeline fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    937:937:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress) -> bind
    942:942:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress) -> connect
    947:947:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress) -> connect
    952:952:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect() -> disconnect
    957:957:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    962:962:pro.gravit.repackage.io.netty.channel.ChannelFuture deregister() -> deregister
    967:968:pro.gravit.repackage.io.netty.channel.ChannelPipeline flush() -> flush
    973:973:pro.gravit.repackage.io.netty.channel.ChannelFuture bind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    978:978:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    984:984:pro.gravit.repackage.io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    989:989:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    994:994:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    999:999:pro.gravit.repackage.io.netty.channel.ChannelFuture deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    1004:1005:pro.gravit.repackage.io.netty.channel.ChannelPipeline read() -> read
    1010:1010:pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object) -> write
    1015:1015:pro.gravit.repackage.io.netty.channel.ChannelFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    1020:1020:pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writeAndFlush
    1025:1025:pro.gravit.repackage.io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    1030:1030:pro.gravit.repackage.io.netty.channel.ChannelPromise newPromise() -> newPromise
    1035:1035:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise newProgressivePromise() -> newProgressivePromise
    1040:1040:pro.gravit.repackage.io.netty.channel.ChannelFuture newSucceededFuture() -> newSucceededFuture
    1045:1045:pro.gravit.repackage.io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable) -> newFailedFuture
    1050:1050:pro.gravit.repackage.io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    1054:1057:void checkDuplicateName(java.lang.String) -> checkDuplicateName
    1060:1067:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext context0(java.lang.String) -> context0
    1071:1075:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.String) -> getContextOrDie
    1080:1084:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext getContextOrDie(pro.gravit.repackage.io.netty.channel.ChannelHandler) -> getContextOrDie
    1089:1093:pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext getContextOrDie(java.lang.Class) -> getContextOrDie
    1099:1118:void callHandlerAddedForAllHandlers() -> callHandlerAddedForAllHandlers
    1121:1134:void callHandlerCallbackLater(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,boolean) -> callHandlerCallbackLater
    1137:1144:void callHandlerAddedInEventLoop(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> callHandlerAddedInEventLoop
    1152:1159:void onUnhandledInboundException(java.lang.Throwable) -> onUnhandledInboundException
    1166:1166:void onUnhandledInboundChannelActive() -> onUnhandledInboundChannelActive
    1173:1173:void onUnhandledInboundChannelInactive() -> onUnhandledInboundChannelInactive
    1182:1188:void onUnhandledInboundMessage(java.lang.Object) -> onUnhandledInboundMessage
    1196:1201:void onUnhandledInboundMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> onUnhandledInboundMessage
    1208:1208:void onUnhandledInboundChannelReadComplete() -> onUnhandledInboundChannelReadComplete
    1218:1219:void onUnhandledInboundUserEventTriggered(java.lang.Object) -> onUnhandledInboundUserEventTriggered
    1226:1226:void onUnhandledChannelWritabilityChanged() -> onUnhandledChannelWritabilityChanged
    1230:1234:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    1238:1242:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged() -> fireChannelWritabilityChanged
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelReadComplete() -> fireChannelReadComplete
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object) -> fireChannelRead
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object) -> fireUserEventTriggered
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable) -> fireExceptionCaught
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelInactive() -> fireChannelInactive
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelActive() -> fireChannelActive
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelUnregistered() -> fireChannelUnregistered
    46:46:pro.gravit.repackage.io.netty.channel.ChannelInboundInvoker fireChannelRegistered() -> fireChannelRegistered
    46:46:pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker flush() -> flush
    46:46:pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker read() -> read
    46:46:void access$000(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$000
    46:46:void access$100(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$100
    46:46:void access$200(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,boolean) -> access$200
    46:46:void access$300(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,java.lang.Thread,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,boolean) -> access$300
    46:46:java.lang.String access$400() -> access$400
    46:46:java.lang.String access$500() -> access$500
    46:46:pro.gravit.repackage.io.netty.channel.Channel access$600(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline) -> access$600
    46:46:void access$700(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline) -> access$700
    46:46:void access$800(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> access$800
    46:62:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$1 -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$1:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    54:54:void <init>() -> <init>
    57:57:java.util.Map initialValue() -> initialValue
    54:54:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$2 -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$2:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    468:468:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    471:472:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$3 -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$3:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    556:556:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    562:564:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$4 -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$4:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$finalCtx -> val$finalCtx
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    851:851:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    854:855:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$5 -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$5:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$finalCtx -> val$finalCtx
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    879:879:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    882:883:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$6 -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$6:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext val$newCtx -> val$newCtx
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1138:1138:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    1141:1142:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$HeadContext -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$HeadContext:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel$Unsafe unsafe -> unsafe
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1310:1314:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline) -> <init>
    1318:1318:pro.gravit.repackage.io.netty.channel.ChannelHandler handler() -> handler
    1324:1324:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    1329:1329:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    1334:1335:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    1342:1343:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    1347:1348:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    1352:1353:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    1357:1358:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    1362:1363:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    1367:1368:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    1372:1373:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    1377:1378:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1382:1384:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    1388:1394:void channelUnregistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    1398:1401:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    1405:1406:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    1410:1411:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    1415:1418:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    1421:1424:void readIfIsAutoRead() -> readIfIsAutoRead
    1428:1429:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    1433:1434:void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1450:1452:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    1456:1457:void run() -> run
    1461:1477:void execute() -> execute
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext ctx -> ctx
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback next -> next
    1441:1443:void <init>(pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    void execute() -> execute
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1482:1484:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.AbstractChannelHandlerContext) -> <init>
    1488:1489:void run() -> run
    1493:1509:void execute() -> execute
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$TailContext -> pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline$TailContext:
# {"fileName":"DefaultChannelPipeline.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline this$0 -> this$0
    1247:1250:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline,pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline) -> <init>
    1254:1254:pro.gravit.repackage.io.netty.channel.ChannelHandler handler() -> handler
    1258:1258:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    1261:1261:void channelUnregistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    1265:1266:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    1270:1271:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    1275:1276:void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    1279:1279:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    1282:1282:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    1286:1287:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    1291:1292:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1296:1297:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    1301:1302:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelProgressivePromise -> pro.gravit.repackage.io.netty.channel.DefaultChannelProgressivePromise:
# {"fileName":"DefaultChannelProgressivePromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    long checkpoint -> checkpoint
    41:43:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    52:54:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    58:62:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    68:68:pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    73:73:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise setSuccess() -> setSuccess
    78:79:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise setSuccess(java.lang.Void) -> setSuccess
    84:84:boolean trySuccess() -> trySuccess
    89:90:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    95:96:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise setProgress(long,long) -> setProgress
    101:102:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    107:108:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    113:114:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    120:121:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    126:127:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise sync() -> sync
    132:133:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    138:139:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise await() -> await
    144:145:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    150:150:long flushCheckpoint() -> flushCheckpoint
    155:156:void flushCheckpoint(long) -> flushCheckpoint
    160:160:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise promise() -> promise
    165:168:void checkDeadLock() -> checkDeadLock
    172:172:pro.gravit.repackage.io.netty.channel.ChannelProgressivePromise unvoid() -> unvoid
    177:177:boolean isVoid() -> isVoid
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise await() -> await
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise sync() -> sync
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise sync() -> sync
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise await() -> await
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture await() -> await
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture sync() -> sync
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture await() -> await
    29:29:pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture sync() -> sync
    29:29:pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:pro.gravit.repackage.io.netty.channel.ChannelProgressiveFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:pro.gravit.repackage.io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    29:29:pro.gravit.repackage.io.netty.channel.ChannelFuture await() -> await
    29:29:pro.gravit.repackage.io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    29:29:pro.gravit.repackage.io.netty.channel.ChannelFuture sync() -> sync
    29:29:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:pro.gravit.repackage.io.netty.channel.ChannelFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:pro.gravit.repackage.io.netty.channel.ChannelFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise unvoid() -> unvoid
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise await() -> await
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise sync() -> sync
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    29:29:pro.gravit.repackage.io.netty.channel.ChannelPromise promise() -> promise
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultChannelPromise -> pro.gravit.repackage.io.netty.channel.DefaultChannelPromise:
# {"fileName":"DefaultChannelPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    long checkpoint -> checkpoint
    41:43:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    52:54:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    58:62:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    68:68:pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    73:73:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    78:79:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    84:84:boolean trySuccess() -> trySuccess
    89:90:pro.gravit.repackage.io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    95:96:pro.gravit.repackage.io.netty.channel.ChannelPromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    101:102:pro.gravit.repackage.io.netty.channel.ChannelPromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    107:108:pro.gravit.repackage.io.netty.channel.ChannelPromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    113:114:pro.gravit.repackage.io.netty.channel.ChannelPromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    119:120:pro.gravit.repackage.io.netty.channel.ChannelPromise sync() -> sync
    125:126:pro.gravit.repackage.io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    131:132:pro.gravit.repackage.io.netty.channel.ChannelPromise await() -> await
    137:138:pro.gravit.repackage.io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    143:143:long flushCheckpoint() -> flushCheckpoint
    148:149:void flushCheckpoint(long) -> flushCheckpoint
    153:153:pro.gravit.repackage.io.netty.channel.ChannelPromise promise() -> promise
    158:161:void checkDeadLock() -> checkDeadLock
    165:165:pro.gravit.repackage.io.netty.channel.ChannelPromise unvoid() -> unvoid
    170:170:boolean isVoid() -> isVoid
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise sync() -> sync
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise await() -> await
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    30:30:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    30:30:pro.gravit.repackage.io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    30:30:pro.gravit.repackage.io.netty.channel.ChannelFuture await() -> await
    30:30:pro.gravit.repackage.io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    30:30:pro.gravit.repackage.io.netty.channel.ChannelFuture sync() -> sync
    30:30:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    30:30:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    30:30:pro.gravit.repackage.io.netty.channel.ChannelFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    30:30:pro.gravit.repackage.io.netty.channel.ChannelFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultEventLoop -> pro.gravit.repackage.io.netty.channel.DefaultEventLoop:
# {"fileName":"DefaultEventLoop.java","id":"sourceFile"}
    26:27:void <init>() -> <init>
    30:31:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    34:35:void <init>(java.util.concurrent.Executor) -> <init>
    38:39:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup) -> <init>
    42:43:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory) -> <init>
    46:47:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup,java.util.concurrent.Executor) -> <init>
    52:62:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultEventLoopGroup -> pro.gravit.repackage.io.netty.channel.DefaultEventLoopGroup:
# {"fileName":"DefaultEventLoopGroup.java","id":"sourceFile"}
    30:31:void <init>() -> <init>
    39:40:void <init>(int) -> <init>
    48:49:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    58:59:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    68:69:void <init>(int,java.util.concurrent.Executor) -> <init>
    73:73:pro.gravit.repackage.io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    24:24:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultFileRegion -> pro.gravit.repackage.io.netty.channel.DefaultFileRegion:
# {"fileName":"DefaultFileRegion.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.io.File f -> f
    long position -> position
    long count -> count
    long transferred -> transferred
    java.nio.channels.FileChannel file -> file
    54:59:void <init>(java.nio.channels.FileChannel,long,long) -> <init>
    69:73:void <init>(java.io.File,long,long) -> <init>
    79:79:boolean isOpen() -> isOpen
    86:90:void open() -> open
    94:94:long position() -> position
    99:99:long count() -> count
    105:105:long transfered() -> transfered
    110:110:long transferred() -> transferred
    115:140:long transferTo(java.nio.channels.WritableByteChannel,long) -> transferTo
    145:157:void deallocate() -> deallocate
    161:162:pro.gravit.repackage.io.netty.channel.FileRegion retain() -> retain
    167:168:pro.gravit.repackage.io.netty.channel.FileRegion retain(int) -> retain
    173:173:pro.gravit.repackage.io.netty.channel.FileRegion touch() -> touch
    178:178:pro.gravit.repackage.io.netty.channel.FileRegion touch(java.lang.Object) -> touch
    186:191:void validate(pro.gravit.repackage.io.netty.channel.DefaultFileRegion,long) -> validate
    38:38:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    38:38:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    38:38:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    38:38:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    40:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator -> pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator:
# {"fileName":"DefaultMaxBytesRecvByteBufAllocator.java","id":"sourceFile"}
    int maxBytesPerRead -> maxBytesPerRead
    int maxBytesPerIndividualRead -> maxBytesPerIndividualRead
    107:108:void <init>() -> <init>
    110:114:void <init>(int,int) -> <init>
    119:119:pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    124:124:int maxBytesPerRead() -> maxBytesPerRead
    129:142:pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
    147:147:int maxBytesPerIndividualRead() -> maxBytesPerIndividualRead
    152:165:pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    170:170:java.util.Map$Entry maxBytesPerReadPair() -> maxBytesPerReadPair
    174:181:void checkMaxBytesPerReadPair(int,int) -> checkMaxBytesPerReadPair
    186:193:pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
    31:31:pro.gravit.repackage.io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
    31:31:pro.gravit.repackage.io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    31:31:pro.gravit.repackage.io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1 -> pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1:
# {"fileName":"DefaultMaxBytesRecvByteBufAllocator.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl -> pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl:
# {"fileName":"DefaultMaxBytesRecvByteBufAllocator.java","id":"sourceFile"}
    int individualReadMax -> individualReadMax
    int bytesToRead -> bytesToRead
    int lastBytesRead -> lastBytesRead
    int attemptBytesRead -> attemptBytesRead
    pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier defaultMaybeMoreSupplier -> defaultMaybeMoreSupplier
    pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator this$0 -> this$0
    35:40:void <init>(pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator) -> <init>
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBuf allocate(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> allocate
    54:54:int guess() -> guess
    59:61:void reset(pro.gravit.repackage.io.netty.channel.ChannelConfig) -> reset
    65:65:void incMessagesRead(int) -> incMessagesRead
    69:73:void lastBytesRead(int) -> lastBytesRead
    77:77:int lastBytesRead() -> lastBytesRead
    82:82:boolean continueReading() -> continueReading
    88:88:boolean continueReading(pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier) -> continueReading
    93:93:void readComplete() -> readComplete
    97:98:void attemptedBytesRead(int) -> attemptedBytesRead
    102:102:int attemptedBytesRead() -> attemptedBytesRead
    35:35:int access$000(pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> access$000
    35:35:int access$100(pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> access$100
    35:35:void <init>(pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator,pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl$1 -> pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl$1:
# {"fileName":"DefaultMaxBytesRecvByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl this$1 -> this$1
    40:40:void <init>(pro.gravit.repackage.io.netty.channel.DefaultMaxBytesRecvByteBufAllocator$HandleImpl) -> <init>
    43:43:boolean get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator -> pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator:
# {"fileName":"DefaultMaxMessagesRecvByteBufAllocator.java","id":"sourceFile"}
    boolean ignoreBytesRead -> ignoreBytesRead
    int maxMessagesPerRead -> maxMessagesPerRead
    boolean respectMaybeMoreData -> respectMaybeMoreData
    34:35:void <init>() -> <init>
    38:39:void <init>(int) -> <init>
    31:44:void <init>(int,boolean) -> <init>
    48:48:int maxMessagesPerRead() -> maxMessagesPerRead
    53:55:pro.gravit.repackage.io.netty.channel.MaxMessagesRecvByteBufAllocator maxMessagesPerRead(int) -> maxMessagesPerRead
    71:72:pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    87:87:boolean respectMaybeMoreData() -> respectMaybeMoreData
    28:28:boolean access$000(pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator) -> access$000
    28:28:boolean access$300(pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator) -> access$300
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle -> pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle:
# {"fileName":"DefaultMaxMessagesRecvByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelConfig config -> config
    int maxMessagePerRead -> maxMessagePerRead
    int totalMessages -> totalMessages
    int totalBytesRead -> totalBytesRead
    int attemptedBytesRead -> attemptedBytesRead
    int lastBytesRead -> lastBytesRead
    boolean respectMaybeMoreData -> respectMaybeMoreData
    pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier defaultMaybeMoreSupplier -> defaultMaybeMoreSupplier
    pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator this$0 -> this$0
    93:101:void <init>(pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator) -> <init>
    113:116:void reset(pro.gravit.repackage.io.netty.channel.ChannelConfig) -> reset
    120:120:pro.gravit.repackage.io.netty.buffer.ByteBuf allocate(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> allocate
    125:126:void incMessagesRead(int) -> incMessagesRead
    130:134:void lastBytesRead(int) -> lastBytesRead
    138:138:int lastBytesRead() -> lastBytesRead
    143:143:boolean continueReading() -> continueReading
    148:150:boolean continueReading(pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier) -> continueReading
    155:155:void readComplete() -> readComplete
    159:159:int attemptedBytesRead() -> attemptedBytesRead
    164:165:void attemptedBytesRead(int) -> attemptedBytesRead
    168:168:int totalBytesRead() -> totalBytesRead
    93:93:int access$100(pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> access$100
    93:93:int access$200(pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> access$200
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle$1 -> pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle$1:
# {"fileName":"DefaultMaxMessagesRecvByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle this$1 -> this$1
    101:101:void <init>(pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle) -> <init>
    104:104:boolean get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMessageSizeEstimator -> pro.gravit.repackage.io.netty.channel.DefaultMessageSizeEstimator:
# {"fileName":"DefaultMessageSizeEstimator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.MessageSizeEstimator DEFAULT -> DEFAULT
    pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle handle -> handle
    63:66:void <init>(int) -> <init>
    70:70:pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle newHandle() -> newHandle
    54:54:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMessageSizeEstimator$1 -> pro.gravit.repackage.io.netty.channel.DefaultMessageSizeEstimator$1:
# {"fileName":"DefaultMessageSizeEstimator.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultMessageSizeEstimator$HandleImpl -> pro.gravit.repackage.io.netty.channel.DefaultMessageSizeEstimator$HandleImpl:
# {"fileName":"DefaultMessageSizeEstimator.java","id":"sourceFile"}
    int unknownSize -> unknownSize
    32:34:void <init>(int) -> <init>
    38:47:int size(java.lang.Object) -> size
    29:29:void <init>(int,pro.gravit.repackage.io.netty.channel.DefaultMessageSizeEstimator$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultSelectStrategy -> pro.gravit.repackage.io.netty.channel.DefaultSelectStrategy:
# {"fileName":"DefaultSelectStrategy.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.SelectStrategy INSTANCE -> INSTANCE
    26:26:void <init>() -> <init>
    30:30:int calculateStrategy(pro.gravit.repackage.io.netty.util.IntSupplier,boolean) -> calculateStrategy
    24:24:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DefaultSelectStrategyFactory -> pro.gravit.repackage.io.netty.channel.DefaultSelectStrategyFactory:
# {"fileName":"DefaultSelectStrategyFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.SelectStrategyFactory INSTANCE -> INSTANCE
    24:24:void <init>() -> <init>
    28:28:pro.gravit.repackage.io.netty.channel.SelectStrategy newSelectStrategy() -> newSelectStrategy
    22:22:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.DelegatingChannelPromiseNotifier -> pro.gravit.repackage.io.netty.channel.DelegatingChannelPromiseNotifier:
# {"fileName":"DelegatingChannelPromiseNotifier.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.channel.ChannelPromise delegate -> delegate
    boolean logNotifyFailure -> logNotifyFailure
    39:40:void <init>(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    42:45:void <init>(pro.gravit.repackage.io.netty.channel.ChannelPromise,boolean) -> <init>
    49:59:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    63:63:pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    68:69:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    74:75:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    80:80:boolean trySuccess() -> trySuccess
    85:85:boolean trySuccess(java.lang.Void) -> trySuccess
    90:91:pro.gravit.repackage.io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    96:97:pro.gravit.repackage.io.netty.channel.ChannelPromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    102:103:pro.gravit.repackage.io.netty.channel.ChannelPromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    108:109:pro.gravit.repackage.io.netty.channel.ChannelPromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    114:115:pro.gravit.repackage.io.netty.channel.ChannelPromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    120:120:boolean tryFailure(java.lang.Throwable) -> tryFailure
    125:125:boolean setUncancellable() -> setUncancellable
    130:131:pro.gravit.repackage.io.netty.channel.ChannelPromise await() -> await
    136:137:pro.gravit.repackage.io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    142:142:boolean isVoid() -> isVoid
    147:147:pro.gravit.repackage.io.netty.channel.ChannelPromise unvoid() -> unvoid
    152:152:boolean await(long,java.util.concurrent.TimeUnit) -> await
    157:157:boolean await(long) -> await
    162:162:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    167:167:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    172:172:java.lang.Void getNow() -> getNow
    177:177:boolean cancel(boolean) -> cancel
    182:182:boolean isCancelled() -> isCancelled
    187:187:boolean isDone() -> isDone
    192:192:java.lang.Void get() -> get
    197:197:java.lang.Void get(long,java.util.concurrent.TimeUnit) -> get
    202:203:pro.gravit.repackage.io.netty.channel.ChannelPromise sync() -> sync
    208:209:pro.gravit.repackage.io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    214:214:boolean isSuccess() -> isSuccess
    219:219:boolean isCancellable() -> isCancellable
    224:224:java.lang.Throwable cause() -> cause
    31:31:pro.gravit.repackage.io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    31:31:pro.gravit.repackage.io.netty.channel.ChannelFuture await() -> await
    31:31:pro.gravit.repackage.io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    31:31:pro.gravit.repackage.io.netty.channel.ChannelFuture sync() -> sync
    31:31:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:pro.gravit.repackage.io.netty.channel.ChannelFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:pro.gravit.repackage.io.netty.channel.ChannelFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:java.lang.Object getNow() -> getNow
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    31:31:java.lang.Object get() -> get
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise sync() -> sync
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise await() -> await
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    31:31:boolean trySuccess(java.lang.Object) -> trySuccess
    31:31:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    31:31:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    33:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.EventLoop -> pro.gravit.repackage.io.netty.channel.EventLoop:
# {"fileName":"EventLoop.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.EventLoopGroup parent() -> parent
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.EventLoopException -> pro.gravit.repackage.io.netty.channel.EventLoopException:
# {"fileName":"EventLoopException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    26:27:void <init>() -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    34:35:void <init>(java.lang.String) -> <init>
    38:39:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.EventLoopGroup -> pro.gravit.repackage.io.netty.channel.EventLoopGroup:
# {"fileName":"EventLoopGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.EventLoop next() -> next
    pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel) -> register
    pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.EventLoopTaskQueueFactory -> pro.gravit.repackage.io.netty.channel.EventLoopTaskQueueFactory:
# {"fileName":"EventLoopTaskQueueFactory.java","id":"sourceFile"}
    java.util.Queue newTaskQueue(int) -> newTaskQueue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ExtendedClosedChannelException -> pro.gravit.repackage.io.netty.channel.ExtendedClosedChannelException:
# {"fileName":"ExtendedClosedChannelException.java","id":"sourceFile"}
    22:26:void <init>(java.lang.Throwable) -> <init>
    31:31:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.FailedChannelFuture -> pro.gravit.repackage.io.netty.channel.FailedChannelFuture:
# {"fileName":"FailedChannelFuture.java","id":"sourceFile"}
    java.lang.Throwable cause -> cause
    38:40:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Throwable) -> <init>
    44:44:java.lang.Throwable cause() -> cause
    49:49:boolean isSuccess() -> isSuccess
    54:55:pro.gravit.repackage.io.netty.channel.ChannelFuture sync() -> sync
    60:61:pro.gravit.repackage.io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    27:27:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    27:27:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.FileRegion -> pro.gravit.repackage.io.netty.channel.FileRegion:
# {"fileName":"FileRegion.java","id":"sourceFile"}
    long position() -> position
    long transfered() -> transfered
    long transferred() -> transferred
    long count() -> count
    long transferTo(java.nio.channels.WritableByteChannel,long) -> transferTo
    pro.gravit.repackage.io.netty.channel.FileRegion retain() -> retain
    pro.gravit.repackage.io.netty.channel.FileRegion retain(int) -> retain
    pro.gravit.repackage.io.netty.channel.FileRegion touch() -> touch
    pro.gravit.repackage.io.netty.channel.FileRegion touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.FixedRecvByteBufAllocator -> pro.gravit.repackage.io.netty.channel.FixedRecvByteBufAllocator:
# {"fileName":"FixedRecvByteBufAllocator.java","id":"sourceFile"}
    int bufferSize -> bufferSize
    45:48:void <init>(int) -> <init>
    53:53:pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    58:59:pro.gravit.repackage.io.netty.channel.FixedRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    24:24:pro.gravit.repackage.io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator respectMaybeMoreData(boolean) -> respectMaybeMoreData
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.FixedRecvByteBufAllocator$HandleImpl -> pro.gravit.repackage.io.netty.channel.FixedRecvByteBufAllocator$HandleImpl:
# {"fileName":"FixedRecvByteBufAllocator.java","id":"sourceFile"}
    int bufferSize -> bufferSize
    pro.gravit.repackage.io.netty.channel.FixedRecvByteBufAllocator this$0 -> this$0
    31:33:void <init>(pro.gravit.repackage.io.netty.channel.FixedRecvByteBufAllocator,int) -> <init>
    37:37:int guess() -> guess
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.MaxBytesRecvByteBufAllocator -> pro.gravit.repackage.io.netty.channel.MaxBytesRecvByteBufAllocator:
# {"fileName":"MaxBytesRecvByteBufAllocator.java","id":"sourceFile"}
    int maxBytesPerRead() -> maxBytesPerRead
    pro.gravit.repackage.io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerRead(int) -> maxBytesPerRead
    int maxBytesPerIndividualRead() -> maxBytesPerIndividualRead
    pro.gravit.repackage.io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerIndividualRead(int) -> maxBytesPerIndividualRead
    java.util.Map$Entry maxBytesPerReadPair() -> maxBytesPerReadPair
    pro.gravit.repackage.io.netty.channel.MaxBytesRecvByteBufAllocator maxBytesPerReadPair(int,int) -> maxBytesPerReadPair
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.MaxMessagesRecvByteBufAllocator -> pro.gravit.repackage.io.netty.channel.MaxMessagesRecvByteBufAllocator:
# {"fileName":"MaxMessagesRecvByteBufAllocator.java","id":"sourceFile"}
    int maxMessagesPerRead() -> maxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.MaxMessagesRecvByteBufAllocator maxMessagesPerRead(int) -> maxMessagesPerRead
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.MessageSizeEstimator -> pro.gravit.repackage.io.netty.channel.MessageSizeEstimator:
# {"fileName":"MessageSizeEstimator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle newHandle() -> newHandle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle -> pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle:
# {"fileName":"MessageSizeEstimator.java","id":"sourceFile"}
    int size(java.lang.Object) -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.MultithreadEventLoopGroup -> pro.gravit.repackage.io.netty.channel.MultithreadEventLoopGroup:
# {"fileName":"MultithreadEventLoopGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_EVENT_LOOP_THREADS -> DEFAULT_EVENT_LOOP_THREADS
    52:53:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    59:60:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    68:69:void <init>(int,java.util.concurrent.Executor,pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[]) -> <init>
    73:73:java.util.concurrent.ThreadFactory newDefaultThreadFactory() -> newDefaultThreadFactory
    78:78:pro.gravit.repackage.io.netty.channel.EventLoop next() -> next
    pro.gravit.repackage.io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    86:86:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel) -> register
    91:91:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    97:97:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    33:33:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    33:33:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    35:46:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingBytesTracker -> pro.gravit.repackage.io.netty.channel.PendingBytesTracker:
# {"fileName":"PendingBytesTracker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle estimatorHandle -> estimatorHandle
    23:25:void <init>(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    29:29:int size(java.lang.Object) -> size
    void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    36:44:pro.gravit.repackage.io.netty.channel.PendingBytesTracker newTracker(pro.gravit.repackage.io.netty.channel.Channel) -> newTracker
    20:20:void <init>(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle,pro.gravit.repackage.io.netty.channel.PendingBytesTracker$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingBytesTracker$1 -> pro.gravit.repackage.io.netty.channel.PendingBytesTracker$1:
# {"fileName":"PendingBytesTracker.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingBytesTracker$ChannelOutboundBufferPendingBytesTracker -> pro.gravit.repackage.io.netty.channel.PendingBytesTracker$ChannelOutboundBufferPendingBytesTracker:
# {"fileName":"PendingBytesTracker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer buffer -> buffer
    73:75:void <init>(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer,pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    79:80:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    84:85:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingBytesTracker$DefaultChannelPipelinePendingBytesTracker -> pro.gravit.repackage.io.netty.channel.PendingBytesTracker$DefaultChannelPipelinePendingBytesTracker:
# {"fileName":"PendingBytesTracker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline pipeline -> pipeline
    53:55:void <init>(pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline) -> <init>
    59:60:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    64:65:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingBytesTracker$NoopPendingBytesTracker -> pro.gravit.repackage.io.netty.channel.PendingBytesTracker$NoopPendingBytesTracker:
# {"fileName":"PendingBytesTracker.java","id":"sourceFile"}
    91:92:void <init>(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator$Handle) -> <init>
    97:97:void incrementPendingOutboundBytes(long) -> incrementPendingOutboundBytes
    102:102:void decrementPendingOutboundBytes(long) -> decrementPendingOutboundBytes
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingWriteQueue -> pro.gravit.repackage.io.netty.channel.PendingWriteQueue:
# {"fileName":"PendingWriteQueue.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int PENDING_WRITE_OVERHEAD -> PENDING_WRITE_OVERHEAD
    pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker invoker -> invoker
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    pro.gravit.repackage.io.netty.channel.PendingBytesTracker tracker -> tracker
    pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite head -> head
    pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite tail -> tail
    int size -> size
    long bytes -> bytes
    boolean $assertionsDisabled -> $assertionsDisabled
    52:56:void <init>(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    58:62:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    68:69:boolean isEmpty() -> isEmpty
    76:77:int size() -> size
    85:86:long bytes() -> bytes
    92:97:int size(java.lang.Object) -> size
    104:122:void add(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> add
    132:165:pro.gravit.repackage.io.netty.channel.ChannelFuture removeAndWriteAll() -> removeAndWriteAll
    173:191:void removeAndFailAll(java.lang.Throwable) -> removeAndFailAll
    198:209:void removeAndFail(java.lang.Throwable) -> removeAndFail
    212:213:void assertEmpty() -> assertEmpty
    223:231:pro.gravit.repackage.io.netty.channel.ChannelFuture removeAndWrite() -> removeAndWrite
    241:249:pro.gravit.repackage.io.netty.channel.ChannelPromise remove() -> remove
    256:261:java.lang.Object current() -> current
    265:285:void recycle(pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite,boolean) -> recycle
    288:291:void safeFail(pro.gravit.repackage.io.netty.channel.ChannelPromise,java.lang.Throwable) -> safeFail
    33:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingWriteQueue$1 -> pro.gravit.repackage.io.netty.channel.PendingWriteQueue$1:
# {"fileName":"PendingWriteQueue.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite -> pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite:
# {"fileName":"PendingWriteQueue.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle handle -> handle
    pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite next -> next
    long size -> size
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    java.lang.Object msg -> msg
    310:312:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    315:319:pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite newInstance(java.lang.Object,int,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> newInstance
    323:328:void recycle() -> recycle
    296:296:pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite access$002(pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite,pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite) -> access$002
    296:296:long access$100(pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite) -> access$100
    296:296:pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite access$000(pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite) -> access$000
    296:296:java.lang.Object access$200(pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite) -> access$200
    296:296:pro.gravit.repackage.io.netty.channel.ChannelPromise access$300(pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite) -> access$300
    296:296:void access$400(pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite) -> access$400
    296:296:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.channel.PendingWriteQueue$1) -> <init>
    297:297:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite$1 -> pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite$1:
# {"fileName":"PendingWriteQueue.java","id":"sourceFile"}
    297:297:void <init>() -> <init>
    300:300:pro.gravit.repackage.io.netty.channel.PendingWriteQueue$PendingWrite newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    297:297:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.PreferHeapByteBufAllocator -> pro.gravit.repackage.io.netty.channel.PreferHeapByteBufAllocator:
# {"fileName":"PreferHeapByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator allocator -> allocator
    32:34:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> <init>
    38:38:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer() -> buffer
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int) -> buffer
    48:48:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    53:53:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    58:58:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    63:63:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer(int,int) -> ioBuffer
    68:68:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    73:73:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    78:78:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    83:83:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    88:88:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    93:93:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    98:98:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    103:103:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    108:108:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    113:113:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    118:118:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    123:123:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    128:128:boolean isDirectBufferPooled() -> isDirectBufferPooled
    133:133:int calculateNewCapacity(int,int) -> calculateNewCapacity
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator -> pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator:
# {"fileName":"RecvByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$DelegatingHandle -> pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$DelegatingHandle:
# {"fileName":"RecvByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle delegate -> delegate
    126:128:void <init>(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle) -> <init>
    135:135:pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle delegate() -> delegate
    140:140:pro.gravit.repackage.io.netty.buffer.ByteBuf allocate(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> allocate
    145:145:int guess() -> guess
    150:151:void reset(pro.gravit.repackage.io.netty.channel.ChannelConfig) -> reset
    155:156:void incMessagesRead(int) -> incMessagesRead
    160:161:void lastBytesRead(int) -> lastBytesRead
    165:165:int lastBytesRead() -> lastBytesRead
    170:170:boolean continueReading() -> continueReading
    175:175:int attemptedBytesRead() -> attemptedBytesRead
    180:181:void attemptedBytesRead(int) -> attemptedBytesRead
    185:186:void readComplete() -> readComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$ExtendedHandle -> pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$ExtendedHandle:
# {"fileName":"RecvByteBufAllocator.java","id":"sourceFile"}
    boolean continueReading(pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier) -> continueReading
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle -> pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle:
# {"fileName":"RecvByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf allocate(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> allocate
    int guess() -> guess
    void reset(pro.gravit.repackage.io.netty.channel.ChannelConfig) -> reset
    void incMessagesRead(int) -> incMessagesRead
    void lastBytesRead(int) -> lastBytesRead
    int lastBytesRead() -> lastBytesRead
    void attemptedBytesRead(int) -> attemptedBytesRead
    int attemptedBytesRead() -> attemptedBytesRead
    boolean continueReading() -> continueReading
    void readComplete() -> readComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ReflectiveChannelFactory -> pro.gravit.repackage.io.netty.channel.ReflectiveChannelFactory:
# {"fileName":"ReflectiveChannelFactory.java","id":"sourceFile"}
    java.lang.reflect.Constructor constructor -> constructor
    31:39:void <init>(java.lang.Class) -> <init>
    44:46:pro.gravit.repackage.io.netty.channel.Channel newChannel() -> newChannel
    52:53:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.SelectStrategy -> pro.gravit.repackage.io.netty.channel.SelectStrategy:
# {"fileName":"SelectStrategy.java","id":"sourceFile"}
    int SELECT -> SELECT
    int CONTINUE -> CONTINUE
    int BUSY_WAIT -> BUSY_WAIT
    int calculateStrategy(pro.gravit.repackage.io.netty.util.IntSupplier,boolean) -> calculateStrategy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.SelectStrategyFactory -> pro.gravit.repackage.io.netty.channel.SelectStrategyFactory:
# {"fileName":"SelectStrategyFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.SelectStrategy newSelectStrategy() -> newSelectStrategy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ServerChannel -> pro.gravit.repackage.io.netty.channel.ServerChannel:
# {"fileName":"ServerChannel.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ServerChannelRecvByteBufAllocator -> pro.gravit.repackage.io.netty.channel.ServerChannelRecvByteBufAllocator:
# {"fileName":"ServerChannelRecvByteBufAllocator.java","id":"sourceFile"}
    23:24:void <init>() -> <init>
    28:28:pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle newHandle() -> newHandle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ServerChannelRecvByteBufAllocator$1 -> pro.gravit.repackage.io.netty.channel.ServerChannelRecvByteBufAllocator$1:
# {"fileName":"ServerChannelRecvByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ServerChannelRecvByteBufAllocator this$0 -> this$0
    28:28:void <init>(pro.gravit.repackage.io.netty.channel.ServerChannelRecvByteBufAllocator) -> <init>
    31:31:int guess() -> guess
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.SimpleChannelInboundHandler -> pro.gravit.repackage.io.netty.channel.SimpleChannelInboundHandler:
# {"fileName":"SimpleChannelInboundHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    boolean autoRelease -> autoRelease
    51:52:void <init>() -> <init>
    60:63:void <init>(boolean) -> <init>
    69:70:void <init>(java.lang.Class) -> <init>
    79:82:void <init>(java.lang.Class,boolean) -> <init>
    89:89:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    94:109:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void channelRead0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead0
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.SimpleUserEventChannelHandler -> pro.gravit.repackage.io.netty.channel.SimpleUserEventChannelHandler:
# {"fileName":"SimpleUserEventChannelHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    boolean autoRelease -> autoRelease
    51:52:void <init>() -> <init>
    60:63:void <init>(boolean) -> <init>
    69:70:void <init>(java.lang.Class) -> <init>
    79:82:void <init>(java.lang.Class,boolean) -> <init>
    89:89:boolean acceptEvent(java.lang.Object) -> acceptEvent
    94:109:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    void eventReceived(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> eventReceived
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.SingleThreadEventLoop -> pro.gravit.repackage.io.netty.channel.SingleThreadEventLoop:
# {"fileName":"SingleThreadEventLoop.java","id":"sourceFile"}
    int DEFAULT_MAX_PENDING_TASKS -> DEFAULT_MAX_PENDING_TASKS
    java.util.Queue tailTasks -> tailTasks
    43:44:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory,boolean) -> <init>
    47:48:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup,java.util.concurrent.Executor,boolean) -> <init>
    53:55:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup,java.util.concurrent.ThreadFactory,boolean,int,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    60:62:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup,java.util.concurrent.Executor,boolean,int,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    67:69:void <init>(pro.gravit.repackage.io.netty.channel.EventLoopGroup,java.util.concurrent.Executor,boolean,java.util.Queue,java.util.Queue,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    73:73:pro.gravit.repackage.io.netty.channel.EventLoopGroup parent() -> parent
    78:78:pro.gravit.repackage.io.netty.channel.EventLoop next() -> next
    83:83:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel) -> register
    88:90:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    96:99:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    109:121:void executeAfterEventLoopIteration(java.lang.Runnable) -> executeAfterEventLoopIteration
    132:132:boolean removeAfterEventLoopIterationTask(java.lang.Runnable) -> removeAfterEventLoopIterationTask
    137:138:void afterRunningAllTasks() -> afterRunningAllTasks
    142:142:boolean hasTasks() -> hasTasks
    147:147:int pendingTasks() -> pendingTasks
    157:157:int registeredChannels() -> registeredChannels
    169:169:java.util.Iterator registeredChannelsIterator() -> registeredChannelsIterator
    35:35:pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    35:35:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    37:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator -> pro.gravit.repackage.io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator:
# {"fileName":"SingleThreadEventLoop.java","id":"sourceFile"}
    java.util.Iterator channelIterator -> channelIterator
    java.util.Iterator EMPTY -> EMPTY
    175:178:void <init>(java.lang.Iterable) -> <init>
    182:182:boolean hasNext() -> hasNext
    187:187:pro.gravit.repackage.io.netty.channel.Channel next() -> next
    192:192:void remove() -> remove
    197:197:java.util.Iterator empty() -> empty
    172:172:java.lang.Object next() -> next
    200:200:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator$1 -> pro.gravit.repackage.io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator$1:
# {"fileName":"SingleThreadEventLoop.java","id":"sourceFile"}
    200:200:void <init>() -> <init>
    203:203:boolean hasNext() -> hasNext
    208:208:java.lang.Object next() -> next
    213:213:void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.StacklessClosedChannelException -> pro.gravit.repackage.io.netty.channel.StacklessClosedChannelException:
# {"fileName":"StacklessClosedChannelException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    29:29:void <init>() -> <init>
    34:34:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    41:41:pro.gravit.repackage.io.netty.channel.StacklessClosedChannelException newInstance(java.lang.Class,java.lang.String) -> newInstance
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.SucceededChannelFuture -> pro.gravit.repackage.io.netty.channel.SucceededChannelFuture:
# {"fileName":"SucceededChannelFuture.java","id":"sourceFile"}
    33:34:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    38:38:java.lang.Throwable cause() -> cause
    43:43:boolean isSuccess() -> isSuccess
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop -> pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop:
# {"fileName":"ThreadPerChannelEventLoop.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup parent -> parent
    pro.gravit.repackage.io.netty.channel.Channel ch -> ch
    31:33:void <init>(pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup) -> <init>
    37:37:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    52:52:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    67:91:void run() -> run
    94:97:void deregister() -> deregister
    101:101:int registeredChannels() -> registeredChannels
    25:25:pro.gravit.repackage.io.netty.channel.Channel access$002(pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop,pro.gravit.repackage.io.netty.channel.Channel) -> access$002
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop$1 -> pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop$1:
# {"fileName":"ThreadPerChannelEventLoop.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop this$0 -> this$0
    37:37:void <init>(pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop) -> <init>
    40:45:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    37:37:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop$2 -> pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop$2:
# {"fileName":"ThreadPerChannelEventLoop.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop this$0 -> this$0
    52:52:void <init>(pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoop) -> <init>
    55:60:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    52:52:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup -> pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup:
# {"fileName":"ThreadPerChannelEventLoopGroup.java","id":"sourceFile"}
    java.lang.Object[] childArgs -> childArgs
    int maxChannels -> maxChannels
    java.util.concurrent.Executor executor -> executor
    java.util.Set activeChildren -> activeChildren
    java.util.Queue idleChildren -> idleChildren
    pro.gravit.repackage.io.netty.channel.ChannelException tooManyChannels -> tooManyChannels
    boolean shuttingDown -> shuttingDown
    pro.gravit.repackage.io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    pro.gravit.repackage.io.netty.util.concurrent.FutureListener childTerminationListener -> childTerminationListener
    75:76:void <init>() -> <init>
    88:89:void <init>(int) -> <init>
    104:105:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    54:137:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    143:143:pro.gravit.repackage.io.netty.channel.EventLoop newChild(java.lang.Object[]) -> newChild
    148:148:java.util.Iterator iterator() -> iterator
    153:153:pro.gravit.repackage.io.netty.channel.EventLoop next() -> next
    158:172:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    177:177:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    183:196:void shutdown() -> shutdown
    200:210:boolean isShuttingDown() -> isShuttingDown
    215:225:boolean isShutdown() -> isShutdown
    230:240:boolean isTerminated() -> isTerminated
    246:269:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    274:279:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel) -> register
    286:289:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    296:301:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    306:319:pro.gravit.repackage.io.netty.channel.EventLoop nextChild() -> nextChild
    48:48:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    49:49:pro.gravit.repackage.io.netty.util.concurrent.Promise access$000(pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup$1 -> pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup$1:
# {"fileName":"ThreadPerChannelEventLoopGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup this$0 -> this$0
    61:61:void <init>(pro.gravit.repackage.io.netty.channel.ThreadPerChannelEventLoopGroup) -> <init>
    65:68:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.VoidChannelPromise -> pro.gravit.repackage.io.netty.channel.VoidChannelPromise:
# {"fileName":"VoidChannelPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener fireExceptionListener -> fireExceptionListener
    38:54:void <init>(pro.gravit.repackage.io.netty.channel.Channel,boolean) -> <init>
    58:59:pro.gravit.repackage.io.netty.channel.VoidChannelPromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    64:65:pro.gravit.repackage.io.netty.channel.VoidChannelPromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    71:71:pro.gravit.repackage.io.netty.channel.VoidChannelPromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    77:77:pro.gravit.repackage.io.netty.channel.VoidChannelPromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    82:85:pro.gravit.repackage.io.netty.channel.VoidChannelPromise await() -> await
    90:91:boolean await(long,java.util.concurrent.TimeUnit) -> await
    96:97:boolean await(long) -> await
    102:103:pro.gravit.repackage.io.netty.channel.VoidChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    108:109:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    114:115:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    120:120:pro.gravit.repackage.io.netty.channel.Channel channel() -> channel
    125:125:boolean isDone() -> isDone
    130:130:boolean isSuccess() -> isSuccess
    135:135:boolean setUncancellable() -> setUncancellable
    140:140:boolean isCancellable() -> isCancellable
    145:145:boolean isCancelled() -> isCancelled
    150:150:java.lang.Throwable cause() -> cause
    155:156:pro.gravit.repackage.io.netty.channel.VoidChannelPromise sync() -> sync
    161:162:pro.gravit.repackage.io.netty.channel.VoidChannelPromise syncUninterruptibly() -> syncUninterruptibly
    167:168:pro.gravit.repackage.io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable) -> setFailure
    173:173:pro.gravit.repackage.io.netty.channel.VoidChannelPromise setSuccess() -> setSuccess
    178:179:boolean tryFailure(java.lang.Throwable) -> tryFailure
    189:189:boolean cancel(boolean) -> cancel
    194:194:boolean trySuccess() -> trySuccess
    198:198:void fail() -> fail
    203:203:pro.gravit.repackage.io.netty.channel.VoidChannelPromise setSuccess(java.lang.Void) -> setSuccess
    208:208:boolean trySuccess(java.lang.Void) -> trySuccess
    213:213:java.lang.Void getNow() -> getNow
    218:222:pro.gravit.repackage.io.netty.channel.ChannelPromise unvoid() -> unvoid
    227:227:boolean isVoid() -> isVoid
    235:238:void fireException0(java.lang.Throwable) -> fireException0
    26:26:java.lang.Object getNow() -> getNow
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise awaitUninterruptibly() -> awaitUninterruptibly
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise await() -> await
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise syncUninterruptibly() -> syncUninterruptibly
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise sync() -> sync
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise setFailure(java.lang.Throwable) -> setFailure
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess() -> setSuccess
    26:26:pro.gravit.repackage.io.netty.channel.ChannelPromise setSuccess(java.lang.Void) -> setSuccess
    26:26:pro.gravit.repackage.io.netty.channel.ChannelFuture awaitUninterruptibly() -> awaitUninterruptibly
    26:26:pro.gravit.repackage.io.netty.channel.ChannelFuture await() -> await
    26:26:pro.gravit.repackage.io.netty.channel.ChannelFuture syncUninterruptibly() -> syncUninterruptibly
    26:26:pro.gravit.repackage.io.netty.channel.ChannelFuture sync() -> sync
    26:26:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    26:26:pro.gravit.repackage.io.netty.channel.ChannelFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    26:26:pro.gravit.repackage.io.netty.channel.ChannelFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    26:26:pro.gravit.repackage.io.netty.channel.ChannelFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise sync() -> sync
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise await() -> await
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    26:26:boolean trySuccess(java.lang.Object) -> trySuccess
    26:26:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    27:27:void access$000(pro.gravit.repackage.io.netty.channel.VoidChannelPromise,java.lang.Throwable) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.VoidChannelPromise$1 -> pro.gravit.repackage.io.netty.channel.VoidChannelPromise$1:
# {"fileName":"VoidChannelPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.VoidChannelPromise this$0 -> this$0
    42:42:void <init>(pro.gravit.repackage.io.netty.channel.VoidChannelPromise) -> <init>
    45:49:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    42:42:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark -> pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark:
# {"fileName":"WriteBufferWaterMark.java","id":"sourceFile"}
    int DEFAULT_LOW_WATER_MARK -> DEFAULT_LOW_WATER_MARK
    int DEFAULT_HIGH_WATER_MARK -> DEFAULT_HIGH_WATER_MARK
    pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark DEFAULT -> DEFAULT
    int low -> low
    int high -> high
    51:52:void <init>(int,int) -> <init>
    57:69:void <init>(int,int,boolean) -> <init>
    75:75:int low() -> low
    82:82:int high() -> high
    87:93:java.lang.String toString() -> toString
    38:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel:
# {"fileName":"EmbeddedChannel.java","id":"sourceFile"}
    java.net.SocketAddress LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.net.SocketAddress REMOTE_ADDRESS -> REMOTE_ADDRESS
    pro.gravit.repackage.io.netty.channel.ChannelHandler[] EMPTY_HANDLERS -> EMPTY_HANDLERS
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA_NO_DISCONNECT -> METADATA_NO_DISCONNECT
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA_DISCONNECT -> METADATA_DISCONNECT
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedEventLoop loop -> loop
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener recordExceptionListener -> recordExceptionListener
    pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata -> metadata
    pro.gravit.repackage.io.netty.channel.ChannelConfig config -> config
    java.util.Queue inboundMessages -> inboundMessages
    java.util.Queue outboundMessages -> outboundMessages
    java.lang.Throwable lastException -> lastException
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State state -> state
    boolean $assertionsDisabled -> $assertionsDisabled
    84:85:void <init>() -> <init>
    93:94:void <init>(pro.gravit.repackage.io.netty.channel.ChannelId) -> <init>
    102:103:void <init>(pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    113:114:void <init>(boolean,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    126:127:void <init>(boolean,boolean,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    137:138:void <init>(pro.gravit.repackage.io.netty.channel.ChannelId,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    150:151:void <init>(pro.gravit.repackage.io.netty.channel.ChannelId,boolean,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    166:167:void <init>(pro.gravit.repackage.io.netty.channel.ChannelId,boolean,boolean,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    64:187:void <init>(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelId,boolean,boolean,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    64:205:void <init>(pro.gravit.repackage.io.netty.channel.ChannelId,boolean,pro.gravit.repackage.io.netty.channel.ChannelConfig,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    208:208:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata(boolean) -> metadata
    212:230:void setup(boolean,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> setup
    236:242:void register() -> register
    246:246:pro.gravit.repackage.io.netty.channel.DefaultChannelPipeline newChannelPipeline() -> newChannelPipeline
    251:251:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    256:256:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    261:261:boolean isOpen() -> isOpen
    266:266:boolean isActive() -> isActive
    273:276:java.util.Queue inboundMessages() -> inboundMessages
    284:284:java.util.Queue lastInboundBuffer() -> lastInboundBuffer
    291:294:java.util.Queue outboundMessages() -> outboundMessages
    302:302:java.util.Queue lastOutboundBuffer() -> lastOutboundBuffer
    310:314:java.lang.Object readInbound() -> readInbound
    322:326:java.lang.Object readOutbound() -> readOutbound
    337:348:boolean writeInbound(java.lang.Object[]) -> writeInbound
    358:358:pro.gravit.repackage.io.netty.channel.ChannelFuture writeOneInbound(java.lang.Object) -> writeOneInbound
    368:371:pro.gravit.repackage.io.netty.channel.ChannelFuture writeOneInbound(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writeOneInbound
    380:381:pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel flushInbound() -> flushInbound
    385:390:pro.gravit.repackage.io.netty.channel.ChannelFuture flushInbound(boolean,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> flushInbound
    400:431:boolean writeOutbound(java.lang.Object[]) -> writeOutbound
    441:441:pro.gravit.repackage.io.netty.channel.ChannelFuture writeOneOutbound(java.lang.Object) -> writeOneOutbound
    451:454:pro.gravit.repackage.io.netty.channel.ChannelFuture writeOneOutbound(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writeOneOutbound
    463:467:pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel flushOutbound() -> flushOutbound
    473:476:void flushOutbound0() -> flushOutbound0
    484:484:boolean finish() -> finish
    494:494:boolean finishAndReleaseAll() -> finishAndReleaseAll
    504:513:boolean finish(boolean) -> finish
    521:521:boolean releaseInbound() -> releaseInbound
    529:529:boolean releaseOutbound() -> releaseOutbound
    533:543:boolean releaseAll(java.util.Queue) -> releaseAll
    547:552:void finishPendingTasks(boolean) -> finishPendingTasks
    556:556:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    561:561:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect() -> disconnect
    568:573:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    578:580:pro.gravit.repackage.io.netty.channel.ChannelFuture disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    584:584:boolean isNotEmpty(java.util.Queue) -> isNotEmpty
    588:588:java.lang.Object poll(java.util.Queue) -> poll
    597:607:void runPendingTasks() -> runPendingTasks
    617:618:boolean hasPendingTasks() -> hasPendingTasks
    628:631:long runScheduledPendingTasks() -> runScheduledPendingTasks
    636:639:void recordException(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> recordException
    642:649:void recordException(java.lang.Throwable) -> recordException
    656:657:void advanceTimeBy(long,java.util.concurrent.TimeUnit) -> advanceTimeBy
    665:666:void freezeTime() -> freezeTime
    676:677:void unfreezeTime() -> unfreezeTime
    683:694:pro.gravit.repackage.io.netty.channel.ChannelFuture checkException(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> checkException
    701:702:void checkException() -> checkException
    709:716:boolean checkOpen(boolean) -> checkOpen
    720:724:pro.gravit.repackage.io.netty.channel.embedded.EmbeddedEventLoop embeddedEventLoop() -> embeddedEventLoop
    731:734:void ensureOpen() -> ensureOpen
    738:738:boolean isCompatible(pro.gravit.repackage.io.netty.channel.EventLoop) -> isCompatible
    743:743:java.net.SocketAddress localAddress0() -> localAddress0
    748:748:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    753:754:void doRegister() -> doRegister
    759:759:void doBind(java.net.SocketAddress) -> doBind
    763:766:void doDisconnect() -> doDisconnect
    770:771:void doClose() -> doClose
    776:776:void doBeginRead() -> doBeginRead
    780:780:pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    785:785:pro.gravit.repackage.io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    791:800:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    808:809:void handleOutboundMessage(java.lang.Object) -> handleOutboundMessage
    815:816:void handleInboundMessage(java.lang.Object) -> handleInboundMessage
    51:51:void access$000(pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel,pro.gravit.repackage.io.netty.channel.ChannelFuture) -> access$000
    51:51:void access$200(pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel,java.lang.Throwable) -> access$200
    51:62:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$1 -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$1:
# {"fileName":"EmbeddedChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    65:65:void <init>(pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel) -> <init>
    68:69:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    65:65:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$2 -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$2:
# {"fileName":"EmbeddedChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandler[] val$handlers -> val$handlers
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    214:214:void <init>(pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel,pro.gravit.repackage.io.netty.channel.ChannelHandler[]) -> <init>
    217:224:void initChannel(pro.gravit.repackage.io.netty.channel.Channel) -> initChannel
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$EmbeddedChannelPipeline -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$EmbeddedChannelPipeline:
# {"fileName":"EmbeddedChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    916:918:void <init>(pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel,pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel) -> <init>
    922:923:void onUnhandledInboundException(java.lang.Throwable) -> onUnhandledInboundException
    927:928:void onUnhandledInboundMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> onUnhandledInboundMessage
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe:
# {"fileName":"EmbeddedChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel$Unsafe wrapped -> wrapped
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel this$0 -> this$0
    818:822:void <init>(pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel) -> <init>
    911:912:void connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    818:818:void <init>(pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel,pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe$1 -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe$1:
# {"fileName":"EmbeddedChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe this$1 -> this$1
    822:822:void <init>(pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$EmbeddedUnsafe) -> <init>
    825:825:pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle() -> recvBufAllocHandle
    830:830:java.net.SocketAddress localAddress() -> localAddress
    835:835:java.net.SocketAddress remoteAddress() -> remoteAddress
    840:842:void register(pro.gravit.repackage.io.netty.channel.EventLoop,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    846:848:void bind(java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    852:854:void connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    858:860:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    864:866:void close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    870:872:void closeForcibly() -> closeForcibly
    876:878:void deregister(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    882:884:void beginRead() -> beginRead
    888:890:void write(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    894:896:void flush() -> flush
    900:900:pro.gravit.repackage.io.netty.channel.ChannelPromise voidPromise() -> voidPromise
    905:905:pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer outboundBuffer() -> outboundBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State:
# {"fileName":"EmbeddedChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State OPEN -> OPEN
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State ACTIVE -> ACTIVE
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State CLOSED -> CLOSED
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State[] $VALUES -> $VALUES
    57:57:pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State[] values() -> values
    57:57:pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel$State valueOf(java.lang.String) -> valueOf
    57:57:void <init>(java.lang.String,int) -> <init>
    57:57:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannelId -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannelId:
# {"fileName":"EmbeddedChannelId.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.channel.ChannelId INSTANCE -> INSTANCE
    30:30:void <init>() -> <init>
    34:34:java.lang.String asShortText() -> asShortText
    39:39:java.lang.String asLongText() -> asLongText
    44:48:int compareTo(pro.gravit.repackage.io.netty.channel.ChannelId) -> compareTo
    53:53:int hashCode() -> hashCode
    58:58:boolean equals(java.lang.Object) -> equals
    63:63:java.lang.String toString() -> toString
    24:24:int compareTo(java.lang.Object) -> compareTo
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedEventLoop -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedEventLoop:
# {"fileName":"EmbeddedEventLoop.java","id":"sourceFile"}
    long startTime -> startTime
    long frozenTimestamp -> frozenTimestamp
    boolean timeFrozen -> timeFrozen
    java.util.Queue tasks -> tasks
    32:50:void <init>() -> <init>
    54:54:pro.gravit.repackage.io.netty.channel.EventLoopGroup parent() -> parent
    59:59:pro.gravit.repackage.io.netty.channel.EventLoop next() -> next
    64:65:void execute(java.lang.Runnable) -> execute
    69:76:void runTasks() -> runTasks
    79:79:boolean hasPendingNormalTasks() -> hasPendingNormalTasks
    83:91:long runScheduledTasks() -> runScheduledTasks
    95:95:long nextScheduledTask() -> nextScheduledTask
    100:103:long getCurrentTimeNanos() -> getCurrentTimeNanos
    107:113:void advanceTimeBy(long) -> advanceTimeBy
    116:120:void freezeTime() -> freezeTime
    123:130:void unfreezeTime() -> unfreezeTime
    134:135:void cancelScheduledTasks() -> cancelScheduledTasks
    139:139:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    144:144:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    150:150:void shutdown() -> shutdown
    155:155:boolean isShuttingDown() -> isShuttingDown
    160:160:boolean isShutdown() -> isShutdown
    165:165:boolean isTerminated() -> isTerminated
    170:170:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    175:175:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel) -> register
    180:182:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    188:189:pro.gravit.repackage.io.netty.channel.ChannelFuture register(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> register
    194:194:boolean inEventLoop() -> inEventLoop
    199:199:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    32:32:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    32:32:pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.embedded.EmbeddedSocketAddress -> pro.gravit.repackage.io.netty.channel.embedded.EmbeddedSocketAddress:
# {"fileName":"EmbeddedSocketAddress.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    20:20:void <init>() -> <init>
    25:25:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelGroup -> pro.gravit.repackage.io.netty.channel.group.ChannelGroup:
# {"fileName":"ChannelGroup.java","id":"sourceFile"}
    java.lang.String name() -> name
    pro.gravit.repackage.io.netty.channel.Channel find(pro.gravit.repackage.io.netty.channel.ChannelId) -> find
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture write(java.lang.Object) -> write
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> write
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher,boolean) -> write
    pro.gravit.repackage.io.netty.channel.group.ChannelGroup flush() -> flush
    pro.gravit.repackage.io.netty.channel.group.ChannelGroup flush(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> flush
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object) -> flushAndWrite
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> writeAndFlush
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher,boolean) -> writeAndFlush
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> flushAndWrite
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture disconnect() -> disconnect
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture disconnect(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> disconnect
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture close() -> close
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture close(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> close
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture deregister() -> deregister
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture deregister(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> deregister
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture newCloseFuture() -> newCloseFuture
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture newCloseFuture(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> newCloseFuture
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelGroupException -> pro.gravit.repackage.io.netty.channel.group.ChannelGroupException:
# {"fileName":"ChannelGroupException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.util.Collection failed -> failed
    35:39:void <init>(java.util.Collection) -> <init>
    47:47:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture -> pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture:
# {"fileName":"ChannelGroupFuture.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.group.ChannelGroup group() -> group
    pro.gravit.repackage.io.netty.channel.ChannelFuture find(pro.gravit.repackage.io.netty.channel.Channel) -> find
    boolean isSuccess() -> isSuccess
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupException cause() -> cause
    boolean isPartialSuccess() -> isPartialSuccess
    boolean isPartialFailure() -> isPartialFailure
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture await() -> await
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture awaitUninterruptibly() -> awaitUninterruptibly
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture sync() -> sync
    java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelGroupFutureListener -> pro.gravit.repackage.io.netty.channel.group.ChannelGroupFutureListener:
# {"fileName":"ChannelGroupFutureListener.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelMatcher -> pro.gravit.repackage.io.netty.channel.group.ChannelMatcher:
# {"fileName":"ChannelMatcher.java","id":"sourceFile"}
    boolean matches(pro.gravit.repackage.io.netty.channel.Channel) -> matches
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelMatchers -> pro.gravit.repackage.io.netty.channel.group.ChannelMatchers:
# {"fileName":"ChannelMatchers.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.group.ChannelMatcher ALL_MATCHER -> ALL_MATCHER
    pro.gravit.repackage.io.netty.channel.group.ChannelMatcher SERVER_CHANNEL_MATCHER -> SERVER_CHANNEL_MATCHER
    pro.gravit.repackage.io.netty.channel.group.ChannelMatcher NON_SERVER_CHANNEL_MATCHER -> NON_SERVER_CHANNEL_MATCHER
    36:38:void <init>() -> <init>
    44:44:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher all() -> all
    51:51:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher isNot(pro.gravit.repackage.io.netty.channel.Channel) -> isNot
    58:58:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher is(pro.gravit.repackage.io.netty.channel.Channel) -> is
    66:66:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher isInstanceOf(java.lang.Class) -> isInstanceOf
    74:74:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher isNotInstanceOf(java.lang.Class) -> isNotInstanceOf
    81:81:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher isServerChannel() -> isServerChannel
    89:89:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher isNonServerChannel() -> isNonServerChannel
    96:96:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher invert(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> invert
    104:110:pro.gravit.repackage.io.netty.channel.group.ChannelMatcher compose(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher[]) -> compose
    26:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$1 -> pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$1:
# {"fileName":"ChannelMatchers.java","id":"sourceFile"}
    26:26:void <init>() -> <init>
    29:29:boolean matches(pro.gravit.repackage.io.netty.channel.Channel) -> matches
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$ClassMatcher -> pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$ClassMatcher:
# {"fileName":"ChannelMatchers.java","id":"sourceFile"}
    java.lang.Class clazz -> clazz
    160:162:void <init>(java.lang.Class) -> <init>
    166:166:boolean matches(pro.gravit.repackage.io.netty.channel.Channel) -> matches
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$CompositeMatcher -> pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$CompositeMatcher:
# {"fileName":"ChannelMatchers.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.group.ChannelMatcher[] matchers -> matchers
    116:118:void <init>(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher[]) -> <init>
    122:127:boolean matches(pro.gravit.repackage.io.netty.channel.Channel) -> matches
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$InstanceMatcher -> pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$InstanceMatcher:
# {"fileName":"ChannelMatchers.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel channel -> channel
    147:149:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    153:153:boolean matches(pro.gravit.repackage.io.netty.channel.Channel) -> matches
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$InvertMatcher -> pro.gravit.repackage.io.netty.channel.group.ChannelMatchers$InvertMatcher:
# {"fileName":"ChannelMatchers.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.group.ChannelMatcher matcher -> matcher
    134:136:void <init>(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> <init>
    140:140:boolean matches(pro.gravit.repackage.io.netty.channel.Channel) -> matches
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.CombinedIterator -> pro.gravit.repackage.io.netty.channel.group.CombinedIterator:
# {"fileName":"CombinedIterator.java","id":"sourceFile"}
    java.util.Iterator i1 -> i1
    java.util.Iterator i2 -> i2
    java.util.Iterator currentIterator -> currentIterator
    31:35:void <init>(java.util.Iterator,java.util.Iterator) -> <init>
    40:47:boolean hasNext() -> hasNext
    56:63:java.lang.Object next() -> next
    69:70:void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroup -> pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroup:
# {"fileName":"DefaultChannelGroup.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    java.lang.String name -> name
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    java.util.concurrent.ConcurrentMap serverChannels -> serverChannels
    java.util.concurrent.ConcurrentMap nonServerChannels -> nonServerChannels
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener remover -> remover
    pro.gravit.repackage.io.netty.channel.group.VoidChannelGroupFuture voidFuture -> voidFuture
    boolean stayClosed -> stayClosed
    boolean closed -> closed
    65:66:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    74:75:void <init>(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    84:85:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,boolean) -> <init>
    48:99:void <init>(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,boolean) -> <init>
    103:103:java.lang.String name() -> name
    108:112:pro.gravit.repackage.io.netty.channel.Channel find(pro.gravit.repackage.io.netty.channel.ChannelId) -> find
    118:118:boolean isEmpty() -> isEmpty
    123:123:int size() -> size
    128:133:boolean contains(java.lang.Object) -> contains
    138:162:boolean add(pro.gravit.repackage.io.netty.channel.Channel) -> add
    167:187:boolean remove(java.lang.Object) -> remove
    192:194:void clear() -> clear
    198:200:java.util.Iterator iterator() -> iterator
    205:208:java.lang.Object[] toArray() -> toArray
    213:216:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    221:221:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture close() -> close
    226:226:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture disconnect() -> disconnect
    231:231:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture deregister() -> deregister
    236:236:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture write(java.lang.Object) -> write
    242:247:java.lang.Object safeDuplicate(java.lang.Object) -> safeDuplicate
    253:253:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> write
    258:279:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture write(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher,boolean) -> write
    284:284:pro.gravit.repackage.io.netty.channel.group.ChannelGroup flush() -> flush
    289:289:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object) -> flushAndWrite
    294:294:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object) -> writeAndFlush
    299:315:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture disconnect(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> disconnect
    320:346:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture close(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> close
    351:367:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture deregister(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> deregister
    372:377:pro.gravit.repackage.io.netty.channel.group.ChannelGroup flush(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> flush
    382:382:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> flushAndWrite
    387:387:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> writeAndFlush
    392:412:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture writeAndFlush(java.lang.Object,pro.gravit.repackage.io.netty.channel.group.ChannelMatcher,boolean) -> writeAndFlush
    417:417:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture newCloseFuture() -> newCloseFuture
    422:436:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture newCloseFuture(pro.gravit.repackage.io.netty.channel.group.ChannelMatcher) -> newCloseFuture
    441:441:int hashCode() -> hashCode
    446:446:boolean equals(java.lang.Object) -> equals
    451:456:int compareTo(pro.gravit.repackage.io.netty.channel.group.ChannelGroup) -> compareTo
    461:461:java.lang.String toString() -> toString
    43:43:boolean add(java.lang.Object) -> add
    43:43:int compareTo(java.lang.Object) -> compareTo
    45:45:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroup$1 -> pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroup$1:
# {"fileName":"DefaultChannelGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroup this$0 -> this$0
    50:50:void <init>(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroup) -> <init>
    53:54:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    50:50:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture -> pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture:
# {"fileName":"DefaultChannelGroupFuture.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.group.ChannelGroup group -> group
    java.util.Map futures -> futures
    int successCount -> successCount
    int failureCount -> failureCount
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener childListener -> childListener
    48:104:void <init>(pro.gravit.repackage.io.netty.channel.group.ChannelGroup,java.util.Collection,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    48:118:void <init>(pro.gravit.repackage.io.netty.channel.group.ChannelGroup,java.util.Map,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    122:122:pro.gravit.repackage.io.netty.channel.group.ChannelGroup group() -> group
    127:127:pro.gravit.repackage.io.netty.channel.ChannelFuture find(pro.gravit.repackage.io.netty.channel.Channel) -> find
    132:132:java.util.Iterator iterator() -> iterator
    137:137:boolean isPartialSuccess() -> isPartialSuccess
    142:142:boolean isPartialFailure() -> isPartialFailure
    147:148:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    153:154:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    159:160:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    166:167:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    172:173:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture await() -> await
    178:179:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture awaitUninterruptibly() -> awaitUninterruptibly
    184:185:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    190:191:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture sync() -> sync
    196:196:pro.gravit.repackage.io.netty.channel.group.ChannelGroupException cause() -> cause
    200:201:void setSuccess0() -> setSuccess0
    204:205:void setFailure0(pro.gravit.repackage.io.netty.channel.group.ChannelGroupException) -> setFailure0
    209:209:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture setSuccess(java.lang.Void) -> setSuccess
    214:214:boolean trySuccess(java.lang.Void) -> trySuccess
    219:219:pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture setFailure(java.lang.Throwable) -> setFailure
    224:224:boolean tryFailure(java.lang.Throwable) -> tryFailure
    229:233:void checkDeadLock() -> checkDeadLock
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise sync() -> sync
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise await() -> await
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    41:41:java.lang.Throwable cause() -> cause
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    41:41:boolean trySuccess(java.lang.Object) -> trySuccess
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    41:41:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    41:41:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture sync() -> sync
    41:41:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    41:41:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture awaitUninterruptibly() -> awaitUninterruptibly
    41:41:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture await() -> await
    41:41:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    41:41:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    41:41:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    41:41:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    41:41:int access$008(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture) -> access$008
    41:41:int access$108(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture) -> access$108
    41:41:int access$000(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture) -> access$000
    41:41:int access$100(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture) -> access$100
    41:41:java.util.Map access$200(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture) -> access$200
    41:41:void access$300(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture,pro.gravit.repackage.io.netty.channel.group.ChannelGroupException) -> access$300
    41:41:void access$400(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture) -> access$400
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture$1 -> pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture$1:
# {"fileName":"DefaultChannelGroupFuture.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture this$0 -> this$0
    48:48:void <init>(pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture) -> <init>
    51:78:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    48:48:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    48:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry -> pro.gravit.repackage.io.netty.channel.group.DefaultChannelGroupFuture$DefaultEntry:
# {"fileName":"DefaultChannelGroupFuture.java","id":"sourceFile"}
    java.lang.Object key -> key
    java.lang.Object value -> value
    239:242:void <init>(java.lang.Object,java.lang.Object) -> <init>
    246:246:java.lang.Object getKey() -> getKey
    251:251:java.lang.Object getValue() -> getValue
    256:256:java.lang.Object setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.group.VoidChannelGroupFuture -> pro.gravit.repackage.io.netty.channel.group.VoidChannelGroupFuture:
# {"fileName":"VoidChannelGroupFuture.java","id":"sourceFile"}
    java.util.Iterator EMPTY -> EMPTY
    pro.gravit.repackage.io.netty.channel.group.ChannelGroup group -> group
    33:35:void <init>(pro.gravit.repackage.io.netty.channel.group.ChannelGroup) -> <init>
    39:39:pro.gravit.repackage.io.netty.channel.group.ChannelGroup group() -> group
    44:44:pro.gravit.repackage.io.netty.channel.ChannelFuture find(pro.gravit.repackage.io.netty.channel.Channel) -> find
    49:49:boolean isSuccess() -> isSuccess
    54:54:pro.gravit.repackage.io.netty.channel.group.ChannelGroupException cause() -> cause
    59:59:boolean isPartialSuccess() -> isPartialSuccess
    64:64:boolean isPartialFailure() -> isPartialFailure
    69:69:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    74:74:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    79:79:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    84:84:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    89:89:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture await() -> await
    94:94:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture awaitUninterruptibly() -> awaitUninterruptibly
    99:99:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture syncUninterruptibly() -> syncUninterruptibly
    104:104:pro.gravit.repackage.io.netty.channel.group.ChannelGroupFuture sync() -> sync
    109:109:java.util.Iterator iterator() -> iterator
    114:114:boolean isCancellable() -> isCancellable
    119:119:boolean await(long,java.util.concurrent.TimeUnit) -> await
    124:124:boolean await(long) -> await
    129:129:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    134:134:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    139:139:java.lang.Void getNow() -> getNow
    149:149:boolean cancel(boolean) -> cancel
    154:154:boolean isCancelled() -> isCancelled
    159:159:boolean isDone() -> isDone
    164:164:java.lang.Void get() -> get
    169:169:java.lang.Void get(long,java.util.concurrent.TimeUnit) -> get
    173:173:java.lang.RuntimeException reject() -> reject
    28:28:java.lang.Object getNow() -> getNow
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    28:28:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    28:28:java.lang.Throwable cause() -> cause
    28:28:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    28:28:java.lang.Object get() -> get
    30:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.internal.ChannelUtils -> pro.gravit.repackage.io.netty.channel.internal.ChannelUtils:
# {"fileName":"ChannelUtils.java","id":"sourceFile"}
    int MAX_BYTES_PER_GATHERING_WRITE_ATTEMPTED_LOW_THRESHOLD -> MAX_BYTES_PER_GATHERING_WRITE_ATTEMPTED_LOW_THRESHOLD
    int WRITE_STATUS_SNDBUF_FULL -> WRITE_STATUS_SNDBUF_FULL
    22:23:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalAddress -> pro.gravit.repackage.io.netty.channel.local.LocalAddress:
# {"fileName":"LocalAddress.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.channel.local.LocalAddress ANY -> ANY
    java.lang.String id -> id
    java.lang.String strVal -> strVal
    43:50:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    55:58:void <init>(java.lang.String) -> <init>
    64:65:void <init>(java.lang.Class) -> <init>
    71:71:java.lang.String id() -> id
    76:76:int hashCode() -> hashCode
    81:85:boolean equals(java.lang.Object) -> equals
    90:90:int compareTo(pro.gravit.repackage.io.netty.channel.local.LocalAddress) -> compareTo
    95:95:java.lang.String toString() -> toString
    29:29:int compareTo(java.lang.Object) -> compareTo
    33:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel -> pro.gravit.repackage.io.netty.channel.local.LocalChannel:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater FINISH_READ_FUTURE_UPDATER -> FINISH_READ_FUTURE_UPDATER
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    int MAX_READER_STACK_DEPTH -> MAX_READER_STACK_DEPTH
    pro.gravit.repackage.io.netty.channel.ChannelConfig config -> config
    java.util.Queue inboundBuffer -> inboundBuffer
    java.lang.Runnable readTask -> readTask
    java.lang.Runnable shutdownHook -> shutdownHook
    pro.gravit.repackage.io.netty.channel.local.LocalChannel$State state -> state
    pro.gravit.repackage.io.netty.channel.local.LocalChannel peer -> peer
    pro.gravit.repackage.io.netty.channel.local.LocalAddress localAddress -> localAddress
    pro.gravit.repackage.io.netty.channel.local.LocalAddress remoteAddress -> remoteAddress
    pro.gravit.repackage.io.netty.channel.ChannelPromise connectPromise -> connectPromise
    boolean readInProgress -> readInProgress
    boolean writeInProgress -> writeInProgress
    pro.gravit.repackage.io.netty.util.concurrent.Future finishReadFuture -> finishReadFuture
    boolean $assertionsDisabled -> $assertionsDisabled
    60:92:void <init>() -> <init>
    60:100:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalServerChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> <init>
    104:104:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    109:109:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    114:114:pro.gravit.repackage.io.netty.channel.local.LocalServerChannel parent() -> parent
    119:119:pro.gravit.repackage.io.netty.channel.local.LocalAddress localAddress() -> localAddress
    124:124:pro.gravit.repackage.io.netty.channel.local.LocalAddress remoteAddress() -> remoteAddress
    129:129:boolean isOpen() -> isOpen
    134:134:boolean isActive() -> isActive
    139:139:pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    144:144:boolean isCompatible(pro.gravit.repackage.io.netty.channel.EventLoop) -> isCompatible
    149:149:java.net.SocketAddress localAddress0() -> localAddress0
    154:154:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    164:191:void doRegister() -> doRegister
    195:199:void doBind(java.net.SocketAddress) -> doBind
    203:204:void doDisconnect() -> doDisconnect
    208:274:void doClose() -> doClose
    277:282:void tryClose(boolean) -> tryClose
    287:288:void doDeregister() -> doDeregister
    291:303:void readInbound() -> readInbound
    307:336:void doBeginRead() -> doBeginRead
    340:386:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    390:395:void finishPeerRead(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> finishPeerRead
    400:418:void runFinishPeerReadTask(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> runFinishPeerReadTask
    421:428:void releaseInboundBuffers() -> releaseInboundBuffers
    431:447:void finishPeerRead0(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> finishPeerRead0
    50:50:java.net.SocketAddress remoteAddress() -> remoteAddress
    50:50:java.net.SocketAddress localAddress() -> localAddress
    50:50:pro.gravit.repackage.io.netty.channel.Channel parent() -> parent
    50:50:void access$000(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> access$000
    50:50:pro.gravit.repackage.io.netty.channel.ChannelPromise access$200(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> access$200
    50:50:void access$300(pro.gravit.repackage.io.netty.channel.local.LocalChannel,boolean) -> access$300
    50:50:void access$400(pro.gravit.repackage.io.netty.channel.local.LocalChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> access$400
    50:50:pro.gravit.repackage.io.netty.channel.local.LocalChannel$State access$500(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> access$500
    50:50:pro.gravit.repackage.io.netty.channel.ChannelPromise access$202(pro.gravit.repackage.io.netty.channel.local.LocalChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$202
    50:50:pro.gravit.repackage.io.netty.channel.local.LocalChannel access$602(pro.gravit.repackage.io.netty.channel.local.LocalChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> access$602
    50:55:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel$1 -> pro.gravit.repackage.io.netty.channel.local.LocalChannel$1:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalChannel this$0 -> this$0
    63:63:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> <init>
    67:70:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel$2 -> pro.gravit.repackage.io.netty.channel.local.LocalChannel$2:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalChannel this$0 -> this$0
    73:73:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> <init>
    76:77:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel$3 -> pro.gravit.repackage.io.netty.channel.local.LocalChannel$3:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalChannel val$peer -> val$peer
    pro.gravit.repackage.io.netty.channel.local.LocalChannel this$0 -> this$0
    177:177:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> <init>
    180:187:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel$4 -> pro.gravit.repackage.io.netty.channel.local.LocalChannel$4:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalChannel val$peer -> val$peer
    boolean val$peerIsActive -> val$peerIsActive
    pro.gravit.repackage.io.netty.channel.local.LocalChannel this$0 -> this$0
    245:245:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel,boolean) -> <init>
    248:249:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel$5 -> pro.gravit.repackage.io.netty.channel.local.LocalChannel$5:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalChannel val$peer -> val$peer
    pro.gravit.repackage.io.netty.channel.local.LocalChannel this$0 -> this$0
    400:400:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> <init>
    403:404:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel$6 -> pro.gravit.repackage.io.netty.channel.local.LocalChannel$6:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$channel$local$LocalChannel$State -> $SwitchMap$io$netty$channel$local$LocalChannel$State
    340:340:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel$LocalUnsafe -> pro.gravit.repackage.io.netty.channel.local.LocalChannel$LocalUnsafe:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalChannel this$0 -> this$0
    449:449:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> <init>
    454:498:void connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    449:449:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannel$State -> pro.gravit.repackage.io.netty.channel.local.LocalChannel$State:
# {"fileName":"LocalChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalChannel$State OPEN -> OPEN
    pro.gravit.repackage.io.netty.channel.local.LocalChannel$State BOUND -> BOUND
    pro.gravit.repackage.io.netty.channel.local.LocalChannel$State CONNECTED -> CONNECTED
    pro.gravit.repackage.io.netty.channel.local.LocalChannel$State CLOSED -> CLOSED
    pro.gravit.repackage.io.netty.channel.local.LocalChannel$State[] $VALUES -> $VALUES
    58:58:pro.gravit.repackage.io.netty.channel.local.LocalChannel$State[] values() -> values
    58:58:pro.gravit.repackage.io.netty.channel.local.LocalChannel$State valueOf(java.lang.String) -> valueOf
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalChannelRegistry -> pro.gravit.repackage.io.netty.channel.local.LocalChannelRegistry:
# {"fileName":"LocalChannelRegistry.java","id":"sourceFile"}
    java.util.concurrent.ConcurrentMap boundChannels -> boundChannels
    32:48:pro.gravit.repackage.io.netty.channel.local.LocalAddress register(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.local.LocalAddress,java.net.SocketAddress) -> register
    52:52:pro.gravit.repackage.io.netty.channel.Channel get(java.net.SocketAddress) -> get
    56:57:void unregister(pro.gravit.repackage.io.netty.channel.local.LocalAddress) -> unregister
    59:61:void <init>() -> <init>
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalEventLoopGroup -> pro.gravit.repackage.io.netty.channel.local.LocalEventLoopGroup:
# {"fileName":"LocalEventLoopGroup.java","id":"sourceFile"}
    31:31:void <init>() -> <init>
    39:40:void <init>(int) -> <init>
    48:49:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    58:59:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalServerChannel -> pro.gravit.repackage.io.netty.channel.local.LocalServerChannel:
# {"fileName":"LocalServerChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelConfig config -> config
    java.util.Queue inboundBuffer -> inboundBuffer
    java.lang.Runnable shutdownHook -> shutdownHook
    int state -> state
    pro.gravit.repackage.io.netty.channel.local.LocalAddress localAddress -> localAddress
    boolean acceptInProgress -> acceptInProgress
    39:55:void <init>() -> <init>
    59:59:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    64:64:pro.gravit.repackage.io.netty.channel.local.LocalAddress localAddress() -> localAddress
    69:69:pro.gravit.repackage.io.netty.channel.local.LocalAddress remoteAddress() -> remoteAddress
    74:74:boolean isOpen() -> isOpen
    79:79:boolean isActive() -> isActive
    84:84:boolean isCompatible(pro.gravit.repackage.io.netty.channel.EventLoop) -> isCompatible
    89:89:java.net.SocketAddress localAddress0() -> localAddress0
    94:95:void doRegister() -> doRegister
    99:101:void doBind(java.net.SocketAddress) -> doBind
    105:113:void doClose() -> doClose
    117:118:void doDeregister() -> doDeregister
    122:133:void doBeginRead() -> doBeginRead
    136:147:pro.gravit.repackage.io.netty.channel.local.LocalChannel serve(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> serve
    151:163:void readInbound() -> readInbound
    170:170:pro.gravit.repackage.io.netty.channel.local.LocalChannel newLocalChannel(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> newLocalChannel
    174:180:void serve0(pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> serve0
    37:37:java.net.SocketAddress remoteAddress() -> remoteAddress
    37:37:java.net.SocketAddress localAddress() -> localAddress
    37:37:void access$000(pro.gravit.repackage.io.netty.channel.local.LocalServerChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalServerChannel$1 -> pro.gravit.repackage.io.netty.channel.local.LocalServerChannel$1:
# {"fileName":"LocalServerChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalServerChannel this$0 -> this$0
    40:40:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalServerChannel,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalServerChannel$2 -> pro.gravit.repackage.io.netty.channel.local.LocalServerChannel$2:
# {"fileName":"LocalServerChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalServerChannel this$0 -> this$0
    42:42:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalServerChannel) -> <init>
    45:46:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.local.LocalServerChannel$3 -> pro.gravit.repackage.io.netty.channel.local.LocalServerChannel$3:
# {"fileName":"LocalServerChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.local.LocalChannel val$child -> val$child
    pro.gravit.repackage.io.netty.channel.local.LocalServerChannel this$0 -> this$0
    140:140:void <init>(pro.gravit.repackage.io.netty.channel.local.LocalServerChannel,pro.gravit.repackage.io.netty.channel.local.LocalChannel) -> <init>
    143:144:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel:
# {"fileName":"AbstractNioByteChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    java.lang.Runnable flushTask -> flushTask
    boolean inputClosedSeenErrorOnRead -> inputClosedSeenErrorOnRead
    49:67:void <init>(pro.gravit.repackage.io.netty.channel.Channel,java.nio.channels.SelectableChannel) -> <init>
    pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    75:75:boolean isInputShutdown0() -> isInputShutdown0
    80:80:pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    85:85:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    89:89:boolean shouldBreakReadReady(pro.gravit.repackage.io.netty.channel.ChannelConfig) -> shouldBreakReadReady
    93:94:boolean isAllowHalfClosure(pro.gravit.repackage.io.netty.channel.ChannelConfig) -> isAllowHalfClosure
    207:212:int doWrite0(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite0
    216:250:int doWriteInternal(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer,java.lang.Object) -> doWriteInternal
    255:268:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    272:286:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    291:303:void incompleteWrite(boolean) -> incompleteWrite
    long doWriteFileRegion(pro.gravit.repackage.io.netty.channel.FileRegion) -> doWriteFileRegion
    int doReadBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doReadBytes
    int doWriteBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doWriteBytes
    326:337:void setOpWrite() -> setOpWrite
    340:351:void clearOpWrite() -> clearOpWrite
    43:43:pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    43:43:boolean access$000(pro.gravit.repackage.io.netty.channel.ChannelConfig) -> access$000
    43:43:boolean access$100(pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel) -> access$100
    43:43:boolean access$102(pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel,boolean) -> access$102
    44:47:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel$1 -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel$1:
# {"fileName":"AbstractNioByteChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel this$0 -> this$0
    49:49:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel) -> <init>
    54:55:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe:
# {"fileName":"AbstractNioByteChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel this$0 -> this$0
    97:97:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioByteChannel) -> <init>
    100:111:void closeOnRead(pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> closeOnRead
    115:132:void handleReadException(pro.gravit.repackage.io.netty.channel.ChannelPipeline,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.Throwable,boolean,pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle) -> handleReadException
    136:189:void read() -> read
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel:
# {"fileName":"AbstractNioChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.SelectableChannel ch -> ch
    int readInterestOp -> readInterestOp
    java.nio.channels.SelectionKey selectionKey -> selectionKey
    boolean readPending -> readPending
    java.lang.Runnable clearReadPendingRunnable -> clearReadPendingRunnable
    pro.gravit.repackage.io.netty.channel.ChannelPromise connectPromise -> connectPromise
    pro.gravit.repackage.io.netty.util.concurrent.Future connectTimeoutFuture -> connectTimeoutFuture
    java.net.SocketAddress requestedRemoteAddress -> requestedRemoteAddress
    boolean $assertionsDisabled -> $assertionsDisabled
    57:95:void <init>(pro.gravit.repackage.io.netty.channel.Channel,java.nio.channels.SelectableChannel,int) -> <init>
    99:99:boolean isOpen() -> isOpen
    104:104:pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$NioUnsafe unsafe() -> unsafe
    108:108:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    113:113:pro.gravit.repackage.io.netty.channel.nio.NioEventLoop eventLoop() -> eventLoop
    120:121:java.nio.channels.SelectionKey selectionKey() -> selectionKey
    130:130:boolean isReadPending() -> isReadPending
    139:157:void setReadPending(boolean) -> setReadPending
    163:176:void clearReadPending() -> clearReadPending
    179:183:void setReadPending0(boolean) -> setReadPending0
    186:188:void clearReadPending0() -> clearReadPending0
    372:372:boolean isCompatible(pro.gravit.repackage.io.netty.channel.EventLoop) -> isCompatible
    377:393:void doRegister() -> doRegister
    399:400:void doDeregister() -> doDeregister
    405:416:void doBeginRead() -> doBeginRead
    boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    void doFinishConnect() -> doFinishConnect
    434:456:pro.gravit.repackage.io.netty.buffer.ByteBuf newDirectBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> newDirectBuffer
    466:494:pro.gravit.repackage.io.netty.buffer.ByteBuf newDirectBuffer(pro.gravit.repackage.io.netty.util.ReferenceCounted,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> newDirectBuffer
    499:511:void doClose() -> doClose
    48:48:pro.gravit.repackage.io.netty.channel.Channel$Unsafe unsafe() -> unsafe
    48:48:pro.gravit.repackage.io.netty.channel.EventLoop eventLoop() -> eventLoop
    48:48:void access$000(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel) -> access$000
    48:48:void access$100(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel,boolean) -> access$100
    48:48:pro.gravit.repackage.io.netty.channel.ChannelPromise access$200(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel) -> access$200
    48:48:pro.gravit.repackage.io.netty.channel.ChannelPromise access$202(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$202
    48:48:java.net.SocketAddress access$302(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel,java.net.SocketAddress) -> access$302
    48:48:pro.gravit.repackage.io.netty.util.concurrent.Future access$402(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel,pro.gravit.repackage.io.netty.util.concurrent.Future) -> access$402
    48:48:pro.gravit.repackage.io.netty.util.concurrent.Future access$400(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel) -> access$400
    48:48:java.net.SocketAddress access$300(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel) -> access$300
    48:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$1 -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$1:
# {"fileName":"AbstractNioChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    57:57:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel) -> <init>
    60:61:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$2 -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$2:
# {"fileName":"AbstractNioChannel.java","id":"sourceFile"}
    boolean val$readPending -> val$readPending
    pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    144:144:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel,boolean) -> <init>
    147:148:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe:
# {"fileName":"AbstractNioChannel.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel this$0 -> this$0
    212:212:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel) -> <init>
    215:227:void removeReadOp() -> removeReadOp
    231:231:java.nio.channels.SelectableChannel ch() -> ch
    237:287:void connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    290:312:void fulfillConnectPromise(pro.gravit.repackage.io.netty.channel.ChannelPromise,boolean) -> fulfillConnectPromise
    315:323:void fulfillConnectPromise(pro.gravit.repackage.io.netty.channel.ChannelPromise,java.lang.Throwable) -> fulfillConnectPromise
    330:346:void finishConnect() -> finishConnect
    353:356:void flush0() -> flush0
    361:362:void forceFlush() -> forceFlush
    365:366:boolean isFlushPending() -> isFlushPending
    212:212:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1 -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1:
# {"fileName":"AbstractNioChannel.java","id":"sourceFile"}
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe this$1 -> this$1
    257:257:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe,java.net.SocketAddress) -> <init>
    260:266:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2 -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$2:
# {"fileName":"AbstractNioChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe this$1 -> this$1
    270:270:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe) -> <init>
    273:280:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    270:270:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$NioUnsafe -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$NioUnsafe:
# {"fileName":"AbstractNioChannel.java","id":"sourceFile"}
    java.nio.channels.SelectableChannel ch() -> ch
    void finishConnect() -> finishConnect
    void read() -> read
    void forceFlush() -> forceFlush
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel:
# {"fileName":"AbstractNioMessageChannel.java","id":"sourceFile"}
    boolean inputShutdown -> inputShutdown
    42:43:void <init>(pro.gravit.repackage.io.netty.channel.Channel,java.nio.channels.SelectableChannel,int) -> <init>
    47:47:pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    52:56:void doBeginRead() -> doBeginRead
    59:59:boolean continueReading(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle) -> continueReading
    131:175:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    181:181:boolean continueOnWriteError() -> continueOnWriteError
    185:197:boolean closeOnReadError(java.lang.Throwable) -> closeOnReadError
    int doReadMessages(java.util.List) -> doReadMessages
    boolean doWriteMessage(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    35:35:pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel$1 -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel$1:
# {"fileName":"AbstractNioMessageChannel.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe -> pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe:
# {"fileName":"AbstractNioMessageChannel.java","id":"sourceFile"}
    java.util.List readBuf -> readBuf
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel this$0 -> this$0
    62:64:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel) -> <init>
    68:126:void read() -> read
    62:62:void <init>(pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel,pro.gravit.repackage.io.netty.channel.nio.AbstractNioMessageChannel$1) -> <init>
    62:62:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int CLEANUP_INTERVAL -> CLEANUP_INTERVAL
    boolean DISABLE_KEY_SET_OPTIMIZATION -> DISABLE_KEY_SET_OPTIMIZATION
    int MIN_PREMATURE_SELECTOR_RETURNS -> MIN_PREMATURE_SELECTOR_RETURNS
    int SELECTOR_AUTO_REBUILD_THRESHOLD -> SELECTOR_AUTO_REBUILD_THRESHOLD
    pro.gravit.repackage.io.netty.util.IntSupplier selectNowSupplier -> selectNowSupplier
    java.nio.channels.Selector selector -> selector
    java.nio.channels.Selector unwrappedSelector -> unwrappedSelector
    pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet selectedKeys -> selectedKeys
    java.nio.channels.spi.SelectorProvider provider -> provider
    long AWAKE -> AWAKE
    long NONE -> NONE
    java.util.concurrent.atomic.AtomicLong nextWakeupNanos -> nextWakeupNanos
    pro.gravit.repackage.io.netty.channel.SelectStrategy selectStrategy -> selectStrategy
    int ioRatio -> ioRatio
    int cancelledKeys -> cancelledKeys
    boolean needsToSelectAgain -> needsToSelectAgain
    boolean $assertionsDisabled -> $assertionsDisabled
    70:149:void <init>(pro.gravit.repackage.io.netty.channel.nio.NioEventLoopGroup,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.SelectStrategy,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler,pro.gravit.repackage.io.netty.channel.EventLoopTaskQueueFactory,pro.gravit.repackage.io.netty.channel.EventLoopTaskQueueFactory) -> <init>
    153:156:java.util.Queue newTaskQueue(pro.gravit.repackage.io.netty.channel.EventLoopTaskQueueFactory) -> newTaskQueue
    177:265:pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$SelectorTuple openSelector() -> openSelector
    273:273:java.nio.channels.spi.SelectorProvider selectorProvider() -> selectorProvider
    278:278:java.util.Queue newTaskQueue(int) -> newTaskQueue
    283:284:java.util.Queue newTaskQueue0(int) -> newTaskQueue0
    293:324:void register(java.nio.channels.SelectableChannel,int,pro.gravit.repackage.io.netty.channel.nio.NioTask) -> register
    328:332:void register0(java.nio.channels.SelectableChannel,int,pro.gravit.repackage.io.netty.channel.nio.NioTask) -> register0
    338:338:int getIoRatio() -> getIoRatio
    348:352:void setIoRatio(int) -> setIoRatio
    359:369:void rebuildSelector() -> rebuildSelector
    373:373:int registeredChannels() -> registeredChannels
    378:383:java.util.Iterator registeredChannelsIterator() -> registeredChannelsIterator
    442:501:void rebuildSelector0() -> rebuildSelector0
    505:605:void run() -> run
    611:633:boolean unexpectedSelectorWakeup(int) -> unexpectedSelectorWakeup
    637:646:void handleLoopException(java.lang.Throwable) -> handleLoopException
    649:654:void processSelectedKeys() -> processSelectedKeys
    659:663:void cleanup() -> cleanup
    666:672:void cancel(java.nio.channels.SelectionKey) -> cancel
    678:712:void processSelectedKeysPlain(java.util.Set) -> processSelectedKeysPlain
    715:740:void processSelectedKeysOptimized() -> processSelectedKeysOptimized
    743:793:void processSelectedKey(java.nio.channels.SelectionKey,pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel) -> processSelectedKey
    796:819:void processSelectedKey(java.nio.channels.SelectionKey,pro.gravit.repackage.io.netty.channel.nio.NioTask) -> processSelectedKey
    822:840:void closeAll() -> closeAll
    844:848:void invokeChannelUnregistered(pro.gravit.repackage.io.netty.channel.nio.NioTask,java.nio.channels.SelectionKey,java.lang.Throwable) -> invokeChannelUnregistered
    852:855:void wakeup(boolean) -> wakeup
    860:860:boolean beforeScheduledTaskSubmitted(long) -> beforeScheduledTaskSubmitted
    866:866:boolean afterScheduledTaskSubmitted(long) -> afterScheduledTaskSubmitted
    870:870:java.nio.channels.Selector unwrappedSelector() -> unwrappedSelector
    874:874:int selectNow() -> selectNow
    878:883:int select(long) -> select
    887:893:void selectAgain() -> selectAgain
    58:58:void access$000(pro.gravit.repackage.io.netty.channel.nio.NioEventLoop,java.nio.channels.SelectableChannel,int,pro.gravit.repackage.io.netty.channel.nio.NioTask) -> access$000
    58:58:void access$100(pro.gravit.repackage.io.netty.channel.nio.NioEventLoop) -> access$100
    58:113:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$1 -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$1:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.nio.NioEventLoop this$0 -> this$0
    70:70:void <init>(pro.gravit.repackage.io.netty.channel.nio.NioEventLoop) -> <init>
    73:73:int get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$2 -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$2:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    89:89:void <init>() -> <init>
    92:93:java.lang.Void run() -> run
    89:89:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$3 -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$3:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.nio.NioEventLoop this$0 -> this$0
    186:186:void <init>(pro.gravit.repackage.io.netty.channel.nio.NioEventLoop) -> <init>
    190:195:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$4 -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$4:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    java.lang.Class val$selectorImplClass -> val$selectorImplClass
    java.nio.channels.Selector val$unwrappedSelector -> val$unwrappedSelector
    pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet val$selectedKeySet -> val$selectedKeySet
    pro.gravit.repackage.io.netty.channel.nio.NioEventLoop this$0 -> this$0
    213:213:void <init>(pro.gravit.repackage.io.netty.channel.nio.NioEventLoop,java.lang.Class,java.nio.channels.Selector,pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet) -> <init>
    217:252:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$5 -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$5:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    java.nio.channels.SelectableChannel val$ch -> val$ch
    int val$interestOps -> val$interestOps
    pro.gravit.repackage.io.netty.channel.nio.NioTask val$task -> val$task
    pro.gravit.repackage.io.netty.channel.nio.NioEventLoop this$0 -> this$0
    313:313:void <init>(pro.gravit.repackage.io.netty.channel.nio.NioEventLoop,java.nio.channels.SelectableChannel,int,pro.gravit.repackage.io.netty.channel.nio.NioTask) -> <init>
    316:317:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$6 -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$6:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.nio.NioEventLoop this$0 -> this$0
    360:360:void <init>(pro.gravit.repackage.io.netty.channel.nio.NioEventLoop) -> <init>
    363:364:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$7 -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$7:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    java.util.Iterator selectionKeyIterator -> selectionKeyIterator
    pro.gravit.repackage.io.netty.channel.Channel next -> next
    boolean isDone -> isDone
    java.util.Set val$keys -> val$keys
    pro.gravit.repackage.io.netty.channel.nio.NioEventLoop this$0 -> this$0
    383:386:void <init>(pro.gravit.repackage.io.netty.channel.nio.NioEventLoop,java.util.Set) -> <init>
    392:400:boolean hasNext() -> hasNext
    405:416:pro.gravit.repackage.io.netty.channel.Channel next() -> next
    421:421:void remove() -> remove
    425:436:pro.gravit.repackage.io.netty.channel.Channel nextOrDone() -> nextOrDone
    383:383:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$SelectorTuple -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoop$SelectorTuple:
# {"fileName":"NioEventLoop.java","id":"sourceFile"}
    java.nio.channels.Selector unwrappedSelector -> unwrappedSelector
    java.nio.channels.Selector selector -> selector
    163:166:void <init>(java.nio.channels.Selector) -> <init>
    168:171:void <init>(java.nio.channels.Selector,java.nio.channels.Selector) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioEventLoopGroup -> pro.gravit.repackage.io.netty.channel.nio.NioEventLoopGroup:
# {"fileName":"NioEventLoopGroup.java","id":"sourceFile"}
    45:46:void <init>() -> <init>
    53:54:void <init>(int) -> <init>
    61:62:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    69:70:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    73:74:void <init>(int,java.util.concurrent.Executor) -> <init>
    82:83:void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider) -> <init>
    87:88:void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.SelectStrategyFactory) -> <init>
    92:93:void <init>(int,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider) -> <init>
    97:98:void <init>(int,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.SelectStrategyFactory) -> <init>
    103:105:void <init>(int,java.util.concurrent.Executor,pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory,java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.SelectStrategyFactory) -> <init>
    111:112:void <init>(int,java.util.concurrent.Executor,pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory,java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.SelectStrategyFactory,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    119:121:void <init>(int,java.util.concurrent.Executor,pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory,java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.SelectStrategyFactory,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler,pro.gravit.repackage.io.netty.channel.EventLoopTaskQueueFactory) -> <init>
    143:145:void <init>(int,java.util.concurrent.Executor,pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory,java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.SelectStrategyFactory,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler,pro.gravit.repackage.io.netty.channel.EventLoopTaskQueueFactory,pro.gravit.repackage.io.netty.channel.EventLoopTaskQueueFactory) -> <init>
    152:155:void setIoRatio(int) -> setIoRatio
    162:165:void rebuildSelectors() -> rebuildSelectors
    169:183:pro.gravit.repackage.io.netty.channel.EventLoop newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    38:38:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.NioTask -> pro.gravit.repackage.io.netty.channel.nio.NioTask:
# {"fileName":"NioTask.java","id":"sourceFile"}
    void channelReady(java.nio.channels.SelectableChannel,java.nio.channels.SelectionKey) -> channelReady
    void channelUnregistered(java.nio.channels.SelectableChannel,java.lang.Throwable) -> channelUnregistered
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet -> pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet:
# {"fileName":"SelectedSelectionKeySet.java","id":"sourceFile"}
    java.nio.channels.SelectionKey[] keys -> keys
    int size -> size
    29:31:void <init>() -> <init>
    35:44:boolean add(java.nio.channels.SelectionKey) -> add
    49:49:boolean remove(java.lang.Object) -> remove
    54:54:boolean contains(java.lang.Object) -> contains
    59:59:int size() -> size
    64:64:java.util.Iterator iterator() -> iterator
    88:89:void reset() -> reset
    92:94:void reset(int) -> reset
    97:100:void increaseCapacity() -> increaseCapacity
    24:24:boolean add(java.lang.Object) -> add
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet$1 -> pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet$1:
# {"fileName":"SelectedSelectionKeySet.java","id":"sourceFile"}
    int idx -> idx
    pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet this$0 -> this$0
    64:64:void <init>(pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet) -> <init>
    69:69:boolean hasNext() -> hasNext
    74:77:java.nio.channels.SelectionKey next() -> next
    82:82:void remove() -> remove
    64:64:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySetSelector -> pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySetSelector:
# {"fileName":"SelectedSelectionKeySetSelector.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet selectionKeys -> selectionKeys
    java.nio.channels.Selector delegate -> delegate
    28:31:void <init>(java.nio.channels.Selector,pro.gravit.repackage.io.netty.channel.nio.SelectedSelectionKeySet) -> <init>
    35:35:boolean isOpen() -> isOpen
    40:40:java.nio.channels.spi.SelectorProvider provider() -> provider
    45:45:java.util.Set keys() -> keys
    50:50:java.util.Set selectedKeys() -> selectedKeys
    55:56:int selectNow() -> selectNow
    61:62:int select(long) -> select
    67:68:int select() -> select
    73:73:java.nio.channels.Selector wakeup() -> wakeup
    78:79:void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.AbstractOioByteChannel -> pro.gravit.repackage.io.netty.channel.oio.AbstractOioByteChannel:
# {"fileName":"AbstractOioByteChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    51:52:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    56:56:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    boolean isInputShutdown() -> isInputShutdown
    pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    72:81:void closeOnRead(pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> closeOnRead
    85:102:void handleReadException(pro.gravit.repackage.io.netty.channel.ChannelPipeline,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.Throwable,boolean,pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle) -> handleReadException
    106:197:void doRead() -> doRead
    202:228:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    232:237:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    int available() -> available
    int doReadBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doReadBytes
    void doWriteBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doWriteBytes
    void doWriteFileRegion(pro.gravit.repackage.io.netty.channel.FileRegion) -> doWriteFileRegion
    42:45:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel -> pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel:
# {"fileName":"AbstractOioChannel.java","id":"sourceFile"}
    int SO_TIMEOUT -> SO_TIMEOUT
    boolean readPending -> readPending
    boolean readWhenInactive -> readWhenInactive
    java.lang.Runnable readTask -> readTask
    java.lang.Runnable clearReadPendingRunnable -> clearReadPendingRunnable
    38:56:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    60:60:pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    93:93:boolean isCompatible(pro.gravit.repackage.io.netty.channel.EventLoop) -> isCompatible
    void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    104:114:void doBeginRead() -> doBeginRead
    void doRead() -> doRead
    124:124:boolean isReadPending() -> isReadPending
    133:148:void setReadPending(boolean) -> setReadPending
    154:165:void clearReadPending() -> clearReadPending
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$1 -> pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$1:
# {"fileName":"AbstractOioChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel this$0 -> this$0
    38:38:void <init>(pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel) -> <init>
    41:42:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$2 -> pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$2:
# {"fileName":"AbstractOioChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel this$0 -> this$0
    44:44:void <init>(pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel) -> <init>
    47:48:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$3 -> pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$3:
# {"fileName":"AbstractOioChannel.java","id":"sourceFile"}
    boolean val$readPending -> val$readPending
    pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel this$0 -> this$0
    138:138:void <init>(pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel,boolean) -> <init>
    141:142:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe -> pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$DefaultOioUnsafe:
# {"fileName":"AbstractOioChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel this$0 -> this$0
    63:63:void <init>(pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel) -> <init>
    68:88:void connect(java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    63:63:void <init>(pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel,pro.gravit.repackage.io.netty.channel.oio.AbstractOioChannel$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.AbstractOioMessageChannel -> pro.gravit.repackage.io.netty.channel.oio.AbstractOioMessageChannel:
# {"fileName":"AbstractOioMessageChannel.java","id":"sourceFile"}
    java.util.List readBuf -> readBuf
    35:39:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    43:107:void doRead() -> doRead
    int doReadMessages(java.util.List) -> doReadMessages
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.OioByteStreamChannel -> pro.gravit.repackage.io.netty.channel.oio.OioByteStreamChannel:
# {"fileName":"OioByteStreamChannel.java","id":"sourceFile"}
    java.io.InputStream CLOSED_IN -> CLOSED_IN
    java.io.OutputStream CLOSED_OUT -> CLOSED_OUT
    java.io.InputStream is -> is
    java.io.OutputStream os -> os
    java.nio.channels.WritableByteChannel outChannel -> outChannel
    66:67:void <init>(pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    73:85:void activate(java.io.InputStream,java.io.OutputStream) -> activate
    89:95:boolean isActive() -> isActive
    101:103:int available() -> available
    109:111:int doReadBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doReadBytes
    116:121:void doWriteBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doWriteBytes
    125:145:void doWriteFileRegion(pro.gravit.repackage.io.netty.channel.FileRegion) -> doWriteFileRegion
    149:153:void checkEOF(pro.gravit.repackage.io.netty.channel.FileRegion) -> checkEOF
    157:171:void doClose() -> doClose
    41:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.OioByteStreamChannel$1 -> pro.gravit.repackage.io.netty.channel.oio.OioByteStreamChannel$1:
# {"fileName":"OioByteStreamChannel.java","id":"sourceFile"}
    41:41:void <init>() -> <init>
    44:44:int read() -> read
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.OioByteStreamChannel$2 -> pro.gravit.repackage.io.netty.channel.oio.OioByteStreamChannel$2:
# {"fileName":"OioByteStreamChannel.java","id":"sourceFile"}
    48:48:void <init>() -> <init>
    51:51:void write(int) -> write
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.oio.OioEventLoopGroup -> pro.gravit.repackage.io.netty.channel.oio.OioEventLoopGroup:
# {"fileName":"OioEventLoopGroup.java","id":"sourceFile"}
    42:43:void <init>() -> <init>
    55:56:void <init>(int) -> <init>
    70:71:void <init>(int,java.util.concurrent.Executor) -> <init>
    85:86:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.AbstractChannelPoolHandler -> pro.gravit.repackage.io.netty.channel.pool.AbstractChannelPoolHandler:
# {"fileName":"AbstractChannelPoolHandler.java","id":"sourceFile"}
    23:23:void <init>() -> <init>
    33:33:void channelAcquired(pro.gravit.repackage.io.netty.channel.Channel) -> channelAcquired
    43:43:void channelReleased(pro.gravit.repackage.io.netty.channel.Channel) -> channelReleased
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.AbstractChannelPoolMap -> pro.gravit.repackage.io.netty.channel.pool.AbstractChannelPoolMap:
# {"fileName":"AbstractChannelPoolMap.java","id":"sourceFile"}
    java.util.concurrent.ConcurrentMap map -> map
    36:38:void <init>() -> <init>
    42:52:pro.gravit.repackage.io.netty.channel.pool.ChannelPool get(java.lang.Object) -> get
    64:69:boolean remove(java.lang.Object) -> remove
    80:95:pro.gravit.repackage.io.netty.util.concurrent.Future removeAsyncIfSupported(java.lang.Object) -> removeAsyncIfSupported
    105:112:pro.gravit.repackage.io.netty.util.concurrent.Future poolCloseAsyncIfSupported(pro.gravit.repackage.io.netty.channel.pool.ChannelPool) -> poolCloseAsyncIfSupported
    119:119:java.util.Iterator iterator() -> iterator
    126:126:int size() -> size
    133:133:boolean isEmpty() -> isEmpty
    138:138:boolean contains(java.lang.Object) -> contains
    pro.gravit.repackage.io.netty.channel.pool.ChannelPool newPool(java.lang.Object) -> newPool
    148:152:void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.AbstractChannelPoolMap$1 -> pro.gravit.repackage.io.netty.channel.pool.AbstractChannelPoolMap$1:
# {"fileName":"AbstractChannelPoolMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$removePromise -> val$removePromise
    pro.gravit.repackage.io.netty.channel.pool.AbstractChannelPoolMap this$0 -> this$0
    83:83:void <init>(pro.gravit.repackage.io.netty.channel.pool.AbstractChannelPoolMap,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    86:91:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker -> pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker:
# {"fileName":"ChannelHealthChecker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker ACTIVE -> ACTIVE
    pro.gravit.repackage.io.netty.util.concurrent.Future isHealthy(pro.gravit.repackage.io.netty.channel.Channel) -> isHealthy
    32:32:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker$1 -> pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker$1:
# {"fileName":"ChannelHealthChecker.java","id":"sourceFile"}
    32:32:void <init>() -> <init>
    35:36:pro.gravit.repackage.io.netty.util.concurrent.Future isHealthy(pro.gravit.repackage.io.netty.channel.Channel) -> isHealthy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.ChannelPool -> pro.gravit.repackage.io.netty.channel.pool.ChannelPool:
# {"fileName":"ChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future acquire() -> acquire
    pro.gravit.repackage.io.netty.util.concurrent.Future acquire(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> acquire
    pro.gravit.repackage.io.netty.util.concurrent.Future release(pro.gravit.repackage.io.netty.channel.Channel) -> release
    pro.gravit.repackage.io.netty.util.concurrent.Future release(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> release
    void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler -> pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler:
# {"fileName":"ChannelPoolHandler.java","id":"sourceFile"}
    void channelReleased(pro.gravit.repackage.io.netty.channel.Channel) -> channelReleased
    void channelAcquired(pro.gravit.repackage.io.netty.channel.Channel) -> channelAcquired
    void channelCreated(pro.gravit.repackage.io.netty.channel.Channel) -> channelCreated
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.ChannelPoolMap -> pro.gravit.repackage.io.netty.channel.pool.ChannelPoolMap:
# {"fileName":"ChannelPoolMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.pool.ChannelPool get(java.lang.Object) -> get
    boolean contains(java.lang.Object) -> contains
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    long acquireTimeoutNanos -> acquireTimeoutNanos
    java.lang.Runnable timeoutTask -> timeoutTask
    java.util.Queue pendingAcquireQueue -> pendingAcquireQueue
    int maxConnections -> maxConnections
    int maxPendingAcquires -> maxPendingAcquires
    java.util.concurrent.atomic.AtomicInteger acquiredChannelCount -> acquiredChannelCount
    int pendingAcquireCount -> pendingAcquireCount
    boolean closed -> closed
    boolean $assertionsDisabled -> $assertionsDisabled
    79:80:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler,int) -> <init>
    95:96:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler,int,int) -> <init>
    120:121:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler,pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker,pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction,long,int,int) -> <init>
    147:149:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler,pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker,pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction,long,int,int,boolean) -> <init>
    62:218:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler,pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker,pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction,long,int,int,boolean,boolean) -> <init>
    222:222:int acquiredChannelCount() -> acquiredChannelCount
    228:241:pro.gravit.repackage.io.netty.util.concurrent.Future acquire(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> acquire
    246:284:void acquire0(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> acquire0
    287:288:void tooManyOutstanding(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> tooManyOutstanding
    292:324:pro.gravit.repackage.io.netty.util.concurrent.Future release(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> release
    329:337:void decrementAndRunTaskQueue() -> decrementAndRunTaskQueue
    340:361:void runTaskQueue() -> runTaskQueue
    451:456:void close() -> close
    465:484:pro.gravit.repackage.io.netty.util.concurrent.Future closeAsync() -> closeAsync
    489:518:pro.gravit.repackage.io.netty.util.concurrent.Future close0() -> close0
    42:42:pro.gravit.repackage.io.netty.util.concurrent.Future access$201(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> access$201
    42:42:void access$300(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> access$300
    42:42:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor access$400(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$400
    42:42:boolean access$500(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$500
    42:42:void access$600(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$600
    42:42:long access$700(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$700
    42:42:java.util.Queue access$800(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$800
    42:42:int access$906(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$906
    42:42:void access$1000(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$1000
    42:42:java.util.concurrent.atomic.AtomicInteger access$1100(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$1100
    42:42:pro.gravit.repackage.io.netty.util.concurrent.Future access$1200(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$1200
    42:42:void access$1301(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> access$1301
    42:42:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$1 -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$1:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    191:191:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> <init>
    195:196:void onTimeout(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTask) -> onTimeout
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$2 -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$2:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    200:200:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> <init>
    205:208:void onTimeout(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTask) -> onTimeout
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$3 -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$3:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    231:231:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    234:235:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$4 -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$4:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    294:294:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    299:322:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    294:294:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$5 -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$5:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$closeComplete -> val$closeComplete
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    469:469:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    472:482:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$5$1 -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$5$1:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$5 this$1 -> this$1
    472:472:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$5) -> <init>
    475:480:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$6 -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$6:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    509:509:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> <init>
    512:513:java.lang.Void call() -> call
    509:509:java.lang.Object call() -> call
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$7 -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$7:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$channel$pool$FixedChannelPool$AcquireTimeoutAction -> $SwitchMap$io$netty$channel$pool$FixedChannelPool$AcquireTimeoutAction
    189:189:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireListener -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireListener:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise originalPromise -> originalPromise
    boolean acquired -> acquired
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    405:407:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    412:437:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    440:445:void acquired() -> acquired
    401:401:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTask -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTask:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise promise -> promise
    long expireNanoTime -> expireNanoTime
    java.util.concurrent.ScheduledFuture timeoutFuture -> timeoutFuture
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    366:374:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction NEW -> NEW
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction FAIL -> FAIL
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction[] $VALUES -> $VALUES
    44:44:pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction[] values() -> values
    44:44:pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutAction valueOf(java.lang.String) -> valueOf
    44:44:void <init>(java.lang.String,int) -> <init>
    44:53:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutException -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTimeoutException:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    524:525:void <init>() -> <init>
    530:530:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    521:521:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$TimeoutTask -> pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$TimeoutTask:
# {"fileName":"FixedChannelPool.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool this$0 -> this$0
    377:377:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool) -> <init>
    380:396:void run() -> run
    void onTimeout(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$AcquireTask) -> onTimeout
    377:377:void <init>(pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool,pro.gravit.repackage.io.netty.channel.pool.FixedChannelPool$1) -> <init>
    377:377:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AttributeKey POOL_KEY -> POOL_KEY
    java.util.Deque deque -> deque
    pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler handler -> handler
    pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker healthCheck -> healthCheck
    pro.gravit.repackage.io.netty.bootstrap.Bootstrap bootstrap -> bootstrap
    boolean releaseHealthCheck -> releaseHealthCheck
    boolean lastRecentUsed -> lastRecentUsed
    boolean $assertionsDisabled -> $assertionsDisabled
    60:61:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler) -> <init>
    72:73:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler,pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker) -> <init>
    87:88:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler,pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker,boolean) -> <init>
    46:116:void <init>(pro.gravit.repackage.io.netty.bootstrap.Bootstrap,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler,pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker,boolean,boolean) -> <init>
    124:124:pro.gravit.repackage.io.netty.bootstrap.Bootstrap bootstrap() -> bootstrap
    133:133:pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler handler() -> handler
    142:142:pro.gravit.repackage.io.netty.channel.pool.ChannelHealthChecker healthChecker() -> healthChecker
    152:152:boolean releaseHealthCheck() -> releaseHealthCheck
    157:157:pro.gravit.repackage.io.netty.util.concurrent.Future acquire() -> acquire
    162:162:pro.gravit.repackage.io.netty.util.concurrent.Future acquire(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> acquire
    172:204:pro.gravit.repackage.io.netty.util.concurrent.Future acquireHealthyFromPoolOrNew(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> acquireHealthyFromPoolOrNew
    208:223:void notifyConnect(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> notifyConnect
    227:242:void doHealthCheck(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doHealthCheck
    246:258:void notifyHealthCheck(pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> notifyHealthCheck
    267:267:pro.gravit.repackage.io.netty.channel.ChannelFuture connectChannel(pro.gravit.repackage.io.netty.bootstrap.Bootstrap) -> connectChannel
    272:272:pro.gravit.repackage.io.netty.util.concurrent.Future release(pro.gravit.repackage.io.netty.channel.Channel) -> release
    278:294:pro.gravit.repackage.io.netty.util.concurrent.Future release(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> release
    299:317:void doReleaseChannel(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doReleaseChannel
    320:331:void doHealthCheckOnRelease(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doHealthCheckOnRelease
    342:351:void releaseAndOfferIfHealthy(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise,pro.gravit.repackage.io.netty.util.concurrent.Future) -> releaseAndOfferIfHealthy
    354:360:void releaseAndOffer(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> releaseAndOffer
    363:365:void closeChannel(pro.gravit.repackage.io.netty.channel.Channel) -> closeChannel
    368:376:void closeAndFail(pro.gravit.repackage.io.netty.channel.Channel,java.lang.Throwable,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> closeAndFail
    386:386:pro.gravit.repackage.io.netty.channel.Channel pollChannel() -> pollChannel
    397:397:boolean offerChannel(pro.gravit.repackage.io.netty.channel.Channel) -> offerChannel
    403:410:void close() -> close
    419:419:pro.gravit.repackage.io.netty.util.concurrent.Future closeAsync() -> closeAsync
    43:43:void access$000(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> access$000
    43:43:void access$100(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> access$100
    43:43:void access$200(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> access$200
    43:43:void access$300(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> access$300
    43:43:void access$400(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise,pro.gravit.repackage.io.netty.util.concurrent.Future) -> access$400
    43:45:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$1 -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$1:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler val$handler -> val$handler
    pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool this$0 -> this$0
    108:108:void <init>(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.pool.ChannelPoolHandler) -> <init>
    111:113:void initChannel(pro.gravit.repackage.io.netty.channel.Channel) -> initChannel
    108:108:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$2 -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$2:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool this$0 -> this$0
    181:181:void <init>(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    184:185:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    181:181:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$3 -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$3:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel val$ch -> val$ch
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool this$0 -> this$0
    193:193:void <init>(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    196:197:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$4 -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$4:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool this$0 -> this$0
    232:232:void <init>(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    235:236:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$5 -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$5:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool this$0 -> this$0
    284:284:void <init>(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    287:288:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$6 -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$6:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.util.concurrent.Future val$f -> val$f
    pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool this$0 -> this$0
    324:324:void <init>(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.util.concurrent.Promise,pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    327:328:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$7 -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$7:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool this$0 -> this$0
    419:419:void <init>(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool) -> <init>
    422:423:java.lang.Void call() -> call
    419:419:java.lang.Object call() -> call
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$ChannelPoolFullException -> pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$ChannelPoolFullException:
# {"fileName":"SimpleChannelPool.java","id":"sourceFile"}
    431:432:void <init>() -> <init>
    437:437:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    428:428:void <init>(pro.gravit.repackage.io.netty.channel.pool.SimpleChannelPool$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.ChannelInputShutdownEvent -> pro.gravit.repackage.io.netty.channel.socket.ChannelInputShutdownEvent:
# {"fileName":"ChannelInputShutdownEvent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.ChannelInputShutdownEvent INSTANCE -> INSTANCE
    35:35:void <init>() -> <init>
    33:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.ChannelInputShutdownReadComplete -> pro.gravit.repackage.io.netty.channel.socket.ChannelInputShutdownReadComplete:
# {"fileName":"ChannelInputShutdownReadComplete.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.ChannelInputShutdownReadComplete INSTANCE -> INSTANCE
    25:26:void <init>() -> <init>
    23:23:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.ChannelOutputShutdownEvent -> pro.gravit.repackage.io.netty.channel.socket.ChannelOutputShutdownEvent:
# {"fileName":"ChannelOutputShutdownEvent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.ChannelOutputShutdownEvent INSTANCE -> INSTANCE
    31:32:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.ChannelOutputShutdownException -> pro.gravit.repackage.io.netty.channel.socket.ChannelOutputShutdownException:
# {"fileName":"ChannelOutputShutdownException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    32:33:void <init>(java.lang.String) -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.DatagramChannel -> pro.gravit.repackage.io.netty.channel.socket.DatagramChannel:
# {"fileName":"DatagramChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig config() -> config
    java.net.InetSocketAddress localAddress() -> localAddress
    java.net.InetSocketAddress remoteAddress() -> remoteAddress
    boolean isConnected() -> isConnected
    pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress) -> joinGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> joinGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> joinGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress) -> leaveGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> leaveGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> leaveGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> block
    pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> block
    pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress) -> block
    pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> block
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig:
# {"fileName":"DatagramChannelConfig.java","id":"sourceFile"}
    int getSendBufferSize() -> getSendBufferSize
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    int getTrafficClass() -> getTrafficClass
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    boolean isReuseAddress() -> isReuseAddress
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    boolean isBroadcast() -> isBroadcast
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    int getTimeToLive() -> getTimeToLive
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    java.net.InetAddress getInterface() -> getInterface
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.DatagramPacket -> pro.gravit.repackage.io.netty.channel.socket.DatagramPacket:
# {"fileName":"DatagramPacket.java","id":"sourceFile"}
    34:35:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.net.InetSocketAddress) -> <init>
    42:43:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.net.InetSocketAddress,java.net.InetSocketAddress) -> <init>
    47:47:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket copy() -> copy
    52:52:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket duplicate() -> duplicate
    57:57:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket retainedDuplicate() -> retainedDuplicate
    62:62:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    67:68:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket retain() -> retain
    73:74:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket retain(int) -> retain
    79:80:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket touch() -> touch
    85:86:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch() -> touch
    27:27:pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain() -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.DefaultDatagramChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.DefaultDatagramChannelConfig:
# {"fileName":"DefaultDatagramChannelConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.net.DatagramSocket javaSocket -> javaSocket
    boolean activeOnOpen -> activeOnOpen
    55:57:void <init>(pro.gravit.repackage.io.netty.channel.socket.DatagramChannel,java.net.DatagramSocket) -> <init>
    60:60:java.net.DatagramSocket javaSocket() -> javaSocket
    66:67:java.util.Map getOptions() -> getOptions
    75:105:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    111:137:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    141:145:void setActiveOnOpen(boolean) -> setActiveOnOpen
    150:152:boolean isBroadcast() -> isBroadcast
    160:176:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    181:188:java.net.InetAddress getInterface() -> getInterface
    194:203:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    208:215:boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    221:230:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    235:242:java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    248:257:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    263:265:boolean isReuseAddress() -> isReuseAddress
    272:276:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    282:284:int getReceiveBufferSize() -> getReceiveBufferSize
    291:295:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    301:303:int getSendBufferSize() -> getSendBufferSize
    310:314:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    319:326:int getTimeToLive() -> getTimeToLive
    332:341:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    347:349:int getTrafficClass() -> getTrafficClass
    356:360:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    365:366:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    371:372:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    378:379:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    384:385:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    390:391:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    396:397:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    402:403:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    408:409:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    414:415:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    420:421:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    426:427:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    432:433:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerWrite(int) -> setMaxMessagesPerWrite
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerWrite(int) -> setMaxMessagesPerWrite
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    44:44:pro.gravit.repackage.io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    46:46:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.DefaultServerSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.DefaultServerSocketChannelConfig:
# {"fileName":"DefaultServerSocketChannelConfig.java","id":"sourceFile"}
    java.net.ServerSocket javaSocket -> javaSocket
    int backlog -> backlog
    45:53:void <init>(pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket) -> <init>
    57:57:java.util.Map getOptions() -> getOptions
    63:73:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    78:90:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    96:98:boolean isReuseAddress() -> isReuseAddress
    105:109:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    115:117:int getReceiveBufferSize() -> getReceiveBufferSize
    124:128:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    133:134:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    139:139:int getBacklog() -> getBacklog
    144:146:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> setBacklog
    151:152:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    158:159:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    164:165:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    170:171:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    176:177:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    182:183:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    188:189:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    194:195:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    200:201:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    206:207:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    41:41:pro.gravit.repackage.io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.DefaultSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.DefaultSocketChannelConfig:
# {"fileName":"DefaultSocketChannelConfig.java","id":"sourceFile"}
    java.net.Socket javaSocket -> javaSocket
    boolean allowHalfClosure -> allowHalfClosure
    47:58:void <init>(pro.gravit.repackage.io.netty.channel.socket.SocketChannel,java.net.Socket) -> <init>
    62:63:java.util.Map getOptions() -> getOptions
    71:96:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    101:123:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    129:131:int getReceiveBufferSize() -> getReceiveBufferSize
    138:140:int getSendBufferSize() -> getSendBufferSize
    147:149:int getSoLinger() -> getSoLinger
    156:158:int getTrafficClass() -> getTrafficClass
    165:167:boolean isKeepAlive() -> isKeepAlive
    174:176:boolean isReuseAddress() -> isReuseAddress
    183:185:boolean isTcpNoDelay() -> isTcpNoDelay
    192:196:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    202:203:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    209:213:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    219:223:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    229:233:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    239:247:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> setSoLinger
    253:257:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    263:267:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> setTrafficClass
    272:272:boolean isAllowHalfClosure() -> isAllowHalfClosure
    277:278:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    283:284:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    290:291:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    296:297:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    302:303:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    308:309:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    314:315:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> setAutoRead
    320:321:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> setAutoClose
    326:327:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    332:333:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    338:339:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    344:345:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    37:37:pro.gravit.repackage.io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAutoClose(boolean) -> setAutoClose
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAutoRead(boolean) -> setAutoRead
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    37:37:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.DuplexChannel -> pro.gravit.repackage.io.netty.channel.socket.DuplexChannel:
# {"fileName":"DuplexChannel.java","id":"sourceFile"}
    boolean isInputShutdown() -> isInputShutdown
    pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownInput(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownInput
    boolean isOutputShutdown() -> isOutputShutdown
    pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownOutput() -> shutdownOutput
    pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownOutput(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownOutput
    boolean isShutdown() -> isShutdown
    pro.gravit.repackage.io.netty.channel.ChannelFuture shutdown() -> shutdown
    pro.gravit.repackage.io.netty.channel.ChannelFuture shutdown(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdown
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig:
# {"fileName":"DuplexChannelConfig.java","id":"sourceFile"}
    boolean isAllowHalfClosure() -> isAllowHalfClosure
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAutoClose(boolean) -> setAutoClose
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily -> pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily:
# {"fileName":"InternetProtocolFamily.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily IPv4 -> IPv4
    pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily IPv6 -> IPv6
    java.lang.Class addressType -> addressType
    int addressNumber -> addressNumber
    pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily[] $VALUES -> $VALUES
    27:27:pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily[] values() -> values
    27:27:pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily valueOf(java.lang.String) -> valueOf
    34:37:void <init>(java.lang.String,int,java.lang.Class,int) -> <init>
    43:43:java.lang.Class addressType() -> addressType
    52:52:int addressNumber() -> addressNumber
    59:65:java.net.InetAddress localhost() -> localhost
    73:79:pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily of(java.net.InetAddress) -> of
    27:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily$1 -> pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily$1:
# {"fileName":"InternetProtocolFamily.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$channel$socket$InternetProtocolFamily -> $SwitchMap$io$netty$channel$socket$InternetProtocolFamily
    59:59:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannel -> pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannel:
# {"fileName":"ServerSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig config() -> config
    java.net.InetSocketAddress localAddress() -> localAddress
    java.net.InetSocketAddress remoteAddress() -> remoteAddress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig:
# {"fileName":"ServerSocketChannelConfig.java","id":"sourceFile"}
    int getBacklog() -> getBacklog
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> setBacklog
    boolean isReuseAddress() -> isReuseAddress
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    int getReceiveBufferSize() -> getReceiveBufferSize
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.SocketChannel -> pro.gravit.repackage.io.netty.channel.socket.SocketChannel:
# {"fileName":"SocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannel parent() -> parent
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig config() -> config
    java.net.InetSocketAddress localAddress() -> localAddress
    java.net.InetSocketAddress remoteAddress() -> remoteAddress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig:
# {"fileName":"SocketChannelConfig.java","id":"sourceFile"}
    boolean isTcpNoDelay() -> isTcpNoDelay
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    int getSoLinger() -> getSoLinger
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> setSoLinger
    int getSendBufferSize() -> getSendBufferSize
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    boolean isKeepAlive() -> isKeepAlive
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    int getTrafficClass() -> getTrafficClass
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> setTrafficClass
    boolean isReuseAddress() -> isReuseAddress
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> setAutoClose
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioChannelOption -> pro.gravit.repackage.io.netty.channel.socket.nio.NioChannelOption:
# {"fileName":"NioChannelOption.java","id":"sourceFile"}
    java.net.SocketOption option -> option
    40:42:void <init>(java.net.SocketOption) -> <init>
    48:48:pro.gravit.repackage.io.netty.channel.ChannelOption of(java.net.SocketOption) -> of
    60:73:boolean setOption(java.nio.channels.Channel,pro.gravit.repackage.io.netty.channel.socket.nio.NioChannelOption,java.lang.Object) -> setOption
    79:92:java.lang.Object getOption(java.nio.channels.Channel,pro.gravit.repackage.io.netty.channel.socket.nio.NioChannelOption) -> getOption
    99:120:pro.gravit.repackage.io.netty.channel.ChannelOption[] getOptions(java.nio.channels.Channel) -> getOptions
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioDatagramChannel -> pro.gravit.repackage.io.netty.channel.socket.nio.NioDatagramChannel:
# {"fileName":"NioDatagramChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig config -> config
    java.util.Map memberships -> memberships
    89:91:java.nio.channels.DatagramChannel newSocket(java.nio.channels.spi.SelectorProvider) -> newSocket
    97:106:java.nio.channels.DatagramChannel newSocket(java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> newSocket
    111:114:void checkJavaVersion() -> checkJavaVersion
    120:121:void <init>() -> <init>
    128:129:void <init>(java.nio.channels.spi.SelectorProvider) -> <init>
    136:137:void <init>(pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> <init>
    145:146:void <init>(java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> <init>
    152:154:void <init>(java.nio.channels.DatagramChannel) -> <init>
    158:158:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    163:163:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig config() -> config
    169:172:boolean isActive() -> isActive
    177:177:boolean isConnected() -> isConnected
    182:182:java.nio.channels.DatagramChannel javaChannel() -> javaChannel
    187:187:java.net.SocketAddress localAddress0() -> localAddress0
    192:192:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    197:198:void doBind(java.net.SocketAddress) -> doBind
    201:206:void doBind0(java.net.SocketAddress) -> doBind0
    211:224:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    229:229:void doFinishConnect() -> doFinishConnect
    234:235:void doDisconnect() -> doDisconnect
    239:240:void doClose() -> doClose
    244:271:int doReadMessages(java.util.List) -> doReadMessages
    278:301:boolean doWriteMessage(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    305:309:void checkUnresolved(pro.gravit.repackage.io.netty.channel.AddressedEnvelope) -> checkUnresolved
    313:345:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    353:353:boolean isSingleDirectBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> isSingleDirectBuffer
    361:361:boolean continueOnWriteError() -> continueOnWriteError
    366:366:java.net.InetSocketAddress localAddress() -> localAddress
    371:371:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    376:376:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress) -> joinGroup
    382:391:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    397:397:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> joinGroup
    404:404:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    410:410:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> joinGroup
    419:451:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    456:456:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress) -> leaveGroup
    462:467:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    473:473:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> leaveGroup
    480:480:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    486:486:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> leaveGroup
    494:523:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    533:533:pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> block
    544:565:pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> block
    574:574:pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress) -> block
    585:592:pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> block
    598:599:void setReadPending(boolean) -> setReadPending
    602:603:void clearReadPending0() -> clearReadPending0
    609:612:boolean closeOnReadError(java.lang.Throwable) -> closeOnReadError
    617:623:boolean continueReading(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator$Handle) -> continueReading
    65:65:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    65:65:java.net.SocketAddress remoteAddress() -> remoteAddress
    65:65:java.net.SocketAddress localAddress() -> localAddress
    65:65:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    68:75:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioDatagramChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.nio.NioDatagramChannelConfig:
# {"fileName":"NioDatagramChannelConfig.java","id":"sourceFile"}
    java.lang.Object IP_MULTICAST_TTL -> IP_MULTICAST_TTL
    java.lang.Object IP_MULTICAST_IF -> IP_MULTICAST_IF
    java.lang.Object IP_MULTICAST_LOOP -> IP_MULTICAST_LOOP
    java.lang.reflect.Method GET_OPTION -> GET_OPTION
    java.lang.reflect.Method SET_OPTION -> SET_OPTION
    java.nio.channels.DatagramChannel javaChannel -> javaChannel
    117:119:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioDatagramChannel,java.nio.channels.DatagramChannel) -> <init>
    123:123:int getTimeToLive() -> getTimeToLive
    128:129:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    134:141:java.net.InetAddress getInterface() -> getInterface
    147:151:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    156:156:java.net.NetworkInterface getNetworkInterface() -> getNetworkInterface
    161:162:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    167:167:boolean isLoopbackModeDisabled() -> isLoopbackModeDisabled
    172:173:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    178:179:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    184:185:void autoReadCleared() -> autoReadCleared
    188:194:java.lang.Object getOption0(java.lang.Object) -> getOption0
    200:209:void setOption0(java.lang.Object,java.lang.Object) -> setOption0
    213:216:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    221:224:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    230:233:java.util.Map getOptions() -> getOptions
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    45:112:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel -> pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel:
# {"fileName":"NioServerSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.reflect.Method OPEN_SERVER_SOCKET_CHANNEL_WITH_FAMILY -> OPEN_SERVER_SOCKET_CHANNEL_WITH_FAMILY
    pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig config -> config
    61:65:java.nio.channels.ServerSocketChannel newChannel(java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> newChannel
    75:76:void <init>() -> <init>
    82:83:void <init>(java.nio.channels.spi.SelectorProvider) -> <init>
    89:90:void <init>(java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> <init>
    96:98:void <init>(java.nio.channels.ServerSocketChannel) -> <init>
    102:102:java.net.InetSocketAddress localAddress() -> localAddress
    107:107:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    112:112:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig config() -> config
    119:119:boolean isActive() -> isActive
    124:124:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    129:129:java.nio.channels.ServerSocketChannel javaChannel() -> javaChannel
    134:134:java.net.SocketAddress localAddress0() -> localAddress0
    140:145:void doBind(java.net.SocketAddress) -> doBind
    149:150:void doClose() -> doClose
    154:171:int doReadMessages(java.util.List) -> doReadMessages
    178:178:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    183:183:void doFinishConnect() -> doFinishConnect
    188:188:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    193:193:void doDisconnect() -> doDisconnect
    198:198:boolean doWriteMessage(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWriteMessage
    203:203:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    248:248:boolean closeOnReadError(java.lang.Throwable) -> closeOnReadError
    48:48:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    48:48:java.net.SocketAddress remoteAddress() -> remoteAddress
    48:48:java.net.SocketAddress localAddress() -> localAddress
    48:48:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    48:48:void access$100(pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel) -> access$100
    51:57:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel$1 -> pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel$1:
# {"fileName":"NioServerSocketChannel.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel$NioServerSocketChannelConfig:
# {"fileName":"NioServerSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel this$0 -> this$0
    207:209:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel,pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket) -> <init>
    213:214:void autoReadCleared() -> autoReadCleared
    218:221:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    226:229:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    234:237:java.util.Map getOptions() -> getOptions
    241:241:java.nio.channels.ServerSocketChannel jdkChannel() -> jdkChannel
    206:206:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel,pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel,java.net.ServerSocket,pro.gravit.repackage.io.netty.channel.socket.nio.NioServerSocketChannel$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel -> pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel:
# {"fileName":"NioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.nio.channels.spi.SelectorProvider DEFAULT_SELECTOR_PROVIDER -> DEFAULT_SELECTOR_PROVIDER
    java.lang.reflect.Method OPEN_SOCKET_CHANNEL_WITH_FAMILY -> OPEN_SOCKET_CHANNEL_WITH_FAMILY
    pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig config -> config
    70:73:java.nio.channels.SocketChannel newChannel(java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> newChannel
    81:82:void <init>() -> <init>
    88:89:void <init>(java.nio.channels.spi.SelectorProvider) -> <init>
    95:96:void <init>(java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> <init>
    102:103:void <init>(java.nio.channels.SocketChannel) -> <init>
    112:114:void <init>(pro.gravit.repackage.io.netty.channel.Channel,java.nio.channels.SocketChannel) -> <init>
    118:118:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannel parent() -> parent
    123:123:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig config() -> config
    128:128:java.nio.channels.SocketChannel javaChannel() -> javaChannel
    133:134:boolean isActive() -> isActive
    139:139:boolean isOutputShutdown() -> isOutputShutdown
    144:144:boolean isInputShutdown() -> isInputShutdown
    149:150:boolean isShutdown() -> isShutdown
    155:155:java.net.InetSocketAddress localAddress() -> localAddress
    160:160:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    167:172:void doShutdownOutput() -> doShutdownOutput
    176:176:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownOutput() -> shutdownOutput
    181:192:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownOutput(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownOutput
    197:197:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    202:202:boolean isInputShutdown0() -> isInputShutdown0
    207:218:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownInput(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownInput
    223:223:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdown() -> shutdown
    228:239:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdown(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdown
    243:254:void shutdownOutputDone(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownOutputDone
    259:272:void shutdownDone(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownDone
    275:280:void shutdownInput0(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownInput0
    284:289:void shutdownInput0() -> shutdownInput0
    293:293:java.net.SocketAddress localAddress0() -> localAddress0
    298:298:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    303:304:void doBind(java.net.SocketAddress) -> doBind
    307:312:void doBind0(java.net.SocketAddress) -> doBind0
    316:332:boolean doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    337:340:void doFinishConnect() -> doFinishConnect
    344:345:void doDisconnect() -> doDisconnect
    349:351:void doClose() -> doClose
    355:357:int doReadBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doReadBytes
    362:363:int doWriteBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doWriteBytes
    368:369:long doWriteFileRegion(pro.gravit.repackage.io.netty.channel.FileRegion) -> doWriteFileRegion
    376:383:void adjustMaxBytesPerGatheringWrite(int,int,int) -> adjustMaxBytesPerGatheringWrite
    387:446:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    450:450:pro.gravit.repackage.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe() -> newUnsafe
    59:59:java.nio.channels.SelectableChannel javaChannel() -> javaChannel
    59:59:pro.gravit.repackage.io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe() -> newUnsafe
    59:59:java.net.SocketAddress remoteAddress() -> remoteAddress
    59:59:java.net.SocketAddress localAddress() -> localAddress
    59:59:pro.gravit.repackage.io.netty.channel.Channel parent() -> parent
    59:59:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    59:59:void access$100(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$100
    59:59:void access$200(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$200
    59:59:void access$300(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$300
    59:59:void access$500(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel) -> access$500
    59:59:void access$600(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel) -> access$600
    60:64:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$1 -> pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$1:
# {"fileName":"NioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    185:185:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    188:189:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$2 -> pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$2:
# {"fileName":"NioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    211:211:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    214:215:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$3 -> pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$3:
# {"fileName":"NioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    232:232:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    235:236:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    232:232:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$4 -> pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$4:
# {"fileName":"NioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelFuture val$shutdownOutputFuture -> val$shutdownOutputFuture
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    247:247:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    250:251:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    247:247:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig:
# {"fileName":"NioSocketChannel.java","id":"sourceFile"}
    int maxBytesPerGatheringWrite -> maxBytesPerGatheringWrite
    pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    475:479:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket) -> <init>
    483:484:void autoReadCleared() -> autoReadCleared
    488:490:pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    495:498:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    503:506:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    511:514:java.util.Map getOptions() -> getOptions
    518:519:void setMaxBytesPerGatheringWrite(int) -> setMaxBytesPerGatheringWrite
    522:522:int getMaxBytesPerGatheringWrite() -> getMaxBytesPerGatheringWrite
    527:531:void calculateMaxBytesPerGatheringWrite() -> calculateMaxBytesPerGatheringWrite
    534:534:java.nio.channels.SocketChannel jdkChannel() -> jdkChannel
    474:474:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    474:474:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,java.net.Socket,pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe -> pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelUnsafe:
# {"fileName":"NioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel this$0 -> this$0
    453:453:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel) -> <init>
    457:470:java.util.concurrent.Executor prepareToClose() -> prepareToClose
    453:453:void <init>(pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel,pro.gravit.repackage.io.netty.channel.socket.nio.NioSocketChannel$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.ProtocolFamilyConverter -> pro.gravit.repackage.io.netty.channel.socket.nio.ProtocolFamilyConverter:
# {"fileName":"ProtocolFamilyConverter.java","id":"sourceFile"}
    29:31:void <init>() -> <init>
    38:44:java.net.ProtocolFamily convert(pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> convert
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.ProtocolFamilyConverter$1 -> pro.gravit.repackage.io.netty.channel.socket.nio.ProtocolFamilyConverter$1:
# {"fileName":"ProtocolFamilyConverter.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$channel$socket$InternetProtocolFamily -> $SwitchMap$io$netty$channel$socket$InternetProtocolFamily
    38:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.nio.SelectorProviderUtil -> pro.gravit.repackage.io.netty.channel.socket.nio.SelectorProviderUtil:
# {"fileName":"SelectorProviderUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    37:44:java.lang.reflect.Method findOpenMethod(java.lang.String) -> findOpenMethod
    56:68:java.nio.channels.Channel newChannel(java.lang.reflect.Method,java.nio.channels.spi.SelectorProvider,pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> newChannel
    71:71:void <init>() -> <init>
    33:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.DefaultOioDatagramChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.oio.DefaultOioDatagramChannelConfig:
# {"fileName":"DefaultOioDatagramChannelConfig.java","id":"sourceFile"}
    39:41:void <init>(pro.gravit.repackage.io.netty.channel.socket.DatagramChannel,java.net.DatagramSocket) -> <init>
    45:45:java.util.Map getOptions() -> getOptions
    51:54:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    59:66:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    72:76:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setSoTimeout(int) -> setSoTimeout
    82:84:int getSoTimeout() -> getSoTimeout
    90:91:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    96:97:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    102:103:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    108:109:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    114:115:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    120:121:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    126:127:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    132:133:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    138:139:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    144:145:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    150:151:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    156:157:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    162:163:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    168:169:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    174:175:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    180:181:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    186:187:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    192:193:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    198:199:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    204:205:pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    36:36:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    36:36:pro.gravit.repackage.io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.oio.DefaultOioServerSocketChannelConfig:
# {"fileName":"DefaultOioServerSocketChannelConfig.java","id":"sourceFile"}
    45:47:void <init>(pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannel,java.net.ServerSocket) -> <init>
    50:52:void <init>(pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannel,java.net.ServerSocket) -> <init>
    56:57:java.util.Map getOptions() -> getOptions
    63:66:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    71:78:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    84:88:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setSoTimeout(int) -> setSoTimeout
    94:96:int getSoTimeout() -> getSoTimeout
    102:103:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setBacklog(int) -> setBacklog
    108:109:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    114:115:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    120:121:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    126:127:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    133:134:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    139:140:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    145:146:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    151:152:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    157:158:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    163:166:void autoReadCleared() -> autoReadCleared
    170:171:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    176:177:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    182:183:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    188:189:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    194:195:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int) -> setBacklog
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    39:39:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.DefaultOioSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.oio.DefaultOioSocketChannelConfig:
# {"fileName":"DefaultOioSocketChannelConfig.java","id":"sourceFile"}
    43:45:void <init>(pro.gravit.repackage.io.netty.channel.socket.SocketChannel,java.net.Socket) -> <init>
    48:50:void <init>(pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel,java.net.Socket) -> <init>
    54:55:java.util.Map getOptions() -> getOptions
    61:64:java.lang.Object getOption(pro.gravit.repackage.io.netty.channel.ChannelOption) -> getOption
    69:76:boolean setOption(pro.gravit.repackage.io.netty.channel.ChannelOption,java.lang.Object) -> setOption
    82:86:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setSoTimeout(int) -> setSoTimeout
    92:94:int getSoTimeout() -> getSoTimeout
    100:101:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    106:107:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setSoLinger(int) -> setSoLinger
    112:113:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    118:119:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    124:125:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    130:131:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setTrafficClass(int) -> setTrafficClass
    136:137:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    142:143:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    148:149:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    154:155:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    161:162:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    167:168:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    173:174:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    179:180:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    185:186:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    191:194:void autoReadCleared() -> autoReadCleared
    198:199:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    204:205:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    210:211:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    216:217:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    222:223:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAutoClose(boolean) -> setAutoClose
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAutoRead(boolean) -> setAutoRead
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setTrafficClass(int) -> setTrafficClass
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setSoLinger(int) -> setSoLinger
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    39:39:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAutoClose(boolean) -> setAutoClose
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAutoRead(boolean) -> setAutoRead
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    39:39:pro.gravit.repackage.io.netty.channel.socket.DuplexChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoClose(boolean) -> setAutoClose
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setAutoRead(boolean) -> setAutoRead
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    39:39:pro.gravit.repackage.io.netty.channel.ChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannel -> pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannel:
# {"fileName":"OioDatagramChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.lang.String EXPECTED_TYPES -> EXPECTED_TYPES
    java.net.MulticastSocket socket -> socket
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig config -> config
    java.net.DatagramPacket tmpPacket -> tmpPacket
    80:82:java.net.MulticastSocket newSocket() -> newSocket
    90:91:void <init>() -> <init>
    76:117:void <init>(java.net.MulticastSocket) -> <init>
    121:121:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    132:132:pro.gravit.repackage.io.netty.channel.socket.DatagramChannelConfig config() -> config
    137:137:boolean isOpen() -> isOpen
    143:145:boolean isActive() -> isActive
    150:150:boolean isConnected() -> isConnected
    155:155:java.net.SocketAddress localAddress0() -> localAddress0
    160:160:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    165:166:void doBind(java.net.SocketAddress) -> doBind
    170:170:java.net.InetSocketAddress localAddress() -> localAddress
    175:175:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    181:198:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    202:203:void doDisconnect() -> doDisconnect
    207:208:void doClose() -> doClose
    212:244:int doReadMessages(java.util.List) -> doReadMessages
    250:294:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    297:301:void checkUnresolved(pro.gravit.repackage.io.netty.channel.AddressedEnvelope) -> checkUnresolved
    305:324:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    329:329:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress) -> joinGroup
    334:341:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    346:346:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> joinGroup
    353:360:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetSocketAddress,java.net.NetworkInterface,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    366:366:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> joinGroup
    373:374:pro.gravit.repackage.io.netty.channel.ChannelFuture joinGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> joinGroup
    378:383:void ensureBound() -> ensureBound
    387:387:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress) -> leaveGroup
    393:398:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    404:404:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface) -> leaveGroup
    412:417:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetSocketAddress,java.net.NetworkInterface,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    423:423:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> leaveGroup
    430:431:pro.gravit.repackage.io.netty.channel.ChannelFuture leaveGroup(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> leaveGroup
    437:437:pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress) -> block
    444:445:pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> block
    451:451:pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress) -> block
    457:458:pro.gravit.repackage.io.netty.channel.ChannelFuture block(java.net.InetAddress,java.net.InetAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> block
    60:60:java.net.SocketAddress remoteAddress() -> remoteAddress
    60:60:java.net.SocketAddress localAddress() -> localAddress
    60:60:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    64:72:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig:
# {"fileName":"OioDatagramChannelConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setSoTimeout(int) -> setSoTimeout
    int getSoTimeout() -> getSoTimeout
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setTrafficClass(int) -> setTrafficClass
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setReuseAddress(boolean) -> setReuseAddress
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setBroadcast(boolean) -> setBroadcast
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setLoopbackModeDisabled(boolean) -> setLoopbackModeDisabled
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setTimeToLive(int) -> setTimeToLive
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setInterface(java.net.InetAddress) -> setInterface
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setNetworkInterface(java.net.NetworkInterface) -> setNetworkInterface
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    pro.gravit.repackage.io.netty.channel.socket.oio.OioDatagramChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannel -> pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannel:
# {"fileName":"OioServerSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.channel.ChannelMetadata METADATA -> METADATA
    java.net.ServerSocket socket -> socket
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig config -> config
    54:56:java.net.ServerSocket newServerSocket() -> newServerSocket
    67:68:void <init>() -> <init>
    76:100:void <init>(java.net.ServerSocket) -> <init>
    104:104:java.net.InetSocketAddress localAddress() -> localAddress
    109:109:pro.gravit.repackage.io.netty.channel.ChannelMetadata metadata() -> metadata
    114:114:pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig config() -> config
    119:119:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    124:124:boolean isOpen() -> isOpen
    129:129:boolean isActive() -> isActive
    134:134:java.net.SocketAddress localAddress0() -> localAddress0
    139:140:void doBind(java.net.SocketAddress) -> doBind
    144:145:void doClose() -> doClose
    149:169:int doReadMessages(java.util.List) -> doReadMessages
    174:174:void doWrite(pro.gravit.repackage.io.netty.channel.ChannelOutboundBuffer) -> doWrite
    179:179:java.lang.Object filterOutboundMessage(java.lang.Object) -> filterOutboundMessage
    185:185:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    190:190:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    195:195:void doDisconnect() -> doDisconnect
    201:202:void setReadPending(boolean) -> setReadPending
    205:206:void clearReadPending0() -> clearReadPending0
    43:43:java.net.SocketAddress remoteAddress() -> remoteAddress
    43:43:java.net.SocketAddress localAddress() -> localAddress
    43:43:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    43:43:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannelConfig config() -> config
    47:50:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig:
# {"fileName":"OioServerSocketChannelConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setSoTimeout(int) -> setSoTimeout
    int getSoTimeout() -> getSoTimeout
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setBacklog(int) -> setBacklog
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    pro.gravit.repackage.io.netty.channel.socket.oio.OioServerSocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel -> pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel:
# {"fileName":"OioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.net.Socket socket -> socket
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig config -> config
    57:58:void <init>() -> <init>
    66:67:void <init>(java.net.Socket) -> <init>
    77:99:void <init>(pro.gravit.repackage.io.netty.channel.Channel,java.net.Socket) -> <init>
    103:103:pro.gravit.repackage.io.netty.channel.socket.ServerSocketChannel parent() -> parent
    108:108:pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig config() -> config
    113:113:boolean isOpen() -> isOpen
    118:118:boolean isActive() -> isActive
    123:123:boolean isOutputShutdown() -> isOutputShutdown
    128:128:boolean isInputShutdown() -> isInputShutdown
    133:133:boolean isShutdown() -> isShutdown
    139:140:void doShutdownOutput() -> doShutdownOutput
    144:144:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownOutput() -> shutdownOutput
    149:149:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownInput() -> shutdownInput
    154:154:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdown() -> shutdown
    159:165:int doReadBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> doReadBytes
    171:182:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownOutput(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownOutput
    187:192:void shutdownOutput0(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownOutput0
    195:196:void shutdownOutput0() -> shutdownOutput0
    200:211:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdownInput(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownInput
    216:221:void shutdownInput0(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownInput0
    225:236:pro.gravit.repackage.io.netty.channel.ChannelFuture shutdown(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdown
    240:251:void shutdownOutputDone(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownOutputDone
    256:269:void shutdownDone(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> shutdownDone
    273:273:java.net.InetSocketAddress localAddress() -> localAddress
    278:278:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    283:283:java.net.SocketAddress localAddress0() -> localAddress0
    288:288:java.net.SocketAddress remoteAddress0() -> remoteAddress0
    293:294:void doBind(java.net.SocketAddress) -> doBind
    299:317:void doConnect(java.net.SocketAddress,java.net.SocketAddress) -> doConnect
    321:322:void doDisconnect() -> doDisconnect
    326:327:void doClose() -> doClose
    330:338:boolean checkInputShutdown() -> checkInputShutdown
    344:345:void setReadPending(boolean) -> setReadPending
    348:349:void clearReadPending0() -> clearReadPending0
    45:45:java.net.SocketAddress remoteAddress() -> remoteAddress
    45:45:java.net.SocketAddress localAddress() -> localAddress
    45:45:pro.gravit.repackage.io.netty.channel.Channel parent() -> parent
    45:45:pro.gravit.repackage.io.netty.channel.ChannelConfig config() -> config
    45:45:pro.gravit.repackage.io.netty.channel.socket.SocketChannelConfig config() -> config
    46:46:void access$000(pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$000
    46:46:void access$100(pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$100
    46:46:void access$200(pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$200
    46:46:void access$300(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$300
    48:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel$1 -> pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel$1:
# {"fileName":"OioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel this$0 -> this$0
    175:175:void <init>(pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    178:179:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel$2 -> pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel$2:
# {"fileName":"OioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel this$0 -> this$0
    204:204:void <init>(pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    207:208:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel$3 -> pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel$3:
# {"fileName":"OioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel this$0 -> this$0
    229:229:void <init>(pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    232:233:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    229:229:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel$4 -> pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel$4:
# {"fileName":"OioSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelFuture val$shutdownOutputFuture -> val$shutdownOutputFuture
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel this$0 -> this$0
    244:244:void <init>(pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannel,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    247:248:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    244:244:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig:
# {"fileName":"OioSocketChannelConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setSoTimeout(int) -> setSoTimeout
    int getSoTimeout() -> getSoTimeout
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setTcpNoDelay(boolean) -> setTcpNoDelay
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setSoLinger(int) -> setSoLinger
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setSendBufferSize(int) -> setSendBufferSize
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setReceiveBufferSize(int) -> setReceiveBufferSize
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setKeepAlive(boolean) -> setKeepAlive
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setTrafficClass(int) -> setTrafficClass
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setReuseAddress(boolean) -> setReuseAddress
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setPerformancePreferences(int,int,int) -> setPerformancePreferences
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setAllowHalfClosure(boolean) -> setAllowHalfClosure
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    pro.gravit.repackage.io.netty.channel.socket.oio.OioSocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.Buffer -> pro.gravit.repackage.io.netty.channel.unix.Buffer:
# {"fileName":"Buffer.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    27:27:void <init>() -> <init>
    33:34:void free(java.nio.ByteBuffer) -> free
    40:40:java.nio.ByteBuffer allocateDirectWithNativeOrder(int) -> allocateDirectWithNativeOrder
    48:52:long memoryAddress(java.nio.ByteBuffer) -> memoryAddress
    59:62:int addressSize() -> addressSize
    int addressSize0() -> addressSize0
    long memoryAddress0(java.nio.ByteBuffer) -> memoryAddress0
    24:24:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress -> pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress:
# {"fileName":"DatagramSocketAddress.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    int receivedAmount -> receivedAmount
    pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress localAddress -> localAddress
    38:41:void <init>(byte[],int,int,int,pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress) -> <init>
    44:44:pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress localAddress() -> localAddress
    48:48:int receivedAmount() -> receivedAmount
    52:55:java.net.InetAddress newAddress(byte[],int) -> newAddress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannel -> pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannel:
# {"fileName":"DomainDatagramChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig config() -> config
    boolean isConnected() -> isConnected
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress localAddress() -> localAddress
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress remoteAddress() -> remoteAddress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig -> pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig:
# {"fileName":"DomainDatagramChannelConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setAutoClose(boolean) -> setAutoClose
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setSendBufferSize(int) -> setSendBufferSize
    int getSendBufferSize() -> getSendBufferSize
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket -> pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket:
# {"fileName":"DomainDatagramPacket.java","id":"sourceFile"}
    32:33:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress) -> <init>
    40:41:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress,pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress) -> <init>
    45:45:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket copy() -> copy
    50:50:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket duplicate() -> duplicate
    55:55:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    60:61:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket retain() -> retain
    66:67:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket retain(int) -> retain
    72:72:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket retainedDuplicate() -> retainedDuplicate
    77:78:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket touch() -> touch
    83:84:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramPacket touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch() -> touch
    25:25:pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain() -> retain
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress -> pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress:
# {"fileName":"DomainDatagramSocketAddress.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress localAddress -> localAddress
    int receivedAmount -> receivedAmount
    36:39:void <init>(byte[],int,pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress) -> <init>
    42:42:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress localAddress() -> localAddress
    46:46:int receivedAmount() -> receivedAmount
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress -> pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress:
# {"fileName":"DomainSocketAddress.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.lang.String socketPath -> socketPath
    31:33:void <init>(java.lang.String) -> <init>
    36:37:void <init>(java.io.File) -> <init>
    43:43:java.lang.String path() -> path
    48:48:java.lang.String toString() -> toString
    53:60:boolean equals(java.lang.Object) -> equals
    65:65:int hashCode() -> hashCode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannel -> pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannel:
# {"fileName":"DomainSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress remoteAddress() -> remoteAddress
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress localAddress() -> localAddress
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig config() -> config
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig -> pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig:
# {"fileName":"DomainSocketChannelConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setMaxMessagesPerRead(int) -> setMaxMessagesPerRead
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setConnectTimeoutMillis(int) -> setConnectTimeoutMillis
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setWriteSpinCount(int) -> setWriteSpinCount
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> setAllocator
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setRecvByteBufAllocator(pro.gravit.repackage.io.netty.channel.RecvByteBufAllocator) -> setRecvByteBufAllocator
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setAutoRead(boolean) -> setAutoRead
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setAutoClose(boolean) -> setAutoClose
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setWriteBufferHighWaterMark(int) -> setWriteBufferHighWaterMark
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setWriteBufferLowWaterMark(int) -> setWriteBufferLowWaterMark
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setWriteBufferWaterMark(pro.gravit.repackage.io.netty.channel.WriteBufferWaterMark) -> setWriteBufferWaterMark
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setMessageSizeEstimator(pro.gravit.repackage.io.netty.channel.MessageSizeEstimator) -> setMessageSizeEstimator
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketChannelConfig setReadMode(pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode) -> setReadMode
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode getReadMode() -> getReadMode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode -> pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode:
# {"fileName":"DomainSocketReadMode.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode BYTES -> BYTES
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode FILE_DESCRIPTORS -> FILE_DESCRIPTORS
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode[] $VALUES -> $VALUES
    23:23:pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode[] values() -> values
    23:23:pro.gravit.repackage.io.netty.channel.unix.DomainSocketReadMode valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    23:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.Errors -> pro.gravit.repackage.io.netty.channel.unix.Errors:
# {"fileName":"Errors.java","id":"sourceFile"}
    int ERRNO_ENOENT_NEGATIVE -> ERRNO_ENOENT_NEGATIVE
    int ERRNO_ENOTCONN_NEGATIVE -> ERRNO_ENOTCONN_NEGATIVE
    int ERRNO_EBADF_NEGATIVE -> ERRNO_EBADF_NEGATIVE
    int ERRNO_EPIPE_NEGATIVE -> ERRNO_EPIPE_NEGATIVE
    int ERRNO_ECONNRESET_NEGATIVE -> ERRNO_ECONNRESET_NEGATIVE
    int ERRNO_EAGAIN_NEGATIVE -> ERRNO_EAGAIN_NEGATIVE
    int ERRNO_EWOULDBLOCK_NEGATIVE -> ERRNO_EWOULDBLOCK_NEGATIVE
    int ERRNO_EINPROGRESS_NEGATIVE -> ERRNO_EINPROGRESS_NEGATIVE
    int ERROR_ECONNREFUSED_NEGATIVE -> ERROR_ECONNREFUSED_NEGATIVE
    int ERROR_EISCONN_NEGATIVE -> ERROR_EISCONN_NEGATIVE
    int ERROR_EALREADY_NEGATIVE -> ERROR_EALREADY_NEGATIVE
    int ERROR_ENETUNREACH_NEGATIVE -> ERROR_ENETUNREACH_NEGATIVE
    java.lang.String[] ERRORS -> ERRORS
    123:128:boolean handleConnectErrno(java.lang.String,int) -> handleConnectErrno
    139:142:void throwConnectException(java.lang.String,int) -> throwConnectException
    146:155:java.io.IOException newConnectException0(java.lang.String,int) -> newConnectException0
    159:161:pro.gravit.repackage.io.netty.channel.unix.Errors$NativeIoException newConnectionResetException(java.lang.String,int) -> newConnectionResetException
    165:165:pro.gravit.repackage.io.netty.channel.unix.Errors$NativeIoException newIOException(java.lang.String,int) -> newIOException
    172:190:int ioResult(java.lang.String,int,pro.gravit.repackage.io.netty.channel.unix.Errors$NativeIoException,java.nio.channels.ClosedChannelException) -> ioResult
    195:208:int ioResult(java.lang.String,int) -> ioResult
    211:211:void <init>() -> <init>
    47:47:java.lang.String[] access$000() -> access$000
    49:120:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.Errors$NativeConnectException -> pro.gravit.repackage.io.netty.channel.unix.Errors$NativeConnectException:
# {"fileName":"Errors.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    int expectedErr -> expectedErr
    106:108:void <init>(java.lang.String,int) -> <init>
    111:111:int expectedErr() -> expectedErr
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.Errors$NativeIoException -> pro.gravit.repackage.io.netty.channel.unix.Errors$NativeIoException:
# {"fileName":"Errors.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    int expectedErr -> expectedErr
    boolean fillInStackTrace -> fillInStackTrace
    80:81:void <init>(java.lang.String,int) -> <init>
    84:87:void <init>(java.lang.String,int,boolean) -> <init>
    90:90:int expectedErr() -> expectedErr
    95:98:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods -> pro.gravit.repackage.io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods:
# {"fileName":"ErrorsStaticallyReferencedJniMethods.java","id":"sourceFile"}
    31:31:void <init>() -> <init>
    int errnoENOENT() -> errnoENOENT
    int errnoEBADF() -> errnoEBADF
    int errnoEPIPE() -> errnoEPIPE
    int errnoECONNRESET() -> errnoECONNRESET
    int errnoENOTCONN() -> errnoENOTCONN
    int errnoEAGAIN() -> errnoEAGAIN
    int errnoEWOULDBLOCK() -> errnoEWOULDBLOCK
    int errnoEINPROGRESS() -> errnoEINPROGRESS
    int errorECONNREFUSED() -> errorECONNREFUSED
    int errorEISCONN() -> errorEISCONN
    int errorEALREADY() -> errorEALREADY
    int errorENETUNREACH() -> errorENETUNREACH
    java.lang.String strError(int) -> strError
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.FileDescriptor -> pro.gravit.repackage.io.netty.channel.unix.FileDescriptor:
# {"fileName":"FileDescriptor.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater stateUpdater -> stateUpdater
    int STATE_CLOSED_MASK -> STATE_CLOSED_MASK
    int STATE_INPUT_SHUTDOWN_MASK -> STATE_INPUT_SHUTDOWN_MASK
    int STATE_OUTPUT_SHUTDOWN_MASK -> STATE_OUTPUT_SHUTDOWN_MASK
    int STATE_ALL_MASK -> STATE_ALL_MASK
    int state -> state
    int fd -> fd
    53:56:void <init>(int) -> <init>
    62:62:int intValue() -> intValue
    67:75:boolean markClosed() -> markClosed
    82:88:void close() -> close
    94:94:boolean isOpen() -> isOpen
    98:102:int write(java.nio.ByteBuffer,int,int) -> write
    106:110:int writeAddress(long,int,int) -> writeAddress
    114:118:long writev(java.nio.ByteBuffer[],int,int,long) -> writev
    122:126:long writevAddresses(long,int) -> writevAddresses
    130:137:int read(java.nio.ByteBuffer,int,int) -> read
    141:148:int readAddress(long,int,int) -> readAddress
    153:153:java.lang.String toString() -> toString
    160:167:boolean equals(java.lang.Object) -> equals
    172:172:int hashCode() -> hashCode
    179:183:pro.gravit.repackage.io.netty.channel.unix.FileDescriptor from(java.lang.String) -> from
    190:190:pro.gravit.repackage.io.netty.channel.unix.FileDescriptor from(java.io.File) -> from
    197:201:pro.gravit.repackage.io.netty.channel.unix.FileDescriptor[] pipe() -> pipe
    205:205:boolean casState(int,int) -> casState
    209:209:boolean isClosed(int) -> isClosed
    213:213:boolean isInputShutdown(int) -> isInputShutdown
    217:217:boolean isOutputShutdown(int) -> isOutputShutdown
    221:221:int inputShutdown(int) -> inputShutdown
    225:225:int outputShutdown(int) -> outputShutdown
    int open(java.lang.String) -> open
    int close(int) -> close
    int write(int,java.nio.ByteBuffer,int,int) -> write
    int writeAddress(int,long,int,int) -> writeAddress
    long writev(int,java.nio.ByteBuffer[],int,int,long) -> writev
    long writevAddresses(int,long,int) -> writevAddresses
    int read(int,java.nio.ByteBuffer,int,int) -> read
    int readAddress(int,long,int,int) -> readAddress
    long newPipe() -> newPipe
    37:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.GenericUnixChannelOption -> pro.gravit.repackage.io.netty.channel.unix.GenericUnixChannelOption:
# {"fileName":"GenericUnixChannelOption.java","id":"sourceFile"}
    int level -> level
    int optname -> optname
    29:32:void <init>(java.lang.String,int,int) -> <init>
    40:40:int level() -> level
    49:49:int optname() -> optname
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.IntegerUnixChannelOption -> pro.gravit.repackage.io.netty.channel.unix.IntegerUnixChannelOption:
# {"fileName":"IntegerUnixChannelOption.java","id":"sourceFile"}
    30:31:void <init>(java.lang.String,int,int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.IovArray -> pro.gravit.repackage.io.netty.channel.unix.IovArray:
# {"fileName":"IovArray.java","id":"sourceFile"}
    int ADDRESS_SIZE -> ADDRESS_SIZE
    int IOV_SIZE -> IOV_SIZE
    int MAX_CAPACITY -> MAX_CAPACITY
    long memoryAddress -> memoryAddress
    pro.gravit.repackage.io.netty.buffer.ByteBuf memory -> memory
    int count -> count
    long size -> size
    long maxBytes -> maxBytes
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>() -> <init>
    69:87:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    90:92:void clear() -> clear
    99:99:boolean add(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> add
    103:127:boolean add(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> add
    132:172:boolean add(long,long,int) -> add
    179:179:int count() -> count
    186:186:long size() -> size
    200:201:void maxBytes(long) -> maxBytes
    208:208:long maxBytes() -> maxBytes
    215:215:long memoryAddress(int) -> memoryAddress
    222:223:void release() -> release
    227:231:boolean processMessage(java.lang.Object) -> processMessage
    235:235:int idx(int) -> idx
    48:63:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.Limits -> pro.gravit.repackage.io.netty.channel.unix.Limits:
# {"fileName":"Limits.java","id":"sourceFile"}
    int IOV_MAX -> IOV_MAX
    int UIO_MAX_IOV -> UIO_MAX_IOV
    long SSIZE_MAX -> SSIZE_MAX
    int SIZEOF_JLONG -> SIZEOF_JLONG
    30:30:void <init>() -> <init>
    24:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.LimitsStaticallyReferencedJniMethods -> pro.gravit.repackage.io.netty.channel.unix.LimitsStaticallyReferencedJniMethods:
# {"fileName":"LimitsStaticallyReferencedJniMethods.java","id":"sourceFile"}
    30:30:void <init>() -> <init>
    long ssizeMax() -> ssizeMax
    int iovMax() -> iovMax
    int uioMaxIov() -> uioMaxIov
    int sizeOfjlong() -> sizeOfjlong
    int udsSunPathSize() -> udsSunPathSize
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.NativeInetAddress -> pro.gravit.repackage.io.netty.channel.unix.NativeInetAddress:
# {"fileName":"NativeInetAddress.java","id":"sourceFile"}
    byte[] IPV4_MAPPED_IPV6_PREFIX -> IPV4_MAPPED_IPV6_PREFIX
    byte[] address -> address
    int scopeId -> scopeId
    33:38:pro.gravit.repackage.io.netty.channel.unix.NativeInetAddress newInstance(java.net.InetAddress) -> newInstance
    42:45:void <init>(byte[],int) -> <init>
    48:49:void <init>(byte[]) -> <init>
    52:52:byte[] address() -> address
    56:56:int scopeId() -> scopeId
    60:62:byte[] ipv4MappedIpv6Address(byte[]) -> ipv4MappedIpv6Address
    66:68:void copyIpv4MappedIpv6Address(byte[],byte[]) -> copyIpv4MappedIpv6Address
    72:101:java.net.InetSocketAddress address(byte[],int,int) -> address
    106:106:int decodeInt(byte[],int) -> decodeInt
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.PeerCredentials -> pro.gravit.repackage.io.netty.channel.unix.PeerCredentials:
# {"fileName":"PeerCredentials.java","id":"sourceFile"}
    int pid -> pid
    int uid -> uid
    int[] gids -> gids
    37:41:void <init>(int,int,int[]) -> <init>
    50:50:int pid() -> pid
    54:54:int uid() -> uid
    58:58:int[] gids() -> gids
    63:72:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.PreferredDirectByteBufAllocator -> pro.gravit.repackage.io.netty.channel.unix.PreferredDirectByteBufAllocator:
# {"fileName":"PreferredDirectByteBufAllocator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator allocator -> allocator
    24:24:void <init>() -> <init>
    28:29:void updateAllocator(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> updateAllocator
    33:33:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer() -> buffer
    38:38:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int) -> buffer
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBuf buffer(int,int) -> buffer
    48:48:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer() -> ioBuffer
    53:53:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer(int) -> ioBuffer
    58:58:pro.gravit.repackage.io.netty.buffer.ByteBuf ioBuffer(int,int) -> ioBuffer
    63:63:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer() -> heapBuffer
    68:68:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer(int) -> heapBuffer
    73:73:pro.gravit.repackage.io.netty.buffer.ByteBuf heapBuffer(int,int) -> heapBuffer
    78:78:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer() -> directBuffer
    83:83:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int) -> directBuffer
    88:88:pro.gravit.repackage.io.netty.buffer.ByteBuf directBuffer(int,int) -> directBuffer
    93:93:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer() -> compositeBuffer
    98:98:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeBuffer(int) -> compositeBuffer
    103:103:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer() -> compositeHeapBuffer
    108:108:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int) -> compositeHeapBuffer
    113:113:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer() -> compositeDirectBuffer
    118:118:pro.gravit.repackage.io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int) -> compositeDirectBuffer
    123:123:boolean isDirectBufferPooled() -> isDirectBufferPooled
    128:128:int calculateNewCapacity(int,int) -> calculateNewCapacity
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.RawUnixChannelOption -> pro.gravit.repackage.io.netty.channel.unix.RawUnixChannelOption:
# {"fileName":"RawUnixChannelOption.java","id":"sourceFile"}
    int length -> length
    40:42:void <init>(java.lang.String,int,int,int) -> <init>
    50:50:int length() -> length
    55:60:void validate(java.nio.ByteBuffer) -> validate
    27:27:void validate(java.lang.Object) -> validate
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket -> pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket:
# {"fileName":"SegmentedDatagramPacket.java","id":"sourceFile"}
    int segmentSize -> segmentSize
    40:42:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,java.net.InetSocketAddress) -> <init>
    53:55:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,java.net.InetSocketAddress,java.net.InetSocketAddress) -> <init>
    63:63:int segmentSize() -> segmentSize
    68:68:pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket copy() -> copy
    73:73:pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket duplicate() -> duplicate
    78:78:pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket retainedDuplicate() -> retainedDuplicate
    83:83:pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    88:89:pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket retain() -> retain
    94:95:pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket retain(int) -> retain
    100:101:pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket touch() -> touch
    106:107:pro.gravit.repackage.io.netty.channel.unix.SegmentedDatagramPacket touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket touch() -> touch
    28:28:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket retain() -> retain
    28:28:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    28:28:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket retainedDuplicate() -> retainedDuplicate
    28:28:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket duplicate() -> duplicate
    28:28:pro.gravit.repackage.io.netty.channel.socket.DatagramPacket copy() -> copy
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    28:28:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    28:28:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    28:28:pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.channel.AddressedEnvelope touch() -> touch
    28:28:pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.channel.AddressedEnvelope retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.ServerDomainSocketChannel -> pro.gravit.repackage.io.netty.channel.unix.ServerDomainSocketChannel:
# {"fileName":"ServerDomainSocketChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress remoteAddress() -> remoteAddress
    pro.gravit.repackage.io.netty.channel.unix.DomainSocketAddress localAddress() -> localAddress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.Socket -> pro.gravit.repackage.io.netty.channel.unix.Socket:
# {"fileName":"Socket.java","id":"sourceFile"}
    boolean isIpv6Preferred -> isIpv6Preferred
    int UDS_SUN_PATH_SIZE -> UDS_SUN_PATH_SIZE
    boolean ipv6 -> ipv6
    56:58:void <init>(int) -> <init>
    63:63:boolean useIpv6(java.net.InetAddress) -> useIpv6
    71:71:boolean useIpv6(pro.gravit.repackage.io.netty.channel.unix.Socket,java.net.InetAddress) -> useIpv6
    75:76:void shutdown() -> shutdown
    84:108:void shutdown(boolean,boolean) -> shutdown
    111:112:boolean isShutdown() -> isShutdown
    116:116:boolean isInputShutdown() -> isInputShutdown
    120:120:boolean isOutputShutdown() -> isOutputShutdown
    124:124:int sendTo(java.nio.ByteBuffer,int,int,java.net.InetAddress,int) -> sendTo
    133:155:int sendTo(java.nio.ByteBuffer,int,int,java.net.InetAddress,int,boolean) -> sendTo
    159:163:int sendToDomainSocket(java.nio.ByteBuffer,int,int,byte[]) -> sendToDomainSocket
    168:168:int sendToAddress(long,int,int,java.net.InetAddress,int) -> sendToAddress
    177:199:int sendToAddress(long,int,int,java.net.InetAddress,int,boolean) -> sendToAddress
    203:207:int sendToAddressDomainSocket(long,int,int,byte[]) -> sendToAddressDomainSocket
    211:211:int sendToAddresses(long,int,java.net.InetAddress,int) -> sendToAddresses
    220:242:int sendToAddresses(long,int,java.net.InetAddress,int,boolean) -> sendToAddresses
    246:250:int sendToAddressesDomainSocket(long,int,byte[]) -> sendToAddressesDomainSocket
    254:254:pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress recvFrom(java.nio.ByteBuffer,int,int) -> recvFrom
    258:258:pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress recvFromAddress(long,int,int) -> recvFromAddress
    263:263:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress recvFromDomainSocket(java.nio.ByteBuffer,int,int) -> recvFromDomainSocket
    268:268:pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress recvFromAddressDomainSocket(long,int,int) -> recvFromAddressDomainSocket
    272:279:int recv(java.nio.ByteBuffer,int,int) -> recv
    283:290:int recvAddress(long,int,int) -> recvAddress
    294:298:int send(java.nio.ByteBuffer,int,int) -> send
    302:306:int sendAddress(long,int,int) -> sendAddress
    310:322:int recvFd() -> recvFd
    326:334:int sendFd(int) -> sendFd
    339:353:boolean connect(java.net.SocketAddress) -> connect
    357:361:boolean finishConnect() -> finishConnect
    365:369:void disconnect() -> disconnect
    372:389:void bind(java.net.SocketAddress) -> bind
    392:396:void listen(int) -> listen
    399:407:int accept(byte[]) -> accept
    411:414:java.net.InetSocketAddress remoteAddress() -> remoteAddress
    418:421:java.net.InetSocketAddress localAddress() -> localAddress
    425:425:int getReceiveBufferSize() -> getReceiveBufferSize
    429:429:int getSendBufferSize() -> getSendBufferSize
    433:433:boolean isKeepAlive() -> isKeepAlive
    437:437:boolean isTcpNoDelay() -> isTcpNoDelay
    441:441:boolean isReuseAddress() -> isReuseAddress
    445:445:boolean isReusePort() -> isReusePort
    449:449:boolean isBroadcast() -> isBroadcast
    453:453:int getSoLinger() -> getSoLinger
    457:457:int getSoError() -> getSoError
    461:461:int getTrafficClass() -> getTrafficClass
    465:466:void setKeepAlive(boolean) -> setKeepAlive
    469:470:void setReceiveBufferSize(int) -> setReceiveBufferSize
    473:474:void setSendBufferSize(int) -> setSendBufferSize
    477:478:void setTcpNoDelay(boolean) -> setTcpNoDelay
    481:482:void setSoLinger(int) -> setSoLinger
    485:486:void setReuseAddress(boolean) -> setReuseAddress
    489:490:void setReusePort(boolean) -> setReusePort
    493:494:void setBroadcast(boolean) -> setBroadcast
    497:498:void setTrafficClass(int) -> setTrafficClass
    501:502:void setIntOpt(int,int,int) -> setIntOpt
    505:518:void setRawOpt(int,int,java.nio.ByteBuffer) -> setRawOpt
    521:521:int getIntOpt(int,int) -> getIntOpt
    525:535:void getRawOpt(int,int,java.nio.ByteBuffer) -> getRawOpt
    538:538:boolean isIPv6Preferred() -> isIPv6Preferred
    542:542:boolean shouldUseIpv6(pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> shouldUseIpv6
    boolean isIPv6Preferred0(boolean) -> isIPv6Preferred0
    boolean isIPv6(int) -> isIPv6
    552:552:java.lang.String toString() -> toString
    558:558:pro.gravit.repackage.io.netty.channel.unix.Socket newSocketStream() -> newSocketStream
    562:562:pro.gravit.repackage.io.netty.channel.unix.Socket newSocketDgram() -> newSocketDgram
    566:566:pro.gravit.repackage.io.netty.channel.unix.Socket newSocketDomain() -> newSocketDomain
    570:570:pro.gravit.repackage.io.netty.channel.unix.Socket newSocketDomainDgram() -> newSocketDomainDgram
    574:575:void initialize() -> initialize
    578:578:int newSocketStream0() -> newSocketStream0
    582:582:int newSocketStream0(pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> newSocketStream0
    586:590:int newSocketStream0(boolean) -> newSocketStream0
    594:594:int newSocketDgram0() -> newSocketDgram0
    598:598:int newSocketDgram0(pro.gravit.repackage.io.netty.channel.socket.InternetProtocolFamily) -> newSocketDgram0
    602:606:int newSocketDgram0(boolean) -> newSocketDgram0
    610:614:int newSocketDomain0() -> newSocketDomain0
    618:622:int newSocketDomainDgram0() -> newSocketDomainDgram0
    int shutdown(int,boolean,boolean) -> shutdown
    int connect(int,boolean,byte[],int,int) -> connect
    int connectDomainSocket(int,byte[]) -> connectDomainSocket
    int finishConnect(int) -> finishConnect
    int disconnect(int,boolean) -> disconnect
    int bind(int,boolean,byte[],int,int) -> bind
    int bindDomainSocket(int,byte[]) -> bindDomainSocket
    int listen(int,int) -> listen
    int accept(int,byte[]) -> accept
    byte[] remoteAddress(int) -> remoteAddress
    byte[] localAddress(int) -> localAddress
    int send(int,java.nio.ByteBuffer,int,int) -> send
    int sendAddress(int,long,int,int) -> sendAddress
    int recv(int,java.nio.ByteBuffer,int,int) -> recv
    int recvAddress(int,long,int,int) -> recvAddress
    int sendTo(int,boolean,java.nio.ByteBuffer,int,int,byte[],int,int,int) -> sendTo
    int sendToAddress(int,boolean,long,int,int,byte[],int,int,int) -> sendToAddress
    int sendToAddresses(int,boolean,long,int,byte[],int,int,int) -> sendToAddresses
    int sendToDomainSocket(int,java.nio.ByteBuffer,int,int,byte[]) -> sendToDomainSocket
    int sendToAddressDomainSocket(int,long,int,int,byte[]) -> sendToAddressDomainSocket
    int sendToAddressesDomainSocket(int,long,int,byte[]) -> sendToAddressesDomainSocket
    pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress recvFrom(int,java.nio.ByteBuffer,int,int) -> recvFrom
    pro.gravit.repackage.io.netty.channel.unix.DatagramSocketAddress recvFromAddress(int,long,int,int) -> recvFromAddress
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress recvFromDomainSocket(int,java.nio.ByteBuffer,int,int) -> recvFromDomainSocket
    pro.gravit.repackage.io.netty.channel.unix.DomainDatagramSocketAddress recvFromAddressDomainSocket(int,long,int,int) -> recvFromAddressDomainSocket
    int recvFd(int) -> recvFd
    int sendFd(int,int) -> sendFd
    int msgFastopen() -> msgFastopen
    int newSocketStreamFd(boolean) -> newSocketStreamFd
    int newSocketDgramFd(boolean) -> newSocketDgramFd
    int newSocketDomainFd() -> newSocketDomainFd
    int newSocketDomainDgramFd() -> newSocketDomainDgramFd
    int isReuseAddress(int) -> isReuseAddress
    int isReusePort(int) -> isReusePort
    int getReceiveBufferSize(int) -> getReceiveBufferSize
    int getSendBufferSize(int) -> getSendBufferSize
    int isKeepAlive(int) -> isKeepAlive
    int isTcpNoDelay(int) -> isTcpNoDelay
    int isBroadcast(int) -> isBroadcast
    int getSoLinger(int) -> getSoLinger
    int getSoError(int) -> getSoError
    int getTrafficClass(int,boolean) -> getTrafficClass
    void setReuseAddress(int,int) -> setReuseAddress
    void setReusePort(int,int) -> setReusePort
    void setKeepAlive(int,int) -> setKeepAlive
    void setReceiveBufferSize(int,int) -> setReceiveBufferSize
    void setSendBufferSize(int,int) -> setSendBufferSize
    void setTcpNoDelay(int,int) -> setTcpNoDelay
    void setSoLinger(int,int) -> setSoLinger
    void setBroadcast(int,int) -> setBroadcast
    void setTrafficClass(int,boolean,int) -> setTrafficClass
    void setIntOpt(int,int,int,int) -> setIntOpt
    void setRawOptArray(int,int,int,byte[],int,int) -> setRawOptArray
    void setRawOptAddress(int,int,int,long,int) -> setRawOptAddress
    int getIntOpt(int,int,int) -> getIntOpt
    void getRawOptArray(int,int,int,byte[],int,int) -> getRawOptArray
    void getRawOptAddress(int,int,int,long,int) -> getRawOptAddress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.SocketWritableByteChannel -> pro.gravit.repackage.io.netty.channel.unix.SocketWritableByteChannel:
# {"fileName":"SocketWritableByteChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.unix.FileDescriptor fd -> fd
    28:30:void <init>(pro.gravit.repackage.io.netty.channel.unix.FileDescriptor) -> <init>
    33:33:int write(java.nio.ByteBuffer,int,int) -> write
    39:72:int write(java.nio.ByteBuffer) -> write
    77:77:boolean isOpen() -> isOpen
    82:83:void close() -> close
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.Unix -> pro.gravit.repackage.io.netty.channel.unix.Unix:
# {"fileName":"Unix.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicBoolean registered -> registered
    57:59:void registerInternal(java.lang.Runnable) -> registerInternal
    67:67:boolean isAvailable() -> isAvailable
    78:78:void ensureAvailability() -> ensureAvailability
    89:89:java.lang.Throwable unavailabilityCause() -> unavailabilityCause
    92:93:void <init>() -> <init>
    32:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.UnixChannel -> pro.gravit.repackage.io.netty.channel.unix.UnixChannel:
# {"fileName":"UnixChannel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.unix.FileDescriptor fd() -> fd
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.UnixChannelOption -> pro.gravit.repackage.io.netty.channel.unix.UnixChannelOption:
# {"fileName":"UnixChannelOption.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelOption SO_REUSEPORT -> SO_REUSEPORT
    pro.gravit.repackage.io.netty.channel.ChannelOption DOMAIN_SOCKET_READ_MODE -> DOMAIN_SOCKET_READ_MODE
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
    21:23:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.channel.unix.UnixChannelUtil -> pro.gravit.repackage.io.netty.channel.unix.UnixChannelUtil:
# {"fileName":"UnixChannelUtil.java","id":"sourceFile"}
    29:30:void <init>() -> <init>
    37:37:boolean isBufferCopyNeededForWrite(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> isBufferCopyNeededForWrite
    41:41:boolean isBufferCopyNeededForWrite(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> isBufferCopyNeededForWrite
    45:60:java.net.InetSocketAddress computeRemoteAddr(java.net.InetSocketAddress,java.net.InetSocketAddress) -> computeRemoteAddr
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.address.DynamicAddressConnectHandler -> pro.gravit.repackage.io.netty.handler.address.DynamicAddressConnectHandler:
# {"fileName":"DynamicAddressConnectHandler.java","id":"sourceFile"}
    35:35:void <init>() -> <init>
    43:59:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    69:69:java.net.SocketAddress localAddress(java.net.SocketAddress,java.net.SocketAddress) -> localAddress
    80:80:java.net.SocketAddress remoteAddress(java.net.SocketAddress,java.net.SocketAddress) -> remoteAddress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.address.DynamicAddressConnectHandler$1 -> pro.gravit.repackage.io.netty.handler.address.DynamicAddressConnectHandler$1:
# {"fileName":"DynamicAddressConnectHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.address.DynamicAddressConnectHandler this$0 -> this$0
    49:49:void <init>(pro.gravit.repackage.io.netty.handler.address.DynamicAddressConnectHandler) -> <init>
    52:57:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    49:49:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.address.ResolveAddressHandler -> pro.gravit.repackage.io.netty.handler.address.ResolveAddressHandler:
# {"fileName":"ResolveAddressHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.AddressResolverGroup resolverGroup -> resolverGroup
    40:42:void <init>(pro.gravit.repackage.io.netty.resolver.AddressResolverGroup) -> <init>
    47:65:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.address.ResolveAddressHandler$1 -> pro.gravit.repackage.io.netty.handler.address.ResolveAddressHandler$1:
# {"fileName":"ResolveAddressHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    java.net.SocketAddress val$localAddress -> val$localAddress
    pro.gravit.repackage.io.netty.handler.address.ResolveAddressHandler this$0 -> this$0
    49:49:void <init>(pro.gravit.repackage.io.netty.handler.address.ResolveAddressHandler,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress) -> <init>
    52:59:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder -> pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder:
# {"fileName":"AsciiHeadersEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buf -> buf
    pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType separatorType -> separatorType
    pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType newlineType -> newlineType
    63:64:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    66:70:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType,pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType) -> <init>
    73:112:void encode(java.util.Map$Entry) -> encode
    115:120:void writeAscii(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,java.lang.CharSequence) -> writeAscii
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$1 -> pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$1:
# {"fileName":"AsciiHeadersEncoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$AsciiHeadersEncoder$SeparatorType -> $SwitchMap$io$netty$handler$codec$AsciiHeadersEncoder$SeparatorType
    int[] $SwitchMap$io$netty$handler$codec$AsciiHeadersEncoder$NewlineType -> $SwitchMap$io$netty$handler$codec$AsciiHeadersEncoder$NewlineType
    84:99:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType -> pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType:
# {"fileName":"AsciiHeadersEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType LF -> LF
    pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType CRLF -> CRLF
    pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType[] $VALUES -> $VALUES
    47:47:pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType[] values() -> values
    47:47:pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$NewlineType valueOf(java.lang.String) -> valueOf
    47:47:void <init>(java.lang.String,int) -> <init>
    47:55:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType -> pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType:
# {"fileName":"AsciiHeadersEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType COLON -> COLON
    pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType COLON_SPACE -> COLON_SPACE
    pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType[] $VALUES -> $VALUES
    33:33:pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType[] values() -> values
    33:33:pro.gravit.repackage.io.netty.handler.codec.AsciiHeadersEncoder$SeparatorType valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:41:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec -> pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec:
# {"fileName":"ByteToMessageCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher -> outboundMsgMatcher
    pro.gravit.repackage.io.netty.handler.codec.MessageToByteEncoder encoder -> encoder
    pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder decoder -> decoder
    55:56:void <init>() -> <init>
    62:63:void <init>(java.lang.Class) -> <init>
    39:76:void <init>(boolean) -> <init>
    39:90:void <init>(java.lang.Class,boolean) -> <init>
    98:98:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    103:104:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    108:109:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    113:114:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    118:119:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    124:128:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    133:137:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    153:158:void decodeLast(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec$1 -> pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec$1:
# {"fileName":"ByteToMessageCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec this$0 -> this$0
    39:39:void <init>(pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec) -> <init>
    42:43:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    47:48:void decodeLast(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec$Encoder -> pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec$Encoder:
# {"fileName":"ByteToMessageCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec this$0 -> this$0
    161:163:void <init>(pro.gravit.repackage.io.netty.handler.codec.ByteToMessageCodec,boolean) -> <init>
    167:167:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    172:173:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder -> pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder:
# {"fileName":"ByteToMessageDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator MERGE_CUMULATOR -> MERGE_CUMULATOR
    pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator COMPOSITE_CUMULATOR -> COMPOSITE_CUMULATOR
    byte STATE_INIT -> STATE_INIT
    byte STATE_CALLING_CHILD_DECODE -> STATE_CALLING_CHILD_DECODE
    byte STATE_HANDLER_REMOVED_PENDING -> STATE_HANDLER_REMOVED_PENDING
    pro.gravit.repackage.io.netty.buffer.ByteBuf cumulation -> cumulation
    pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator cumulator -> cumulator
    boolean singleDecode -> singleDecode
    boolean first -> first
    boolean firedChannelRead -> firedChannelRead
    boolean selfFiredChannelRead -> selfFiredChannelRead
    byte decodeState -> decodeState
    int discardAfterReads -> discardAfterReads
    int numReads -> numReads
    166:192:void <init>() -> <init>
    201:202:void setSingleDecode(boolean) -> setSingleDecode
    211:211:boolean isSingleDecode() -> isSingleDecode
    218:219:void setCumulator(pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> setCumulator
    226:228:void setDiscardAfterReads(int) -> setDiscardAfterReads
    237:237:int actualReadableBytes() -> actualReadableBytes
    246:249:pro.gravit.repackage.io.netty.buffer.ByteBuf internalBuffer() -> internalBuffer
    255:273:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    279:279:void handlerRemoved0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    283:326:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    332:339:void fireChannelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.util.List,int) -> fireChannelRead
    345:348:void fireChannelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.CodecOutputList,int) -> fireChannelRead
    352:359:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    362:372:void discardSomeReadBytes() -> discardSomeReadBytes
    376:377:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    381:388:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    391:418:void channelInputClosed(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,boolean) -> channelInputClosed
    425:438:void channelInputClosed(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.util.List) -> channelInputClosed
    450:501:void callDecode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> callDecode
    void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    527:539:void decodeRemovalReentryProtection(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decodeRemovalReentryProtection
    549:554:void decodeLast(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    557:572:pro.gravit.repackage.io.netty.buffer.ByteBuf expandCumulation(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> expandCumulation
    81:121:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$1:
# {"fileName":"ByteToMessageDecoder.java","id":"sourceFile"}
    81:81:void <init>() -> <init>
    84:112:pro.gravit.repackage.io.netty.buffer.ByteBuf cumulate(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> cumulate
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$2 -> pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$2:
# {"fileName":"ByteToMessageDecoder.java","id":"sourceFile"}
    121:121:void <init>() -> <init>
    124:157:pro.gravit.repackage.io.netty.buffer.ByteBuf cumulate(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> cumulate
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator -> pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator:
# {"fileName":"ByteToMessageDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf cumulate(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> cumulate
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.CharSequenceValueConverter -> pro.gravit.repackage.io.netty.handler.codec.CharSequenceValueConverter:
# {"fileName":"CharSequenceValueConverter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.CharSequenceValueConverter INSTANCE -> INSTANCE
    pro.gravit.repackage.io.netty.util.AsciiString TRUE_ASCII -> TRUE_ASCII
    26:26:void <init>() -> <init>
    32:35:java.lang.CharSequence convertObject(java.lang.Object) -> convertObject
    40:40:java.lang.CharSequence convertInt(int) -> convertInt
    45:45:java.lang.CharSequence convertLong(long) -> convertLong
    50:50:java.lang.CharSequence convertDouble(double) -> convertDouble
    55:55:java.lang.CharSequence convertChar(char) -> convertChar
    60:60:java.lang.CharSequence convertBoolean(boolean) -> convertBoolean
    65:65:java.lang.CharSequence convertFloat(float) -> convertFloat
    70:70:boolean convertToBoolean(java.lang.CharSequence) -> convertToBoolean
    75:75:java.lang.CharSequence convertByte(byte) -> convertByte
    80:83:byte convertToByte(java.lang.CharSequence) -> convertToByte
    88:88:char convertToChar(java.lang.CharSequence) -> convertToChar
    93:93:java.lang.CharSequence convertShort(short) -> convertShort
    98:101:short convertToShort(java.lang.CharSequence) -> convertToShort
    106:109:int convertToInt(java.lang.CharSequence) -> convertToInt
    114:117:long convertToLong(java.lang.CharSequence) -> convertToLong
    122:122:java.lang.CharSequence convertTimeMillis(long) -> convertTimeMillis
    127:132:long convertToTimeMillis(java.lang.CharSequence) -> convertToTimeMillis
    137:140:float convertToFloat(java.lang.CharSequence) -> convertToFloat
    145:148:double convertToDouble(java.lang.CharSequence) -> convertToDouble
    26:26:double convertToDouble(java.lang.Object) -> convertToDouble
    26:26:java.lang.Object convertDouble(double) -> convertDouble
    26:26:float convertToFloat(java.lang.Object) -> convertToFloat
    26:26:java.lang.Object convertFloat(float) -> convertFloat
    26:26:long convertToTimeMillis(java.lang.Object) -> convertToTimeMillis
    26:26:java.lang.Object convertTimeMillis(long) -> convertTimeMillis
    26:26:long convertToLong(java.lang.Object) -> convertToLong
    26:26:java.lang.Object convertLong(long) -> convertLong
    26:26:int convertToInt(java.lang.Object) -> convertToInt
    26:26:java.lang.Object convertInt(int) -> convertInt
    26:26:short convertToShort(java.lang.Object) -> convertToShort
    26:26:java.lang.Object convertShort(short) -> convertShort
    26:26:char convertToChar(java.lang.Object) -> convertToChar
    26:26:java.lang.Object convertChar(char) -> convertChar
    26:26:byte convertToByte(java.lang.Object) -> convertToByte
    26:26:java.lang.Object convertByte(byte) -> convertByte
    26:26:boolean convertToBoolean(java.lang.Object) -> convertToBoolean
    26:26:java.lang.Object convertBoolean(boolean) -> convertBoolean
    26:26:java.lang.Object convertObject(java.lang.Object) -> convertObject
    27:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.CodecException -> pro.gravit.repackage.io.netty.handler.codec.CodecException:
# {"fileName":"CodecException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.CodecOutputList -> pro.gravit.repackage.io.netty.handler.codec.CodecOutputList:
# {"fileName":"CodecOutputList.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler NOOP_RECYCLER -> NOOP_RECYCLER
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal CODEC_OUTPUT_LISTS_POOL -> CODEC_OUTPUT_LISTS_POOL
    pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler recycler -> recycler
    int size -> size
    java.lang.Object[] array -> array
    boolean insertSinceRecycled -> insertSinceRecycled
    94:94:pro.gravit.repackage.io.netty.handler.codec.CodecOutputList newInstance() -> newInstance
    102:105:void <init>(pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler,int) -> <init>
    109:110:java.lang.Object get(int) -> get
    115:115:int size() -> size
    120:129:boolean add(java.lang.Object) -> add
    134:139:java.lang.Object set(int,java.lang.Object) -> set
    144:157:void add(int,java.lang.Object) -> add
    161:170:java.lang.Object remove(int) -> remove
    177:178:void clear() -> clear
    184:184:boolean insertSinceRecycled() -> insertSinceRecycled
    191:198:void recycle() -> recycle
    204:204:java.lang.Object getUnsafe(int) -> getUnsafe
    208:212:void checkIndex(int) -> checkIndex
    215:217:void insert(int,java.lang.Object) -> insert
    221:231:void expandArray() -> expandArray
    29:29:void <init>(pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler,int,pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$1) -> <init>
    29:29:pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler access$100() -> access$100
    31:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$1 -> pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$1:
# {"fileName":"CodecOutputList.java","id":"sourceFile"}
    31:31:void <init>() -> <init>
    35:35:void recycle(pro.gravit.repackage.io.netty.handler.codec.CodecOutputList) -> recycle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$2 -> pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$2:
# {"fileName":"CodecOutputList.java","id":"sourceFile"}
    39:39:void <init>() -> <init>
    43:43:pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputLists initialValue() -> initialValue
    39:39:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler -> pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputListRecycler:
# {"fileName":"CodecOutputList.java","id":"sourceFile"}
    void recycle(pro.gravit.repackage.io.netty.handler.codec.CodecOutputList) -> recycle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputLists -> pro.gravit.repackage.io.netty.handler.codec.CodecOutputList$CodecOutputLists:
# {"fileName":"CodecOutputList.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.CodecOutputList[] elements -> elements
    int mask -> mask
    int currentIdx -> currentIdx
    int count -> count
    boolean $assertionsDisabled -> $assertionsDisabled
    58:67:void <init>(int) -> <init>
    70:80:pro.gravit.repackage.io.netty.handler.codec.CodecOutputList getOrCreate() -> getOrCreate
    85:90:void recycle(pro.gravit.repackage.io.netty.handler.codec.CodecOutputList) -> recycle
    51:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.CorruptedFrameException -> pro.gravit.repackage.io.netty.handler.codec.CorruptedFrameException:
# {"fileName":"CorruptedFrameException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DatagramPacketDecoder -> pro.gravit.repackage.io.netty.handler.codec.DatagramPacketDecoder:
# {"fileName":"DatagramPacketDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.MessageToMessageDecoder decoder -> decoder
    45:47:void <init>(pro.gravit.repackage.io.netty.handler.codec.MessageToMessageDecoder) -> <init>
    51:54:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    59:60:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.socket.DatagramPacket,java.util.List) -> decode
    64:65:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    69:70:void channelUnregistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    74:75:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    79:80:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    84:85:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    89:90:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    94:95:void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    99:100:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    104:105:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    109:110:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    114:114:boolean isSharable() -> isSharable
    36:36:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DatagramPacketEncoder -> pro.gravit.repackage.io.netty.handler.codec.DatagramPacketEncoder:
# {"fileName":"DatagramPacketEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.MessageToMessageEncoder encoder -> encoder
    boolean $assertionsDisabled -> $assertionsDisabled
    56:58:void <init>(pro.gravit.repackage.io.netty.handler.codec.MessageToMessageEncoder) -> <init>
    62:69:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    75:90:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.AddressedEnvelope,java.util.List) -> encode
    94:95:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    101:102:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    106:107:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    111:112:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    116:117:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    121:122:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    126:127:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    131:132:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    136:137:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    141:142:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    146:146:boolean isSharable() -> isSharable
    46:46:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    46:46:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DateFormatter -> pro.gravit.repackage.io.netty.handler.codec.DateFormatter:
# {"fileName":"DateFormatter.java","id":"sourceFile"}
    java.util.BitSet DELIMITERS -> DELIMITERS
    java.lang.String[] DAY_OF_WEEK_TO_SHORT_NAME -> DAY_OF_WEEK_TO_SHORT_NAME
    java.lang.String[] CALENDAR_MONTH_TO_SHORT_NAME -> CALENDAR_MONTH_TO_SHORT_NAME
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal INSTANCES -> INSTANCES
    java.util.GregorianCalendar cal -> cal
    java.lang.StringBuilder sb -> sb
    boolean timeFound -> timeFound
    int hours -> hours
    int minutes -> minutes
    int seconds -> seconds
    boolean dayOfMonthFound -> dayOfMonthFound
    int dayOfMonth -> dayOfMonth
    boolean monthFound -> monthFound
    int month -> month
    boolean yearFound -> yearFound
    int year -> year
    87:87:java.util.Date parseHttpDate(java.lang.CharSequence) -> parseHttpDate
    98:107:java.util.Date parseHttpDate(java.lang.CharSequence,int,int) -> parseHttpDate
    116:116:java.lang.String format(java.util.Date) -> format
    126:126:java.lang.StringBuilder append(java.util.Date,java.lang.StringBuilder) -> append
    130:132:pro.gravit.repackage.io.netty.handler.codec.DateFormatter formatter() -> formatter
    137:137:boolean isDelim(char) -> isDelim
    141:141:boolean isDigit(char) -> isDigit
    145:145:int getNumericalValue(char) -> getNumericalValue
    148:163:void <init>() -> <init>
    166:178:void reset() -> reset
    181:241:boolean tryParseTime(java.lang.CharSequence,int,int) -> tryParseTime
    245:263:boolean tryParseDayOfMonth(java.lang.CharSequence,int,int) -> tryParseDayOfMonth
    267:305:boolean tryParseMonth(java.lang.CharSequence,int,int) -> tryParseMonth
    309:333:boolean tryParseYear(java.lang.CharSequence,int,int) -> tryParseYear
    338:362:boolean parseToken(java.lang.CharSequence,int,int) -> parseToken
    366:367:java.util.Date parse0(java.lang.CharSequence,int,int) -> parse0
    372:392:boolean parse1(java.lang.CharSequence,int,int) -> parse1
    396:412:boolean normalizeAndValidate() -> normalizeAndValidate
    416:422:java.util.Date computeDate() -> computeDate
    426:427:java.lang.String format0(java.util.Date) -> format0
    431:439:java.lang.StringBuilder append0(java.util.Date,java.lang.StringBuilder) -> append0
    443:446:java.lang.StringBuilder appendZeroLeftPadded(int,java.lang.StringBuilder) -> appendZeroLeftPadded
    48:48:void <init>(pro.gravit.repackage.io.netty.handler.codec.DateFormatter$1) -> <init>
    50:73:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DateFormatter$1 -> pro.gravit.repackage.io.netty.handler.codec.DateFormatter$1:
# {"fileName":"DateFormatter.java","id":"sourceFile"}
    74:74:void <init>() -> <init>
    77:77:pro.gravit.repackage.io.netty.handler.codec.DateFormatter initialValue() -> initialValue
    74:74:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DecoderException -> pro.gravit.repackage.io.netty.handler.codec.DecoderException:
# {"fileName":"DecoderException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DecoderResult -> pro.gravit.repackage.io.netty.handler.codec.DecoderResult:
# {"fileName":"DecoderResult.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Signal SIGNAL_UNFINISHED -> SIGNAL_UNFINISHED
    pro.gravit.repackage.io.netty.util.Signal SIGNAL_SUCCESS -> SIGNAL_SUCCESS
    pro.gravit.repackage.io.netty.handler.codec.DecoderResult UNFINISHED -> UNFINISHED
    pro.gravit.repackage.io.netty.handler.codec.DecoderResult SUCCESS -> SUCCESS
    java.lang.Throwable cause -> cause
    30:30:pro.gravit.repackage.io.netty.handler.codec.DecoderResult failure(java.lang.Throwable) -> failure
    35:37:void <init>(java.lang.Throwable) -> <init>
    40:40:boolean isFinished() -> isFinished
    44:44:boolean isSuccess() -> isSuccess
    48:48:boolean isFailure() -> isFailure
    52:55:java.lang.Throwable cause() -> cause
    61:73:java.lang.String toString() -> toString
    23:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DecoderResultProvider -> pro.gravit.repackage.io.netty.handler.codec.DecoderResultProvider:
# {"fileName":"DecoderResultProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    void setDecoderResult(pro.gravit.repackage.io.netty.handler.codec.DecoderResult) -> setDecoderResult
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    int HASH_CODE_SEED -> HASH_CODE_SEED
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries -> entries
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry head -> head
    byte hashMask -> hashMask
    pro.gravit.repackage.io.netty.handler.codec.ValueConverter valueConverter -> valueConverter
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator -> nameValidator
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator -> valueValidator
    pro.gravit.repackage.io.netty.util.HashingStrategy hashingStrategy -> hashingStrategy
    int size -> size
    boolean $assertionsDisabled -> $assertionsDisabled
    94:95:void <init>(pro.gravit.repackage.io.netty.handler.codec.ValueConverter) -> <init>
    99:100:void <init>(pro.gravit.repackage.io.netty.handler.codec.ValueConverter,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    104:105:void <init>(pro.gravit.repackage.io.netty.util.HashingStrategy,pro.gravit.repackage.io.netty.handler.codec.ValueConverter) -> <init>
    109:110:void <init>(pro.gravit.repackage.io.netty.util.HashingStrategy,pro.gravit.repackage.io.netty.handler.codec.ValueConverter,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    123:125:void <init>(pro.gravit.repackage.io.netty.util.HashingStrategy,pro.gravit.repackage.io.netty.handler.codec.ValueConverter,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator,int) -> <init>
    138:148:void <init>(pro.gravit.repackage.io.netty.util.HashingStrategy,pro.gravit.repackage.io.netty.handler.codec.ValueConverter,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator,int,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator) -> <init>
    152:166:java.lang.Object get(java.lang.Object) -> get
    171:175:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    180:181:java.lang.Object getAndRemove(java.lang.Object) -> getAndRemove
    186:190:java.lang.Object getAndRemove(java.lang.Object,java.lang.Object) -> getAndRemove
    195:208:java.util.List getAll(java.lang.Object) -> getAll
    217:217:java.util.Iterator valueIterator(java.lang.Object) -> valueIterator
    222:224:java.util.List getAllAndRemove(java.lang.Object) -> getAllAndRemove
    229:229:boolean contains(java.lang.Object) -> contains
    234:234:boolean containsObject(java.lang.Object,java.lang.Object) -> containsObject
    239:239:boolean containsBoolean(java.lang.Object,boolean) -> containsBoolean
    244:244:boolean containsByte(java.lang.Object,byte) -> containsByte
    249:249:boolean containsChar(java.lang.Object,char) -> containsChar
    254:254:boolean containsShort(java.lang.Object,short) -> containsShort
    259:259:boolean containsInt(java.lang.Object,int) -> containsInt
    264:264:boolean containsLong(java.lang.Object,long) -> containsLong
    269:269:boolean containsFloat(java.lang.Object,float) -> containsFloat
    274:274:boolean containsDouble(java.lang.Object,double) -> containsDouble
    279:279:boolean containsTimeMillis(java.lang.Object,long) -> containsTimeMillis
    285:285:boolean contains(java.lang.Object,java.lang.Object) -> contains
    289:300:boolean contains(java.lang.Object,java.lang.Object,pro.gravit.repackage.io.netty.util.HashingStrategy) -> contains
    305:305:int size() -> size
    310:310:boolean isEmpty() -> isEmpty
    315:324:java.util.Set names() -> names
    329:335:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> add
    340:347:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> add
    352:359:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object[]) -> add
    364:364:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object) -> addObject
    369:372:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Iterable) -> addObject
    377:380:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object[]) -> addObject
    385:385:pro.gravit.repackage.io.netty.handler.codec.Headers addInt(java.lang.Object,int) -> addInt
    390:390:pro.gravit.repackage.io.netty.handler.codec.Headers addLong(java.lang.Object,long) -> addLong
    395:395:pro.gravit.repackage.io.netty.handler.codec.Headers addDouble(java.lang.Object,double) -> addDouble
    400:400:pro.gravit.repackage.io.netty.handler.codec.Headers addTimeMillis(java.lang.Object,long) -> addTimeMillis
    405:405:pro.gravit.repackage.io.netty.handler.codec.Headers addChar(java.lang.Object,char) -> addChar
    410:410:pro.gravit.repackage.io.netty.handler.codec.Headers addBoolean(java.lang.Object,boolean) -> addBoolean
    415:415:pro.gravit.repackage.io.netty.handler.codec.Headers addFloat(java.lang.Object,float) -> addFloat
    420:420:pro.gravit.repackage.io.netty.handler.codec.Headers addByte(java.lang.Object,byte) -> addByte
    425:425:pro.gravit.repackage.io.netty.handler.codec.Headers addShort(java.lang.Object,short) -> addShort
    430:434:pro.gravit.repackage.io.netty.handler.codec.Headers add(pro.gravit.repackage.io.netty.handler.codec.Headers) -> add
    438:463:void addImpl(pro.gravit.repackage.io.netty.handler.codec.Headers) -> addImpl
    467:474:pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> set
    479:494:pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> set
    499:514:pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object[]) -> set
    519:520:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object) -> setObject
    525:540:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Iterable) -> setObject
    545:560:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object[]) -> setObject
    565:565:pro.gravit.repackage.io.netty.handler.codec.Headers setInt(java.lang.Object,int) -> setInt
    570:570:pro.gravit.repackage.io.netty.handler.codec.Headers setLong(java.lang.Object,long) -> setLong
    575:575:pro.gravit.repackage.io.netty.handler.codec.Headers setDouble(java.lang.Object,double) -> setDouble
    580:580:pro.gravit.repackage.io.netty.handler.codec.Headers setTimeMillis(java.lang.Object,long) -> setTimeMillis
    585:585:pro.gravit.repackage.io.netty.handler.codec.Headers setFloat(java.lang.Object,float) -> setFloat
    590:590:pro.gravit.repackage.io.netty.handler.codec.Headers setChar(java.lang.Object,char) -> setChar
    595:595:pro.gravit.repackage.io.netty.handler.codec.Headers setBoolean(java.lang.Object,boolean) -> setBoolean
    600:600:pro.gravit.repackage.io.netty.handler.codec.Headers setByte(java.lang.Object,byte) -> setByte
    605:605:pro.gravit.repackage.io.netty.handler.codec.Headers setShort(java.lang.Object,short) -> setShort
    610:614:pro.gravit.repackage.io.netty.handler.codec.Headers set(pro.gravit.repackage.io.netty.handler.codec.Headers) -> set
    619:625:pro.gravit.repackage.io.netty.handler.codec.Headers setAll(pro.gravit.repackage.io.netty.handler.codec.Headers) -> setAll
    630:630:boolean remove(java.lang.Object) -> remove
    635:638:pro.gravit.repackage.io.netty.handler.codec.Headers clear() -> clear
    643:643:java.util.Iterator iterator() -> iterator
    648:652:java.lang.Boolean getBoolean(java.lang.Object) -> getBoolean
    658:659:boolean getBoolean(java.lang.Object,boolean) -> getBoolean
    664:668:java.lang.Byte getByte(java.lang.Object) -> getByte
    674:675:byte getByte(java.lang.Object,byte) -> getByte
    680:684:java.lang.Character getChar(java.lang.Object) -> getChar
    690:691:char getChar(java.lang.Object,char) -> getChar
    696:700:java.lang.Short getShort(java.lang.Object) -> getShort
    706:707:short getShort(java.lang.Object,short) -> getShort
    712:716:java.lang.Integer getInt(java.lang.Object) -> getInt
    722:723:int getInt(java.lang.Object,int) -> getInt
    728:732:java.lang.Long getLong(java.lang.Object) -> getLong
    738:739:long getLong(java.lang.Object,long) -> getLong
    744:748:java.lang.Float getFloat(java.lang.Object) -> getFloat
    754:755:float getFloat(java.lang.Object,float) -> getFloat
    760:764:java.lang.Double getDouble(java.lang.Object) -> getDouble
    770:771:double getDouble(java.lang.Object,double) -> getDouble
    776:780:java.lang.Long getTimeMillis(java.lang.Object) -> getTimeMillis
    786:787:long getTimeMillis(java.lang.Object,long) -> getTimeMillis
    792:796:java.lang.Boolean getBooleanAndRemove(java.lang.Object) -> getBooleanAndRemove
    802:803:boolean getBooleanAndRemove(java.lang.Object,boolean) -> getBooleanAndRemove
    808:812:java.lang.Byte getByteAndRemove(java.lang.Object) -> getByteAndRemove
    818:819:byte getByteAndRemove(java.lang.Object,byte) -> getByteAndRemove
    824:828:java.lang.Character getCharAndRemove(java.lang.Object) -> getCharAndRemove
    834:835:char getCharAndRemove(java.lang.Object,char) -> getCharAndRemove
    840:844:java.lang.Short getShortAndRemove(java.lang.Object) -> getShortAndRemove
    850:851:short getShortAndRemove(java.lang.Object,short) -> getShortAndRemove
    856:860:java.lang.Integer getIntAndRemove(java.lang.Object) -> getIntAndRemove
    866:867:int getIntAndRemove(java.lang.Object,int) -> getIntAndRemove
    872:876:java.lang.Long getLongAndRemove(java.lang.Object) -> getLongAndRemove
    882:883:long getLongAndRemove(java.lang.Object,long) -> getLongAndRemove
    888:892:java.lang.Float getFloatAndRemove(java.lang.Object) -> getFloatAndRemove
    898:899:float getFloatAndRemove(java.lang.Object,float) -> getFloatAndRemove
    904:908:java.lang.Double getDoubleAndRemove(java.lang.Object) -> getDoubleAndRemove
    914:915:double getDoubleAndRemove(java.lang.Object,double) -> getDoubleAndRemove
    920:924:java.lang.Long getTimeMillisAndRemove(java.lang.Object) -> getTimeMillisAndRemove
    930:931:long getTimeMillisAndRemove(java.lang.Object,long) -> getTimeMillisAndRemove
    937:941:boolean equals(java.lang.Object) -> equals
    947:947:int hashCode() -> hashCode
    958:978:boolean equals(pro.gravit.repackage.io.netty.handler.codec.Headers,pro.gravit.repackage.io.netty.util.HashingStrategy) -> equals
    987:995:int hashCode(pro.gravit.repackage.io.netty.util.HashingStrategy) -> hashCode
    1000:1000:java.lang.String toString() -> toString
    1012:1013:void validateName(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object) -> validateName
    1016:1017:void validateValue(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object) -> validateValue
    1020:1020:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int,java.lang.Object,java.lang.Object,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> newHeaderEntry
    1024:1024:pro.gravit.repackage.io.netty.handler.codec.ValueConverter valueConverter() -> valueConverter
    1028:1028:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator() -> nameValidator
    1032:1032:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator() -> valueValidator
    1036:1036:int index(int) -> index
    1041:1043:void add0(int,int,java.lang.Object,java.lang.Object) -> add0
    1049:1079:java.lang.Object remove0(int,int,java.lang.Object) -> remove0
    1083:1103:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry remove0(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> remove0
    1108:1108:pro.gravit.repackage.io.netty.handler.codec.Headers thisT() -> thisT
    1113:1115:java.lang.Object fromObject(java.lang.Object,java.lang.Object) -> fromObject
    1121:1123:java.lang.Object fromBoolean(java.lang.Object,boolean) -> fromBoolean
    1129:1131:java.lang.Object fromByte(java.lang.Object,byte) -> fromByte
    1137:1139:java.lang.Object fromChar(java.lang.Object,char) -> fromChar
    1145:1147:java.lang.Object fromShort(java.lang.Object,short) -> fromShort
    1153:1155:java.lang.Object fromInt(java.lang.Object,int) -> fromInt
    1161:1163:java.lang.Object fromLong(java.lang.Object,long) -> fromLong
    1169:1171:java.lang.Object fromFloat(java.lang.Object,float) -> fromFloat
    1177:1179:java.lang.Object fromDouble(java.lang.Object,double) -> fromDouble
    1185:1187:java.lang.Object fromTimeMillis(java.lang.Object,long) -> fromTimeMillis
    1193:1195:boolean toBoolean(java.lang.Object,java.lang.Object) -> toBoolean
    1201:1203:byte toByte(java.lang.Object,java.lang.Object) -> toByte
    1209:1211:char toChar(java.lang.Object,java.lang.Object) -> toChar
    1217:1219:short toShort(java.lang.Object,java.lang.Object) -> toShort
    1225:1227:int toInt(java.lang.Object,java.lang.Object) -> toInt
    1233:1235:long toLong(java.lang.Object,java.lang.Object) -> toLong
    1241:1243:float toFloat(java.lang.Object,java.lang.Object) -> toFloat
    1249:1251:double toDouble(java.lang.Object,java.lang.Object) -> toDouble
    1257:1259:long toTimeMillis(java.lang.Object,java.lang.Object) -> toTimeMillis
    1268:1271:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders copy() -> copy
    43:43:pro.gravit.repackage.io.netty.util.HashingStrategy access$100(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders) -> access$100
    43:43:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry[] access$200(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders) -> access$200
    43:43:int access$300(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders,int) -> access$300
    43:43:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$1 -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$1:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    int hash -> hash
    java.lang.Object key -> key
    java.lang.Object value -> value
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry next -> next
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry before -> before
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry after -> after
    1364:1367:void <init>(int,java.lang.Object) -> <init>
    1369:1378:void <init>(int,java.lang.Object,java.lang.Object,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> <init>
    1380:1384:void <init>() -> <init>
    1387:1389:void pointNeighborsToThis() -> pointNeighborsToThis
    1392:1392:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry before() -> before
    1396:1396:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry after() -> after
    1400:1402:void remove() -> remove
    1406:1406:java.lang.Object getKey() -> getKey
    1411:1411:java.lang.Object getValue() -> getValue
    1416:1419:java.lang.Object setValue(java.lang.Object) -> setValue
    1424:1424:java.lang.String toString() -> toString
    1429:1434:boolean equals(java.lang.Object) -> equals
    1439:1439:int hashCode() -> hashCode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderIterator -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderIterator:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry current -> current
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders this$0 -> this$0
    1274:1275:void <init>(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders) -> <init>
    1279:1279:boolean hasNext() -> hasNext
    1284:1290:java.util.Map$Entry next() -> next
    1295:1295:void remove() -> remove
    1274:1274:java.lang.Object next() -> next
    1274:1274:void <init>(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator NOT_NULL -> NOT_NULL
    void validateName(java.lang.Object) -> validateName
    68:68:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator$1 -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator$1:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    68:68:void <init>() -> <init>
    71:72:void validateName(java.lang.Object) -> validateName
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueIterator -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueIterator:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    java.lang.Object name -> name
    int hash -> hash
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry removalPrevious -> removalPrevious
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry previous -> previous
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry next -> next
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders this$0 -> this$0
    1306:1310:void <init>(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders,java.lang.Object) -> <init>
    1314:1314:boolean hasNext() -> hasNext
    1319:1327:java.lang.Object next() -> next
    1332:1337:void remove() -> remove
    1340:1348:void calculateNext(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$HeaderEntry) -> calculateNext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator NO_VALIDATION -> NO_VALIDATION
    void validate(java.lang.Object) -> validate
    85:85:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator$1 -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator$1:
# {"fileName":"DefaultHeaders.java","id":"sourceFile"}
    85:85:void <init>() -> <init>
    88:88:void validate(java.lang.Object) -> validate
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DefaultHeadersImpl -> pro.gravit.repackage.io.netty.handler.codec.DefaultHeadersImpl:
# {"fileName":"DefaultHeadersImpl.java","id":"sourceFile"}
    27:28:void <init>(pro.gravit.repackage.io.netty.util.HashingStrategy,pro.gravit.repackage.io.netty.handler.codec.ValueConverter,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    32:33:void <init>(pro.gravit.repackage.io.netty.util.HashingStrategy,pro.gravit.repackage.io.netty.handler.codec.ValueConverter,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator,int,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.DelimiterBasedFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.DelimiterBasedFrameDecoder:
# {"fileName":"DelimiterBasedFrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf[] delimiters -> delimiters
    int maxFrameLength -> maxFrameLength
    boolean stripDelimiter -> stripDelimiter
    boolean failFast -> failFast
    boolean discardingTooLongFrame -> discardingTooLongFrame
    int tooLongFrameLength -> tooLongFrameLength
    pro.gravit.repackage.io.netty.handler.codec.LineBasedFrameDecoder lineBasedDecoder -> lineBasedDecoder
    81:82:void <init>(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    96:97:void <init>(int,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    119:121:void <init>(int,boolean,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    132:133:void <init>(int,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> <init>
    147:148:void <init>(int,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> <init>
    168:187:void <init>(int,boolean,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> <init>
    191:202:boolean isLineBased(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> isLineBased
    209:209:boolean isSubclass() -> isSubclass
    214:218:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    229:292:java.lang.Object decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    297:302:void fail(long) -> fail
    314:334:int indexOf(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> indexOf
    338:342:void validateDelimiter(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> validateDelimiter
    345:346:void validateMaxFrameLength(int) -> validateMaxFrameLength
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.Delimiters -> pro.gravit.repackage.io.netty.handler.codec.Delimiters:
# {"fileName":"Delimiters.java","id":"sourceFile"}
    31:32:pro.gravit.repackage.io.netty.buffer.ByteBuf[] nulDelimiter() -> nulDelimiter
    40:42:pro.gravit.repackage.io.netty.buffer.ByteBuf[] lineDelimiter() -> lineDelimiter
    46:48:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.EmptyHeaders -> pro.gravit.repackage.io.netty.handler.codec.EmptyHeaders:
# {"fileName":"EmptyHeaders.java","id":"sourceFile"}
    25:25:void <init>() -> <init>
    28:28:java.lang.Object get(java.lang.Object) -> get
    33:33:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    38:38:java.lang.Object getAndRemove(java.lang.Object) -> getAndRemove
    43:43:java.lang.Object getAndRemove(java.lang.Object,java.lang.Object) -> getAndRemove
    48:48:java.util.List getAll(java.lang.Object) -> getAll
    53:53:java.util.List getAllAndRemove(java.lang.Object) -> getAllAndRemove
    58:58:java.lang.Boolean getBoolean(java.lang.Object) -> getBoolean
    63:63:boolean getBoolean(java.lang.Object,boolean) -> getBoolean
    68:68:java.lang.Byte getByte(java.lang.Object) -> getByte
    73:73:byte getByte(java.lang.Object,byte) -> getByte
    78:78:java.lang.Character getChar(java.lang.Object) -> getChar
    83:83:char getChar(java.lang.Object,char) -> getChar
    88:88:java.lang.Short getShort(java.lang.Object) -> getShort
    93:93:short getShort(java.lang.Object,short) -> getShort
    98:98:java.lang.Integer getInt(java.lang.Object) -> getInt
    103:103:int getInt(java.lang.Object,int) -> getInt
    108:108:java.lang.Long getLong(java.lang.Object) -> getLong
    113:113:long getLong(java.lang.Object,long) -> getLong
    118:118:java.lang.Float getFloat(java.lang.Object) -> getFloat
    123:123:float getFloat(java.lang.Object,float) -> getFloat
    128:128:java.lang.Double getDouble(java.lang.Object) -> getDouble
    133:133:double getDouble(java.lang.Object,double) -> getDouble
    138:138:java.lang.Long getTimeMillis(java.lang.Object) -> getTimeMillis
    143:143:long getTimeMillis(java.lang.Object,long) -> getTimeMillis
    148:148:java.lang.Boolean getBooleanAndRemove(java.lang.Object) -> getBooleanAndRemove
    153:153:boolean getBooleanAndRemove(java.lang.Object,boolean) -> getBooleanAndRemove
    158:158:java.lang.Byte getByteAndRemove(java.lang.Object) -> getByteAndRemove
    163:163:byte getByteAndRemove(java.lang.Object,byte) -> getByteAndRemove
    168:168:java.lang.Character getCharAndRemove(java.lang.Object) -> getCharAndRemove
    173:173:char getCharAndRemove(java.lang.Object,char) -> getCharAndRemove
    178:178:java.lang.Short getShortAndRemove(java.lang.Object) -> getShortAndRemove
    183:183:short getShortAndRemove(java.lang.Object,short) -> getShortAndRemove
    188:188:java.lang.Integer getIntAndRemove(java.lang.Object) -> getIntAndRemove
    193:193:int getIntAndRemove(java.lang.Object,int) -> getIntAndRemove
    198:198:java.lang.Long getLongAndRemove(java.lang.Object) -> getLongAndRemove
    203:203:long getLongAndRemove(java.lang.Object,long) -> getLongAndRemove
    208:208:java.lang.Float getFloatAndRemove(java.lang.Object) -> getFloatAndRemove
    213:213:float getFloatAndRemove(java.lang.Object,float) -> getFloatAndRemove
    218:218:java.lang.Double getDoubleAndRemove(java.lang.Object) -> getDoubleAndRemove
    223:223:double getDoubleAndRemove(java.lang.Object,double) -> getDoubleAndRemove
    228:228:java.lang.Long getTimeMillisAndRemove(java.lang.Object) -> getTimeMillisAndRemove
    233:233:long getTimeMillisAndRemove(java.lang.Object,long) -> getTimeMillisAndRemove
    238:238:boolean contains(java.lang.Object) -> contains
    243:243:boolean contains(java.lang.Object,java.lang.Object) -> contains
    248:248:boolean containsObject(java.lang.Object,java.lang.Object) -> containsObject
    253:253:boolean containsBoolean(java.lang.Object,boolean) -> containsBoolean
    258:258:boolean containsByte(java.lang.Object,byte) -> containsByte
    263:263:boolean containsChar(java.lang.Object,char) -> containsChar
    268:268:boolean containsShort(java.lang.Object,short) -> containsShort
    273:273:boolean containsInt(java.lang.Object,int) -> containsInt
    278:278:boolean containsLong(java.lang.Object,long) -> containsLong
    283:283:boolean containsFloat(java.lang.Object,float) -> containsFloat
    288:288:boolean containsDouble(java.lang.Object,double) -> containsDouble
    293:293:boolean containsTimeMillis(java.lang.Object,long) -> containsTimeMillis
    298:298:int size() -> size
    303:303:boolean isEmpty() -> isEmpty
    308:308:java.util.Set names() -> names
    313:313:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> add
    318:318:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> add
    323:323:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object[]) -> add
    328:328:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object) -> addObject
    333:333:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Iterable) -> addObject
    338:338:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object[]) -> addObject
    343:343:pro.gravit.repackage.io.netty.handler.codec.Headers addBoolean(java.lang.Object,boolean) -> addBoolean
    348:348:pro.gravit.repackage.io.netty.handler.codec.Headers addByte(java.lang.Object,byte) -> addByte
    353:353:pro.gravit.repackage.io.netty.handler.codec.Headers addChar(java.lang.Object,char) -> addChar
    358:358:pro.gravit.repackage.io.netty.handler.codec.Headers addShort(java.lang.Object,short) -> addShort
    363:363:pro.gravit.repackage.io.netty.handler.codec.Headers addInt(java.lang.Object,int) -> addInt
    368:368:pro.gravit.repackage.io.netty.handler.codec.Headers addLong(java.lang.Object,long) -> addLong
    373:373:pro.gravit.repackage.io.netty.handler.codec.Headers addFloat(java.lang.Object,float) -> addFloat
    378:378:pro.gravit.repackage.io.netty.handler.codec.Headers addDouble(java.lang.Object,double) -> addDouble
    383:383:pro.gravit.repackage.io.netty.handler.codec.Headers addTimeMillis(java.lang.Object,long) -> addTimeMillis
    388:388:pro.gravit.repackage.io.netty.handler.codec.Headers add(pro.gravit.repackage.io.netty.handler.codec.Headers) -> add
    393:393:pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> set
    398:398:pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> set
    403:403:pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object[]) -> set
    408:408:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object) -> setObject
    413:413:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Iterable) -> setObject
    418:418:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object[]) -> setObject
    423:423:pro.gravit.repackage.io.netty.handler.codec.Headers setBoolean(java.lang.Object,boolean) -> setBoolean
    428:428:pro.gravit.repackage.io.netty.handler.codec.Headers setByte(java.lang.Object,byte) -> setByte
    433:433:pro.gravit.repackage.io.netty.handler.codec.Headers setChar(java.lang.Object,char) -> setChar
    438:438:pro.gravit.repackage.io.netty.handler.codec.Headers setShort(java.lang.Object,short) -> setShort
    443:443:pro.gravit.repackage.io.netty.handler.codec.Headers setInt(java.lang.Object,int) -> setInt
    448:448:pro.gravit.repackage.io.netty.handler.codec.Headers setLong(java.lang.Object,long) -> setLong
    453:453:pro.gravit.repackage.io.netty.handler.codec.Headers setFloat(java.lang.Object,float) -> setFloat
    458:458:pro.gravit.repackage.io.netty.handler.codec.Headers setDouble(java.lang.Object,double) -> setDouble
    463:463:pro.gravit.repackage.io.netty.handler.codec.Headers setTimeMillis(java.lang.Object,long) -> setTimeMillis
    468:468:pro.gravit.repackage.io.netty.handler.codec.Headers set(pro.gravit.repackage.io.netty.handler.codec.Headers) -> set
    473:473:pro.gravit.repackage.io.netty.handler.codec.Headers setAll(pro.gravit.repackage.io.netty.handler.codec.Headers) -> setAll
    478:478:boolean remove(java.lang.Object) -> remove
    483:483:pro.gravit.repackage.io.netty.handler.codec.Headers clear() -> clear
    492:493:java.util.Iterator valueIterator(java.lang.Object) -> valueIterator
    498:499:java.util.Iterator iterator() -> iterator
    504:509:boolean equals(java.lang.Object) -> equals
    514:514:int hashCode() -> hashCode
    519:519:java.lang.String toString() -> toString
    524:524:pro.gravit.repackage.io.netty.handler.codec.Headers thisT() -> thisT
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.EncoderException -> pro.gravit.repackage.io.netty.handler.codec.EncoderException:
# {"fileName":"EncoderException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.FixedLengthFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.FixedLengthFrameDecoder:
# {"fileName":"FixedLengthFrameDecoder.java","id":"sourceFile"}
    int frameLength -> frameLength
    50:53:void <init>(int) -> <init>
    57:61:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    73:76:java.lang.Object decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.Headers -> pro.gravit.repackage.io.netty.handler.codec.Headers:
# {"fileName":"Headers.java","id":"sourceFile"}
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getAndRemove(java.lang.Object) -> getAndRemove
    java.lang.Object getAndRemove(java.lang.Object,java.lang.Object) -> getAndRemove
    java.util.List getAll(java.lang.Object) -> getAll
    java.util.List getAllAndRemove(java.lang.Object) -> getAllAndRemove
    java.lang.Boolean getBoolean(java.lang.Object) -> getBoolean
    boolean getBoolean(java.lang.Object,boolean) -> getBoolean
    java.lang.Byte getByte(java.lang.Object) -> getByte
    byte getByte(java.lang.Object,byte) -> getByte
    java.lang.Character getChar(java.lang.Object) -> getChar
    char getChar(java.lang.Object,char) -> getChar
    java.lang.Short getShort(java.lang.Object) -> getShort
    short getShort(java.lang.Object,short) -> getShort
    java.lang.Integer getInt(java.lang.Object) -> getInt
    int getInt(java.lang.Object,int) -> getInt
    java.lang.Long getLong(java.lang.Object) -> getLong
    long getLong(java.lang.Object,long) -> getLong
    java.lang.Float getFloat(java.lang.Object) -> getFloat
    float getFloat(java.lang.Object,float) -> getFloat
    java.lang.Double getDouble(java.lang.Object) -> getDouble
    double getDouble(java.lang.Object,double) -> getDouble
    java.lang.Long getTimeMillis(java.lang.Object) -> getTimeMillis
    long getTimeMillis(java.lang.Object,long) -> getTimeMillis
    java.lang.Boolean getBooleanAndRemove(java.lang.Object) -> getBooleanAndRemove
    boolean getBooleanAndRemove(java.lang.Object,boolean) -> getBooleanAndRemove
    java.lang.Byte getByteAndRemove(java.lang.Object) -> getByteAndRemove
    byte getByteAndRemove(java.lang.Object,byte) -> getByteAndRemove
    java.lang.Character getCharAndRemove(java.lang.Object) -> getCharAndRemove
    char getCharAndRemove(java.lang.Object,char) -> getCharAndRemove
    java.lang.Short getShortAndRemove(java.lang.Object) -> getShortAndRemove
    short getShortAndRemove(java.lang.Object,short) -> getShortAndRemove
    java.lang.Integer getIntAndRemove(java.lang.Object) -> getIntAndRemove
    int getIntAndRemove(java.lang.Object,int) -> getIntAndRemove
    java.lang.Long getLongAndRemove(java.lang.Object) -> getLongAndRemove
    long getLongAndRemove(java.lang.Object,long) -> getLongAndRemove
    java.lang.Float getFloatAndRemove(java.lang.Object) -> getFloatAndRemove
    float getFloatAndRemove(java.lang.Object,float) -> getFloatAndRemove
    java.lang.Double getDoubleAndRemove(java.lang.Object) -> getDoubleAndRemove
    double getDoubleAndRemove(java.lang.Object,double) -> getDoubleAndRemove
    java.lang.Long getTimeMillisAndRemove(java.lang.Object) -> getTimeMillisAndRemove
    long getTimeMillisAndRemove(java.lang.Object,long) -> getTimeMillisAndRemove
    boolean contains(java.lang.Object) -> contains
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsObject(java.lang.Object,java.lang.Object) -> containsObject
    boolean containsBoolean(java.lang.Object,boolean) -> containsBoolean
    boolean containsByte(java.lang.Object,byte) -> containsByte
    boolean containsChar(java.lang.Object,char) -> containsChar
    boolean containsShort(java.lang.Object,short) -> containsShort
    boolean containsInt(java.lang.Object,int) -> containsInt
    boolean containsLong(java.lang.Object,long) -> containsLong
    boolean containsFloat(java.lang.Object,float) -> containsFloat
    boolean containsDouble(java.lang.Object,double) -> containsDouble
    boolean containsTimeMillis(java.lang.Object,long) -> containsTimeMillis
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Set names() -> names
    pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> add
    pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> add
    pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object[]) -> add
    pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object) -> addObject
    pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Iterable) -> addObject
    pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object[]) -> addObject
    pro.gravit.repackage.io.netty.handler.codec.Headers addBoolean(java.lang.Object,boolean) -> addBoolean
    pro.gravit.repackage.io.netty.handler.codec.Headers addByte(java.lang.Object,byte) -> addByte
    pro.gravit.repackage.io.netty.handler.codec.Headers addChar(java.lang.Object,char) -> addChar
    pro.gravit.repackage.io.netty.handler.codec.Headers addShort(java.lang.Object,short) -> addShort
    pro.gravit.repackage.io.netty.handler.codec.Headers addInt(java.lang.Object,int) -> addInt
    pro.gravit.repackage.io.netty.handler.codec.Headers addLong(java.lang.Object,long) -> addLong
    pro.gravit.repackage.io.netty.handler.codec.Headers addFloat(java.lang.Object,float) -> addFloat
    pro.gravit.repackage.io.netty.handler.codec.Headers addDouble(java.lang.Object,double) -> addDouble
    pro.gravit.repackage.io.netty.handler.codec.Headers addTimeMillis(java.lang.Object,long) -> addTimeMillis
    pro.gravit.repackage.io.netty.handler.codec.Headers add(pro.gravit.repackage.io.netty.handler.codec.Headers) -> add
    pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object) -> set
    pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> set
    pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object[]) -> set
    pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object) -> setObject
    pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Iterable) -> setObject
    pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object[]) -> setObject
    pro.gravit.repackage.io.netty.handler.codec.Headers setBoolean(java.lang.Object,boolean) -> setBoolean
    pro.gravit.repackage.io.netty.handler.codec.Headers setByte(java.lang.Object,byte) -> setByte
    pro.gravit.repackage.io.netty.handler.codec.Headers setChar(java.lang.Object,char) -> setChar
    pro.gravit.repackage.io.netty.handler.codec.Headers setShort(java.lang.Object,short) -> setShort
    pro.gravit.repackage.io.netty.handler.codec.Headers setInt(java.lang.Object,int) -> setInt
    pro.gravit.repackage.io.netty.handler.codec.Headers setLong(java.lang.Object,long) -> setLong
    pro.gravit.repackage.io.netty.handler.codec.Headers setFloat(java.lang.Object,float) -> setFloat
    pro.gravit.repackage.io.netty.handler.codec.Headers setDouble(java.lang.Object,double) -> setDouble
    pro.gravit.repackage.io.netty.handler.codec.Headers setTimeMillis(java.lang.Object,long) -> setTimeMillis
    pro.gravit.repackage.io.netty.handler.codec.Headers set(pro.gravit.repackage.io.netty.handler.codec.Headers) -> set
    pro.gravit.repackage.io.netty.handler.codec.Headers setAll(pro.gravit.repackage.io.netty.handler.codec.Headers) -> setAll
    boolean remove(java.lang.Object) -> remove
    pro.gravit.repackage.io.netty.handler.codec.Headers clear() -> clear
    java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.HeadersUtils -> pro.gravit.repackage.io.netty.handler.codec.HeadersUtils:
# {"fileName":"HeadersUtils.java","id":"sourceFile"}
    33:34:void <init>() -> <init>
    42:43:java.util.List getAllAsString(pro.gravit.repackage.io.netty.handler.codec.Headers,java.lang.Object) -> getAllAsString
    64:65:java.lang.String getAsString(pro.gravit.repackage.io.netty.handler.codec.Headers,java.lang.Object) -> getAsString
    73:73:java.util.Iterator iteratorAsString(java.lang.Iterable) -> iteratorAsString
    84:97:java.lang.String toString(java.lang.Class,java.util.Iterator,int) -> toString
    107:107:java.util.Set namesAsString(pro.gravit.repackage.io.netty.handler.codec.Headers) -> namesAsString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$1 -> pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$1:
# {"fileName":"HeadersUtils.java","id":"sourceFile"}
    java.util.List val$allNames -> val$allNames
    43:43:void <init>(java.util.List) -> <init>
    46:47:java.lang.String get(int) -> get
    52:52:int size() -> size
    43:43:java.lang.Object get(int) -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet -> pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet:
# {"fileName":"HeadersUtils.java","id":"sourceFile"}
    197:198:void <init>(java.util.Set) -> <init>
    202:202:boolean add(java.lang.String) -> add
    207:207:boolean addAll(java.util.Collection) -> addAll
    195:195:boolean add(java.lang.Object) -> add
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$DelegatingStringSet -> pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$DelegatingStringSet:
# {"fileName":"HeadersUtils.java","id":"sourceFile"}
    java.util.Set allNames -> allNames
    214:216:void <init>(java.util.Set) -> <init>
    220:220:int size() -> size
    225:225:boolean isEmpty() -> isEmpty
    230:230:boolean contains(java.lang.Object) -> contains
    235:235:java.util.Iterator iterator() -> iterator
    240:240:boolean remove(java.lang.Object) -> remove
    245:246:void clear() -> clear
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$StringEntry -> pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$StringEntry:
# {"fileName":"HeadersUtils.java","id":"sourceFile"}
    java.util.Map$Entry entry -> entry
    java.lang.String name -> name
    java.lang.String value -> value
    138:140:void <init>(java.util.Map$Entry) -> <init>
    144:147:java.lang.String getKey() -> getKey
    152:155:java.lang.String getValue() -> getValue
    160:162:java.lang.String setValue(java.lang.String) -> setValue
    167:167:java.lang.String toString() -> toString
    133:133:java.lang.Object setValue(java.lang.Object) -> setValue
    133:133:java.lang.Object getValue() -> getValue
    133:133:java.lang.Object getKey() -> getKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$StringEntryIterator -> pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$StringEntryIterator:
# {"fileName":"HeadersUtils.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    113:115:void <init>(java.util.Iterator) -> <init>
    119:119:boolean hasNext() -> hasNext
    124:124:java.util.Map$Entry next() -> next
    129:130:void remove() -> remove
    110:110:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$StringIterator -> pro.gravit.repackage.io.netty.handler.codec.HeadersUtils$StringIterator:
# {"fileName":"HeadersUtils.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    174:176:void <init>(java.util.Iterator) -> <init>
    180:180:boolean hasNext() -> hasNext
    185:186:java.lang.String next() -> next
    191:192:void remove() -> remove
    171:171:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.LengthFieldBasedFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.LengthFieldBasedFrameDecoder:
# {"fileName":"LengthFieldBasedFrameDecoder.java","id":"sourceFile"}
    java.nio.ByteOrder byteOrder -> byteOrder
    int maxFrameLength -> maxFrameLength
    int lengthFieldOffset -> lengthFieldOffset
    int lengthFieldLength -> lengthFieldLength
    int lengthFieldEndOffset -> lengthFieldEndOffset
    int lengthAdjustment -> lengthAdjustment
    int initialBytesToStrip -> initialBytesToStrip
    boolean failFast -> failFast
    boolean discardingTooLongFrame -> discardingTooLongFrame
    long tooLongFrameLength -> tooLongFrameLength
    long bytesToDiscard -> bytesToDiscard
    int frameLengthInt -> frameLengthInt
    217:218:void <init>(int,int,int) -> <init>
    240:244:void <init>(int,int,int,int,int) -> <init>
    272:275:void <init>(int,int,int,int,int,boolean) -> <init>
    200:329:void <init>(java.nio.ByteOrder,int,int,int,int,int,boolean) -> <init>
    333:337:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    340:347:void discardingTooLongFrame(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> discardingTooLongFrame
    350:351:void failOnNegativeLengthField(pro.gravit.repackage.io.netty.buffer.ByteBuf,long,int) -> failOnNegativeLengthField
    358:359:void failOnFrameLengthLessThanLengthFieldEndOffset(pro.gravit.repackage.io.netty.buffer.ByteBuf,long,int) -> failOnFrameLengthLessThanLengthFieldEndOffset
    365:378:void exceededFrameLength(pro.gravit.repackage.io.netty.buffer.ByteBuf,long) -> exceededFrameLength
    383:384:void failOnFrameLengthLessThanInitialBytesToStrip(pro.gravit.repackage.io.netty.buffer.ByteBuf,long,int) -> failOnFrameLengthLessThanInitialBytesToStrip
    398:443:java.lang.Object decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    455:477:long getUnadjustedFrameLength(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,java.nio.ByteOrder) -> getUnadjustedFrameLength
    481:496:void failIfNecessary(boolean) -> failIfNecessary
    502:502:pro.gravit.repackage.io.netty.buffer.ByteBuf extractFrame(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> extractFrame
    506:511:void fail(long) -> fail
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.LengthFieldPrepender -> pro.gravit.repackage.io.netty.handler.codec.LengthFieldPrepender:
# {"fileName":"LengthFieldPrepender.java","id":"sourceFile"}
    java.nio.ByteOrder byteOrder -> byteOrder
    int lengthFieldLength -> lengthFieldLength
    boolean lengthIncludesLengthFieldLength -> lengthIncludesLengthFieldLength
    int lengthAdjustment -> lengthAdjustment
    73:74:void <init>(int) -> <init>
    90:91:void <init>(int,boolean) -> <init>
    105:106:void <init>(int,int) -> <init>
    124:125:void <init>(int,int,boolean) -> <init>
    145:157:void <init>(java.nio.ByteOrder,int,int,boolean) -> <init>
    161:200:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> encode
    55:55:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.LineBasedFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.LineBasedFrameDecoder:
# {"fileName":"LineBasedFrameDecoder.java","id":"sourceFile"}
    int maxLength -> maxLength
    boolean failFast -> failFast
    boolean stripDelimiter -> stripDelimiter
    boolean discarding -> discarding
    int discardedBytes -> discardedBytes
    int offset -> offset
    58:59:void <init>(int) -> <init>
    76:80:void <init>(int,boolean,boolean) -> <init>
    84:88:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    99:149:java.lang.Object decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    154:155:void fail(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,int) -> fail
    158:161:void fail(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String) -> fail
    168:178:int findEndOfLine(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> findEndOfLine
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageAggregationException -> pro.gravit.repackage.io.netty.handler.codec.MessageAggregationException:
# {"fileName":"MessageAggregationException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    26:26:void <init>() -> <init>
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageAggregator -> pro.gravit.repackage.io.netty.handler.codec.MessageAggregator:
# {"fileName":"MessageAggregator.java","id":"sourceFile"}
    int DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS -> DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS
    int maxContentLength -> maxContentLength
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder currentMessage -> currentMessage
    boolean handlingOversizedMessage -> handlingOversizedMessage
    int maxCumulationBufferComponents -> maxCumulationBufferComponents
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener continueResponseWriteListener -> continueResponseWriteListener
    boolean aggregating -> aggregating
    boolean $assertionsDisabled -> $assertionsDisabled
    61:78:void <init>(int) -> <init>
    61:84:void <init>(int,java.lang.Class) -> <init>
    87:88:void validateMaxContentLength(int) -> validateMaxContentLength
    93:110:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    boolean isStartMessage(java.lang.Object) -> isStartMessage
    boolean isContentMessage(java.lang.Object) -> isContentMessage
    boolean isLastContentMessage(pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> isLastContentMessage
    boolean isAggregated(java.lang.Object) -> isAggregated
    155:155:int maxContentLength() -> maxContentLength
    165:165:int maxCumulationBufferComponents() -> maxCumulationBufferComponents
    176:188:void setMaxCumulationBufferComponents(int) -> setMaxCumulationBufferComponents
    195:195:boolean isHandlingOversizedMessage() -> isHandlingOversizedMessage
    199:202:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx() -> ctx
    207:327:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    330:333:void appendPartialContent(pro.gravit.repackage.io.netty.buffer.CompositeByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> appendPartialContent
    boolean isContentLengthInvalid(java.lang.Object,int) -> isContentLengthInvalid
    java.lang.Object newContinueResponse(java.lang.Object,int,pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> newContinueResponse
    boolean closeAfterContinueResponse(java.lang.Object) -> closeAfterContinueResponse
    boolean ignoreContentAfterContinueResponse(java.lang.Object) -> ignoreContentAfterContinueResponse
    pro.gravit.repackage.io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> beginAggregation
    386:386:void aggregate(pro.gravit.repackage.io.netty.buffer.ByteBufHolder,pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> aggregate
    389:391:void finishAggregation0(pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> finishAggregation0
    396:396:void finishAggregation(pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> finishAggregation
    399:407:void invokeHandleOversizedMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> invokeHandleOversizedMessage
    417:419:void handleOversizedMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleOversizedMessage
    426:430:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    436:440:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    444:445:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    450:456:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    459:465:void releaseCurrentMessage() -> releaseCurrentMessage
    52:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageAggregator$1 -> pro.gravit.repackage.io.netty.handler.codec.MessageAggregator$1:
# {"fileName":"MessageAggregator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.MessageAggregator this$0 -> this$0
    227:227:void <init>(pro.gravit.repackage.io.netty.handler.codec.MessageAggregator,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    230:233:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    227:227:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageToByteEncoder -> pro.gravit.repackage.io.netty.handler.codec.MessageToByteEncoder:
# {"fileName":"MessageToByteEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    boolean preferDirect -> preferDirect
    55:56:void <init>() -> <init>
    62:63:void <init>(java.lang.Class) -> <init>
    72:75:void <init>(boolean) -> <init>
    85:88:void <init>(java.lang.Class,boolean) -> <init>
    95:95:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    100:131:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    139:142:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    158:158:boolean isPreferDirect() -> isPreferDirect
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec -> pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec:
# {"fileName":"MessageToMessageCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.MessageToMessageEncoder encoder -> encoder
    pro.gravit.repackage.io.netty.handler.codec.MessageToMessageDecoder decoder -> decoder
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher inboundMsgMatcher -> inboundMsgMatcher
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher -> outboundMsgMatcher
    57:95:void <init>() -> <init>
    57:107:void <init>(java.lang.Class,java.lang.Class) -> <init>
    111:112:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    116:117:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    125:125:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    134:134:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec$1 -> pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec$1:
# {"fileName":"MessageToMessageCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec this$0 -> this$0
    57:57:void <init>(pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec) -> <init>
    61:61:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    67:68:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec$2 -> pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec$2:
# {"fileName":"MessageToMessageCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec this$0 -> this$0
    71:71:void <init>(pro.gravit.repackage.io.netty.handler.codec.MessageToMessageCodec) -> <init>
    75:75:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    81:82:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageToMessageDecoder -> pro.gravit.repackage.io.netty.handler.codec.MessageToMessageDecoder:
# {"fileName":"MessageToMessageDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    59:61:void <init>() -> <init>
    68:70:void <init>(java.lang.Class) -> <init>
    77:77:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    82:109:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.MessageToMessageEncoder -> pro.gravit.repackage.io.netty.handler.codec.MessageToMessageEncoder:
# {"fileName":"MessageToMessageEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    60:62:void <init>() -> <init>
    69:71:void <init>(java.lang.Class) -> <init>
    78:78:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    83:128:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    131:135:void writeVoidPromise(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.CodecOutputList) -> writeVoidPromise
    138:143:void writePromiseCombiner(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.CodecOutputList,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writePromiseCombiner
    void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.PrematureChannelClosureException -> pro.gravit.repackage.io.netty.handler.codec.PrematureChannelClosureException:
# {"fileName":"PrematureChannelClosureException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    32:32:void <init>() -> <init>
    38:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionResult -> pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionResult:
# {"fileName":"ProtocolDetectionResult.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionResult NEEDS_MORE_DATA -> NEEDS_MORE_DATA
    pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionResult INVALID -> INVALID
    pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState state -> state
    java.lang.Object result -> result
    42:42:pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionResult needsMoreData() -> needsMoreData
    50:50:pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionResult invalid() -> invalid
    58:58:pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionResult detected(java.lang.Object) -> detected
    61:64:void <init>(pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState,java.lang.Object) -> <init>
    71:71:pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState state() -> state
    78:78:java.lang.Object detectedProtocol() -> detectedProtocol
    28:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState -> pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState:
# {"fileName":"ProtocolDetectionState.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState NEEDS_MORE_DATA -> NEEDS_MORE_DATA
    pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState INVALID -> INVALID
    pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState DETECTED -> DETECTED
    pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState[] $VALUES -> $VALUES
    21:21:pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState[] values() -> values
    21:21:pro.gravit.repackage.io.netty.handler.codec.ProtocolDetectionState valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ReplayingDecoder -> pro.gravit.repackage.io.netty.handler.codec.ReplayingDecoder:
# {"fileName":"ReplayingDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Signal REPLAY -> REPLAY
    pro.gravit.repackage.io.netty.handler.codec.ReplayingDecoderByteBuf replayable -> replayable
    java.lang.Object state -> state
    int checkpoint -> checkpoint
    280:281:void <init>() -> <init>
    272:288:void <init>(java.lang.Object) -> <init>
    294:295:void checkpoint() -> checkpoint
    302:304:void checkpoint(java.lang.Object) -> checkpoint
    311:311:java.lang.Object state() -> state
    319:321:java.lang.Object state(java.lang.Object) -> state
    327:338:void channelInputClosed(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.util.List) -> channelInputClosed
    342:423:void callDecode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> callDecode
    270:270:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ReplayingDecoderByteBuf -> pro.gravit.repackage.io.netty.handler.codec.ReplayingDecoderByteBuf:
# {"fileName":"ReplayingDecoderByteBuf.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Signal REPLAY -> REPLAY
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    boolean terminated -> terminated
    pro.gravit.repackage.io.netty.buffer.SwappedByteBuf swapped -> swapped
    pro.gravit.repackage.io.netty.handler.codec.ReplayingDecoderByteBuf EMPTY_BUFFER -> EMPTY_BUFFER
    54:54:void <init>() -> <init>
    56:58:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    61:62:void setCumulation(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setCumulation
    65:66:void terminate() -> terminate
    70:73:int capacity() -> capacity
    79:79:pro.gravit.repackage.io.netty.buffer.ByteBuf capacity(int) -> capacity
    84:84:int maxCapacity() -> maxCapacity
    89:89:pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc() -> alloc
    94:94:boolean isReadOnly() -> isReadOnly
    100:100:pro.gravit.repackage.io.netty.buffer.ByteBuf asReadOnly() -> asReadOnly
    105:105:boolean isDirect() -> isDirect
    110:110:boolean hasArray() -> hasArray
    115:115:byte[] array() -> array
    120:120:int arrayOffset() -> arrayOffset
    125:125:boolean hasMemoryAddress() -> hasMemoryAddress
    130:130:long memoryAddress() -> memoryAddress
    135:135:pro.gravit.repackage.io.netty.buffer.ByteBuf clear() -> clear
    140:140:boolean equals(java.lang.Object) -> equals
    145:145:int compareTo(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compareTo
    150:150:pro.gravit.repackage.io.netty.buffer.ByteBuf copy() -> copy
    155:156:pro.gravit.repackage.io.netty.buffer.ByteBuf copy(int,int) -> copy
    161:161:pro.gravit.repackage.io.netty.buffer.ByteBuf discardReadBytes() -> discardReadBytes
    166:166:pro.gravit.repackage.io.netty.buffer.ByteBuf ensureWritable(int) -> ensureWritable
    171:171:int ensureWritable(int,boolean) -> ensureWritable
    176:176:pro.gravit.repackage.io.netty.buffer.ByteBuf duplicate() -> duplicate
    181:181:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedDuplicate() -> retainedDuplicate
    186:187:boolean getBoolean(int) -> getBoolean
    192:193:byte getByte(int) -> getByte
    198:199:short getUnsignedByte(int) -> getUnsignedByte
    204:206:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[],int,int) -> getBytes
    211:213:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,byte[]) -> getBytes
    218:218:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.nio.ByteBuffer) -> getBytes
    223:225:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> getBytes
    230:230:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getBytes
    235:235:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getBytes
    240:240:int getBytes(int,java.nio.channels.GatheringByteChannel,int) -> getBytes
    245:245:int getBytes(int,java.nio.channels.FileChannel,long,int) -> getBytes
    250:250:pro.gravit.repackage.io.netty.buffer.ByteBuf getBytes(int,java.io.OutputStream,int) -> getBytes
    255:256:int getInt(int) -> getInt
    261:262:int getIntLE(int) -> getIntLE
    267:268:long getUnsignedInt(int) -> getUnsignedInt
    273:274:long getUnsignedIntLE(int) -> getUnsignedIntLE
    279:280:long getLong(int) -> getLong
    285:286:long getLongLE(int) -> getLongLE
    291:292:int getMedium(int) -> getMedium
    297:298:int getMediumLE(int) -> getMediumLE
    303:304:int getUnsignedMedium(int) -> getUnsignedMedium
    309:310:int getUnsignedMediumLE(int) -> getUnsignedMediumLE
    315:316:short getShort(int) -> getShort
    321:322:short getShortLE(int) -> getShortLE
    327:328:int getUnsignedShort(int) -> getUnsignedShort
    333:334:int getUnsignedShortLE(int) -> getUnsignedShortLE
    339:340:char getChar(int) -> getChar
    345:346:float getFloat(int) -> getFloat
    351:352:double getDouble(int) -> getDouble
    357:358:java.lang.CharSequence getCharSequence(int,int,java.nio.charset.Charset) -> getCharSequence
    363:363:int hashCode() -> hashCode
    368:376:int indexOf(int,int,byte) -> indexOf
    381:385:int bytesBefore(byte) -> bytesBefore
    390:390:int bytesBefore(int,byte) -> bytesBefore
    395:408:int bytesBefore(int,int,byte) -> bytesBefore
    414:418:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    424:437:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    443:446:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    452:456:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    461:462:pro.gravit.repackage.io.netty.buffer.ByteBuf markReaderIndex() -> markReaderIndex
    467:467:pro.gravit.repackage.io.netty.buffer.ByteBuf markWriterIndex() -> markWriterIndex
    472:472:java.nio.ByteOrder order() -> order
    477:485:pro.gravit.repackage.io.netty.buffer.ByteBuf order(java.nio.ByteOrder) -> order
    490:490:boolean isReadable() -> isReadable
    495:495:boolean isReadable(int) -> isReadable
    500:503:int readableBytes() -> readableBytes
    509:510:boolean readBoolean() -> readBoolean
    515:516:byte readByte() -> readByte
    521:522:short readUnsignedByte() -> readUnsignedByte
    527:529:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[],int,int) -> readBytes
    534:536:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(byte[]) -> readBytes
    541:541:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer) -> readBytes
    546:548:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> readBytes
    553:553:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readBytes
    558:560:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readBytes
    565:565:int readBytes(java.nio.channels.GatheringByteChannel,int) -> readBytes
    570:570:int readBytes(java.nio.channels.FileChannel,long,int) -> readBytes
    575:576:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(int) -> readBytes
    581:582:pro.gravit.repackage.io.netty.buffer.ByteBuf readSlice(int) -> readSlice
    587:588:pro.gravit.repackage.io.netty.buffer.ByteBuf readRetainedSlice(int) -> readRetainedSlice
    593:593:pro.gravit.repackage.io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int) -> readBytes
    598:598:int readerIndex() -> readerIndex
    603:604:pro.gravit.repackage.io.netty.buffer.ByteBuf readerIndex(int) -> readerIndex
    609:610:int readInt() -> readInt
    615:616:int readIntLE() -> readIntLE
    621:622:long readUnsignedInt() -> readUnsignedInt
    627:628:long readUnsignedIntLE() -> readUnsignedIntLE
    633:634:long readLong() -> readLong
    639:640:long readLongLE() -> readLongLE
    645:646:int readMedium() -> readMedium
    651:652:int readMediumLE() -> readMediumLE
    657:658:int readUnsignedMedium() -> readUnsignedMedium
    663:664:int readUnsignedMediumLE() -> readUnsignedMediumLE
    669:670:short readShort() -> readShort
    675:676:short readShortLE() -> readShortLE
    681:682:int readUnsignedShort() -> readUnsignedShort
    687:688:int readUnsignedShortLE() -> readUnsignedShortLE
    693:694:char readChar() -> readChar
    699:700:float readFloat() -> readFloat
    705:706:double readDouble() -> readDouble
    711:712:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset) -> readCharSequence
    717:718:pro.gravit.repackage.io.netty.buffer.ByteBuf resetReaderIndex() -> resetReaderIndex
    723:723:pro.gravit.repackage.io.netty.buffer.ByteBuf resetWriterIndex() -> resetWriterIndex
    728:728:pro.gravit.repackage.io.netty.buffer.ByteBuf setBoolean(int,boolean) -> setBoolean
    733:733:pro.gravit.repackage.io.netty.buffer.ByteBuf setByte(int,int) -> setByte
    738:738:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[],int,int) -> setBytes
    743:743:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,byte[]) -> setBytes
    748:748:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,java.nio.ByteBuffer) -> setBytes
    753:753:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setBytes
    758:758:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setBytes
    763:763:pro.gravit.repackage.io.netty.buffer.ByteBuf setBytes(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setBytes
    768:768:int setBytes(int,java.io.InputStream,int) -> setBytes
    773:773:pro.gravit.repackage.io.netty.buffer.ByteBuf setZero(int,int) -> setZero
    778:778:int setBytes(int,java.nio.channels.ScatteringByteChannel,int) -> setBytes
    783:783:int setBytes(int,java.nio.channels.FileChannel,long,int) -> setBytes
    788:788:pro.gravit.repackage.io.netty.buffer.ByteBuf setIndex(int,int) -> setIndex
    793:793:pro.gravit.repackage.io.netty.buffer.ByteBuf setInt(int,int) -> setInt
    798:798:pro.gravit.repackage.io.netty.buffer.ByteBuf setIntLE(int,int) -> setIntLE
    803:803:pro.gravit.repackage.io.netty.buffer.ByteBuf setLong(int,long) -> setLong
    808:808:pro.gravit.repackage.io.netty.buffer.ByteBuf setLongLE(int,long) -> setLongLE
    813:813:pro.gravit.repackage.io.netty.buffer.ByteBuf setMedium(int,int) -> setMedium
    818:818:pro.gravit.repackage.io.netty.buffer.ByteBuf setMediumLE(int,int) -> setMediumLE
    823:823:pro.gravit.repackage.io.netty.buffer.ByteBuf setShort(int,int) -> setShort
    828:828:pro.gravit.repackage.io.netty.buffer.ByteBuf setShortLE(int,int) -> setShortLE
    833:833:pro.gravit.repackage.io.netty.buffer.ByteBuf setChar(int,int) -> setChar
    838:838:pro.gravit.repackage.io.netty.buffer.ByteBuf setFloat(int,float) -> setFloat
    843:843:pro.gravit.repackage.io.netty.buffer.ByteBuf setDouble(int,double) -> setDouble
    848:850:pro.gravit.repackage.io.netty.buffer.ByteBuf skipBytes(int) -> skipBytes
    855:855:pro.gravit.repackage.io.netty.buffer.ByteBuf slice() -> slice
    860:860:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice() -> retainedSlice
    865:866:pro.gravit.repackage.io.netty.buffer.ByteBuf slice(int,int) -> slice
    871:872:pro.gravit.repackage.io.netty.buffer.ByteBuf retainedSlice(int,int) -> retainedSlice
    877:877:int nioBufferCount() -> nioBufferCount
    882:882:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    887:888:java.nio.ByteBuffer nioBuffer(int,int) -> nioBuffer
    893:893:java.nio.ByteBuffer[] nioBuffers() -> nioBuffers
    898:899:java.nio.ByteBuffer[] nioBuffers(int,int) -> nioBuffers
    904:905:java.nio.ByteBuffer internalNioBuffer(int,int) -> internalNioBuffer
    910:911:java.lang.String toString(int,int,java.nio.charset.Charset) -> toString
    916:916:java.lang.String toString(java.nio.charset.Charset) -> toString
    921:926:java.lang.String toString() -> toString
    932:932:boolean isWritable() -> isWritable
    937:937:boolean isWritable(int) -> isWritable
    942:942:int writableBytes() -> writableBytes
    947:947:int maxWritableBytes() -> maxWritableBytes
    952:952:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBoolean(boolean) -> writeBoolean
    957:957:pro.gravit.repackage.io.netty.buffer.ByteBuf writeByte(int) -> writeByte
    962:962:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[],int,int) -> writeBytes
    967:967:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(byte[]) -> writeBytes
    972:972:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer) -> writeBytes
    977:977:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeBytes
    982:982:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeBytes
    987:987:pro.gravit.repackage.io.netty.buffer.ByteBuf writeBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBytes
    992:992:int writeBytes(java.io.InputStream,int) -> writeBytes
    997:997:int writeBytes(java.nio.channels.ScatteringByteChannel,int) -> writeBytes
    1002:1002:int writeBytes(java.nio.channels.FileChannel,long,int) -> writeBytes
    1007:1007:pro.gravit.repackage.io.netty.buffer.ByteBuf writeInt(int) -> writeInt
    1012:1012:pro.gravit.repackage.io.netty.buffer.ByteBuf writeIntLE(int) -> writeIntLE
    1017:1017:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLong(long) -> writeLong
    1022:1022:pro.gravit.repackage.io.netty.buffer.ByteBuf writeLongLE(long) -> writeLongLE
    1027:1027:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMedium(int) -> writeMedium
    1032:1032:pro.gravit.repackage.io.netty.buffer.ByteBuf writeMediumLE(int) -> writeMediumLE
    1037:1037:pro.gravit.repackage.io.netty.buffer.ByteBuf writeZero(int) -> writeZero
    1042:1042:int writerIndex() -> writerIndex
    1047:1047:pro.gravit.repackage.io.netty.buffer.ByteBuf writerIndex(int) -> writerIndex
    1052:1052:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShort(int) -> writeShort
    1057:1057:pro.gravit.repackage.io.netty.buffer.ByteBuf writeShortLE(int) -> writeShortLE
    1062:1062:pro.gravit.repackage.io.netty.buffer.ByteBuf writeChar(int) -> writeChar
    1067:1067:pro.gravit.repackage.io.netty.buffer.ByteBuf writeFloat(float) -> writeFloat
    1072:1072:pro.gravit.repackage.io.netty.buffer.ByteBuf writeDouble(double) -> writeDouble
    1077:1077:int setCharSequence(int,java.lang.CharSequence,java.nio.charset.Charset) -> setCharSequence
    1082:1082:int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset) -> writeCharSequence
    1086:1089:void checkIndex(int,int) -> checkIndex
    1092:1095:void checkReadableBytes(int) -> checkReadableBytes
    1099:1099:pro.gravit.repackage.io.netty.buffer.ByteBuf discardSomeReadBytes() -> discardSomeReadBytes
    1104:1104:int refCnt() -> refCnt
    1109:1109:pro.gravit.repackage.io.netty.buffer.ByteBuf retain() -> retain
    1114:1114:pro.gravit.repackage.io.netty.buffer.ByteBuf retain(int) -> retain
    1119:1120:pro.gravit.repackage.io.netty.buffer.ByteBuf touch() -> touch
    1125:1126:pro.gravit.repackage.io.netty.buffer.ByteBuf touch(java.lang.Object) -> touch
    1131:1131:boolean release() -> release
    1136:1136:boolean release(int) -> release
    1141:1141:pro.gravit.repackage.io.netty.buffer.ByteBuf unwrap() -> unwrap
    1145:1145:java.lang.UnsupportedOperationException reject() -> reject
    39:39:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    39:39:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    39:39:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    39:39:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    39:39:int compareTo(java.lang.Object) -> compareTo
    41:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.TooLongFrameException -> pro.gravit.repackage.io.netty.handler.codec.TooLongFrameException:
# {"fileName":"TooLongFrameException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    29:30:void <init>() -> <init>
    36:37:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
    50:51:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.UnsupportedMessageTypeException -> pro.gravit.repackage.io.netty.handler.codec.UnsupportedMessageTypeException:
# {"fileName":"UnsupportedMessageTypeException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    27:29:void <init>(java.lang.Object,java.lang.Class[]) -> <init>
    31:31:void <init>() -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    42:43:void <init>(java.lang.Throwable) -> <init>
    47:61:java.lang.String message(java.lang.String,java.lang.Class[]) -> message
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.UnsupportedValueConverter -> pro.gravit.repackage.io.netty.handler.codec.UnsupportedValueConverter:
# {"fileName":"UnsupportedValueConverter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.UnsupportedValueConverter INSTANCE -> INSTANCE
    24:24:void <init>() -> <init>
    28:28:pro.gravit.repackage.io.netty.handler.codec.UnsupportedValueConverter instance() -> instance
    33:33:java.lang.Object convertObject(java.lang.Object) -> convertObject
    38:38:java.lang.Object convertBoolean(boolean) -> convertBoolean
    43:43:boolean convertToBoolean(java.lang.Object) -> convertToBoolean
    48:48:java.lang.Object convertByte(byte) -> convertByte
    53:53:byte convertToByte(java.lang.Object) -> convertToByte
    58:58:java.lang.Object convertChar(char) -> convertChar
    63:63:char convertToChar(java.lang.Object) -> convertToChar
    68:68:java.lang.Object convertShort(short) -> convertShort
    73:73:short convertToShort(java.lang.Object) -> convertToShort
    78:78:java.lang.Object convertInt(int) -> convertInt
    83:83:int convertToInt(java.lang.Object) -> convertToInt
    88:88:java.lang.Object convertLong(long) -> convertLong
    93:93:long convertToLong(java.lang.Object) -> convertToLong
    98:98:java.lang.Object convertTimeMillis(long) -> convertTimeMillis
    103:103:long convertToTimeMillis(java.lang.Object) -> convertToTimeMillis
    108:108:java.lang.Object convertFloat(float) -> convertFloat
    113:113:float convertToFloat(java.lang.Object) -> convertToFloat
    118:118:java.lang.Object convertDouble(double) -> convertDouble
    123:123:double convertToDouble(java.lang.Object) -> convertToDouble
    23:23:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.ValueConverter -> pro.gravit.repackage.io.netty.handler.codec.ValueConverter:
# {"fileName":"ValueConverter.java","id":"sourceFile"}
    java.lang.Object convertObject(java.lang.Object) -> convertObject
    java.lang.Object convertBoolean(boolean) -> convertBoolean
    boolean convertToBoolean(java.lang.Object) -> convertToBoolean
    java.lang.Object convertByte(byte) -> convertByte
    byte convertToByte(java.lang.Object) -> convertToByte
    java.lang.Object convertChar(char) -> convertChar
    char convertToChar(java.lang.Object) -> convertToChar
    java.lang.Object convertShort(short) -> convertShort
    short convertToShort(java.lang.Object) -> convertToShort
    java.lang.Object convertInt(int) -> convertInt
    int convertToInt(java.lang.Object) -> convertToInt
    java.lang.Object convertLong(long) -> convertLong
    long convertToLong(java.lang.Object) -> convertToLong
    java.lang.Object convertTimeMillis(long) -> convertTimeMillis
    long convertToTimeMillis(java.lang.Object) -> convertToTimeMillis
    java.lang.Object convertFloat(float) -> convertFloat
    float convertToFloat(java.lang.Object) -> convertToFloat
    java.lang.Object convertDouble(double) -> convertDouble
    double convertToDouble(java.lang.Object) -> convertToDouble
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.base64.Base64 -> pro.gravit.repackage.io.netty.handler.codec.base64.Base64:
# {"fileName":"Base64.java","id":"sourceFile"}
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    54:54:byte[] alphabet(pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> alphabet
    58:58:byte[] decodabet(pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> decodabet
    62:62:boolean breakLines(pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> breakLines
    66:66:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    70:70:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> encode
    74:74:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> encode
    78:82:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> encode
    86:86:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> encode
    90:90:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> encode
    95:95:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,boolean) -> encode
    100:100:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,boolean,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> encode
    105:136:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,boolean,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> encode
    152:181:void encode3to4(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,byte[]) -> encode3to4
    186:195:int encodedBufferSize(int,boolean) -> encodedBufferSize
    199:199:int toInt(byte) -> toInt
    203:203:int toIntBE(short) -> toIntBE
    207:207:int toIntLE(short) -> toIntLE
    211:211:int toIntBE(int) -> toIntBE
    215:215:int toIntLE(int) -> toIntLE
    221:244:void encode3to4BigEndian(int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,byte[]) -> encode3to4BigEndian
    249:272:void encode3to4LittleEndian(int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,byte[]) -> encode3to4LittleEndian
    275:275:pro.gravit.repackage.io.netty.buffer.ByteBuf decode(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    279:283:pro.gravit.repackage.io.netty.buffer.ByteBuf decode(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> decode
    288:288:pro.gravit.repackage.io.netty.buffer.ByteBuf decode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> decode
    293:293:pro.gravit.repackage.io.netty.buffer.ByteBuf decode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> decode
    298:302:pro.gravit.repackage.io.netty.buffer.ByteBuf decode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> decode
    307:307:int decodedBufferSize(int) -> decodedBufferSize
    426:428:void <init>() -> <init>
    38:38:byte[] access$100(pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.base64.Base64$1 -> pro.gravit.repackage.io.netty.handler.codec.base64.Base64$1:
# {"fileName":"Base64.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.base64.Base64$Decoder -> pro.gravit.repackage.io.netty.handler.codec.base64.Base64$Decoder:
# {"fileName":"Base64.java","id":"sourceFile"}
    byte[] b4 -> b4
    int b4Posn -> b4Posn
    byte[] decodabet -> decodabet
    int outBuffPosn -> outBuffPosn
    pro.gravit.repackage.io.netty.buffer.ByteBuf dest -> dest
    310:311:void <init>() -> <init>
    318:327:pro.gravit.repackage.io.netty.buffer.ByteBuf decode(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> decode
    333:349:boolean process(byte) -> process
    354:422:int decode4to3(byte[],pro.gravit.repackage.io.netty.buffer.ByteBuf,int,byte[]) -> decode4to3
    310:310:void <init>(pro.gravit.repackage.io.netty.handler.codec.base64.Base64$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.base64.Base64Decoder -> pro.gravit.repackage.io.netty.handler.codec.base64.Base64Decoder:
# {"fileName":"Base64Decoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect dialect -> dialect
    53:54:void <init>() -> <init>
    56:58:void <init>(pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> <init>
    62:63:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    47:47:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect -> pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect:
# {"fileName":"Base64Dialect.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect STANDARD -> STANDARD
    pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect URL_SAFE -> URL_SAFE
    pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect ORDERED -> ORDERED
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    boolean breakLinesByDefault -> breakLinesByDefault
    pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect[] $VALUES -> $VALUES
    29:29:pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect[] values() -> values
    29:29:pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect valueOf(java.lang.String) -> valueOf
    202:206:void <init>(java.lang.String,int,byte[],byte[],boolean) -> <init>
    29:145:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.base64.Base64Encoder -> pro.gravit.repackage.io.netty.handler.codec.base64.Base64Encoder:
# {"fileName":"Base64Encoder.java","id":"sourceFile"}
    boolean breakLines -> breakLines
    pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect dialect -> dialect
    50:51:void <init>() -> <init>
    54:55:void <init>(boolean) -> <init>
    57:60:void <init>(boolean,pro.gravit.repackage.io.netty.handler.codec.base64.Base64Dialect) -> <init>
    64:65:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> encode
    43:43:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.bytes.ByteArrayDecoder -> pro.gravit.repackage.io.netty.handler.codec.bytes.ByteArrayDecoder:
# {"fileName":"ByteArrayDecoder.java","id":"sourceFile"}
    52:52:void <init>() -> <init>
    56:57:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    52:52:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.bytes.ByteArrayEncoder -> pro.gravit.repackage.io.netty.handler.codec.bytes.ByteArrayEncoder:
# {"fileName":"ByteArrayEncoder.java","id":"sourceFile"}
    54:54:void <init>() -> <init>
    57:58:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,byte[],java.util.List) -> encode
    53:53:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Brotli -> pro.gravit.repackage.io.netty.handler.codec.compression.Brotli:
# {"fileName":"Brotli.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.ClassNotFoundException CNFE -> CNFE
    java.lang.Throwable cause -> cause
    59:59:boolean isAvailable() -> isAvailable
    68:72:void ensureAvailability() -> ensureAvailability
    78:78:java.lang.Throwable cause() -> cause
    81:82:void <init>() -> <init>
    26:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder:
# {"fileName":"BrotliDecoder.java","id":"sourceFile"}
    int inputBufferSize -> inputBufferSize
    com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder -> decoder
    boolean destroyed -> destroyed
    56:57:void <init>() -> <init>
    63:65:void <init>(int) -> <init>
    68:72:pro.gravit.repackage.io.netty.buffer.ByteBuf pull(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> pull
    77:105:pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State decompress(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> decompress
    111:116:int readBytes(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.nio.ByteBuffer) -> readBytes
    121:122:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    126:147:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    150:154:void destroy() -> destroy
    159:163:void handlerRemoved0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    168:172:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    42:46:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$1:
# {"fileName":"BrotliDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$com$aayushatharva$brotli4j$decoder$DecoderJNI$Status -> $SwitchMap$com$aayushatharva$brotli4j$decoder$DecoderJNI$Status
    77:77:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State -> pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State:
# {"fileName":"BrotliDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State DONE -> DONE
    pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State NEEDS_MORE_INPUT -> NEEDS_MORE_INPUT
    pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State ERROR -> ERROR
    pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State[] $VALUES -> $VALUES
    36:36:pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State[] values() -> values
    36:36:pro.gravit.repackage.io.netty.handler.codec.compression.BrotliDecoder$State valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder:
# {"fileName":"BrotliEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AttributeKey ATTR -> ATTR
    java.lang.reflect.Method FLUSH_METHOD -> FLUSH_METHOD
    com.aayushatharva.brotli4j.encoder.Encoder$Parameters parameters -> parameters
    boolean isSharable -> isSharable
    pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer writer -> writer
    75:76:void <init>() -> <init>
    85:86:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.BrotliOptions) -> <init>
    95:96:void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters) -> <init>
    114:117:void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters,boolean) -> <init>
    121:128:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    132:134:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    139:139:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    143:159:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> allocateBuffer
    165:165:boolean isSharable() -> isSharable
    177:187:void finish(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> finish
    44:44:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    44:44:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    45:45:java.lang.reflect.Method access$300() -> access$300
    47:64:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$1:
# {"fileName":"BrotliEncoder.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer -> pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer:
# {"fileName":"BrotliEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf writableBuffer -> writableBuffer
    com.aayushatharva.brotli4j.encoder.BrotliEncoderChannel brotliEncoderChannel -> brotliEncoderChannel
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    boolean isClosed -> isClosed
    200:203:void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    207:223:void encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> encode
    226:231:void allocate(boolean) -> allocate
    235:239:int write(java.nio.ByteBuffer) -> write
    244:244:boolean isOpen() -> isOpen
    249:261:void close() -> close
    264:282:void finish(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> finish
    193:193:void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$1) -> <init>
    193:193:void access$100(pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> access$100
    193:193:pro.gravit.repackage.io.netty.buffer.ByteBuf access$200(pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer) -> access$200
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer$1:
# {"fileName":"BrotliEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer this$0 -> this$0
    251:251:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.BrotliEncoder$Writer,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    255:259:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.BrotliOptions -> pro.gravit.repackage.io.netty.handler.codec.compression.BrotliOptions:
# {"fileName":"BrotliOptions.java","id":"sourceFile"}
    com.aayushatharva.brotli4j.encoder.Encoder$Parameters parameters -> parameters
    pro.gravit.repackage.io.netty.handler.codec.compression.BrotliOptions DEFAULT -> DEFAULT
    36:42:void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters) -> <init>
    45:45:com.aayushatharva.brotli4j.encoder.Encoder$Parameters parameters() -> parameters
    32:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum -> pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum:
# {"fileName":"ByteBufChecksum.java","id":"sourceFile"}
    java.lang.reflect.Method ADLER32_UPDATE_METHOD -> ADLER32_UPDATE_METHOD
    java.lang.reflect.Method CRC32_UPDATE_METHOD -> CRC32_UPDATE_METHOD
    pro.gravit.repackage.io.netty.util.ByteProcessor updateProcessor -> updateProcessor
    35:46:void <init>() -> <init>
    55:64:java.lang.reflect.Method updateByteBuffer(java.util.zip.Checksum) -> updateByteBuffer
    68:78:pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum wrapChecksum(java.util.zip.Checksum) -> wrapChecksum
    85:90:void update(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> update
    42:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum$1:
# {"fileName":"ByteBufChecksum.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum this$0 -> this$0
    46:46:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum) -> <init>
    49:50:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum -> pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum:
# {"fileName":"ByteBufChecksum.java","id":"sourceFile"}
    java.lang.reflect.Method method -> method
    96:98:void <init>(java.util.zip.Checksum,java.lang.reflect.Method) -> <init>
    102:111:void update(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> update
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum$SlowByteBufChecksum -> pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum$SlowByteBufChecksum:
# {"fileName":"ByteBufChecksum.java","id":"sourceFile"}
    java.util.zip.Checksum checksum -> checksum
    118:120:void <init>(java.util.zip.Checksum) -> <init>
    124:125:void update(int) -> update
    129:130:void update(byte[],int,int) -> update
    134:134:long getValue() -> getValue
    139:140:void reset() -> reset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitReader -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitReader:
# {"fileName":"Bzip2BitReader.java","id":"sourceFile"}
    int MAX_COUNT_OF_READABLE_BYTES -> MAX_COUNT_OF_READABLE_BYTES
    pro.gravit.repackage.io.netty.buffer.ByteBuf in -> in
    long bitBuffer -> bitBuffer
    int bitCount -> bitCount
    25:25:void <init>() -> <init>
    50:51:void setByteBuf(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setByteBuf
    59:97:int readBits(int) -> readBits
    105:105:boolean readBoolean() -> readBoolean
    113:113:int readInt() -> readInt
    120:123:void refill() -> refill
    130:130:boolean isReadable() -> isReadable
    139:142:boolean hasReadableBits(int) -> hasReadableBits
    151:155:boolean hasReadableBytes(int) -> hasReadableBytes
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitWriter -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitWriter:
# {"fileName":"Bzip2BitWriter.java","id":"sourceFile"}
    long bitBuffer -> bitBuffer
    int bitCount -> bitCount
    25:25:void <init>() -> <init>
    42:56:void writeBits(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,long) -> writeBits
    63:73:void writeBoolean(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> writeBoolean
    81:88:void writeUnary(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeUnary
    95:96:void writeInt(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeInt
    103:119:void flush(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> flush
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockCompressor -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockCompressor:
# {"fileName":"Bzip2BlockCompressor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ByteProcessor writeProcessor -> writeProcessor
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitWriter writer -> writer
    pro.gravit.repackage.io.netty.handler.codec.compression.Crc32 crc -> crc
    byte[] block -> block
    int blockLength -> blockLength
    int blockLengthLimit -> blockLengthLimit
    boolean[] blockValuesPresent -> blockValuesPresent
    int[] bwtBlock -> bwtBlock
    int rleCurrentValue -> rleCurrentValue
    int rleLength -> rleLength
    38:103:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitWriter,int) -> <init>
    109:134:void writeSymbolMap(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeSymbolMap
    142:176:void writeRun(int,int) -> writeRun
    184:206:boolean write(int) -> write
    218:219:int write(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> write
    227:262:void close(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> close
    269:272:int availableSize() -> availableSize
    280:280:boolean isFull() -> isFull
    288:288:boolean isEmpty() -> isEmpty
    296:296:int crc() -> crc
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockCompressor$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockCompressor$1:
# {"fileName":"Bzip2BlockCompressor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockCompressor this$0 -> this$0
    38:38:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockCompressor) -> <init>
    41:41:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockDecompressor -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockDecompressor:
# {"fileName":"Bzip2BlockDecompressor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitReader reader -> reader
    pro.gravit.repackage.io.netty.handler.codec.compression.Crc32 crc -> crc
    int blockCRC -> blockCRC
    boolean blockRandomised -> blockRandomised
    int huffmanEndOfBlockSymbol -> huffmanEndOfBlockSymbol
    int huffmanInUse16 -> huffmanInUse16
    byte[] huffmanSymbolMap -> huffmanSymbolMap
    int[] bwtByteCounts -> bwtByteCounts
    byte[] bwtBlock -> bwtBlock
    int bwtStartPointer -> bwtStartPointer
    int[] bwtMergedPointers -> bwtMergedPointers
    int bwtCurrentMergedPointer -> bwtCurrentMergedPointer
    int bwtBlockLength -> bwtBlockLength
    int bwtBytesDecoded -> bwtBytesDecoded
    int rleLastDecodedByte -> rleLastDecodedByte
    int rleAccumulator -> rleAccumulator
    int rleRepeat -> rleRepeat
    int randomIndex -> randomIndex
    int randomCount -> randomCount
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2MoveToFrontTable symbolMTF -> symbolMTF
    int repeatCount -> repeatCount
    int repeatIncrement -> repeatIncrement
    int mtfValue -> mtfValue
    45:168:void <init>(int,int,boolean,int,pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitReader) -> <init>
    175:241:boolean decodeHuffmanData(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder) -> decodeHuffmanData
    248:274:void initialiseInverseBWT() -> initialiseInverseBWT
    282:309:int read() -> read
    318:331:int decodeNextBWTByte() -> decodeNextBWTByte
    335:335:int blockLength() -> blockLength
    344:348:int checkCRC() -> checkCRC
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Constants -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Constants:
# {"fileName":"Bzip2Constants.java","id":"sourceFile"}
    int MAGIC_NUMBER -> MAGIC_NUMBER
    int BLOCK_HEADER_MAGIC_1 -> BLOCK_HEADER_MAGIC_1
    int BLOCK_HEADER_MAGIC_2 -> BLOCK_HEADER_MAGIC_2
    int END_OF_STREAM_MAGIC_1 -> END_OF_STREAM_MAGIC_1
    int END_OF_STREAM_MAGIC_2 -> END_OF_STREAM_MAGIC_2
    int BASE_BLOCK_SIZE -> BASE_BLOCK_SIZE
    int MIN_BLOCK_SIZE -> MIN_BLOCK_SIZE
    int MAX_BLOCK_SIZE -> MAX_BLOCK_SIZE
    int THREAD_POOL_DELAY_SECONDS -> THREAD_POOL_DELAY_SECONDS
    int MAX_BLOCK_LENGTH -> MAX_BLOCK_LENGTH
    int HUFFMAN_MAX_ALPHABET_SIZE -> HUFFMAN_MAX_ALPHABET_SIZE
    int HUFFMAN_ENCODE_MAX_CODE_LENGTH -> HUFFMAN_ENCODE_MAX_CODE_LENGTH
    int HUFFMAN_DECODE_MAX_CODE_LENGTH -> HUFFMAN_DECODE_MAX_CODE_LENGTH
    int HUFFMAN_SYMBOL_RUNA -> HUFFMAN_SYMBOL_RUNA
    int HUFFMAN_SYMBOL_RUNB -> HUFFMAN_SYMBOL_RUNB
    int HUFFMAN_SYMBOL_RANGE_SIZE -> HUFFMAN_SYMBOL_RANGE_SIZE
    int HUFFMAN_SELECTOR_LIST_MAX_LENGTH -> HUFFMAN_SELECTOR_LIST_MAX_LENGTH
    int HUFFMAN_GROUP_RUN_LENGTH -> HUFFMAN_GROUP_RUN_LENGTH
    int MAX_SELECTORS -> MAX_SELECTORS
    int HUFFMAN_MINIMUM_TABLES -> HUFFMAN_MINIMUM_TABLES
    int HUFFMAN_MAXIMUM_TABLES -> HUFFMAN_MAXIMUM_TABLES
    107:107:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder:
# {"fileName":"Bzip2Decoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State currentState -> currentState
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitReader reader -> reader
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockDecompressor blockDecompressor -> blockDecompressor
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder huffmanStageDecoder -> huffmanStageDecoder
    int blockSize -> blockSize
    int blockCRC -> blockCRC
    int streamCRC -> streamCRC
    44:65:void <init>() -> <init>
    94:332:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    342:342:boolean isClosed() -> isClosed
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$1:
# {"fileName":"Bzip2Decoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$Bzip2Decoder$State -> $SwitchMap$io$netty$handler$codec$compression$Bzip2Decoder$State
    102:102:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State:
# {"fileName":"Bzip2Decoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State INIT -> INIT
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State INIT_BLOCK -> INIT_BLOCK
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State INIT_BLOCK_PARAMS -> INIT_BLOCK_PARAMS
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_USED_MAP -> RECEIVE_HUFFMAN_USED_MAP
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_USED_BITMAPS -> RECEIVE_HUFFMAN_USED_BITMAPS
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_SELECTORS_NUMBER -> RECEIVE_SELECTORS_NUMBER
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_SELECTORS -> RECEIVE_SELECTORS
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State RECEIVE_HUFFMAN_LENGTH -> RECEIVE_HUFFMAN_LENGTH
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State DECODE_HUFFMAN_DATA -> DECODE_HUFFMAN_DATA
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State EOF -> EOF
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State[] $VALUES -> $VALUES
    48:48:pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State[] values() -> values
    48:48:pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Decoder$State valueOf(java.lang.String) -> valueOf
    48:48:void <init>(java.lang.String,int) -> <init>
    48:58:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort:
# {"fileName":"Bzip2DivSufSort.java","id":"sourceFile"}
    int STACK_SIZE -> STACK_SIZE
    int BUCKET_A_SIZE -> BUCKET_A_SIZE
    int BUCKET_B_SIZE -> BUCKET_B_SIZE
    int SS_BLOCKSIZE -> SS_BLOCKSIZE
    int INSERTIONSORT_THRESHOLD -> INSERTIONSORT_THRESHOLD
    int[] LOG_2_TABLE -> LOG_2_TABLE
    int[] SA -> SA
    byte[] T -> T
    int n -> n
    53:57:void <init>(byte[],int[],int) -> <init>
    60:63:void swapElements(int[],int,int[],int) -> swapElements
    66:81:int ssCompare(int,int,int) -> ssCompare
    87:114:int ssCompareLast(int,int,int,int,int) -> ssCompareLast
    120:140:void ssInsertionSort(int,int,int,int) -> ssInsertionSort
    143:161:void ssFixdown(int,int,int,int,int) -> ssFixdown
    164:193:void ssHeapSort(int,int,int,int) -> ssHeapSort
    196:217:int ssMedian3(int,int,int,int,int) -> ssMedian3
    221:279:int ssMedian5(int,int,int,int,int,int,int) -> ssMedian5
    286:301:int ssPivot(int,int,int,int) -> ssPivot
    306:306:int ssLog(int) -> ssLog
    312:336:int ssSubstringPartition(int,int,int,int) -> ssSubstringPartition
    354:529:void ssMultiKeyIntroSort(int,int,int,int) -> ssMultiKeyIntroSort
    538:541:void ssBlockSwap(int[],int,int[],int,int) -> ssBlockSwap
    545:600:void ssMergeForward(int,int[],int,int,int,int,int) -> ssMergeForward
    607:726:void ssMergeBackward(int,int[],int,int,int,int,int) -> ssMergeBackward
    733:733:int getIDX(int) -> getIDX
    737:742:void ssMergeCheckEqual(int,int,int) -> ssMergeCheckEqual
    746:857:void ssMerge(int,int,int,int,int[],int,int,int) -> ssMerge
    864:911:void subStringSort(int,int,int,int[],int,int,int,boolean,int) -> subStringSort
    916:916:int trGetC(int,int,int,int) -> trGetC
    922:940:void trFixdown(int,int,int,int,int,int) -> trFixdown
    943:971:void trHeapSort(int,int,int,int,int) -> trHeapSort
    974:993:void trInsertionSort(int,int,int,int,int) -> trInsertionSort
    996:996:int trLog(int) -> trLog
    1002:1023:int trMedian3(int,int,int,int,int,int) -> trMedian3
    1027:1084:int trMedian5(int,int,int,int,int,int,int,int) -> trMedian5
    1091:1111:int trPivot(int,int,int,int,int) -> trPivot
    1118:1143:void lsUpdateGroup(int,int,int) -> lsUpdateGroup
    1146:1293:void lsIntroSort(int,int,int,int,int) -> lsIntroSort
    1298:1340:void lsSort(int,int,int) -> lsSort
    1356:1420:pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult trPartition(int,int,int,int,int,int) -> trPartition
    1425:1450:void trCopy(int,int,int,int,int,int,int) -> trCopy
    1454:1800:void trIntroSort(int,int,int,int,int,pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget,int) -> trIntroSort
    1824:1851:void trSort(int,int,int) -> trSort
    1856:1856:int BUCKET_B(int,int) -> BUCKET_B
    1860:1860:int BUCKET_BSTAR(int,int) -> BUCKET_BSTAR
    1864:2018:int sortTypeBstar(int[],int[]) -> sortTypeBstar
    2022:2088:int constructBWT(int[],int[]) -> constructBWT
    2096:2115:int bwt() -> bwt
    33:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult:
# {"fileName":"Bzip2DivSufSort.java","id":"sourceFile"}
    int first -> first
    int last -> last
    1348:1351:void <init>(int,int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry:
# {"fileName":"Bzip2DivSufSort.java","id":"sourceFile"}
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    345:350:void <init>(int,int,int,int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget:
# {"fileName":"Bzip2DivSufSort.java","id":"sourceFile"}
    int budget -> budget
    int chance -> chance
    1806:1809:void <init>(int,int) -> <init>
    1812:1819:boolean update(int,int) -> update
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder:
# {"fileName":"Bzip2Encoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State currentState -> currentState
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitWriter writer -> writer
    int streamBlockSize -> streamBlockSize
    int streamCRC -> streamCRC
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BlockCompressor blockCompressor -> blockCompressor
    boolean finished -> finished
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    90:91:void <init>() -> <init>
    54:106:void <init>(int) -> <init>
    110:149:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    158:164:void closeBlock(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> closeBlock
    170:170:boolean isClosed() -> isClosed
    179:179:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    188:200:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    206:223:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    226:245:pro.gravit.repackage.io.netty.channel.ChannelFuture finishEncode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> finishEncode
    249:253:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx() -> ctx
    258:259:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    43:43:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    43:43:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$000(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder) -> access$000
    43:43:pro.gravit.repackage.io.netty.channel.ChannelFuture access$100(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$1:
# {"fileName":"Bzip2Encoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder this$0 -> this$0
    193:193:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    196:198:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$2 -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$2:
# {"fileName":"Bzip2Encoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder this$0 -> this$0
    207:207:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    210:211:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    207:207:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$3 -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$3:
# {"fileName":"Bzip2Encoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder this$0 -> this$0
    216:216:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    219:220:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$4 -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$4:
# {"fileName":"Bzip2Encoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$Bzip2Encoder$State -> $SwitchMap$io$netty$handler$codec$compression$Bzip2Encoder$State
    116:116:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State:
# {"fileName":"Bzip2Encoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State INIT -> INIT
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State INIT_BLOCK -> INIT_BLOCK
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State WRITE_DATA -> WRITE_DATA
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State CLOSE_BLOCK -> CLOSE_BLOCK
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State[] $VALUES -> $VALUES
    47:47:pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State[] values() -> values
    47:47:pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Encoder$State valueOf(java.lang.String) -> valueOf
    47:47:void <init>(java.lang.String,int) -> <init>
    47:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2HuffmanAllocator -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2HuffmanAllocator:
# {"fileName":"Bzip2HuffmanAllocator.java","id":"sourceFile"}
    34:52:int first(int[],int,int) -> first
    60:80:void setExtendedParentPointers(int[]) -> setExtendedParentPointers
    89:93:int findNodesToRelocate(int[],int) -> findNodesToRelocate
    101:114:void allocateNodeLengths(int[]) -> allocateNodeLengths
    124:150:void allocateNodeLengthsWithRelocation(int[],int,int) -> allocateNodeLengthsWithRelocation
    159:181:void allocateHuffmanCodeLengths(int[],int) -> allocateHuffmanCodeLengths
    183:183:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder:
# {"fileName":"Bzip2HuffmanStageDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitReader reader -> reader
    byte[] selectors -> selectors
    int[] minimumLengths -> minimumLengths
    int[][] codeBases -> codeBases
    int[][] codeLimits -> codeLimits
    int[][] codeSymbols -> codeSymbols
    int currentTable -> currentTable
    int groupIndex -> groupIndex
    int groupPosition -> groupPosition
    int totalTables -> totalTables
    int alphabetSize -> alphabetSize
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2MoveToFrontTable tableMTF -> tableMTF
    int currentSelector -> currentSelector
    byte[][] tableCodeLengths -> tableCodeLengths
    int currentGroup -> currentGroup
    int currentLength -> currentLength
    int currentAlpha -> currentAlpha
    boolean modifyLength -> modifyLength
    66:112:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitReader,int,int) -> <init>
    118:167:void createHuffmanDecodingTables() -> createHuffmanDecodingTables
    175:201:int nextSymbol() -> nextSymbol
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2HuffmanStageEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2HuffmanStageEncoder:
# {"fileName":"Bzip2HuffmanStageEncoder.java","id":"sourceFile"}
    int HUFFMAN_HIGH_SYMBOL_COST -> HUFFMAN_HIGH_SYMBOL_COST
    pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitWriter writer -> writer
    char[] mtfBlock -> mtfBlock
    int mtfLength -> mtfLength
    int mtfAlphabetSize -> mtfAlphabetSize
    int[] mtfSymbolFrequencies -> mtfSymbolFrequencies
    int[][] huffmanCodeLengths -> huffmanCodeLengths
    int[][] huffmanMergedCodeSymbols -> huffmanMergedCodeSymbols
    byte[] selectors -> selectors
    82:94:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2BitWriter,char[],int,int,int[]) -> <init>
    102:114:int selectTableCount(int) -> selectTableCount
    126:154:void generateHuffmanCodeLengths(int,int[],int[]) -> generateHuffmanCodeLengths
    163:195:void generateHuffmanOptimisationSeeds() -> generateHuffmanOptimisationSeeds
    206:259:void optimiseSelectorsAndHuffmanTables(boolean) -> optimiseSelectorsAndHuffmanTables
    265:297:void assignHuffmanCodeSymbols() -> assignHuffmanCodeSymbols
    303:336:void writeSelectorsAndHuffmanTables(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeSelectorsAndHuffmanTables
    342:357:void writeBlockData(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeBlockData
    364:373:void encode(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder:
# {"fileName":"Bzip2MTFAndRLE2StageEncoder.java","id":"sourceFile"}
    int[] bwtBlock -> bwtBlock
    int bwtLength -> bwtLength
    boolean[] bwtValuesPresent -> bwtValuesPresent
    char[] mtfBlock -> mtfBlock
    int mtfLength -> mtfLength
    int[] mtfSymbolFrequencies -> mtfSymbolFrequencies
    int alphabetSize -> alphabetSize
    57:75:void <init>(int[],int,boolean[]) -> <init>
    81:156:void encode() -> encode
    162:162:char[] mtfBlock() -> mtfBlock
    169:169:int mtfLength() -> mtfLength
    176:176:int mtfAlphabetSize() -> mtfAlphabetSize
    183:183:int[] mtfSymbolFrequencies() -> mtfSymbolFrequencies
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2MoveToFrontTable -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2MoveToFrontTable:
# {"fileName":"Bzip2MoveToFrontTable.java","id":"sourceFile"}
    byte[] mtf -> mtf
    21:25:void <init>() -> <init>
    58:69:int valueToFront(byte) -> valueToFront
    78:82:byte indexToFront(int) -> indexToFront
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Rand -> pro.gravit.repackage.io.netty.handler.codec.compression.Bzip2Rand:
# {"fileName":"Bzip2Rand.java","id":"sourceFile"}
    int[] RNUMS -> RNUMS
    73:73:int rNums(int) -> rNums
    76:76:void <init>() -> <init>
    31:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.CompressionException -> pro.gravit.repackage.io.netty.handler.codec.compression.CompressionException:
# {"fileName":"CompressionException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    30:31:void <init>() -> <init>
    37:38:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    44:45:void <init>(java.lang.String) -> <init>
    51:52:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.CompressionOptions -> pro.gravit.repackage.io.netty.handler.codec.compression.CompressionOptions:
# {"fileName":"CompressionOptions.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.CompressionUtil -> pro.gravit.repackage.io.netty.handler.codec.compression.CompressionUtil:
# {"fileName":"CompressionUtil.java","id":"sourceFile"}
    24:24:void <init>() -> <init>
    27:37:void checkChecksum(pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> checkChecksum
    40:41:java.nio.ByteBuffer safeNioBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> safeNioBuffer
    45:46:java.nio.ByteBuffer safeNioBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> safeNioBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Crc32 -> pro.gravit.repackage.io.netty.handler.codec.compression.Crc32:
# {"fileName":"Crc32.java","id":"sourceFile"}
    int[] crc32Table -> crc32Table
    int crc -> crc
    21:95:void <init>() -> <init>
    101:101:int getCRC() -> getCRC
    109:111:void updateCRC(int) -> updateCRC
    119:122:void updateCRC(int,int) -> updateCRC
    25:25:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Crc32c -> pro.gravit.repackage.io.netty.handler.codec.compression.Crc32c:
# {"fileName":"Crc32c.java","id":"sourceFile"}
    int[] CRC_TABLE -> CRC_TABLE
    long LONG_MASK -> LONG_MASK
    int BYTE_MASK -> BYTE_MASK
    int crc -> crc
    26:97:void <init>() -> <init>
    101:102:void update(int) -> update
    106:110:void update(byte[],int,int) -> update
    114:114:long getValue() -> getValue
    119:120:void reset() -> reset
    123:123:int crc32c(int,int) -> crc32c
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.DecompressionException -> pro.gravit.repackage.io.netty.handler.codec.compression.DecompressionException:
# {"fileName":"DecompressionException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    30:31:void <init>() -> <init>
    37:38:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    44:45:void <init>(java.lang.String) -> <init>
    51:52:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.DeflateOptions -> pro.gravit.repackage.io.netty.handler.codec.compression.DeflateOptions:
# {"fileName":"DeflateOptions.java","id":"sourceFile"}
    int compressionLevel -> compressionLevel
    int windowBits -> windowBits
    int memLevel -> memLevel
    pro.gravit.repackage.io.netty.handler.codec.compression.DeflateOptions DEFAULT -> DEFAULT
    40:44:void <init>(int,int,int) -> <init>
    47:47:int compressionLevel() -> compressionLevel
    51:51:int windowBits() -> windowBits
    55:55:int memLevel() -> memLevel
    33:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.FastLz -> pro.gravit.repackage.io.netty.handler.codec.compression.FastLz:
# {"fileName":"FastLz.java","id":"sourceFile"}
    int MAX_DISTANCE -> MAX_DISTANCE
    int MAX_FARDISTANCE -> MAX_FARDISTANCE
    int HASH_LOG -> HASH_LOG
    int HASH_SIZE -> HASH_SIZE
    int HASH_MASK -> HASH_MASK
    int MAX_COPY -> MAX_COPY
    int MAX_LEN -> MAX_LEN
    int MIN_RECOMENDED_LENGTH_FOR_LEVEL_2 -> MIN_RECOMENDED_LENGTH_FOR_LEVEL_2
    int MAGIC_NUMBER -> MAGIC_NUMBER
    byte BLOCK_TYPE_NON_COMPRESSED -> BLOCK_TYPE_NON_COMPRESSED
    byte BLOCK_TYPE_COMPRESSED -> BLOCK_TYPE_COMPRESSED
    byte BLOCK_WITHOUT_CHECKSUM -> BLOCK_WITHOUT_CHECKSUM
    byte BLOCK_WITH_CHECKSUM -> BLOCK_WITH_CHECKSUM
    int OPTIONS_OFFSET -> OPTIONS_OFFSET
    int CHECKSUM_OFFSET -> CHECKSUM_OFFSET
    int MAX_CHUNK_LENGTH -> MAX_CHUNK_LENGTH
    int MIN_LENGTH_TO_COMPRESSION -> MIN_LENGTH_TO_COMPRESSION
    int LEVEL_AUTO -> LEVEL_AUTO
    int LEVEL_1 -> LEVEL_1
    int LEVEL_2 -> LEVEL_2
    85:86:int calculateOutputBufferLength(int) -> calculateOutputBufferLength
    99:398:int compress(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> compress
    412:542:int decompress(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> decompress
    546:549:int hashFunction(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> hashFunction
    553:556:int readU16(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> readU16
    559:559:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder:
# {"fileName":"FastLzFrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State currentState -> currentState
    pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum checksum -> checksum
    int chunkLength -> chunkLength
    int originalLength -> originalLength
    boolean isCompressed -> isCompressed
    boolean hasChecksum -> hasChecksum
    int currentChecksum -> currentChecksum
    84:85:void <init>() -> <init>
    98:99:void <init>(boolean) -> <init>
    47:110:void <init>(java.util.zip.Checksum) -> <init>
    115:207:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$1:
# {"fileName":"FastLzFrameDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$FastLzFrameDecoder$State -> $SwitchMap$io$netty$handler$codec$compression$FastLzFrameDecoder$State
    115:115:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State -> pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State:
# {"fileName":"FastLzFrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State INIT_BLOCK -> INIT_BLOCK
    pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State INIT_BLOCK_PARAMS -> INIT_BLOCK_PARAMS
    pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State DECOMPRESS_DATA -> DECOMPRESS_DATA
    pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State CORRUPTED -> CORRUPTED
    pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State[] $VALUES -> $VALUES
    40:40:pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State[] values() -> values
    40:40:pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameDecoder$State valueOf(java.lang.String) -> valueOf
    40:40:void <init>(java.lang.String,int) -> <init>
    40:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.FastLzFrameEncoder:
# {"fileName":"FastLzFrameEncoder.java","id":"sourceFile"}
    int level -> level
    pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum checksum -> checksum
    60:61:void <init>() -> <init>
    72:73:void <init>(int) -> <init>
    86:87:void <init>(boolean) -> <init>
    100:107:void <init>(int,java.util.zip.Checksum) -> <init>
    111:170:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    45:45:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.GzipOptions -> pro.gravit.repackage.io.netty.handler.codec.compression.GzipOptions:
# {"fileName":"GzipOptions.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.GzipOptions DEFAULT -> DEFAULT
    36:37:void <init>(int,int,int) -> <init>
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JZlibDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.JZlibDecoder:
# {"fileName":"JZlibDecoder.java","id":"sourceFile"}
    com.jcraft.jzlib.Inflater z -> z
    byte[] dictionary -> dictionary
    boolean finished -> finished
    39:40:void <init>() -> <init>
    53:54:void <init>(int) -> <init>
    62:63:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper) -> <init>
    29:83:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    93:94:void <init>(byte[]) -> <init>
    29:115:void <init>(byte[],int) -> <init>
    123:123:boolean isClosed() -> isClosed
    128:213:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    217:218:void decompressionBufferExhausted(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decompressionBufferExhausted
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder:
# {"fileName":"JZlibEncoder.java","id":"sourceFile"}
    int wrapperOverhead -> wrapperOverhead
    com.jcraft.jzlib.Deflater z -> z
    boolean finished -> finished
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    int THREAD_POOL_DELAY_SECONDS -> THREAD_POOL_DELAY_SECONDS
    53:54:void <init>() -> <init>
    69:70:void <init>(int) -> <init>
    80:81:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper) -> <init>
    96:97:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    39:141:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,int,int,int) -> <init>
    155:156:void <init>(byte[]) -> <init>
    174:175:void <init>(int,byte[]) -> <init>
    39:222:void <init>(int,int,int,byte[]) -> <init>
    226:226:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    231:244:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    249:253:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx() -> ctx
    258:258:boolean isClosed() -> isClosed
    263:320:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    326:343:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    346:387:pro.gravit.repackage.io.netty.channel.ChannelFuture finishEncode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> finishEncode
    392:393:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    36:36:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    36:36:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$000(pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder) -> access$000
    36:36:pro.gravit.repackage.io.netty.channel.ChannelFuture access$100(pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder$1:
# {"fileName":"JZlibEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$p -> val$p
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder this$0 -> this$0
    237:237:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    240:242:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder$2 -> pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder$2:
# {"fileName":"JZlibEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder this$0 -> this$0
    327:327:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    330:331:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    327:327:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder$3 -> pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder$3:
# {"fileName":"JZlibEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder this$0 -> this$0
    336:336:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.JZlibEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    339:340:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder:
# {"fileName":"JdkZlibDecoder.java","id":"sourceFile"}
    int FHCRC -> FHCRC
    int FEXTRA -> FEXTRA
    int FNAME -> FNAME
    int FCOMMENT -> FCOMMENT
    int FRESERVED -> FRESERVED
    java.util.zip.Inflater inflater -> inflater
    byte[] dictionary -> dictionary
    pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum crc -> crc
    boolean decompressConcatenated -> decompressConcatenated
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState gzipState -> gzipState
    int flags -> flags
    int xlen -> xlen
    boolean finished -> finished
    boolean decideZlibOrNone -> decideZlibOrNone
    boolean $assertionsDisabled -> $assertionsDisabled
    69:70:void <init>() -> <init>
    81:82:void <init>(int) -> <init>
    90:91:void <init>(byte[]) -> <init>
    103:104:void <init>(byte[],int) -> <init>
    112:113:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper) -> <init>
    125:126:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    129:130:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,boolean) -> <init>
    133:134:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,boolean,int) -> <init>
    137:138:void <init>(boolean) -> <init>
    141:142:void <init>(boolean,int) -> <init>
    57:172:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,byte[],boolean,int) -> <init>
    176:176:boolean isClosed() -> isClosed
    181:284:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    287:297:boolean handleGzipFooter(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> handleGzipFooter
    302:303:void decompressionBufferExhausted(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decompressionBufferExhausted
    307:311:void handlerRemoved0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    314:401:boolean readGZIPHeader(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readGZIPHeader
    413:427:boolean skipIfNeeded(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> skipIfNeeded
    438:455:boolean readGZIPFooter(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readGZIPFooter
    466:478:boolean verifyCrc(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> verifyCrc
    482:497:boolean verifyCrc16(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> verifyCrc16
    508:508:boolean looksLikeZlib(short) -> looksLikeZlib
    32:32:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$1:
# {"fileName":"JdkZlibDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    int[] $SwitchMap$io$netty$handler$codec$compression$JdkZlibDecoder$GzipState -> $SwitchMap$io$netty$handler$codec$compression$JdkZlibDecoder$GzipState
    150:314:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState -> pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState:
# {"fileName":"JdkZlibDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_START -> HEADER_START
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_END -> HEADER_END
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FLG_READ -> FLG_READ
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState XLEN_READ -> XLEN_READ
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_FNAME -> SKIP_FNAME
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_COMMENT -> SKIP_COMMENT
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState PROCESS_FHCRC -> PROCESS_FHCRC
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FOOTER_START -> FOOTER_START
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $VALUES -> $VALUES
    46:46:pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] values() -> values
    46:46:pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibDecoder$GzipState valueOf(java.lang.String) -> valueOf
    46:46:void <init>(java.lang.String,int) -> <init>
    46:54:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder:
# {"fileName":"JdkZlibEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int MAX_INITIAL_OUTPUT_BUFFER_SIZE -> MAX_INITIAL_OUTPUT_BUFFER_SIZE
    int MAX_INPUT_BUFFER_SIZE -> MAX_INPUT_BUFFER_SIZE
    pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper wrapper -> wrapper
    java.util.zip.Deflater deflater -> deflater
    boolean finished -> finished
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    java.util.zip.CRC32 crc -> crc
    byte[] gzipHeader -> gzipHeader
    boolean writeHeader -> writeHeader
    int THREAD_POOL_DELAY_SECONDS -> THREAD_POOL_DELAY_SECONDS
    88:89:void <init>() -> <init>
    103:104:void <init>(int) -> <init>
    113:114:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper) -> <init>
    62:139:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,int) -> <init>
    152:153:void <init>(byte[]) -> <init>
    62:176:void <init>(int,byte[]) -> <init>
    180:180:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    185:198:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    203:207:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx() -> ctx
    212:212:boolean isClosed() -> isClosed
    217:245:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    250:278:void encodeSome(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeSome
    283:301:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> allocateBuffer
    306:323:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    326:362:pro.gravit.repackage.io.netty.channel.ChannelFuture finishEncode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> finishEncode
    367:377:void deflate(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> deflate
    382:387:void deflateJdk6(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> deflateJdk6
    391:392:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    40:40:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    40:40:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    40:40:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$000(pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder) -> access$000
    40:40:pro.gravit.repackage.io.netty.channel.ChannelFuture access$100(pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$100
    42:79:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder$1:
# {"fileName":"JdkZlibEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$p -> val$p
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder this$0 -> this$0
    191:191:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    194:196:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder$2 -> pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder$2:
# {"fileName":"JdkZlibEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder this$0 -> this$0
    307:307:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    310:311:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    307:307:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder$3 -> pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder$3:
# {"fileName":"JdkZlibEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder this$0 -> this$0
    316:316:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    319:320:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder$4 -> pro.gravit.repackage.io.netty.handler.codec.compression.JdkZlibEncoder$4:
# {"fileName":"JdkZlibEncoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    285:285:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4Constants -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4Constants:
# {"fileName":"Lz4Constants.java","id":"sourceFile"}
    long MAGIC_NUMBER -> MAGIC_NUMBER
    int HEADER_LENGTH -> HEADER_LENGTH
    int TOKEN_OFFSET -> TOKEN_OFFSET
    int THREAD_POOL_DELAY_SECONDS -> THREAD_POOL_DELAY_SECONDS
    int COMPRESSED_LENGTH_OFFSET -> COMPRESSED_LENGTH_OFFSET
    int DECOMPRESSED_LENGTH_OFFSET -> DECOMPRESSED_LENGTH_OFFSET
    int CHECKSUM_OFFSET -> CHECKSUM_OFFSET
    int COMPRESSION_LEVEL_BASE -> COMPRESSION_LEVEL_BASE
    int MIN_BLOCK_SIZE -> MIN_BLOCK_SIZE
    int MAX_BLOCK_SIZE -> MAX_BLOCK_SIZE
    int DEFAULT_BLOCK_SIZE -> DEFAULT_BLOCK_SIZE
    int BLOCK_TYPE_NON_COMPRESSED -> BLOCK_TYPE_NON_COMPRESSED
    int BLOCK_TYPE_COMPRESSED -> BLOCK_TYPE_COMPRESSED
    int DEFAULT_SEED -> DEFAULT_SEED
    74:74:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder:
# {"fileName":"Lz4FrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State currentState -> currentState
    net.jpountz.lz4.LZ4FastDecompressor decompressor -> decompressor
    pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum checksum -> checksum
    int blockType -> blockType
    int compressedLength -> compressedLength
    int decompressedLength -> decompressedLength
    int currentChecksum -> currentChecksum
    106:107:void <init>() -> <init>
    117:118:void <init>(boolean) -> <init>
    133:134:void <init>(net.jpountz.lz4.LZ4Factory,boolean) -> <init>
    64:148:void <init>(net.jpountz.lz4.LZ4Factory,java.util.zip.Checksum) -> <init>
    153:268:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    275:275:boolean isClosed() -> isClosed
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$1:
# {"fileName":"Lz4FrameDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$Lz4FrameDecoder$State -> $SwitchMap$io$netty$handler$codec$compression$Lz4FrameDecoder$State
    153:153:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State:
# {"fileName":"Lz4FrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State INIT_BLOCK -> INIT_BLOCK
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State DECOMPRESS_DATA -> DECOMPRESS_DATA
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State FINISHED -> FINISHED
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State CORRUPTED -> CORRUPTED
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State[] $VALUES -> $VALUES
    57:57:pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State[] values() -> values
    57:57:pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameDecoder$State valueOf(java.lang.String) -> valueOf
    57:57:void <init>(java.lang.String,int) -> <init>
    57:61:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder:
# {"fileName":"Lz4FrameEncoder.java","id":"sourceFile"}
    int DEFAULT_MAX_ENCODE_SIZE -> DEFAULT_MAX_ENCODE_SIZE
    int blockSize -> blockSize
    net.jpountz.lz4.LZ4Compressor compressor -> compressor
    pro.gravit.repackage.io.netty.handler.codec.compression.ByteBufChecksum checksum -> checksum
    int compressionLevel -> compressionLevel
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    int maxEncodeSize -> maxEncodeSize
    boolean finished -> finished
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    116:117:void <init>() -> <init>
    128:129:void <init>(boolean) -> <init>
    144:145:void <init>(net.jpountz.lz4.LZ4Factory,boolean,int,java.util.zip.Checksum) -> <init>
    161:172:void <init>(net.jpountz.lz4.LZ4Factory,boolean,int,java.util.zip.Checksum,int) -> <init>
    178:184:int compressionLevel(int) -> compressionLevel
    189:189:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> allocateBuffer
    194:224:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean,boolean) -> allocateBuffer
    237:256:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    259:296:void flushBufferedData(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> flushBufferedData
    300:306:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    309:329:pro.gravit.repackage.io.netty.channel.ChannelFuture finishEncode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> finishEncode
    336:336:boolean isClosed() -> isClosed
    345:345:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    354:366:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    372:389:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    392:396:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx() -> ctx
    401:405:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    409:414:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    417:417:pro.gravit.repackage.io.netty.buffer.ByteBuf getBackingBuffer() -> getBackingBuffer
    70:70:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    70:70:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    70:70:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$000(pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder) -> access$000
    70:70:pro.gravit.repackage.io.netty.channel.ChannelFuture access$100(pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder$1:
# {"fileName":"Lz4FrameEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder this$0 -> this$0
    359:359:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    362:364:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder$2 -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder$2:
# {"fileName":"Lz4FrameEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder this$0 -> this$0
    373:373:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    376:377:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    373:373:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder$3 -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder$3:
# {"fileName":"Lz4FrameEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder this$0 -> this$0
    382:382:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.Lz4FrameEncoder,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    385:386:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Lz4XXHash32 -> pro.gravit.repackage.io.netty.handler.codec.compression.Lz4XXHash32:
# {"fileName":"Lz4XXHash32.java","id":"sourceFile"}
    net.jpountz.xxhash.XXHash32 XXHASH32 -> XXHASH32
    int seed -> seed
    boolean used -> used
    int value -> value
    58:60:void <init>(int) -> <init>
    64:64:void update(int) -> update
    69:74:void update(byte[],int,int) -> update
    78:87:void update(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> update
    91:100:long getValue() -> getValue
    105:106:void reset() -> reset
    51:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder:
# {"fileName":"LzfDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State currentState -> currentState
    short MAGIC_NUMBER -> MAGIC_NUMBER
    com.ning.compress.lzf.ChunkDecoder decoder -> decoder
    com.ning.compress.BufferRecycler recycler -> recycler
    int chunkLength -> chunkLength
    int originalLength -> originalLength
    boolean isCompressed -> isCompressed
    91:92:void <init>() -> <init>
    51:109:void <init>(boolean) -> <init>
    114:241:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$1:
# {"fileName":"LzfDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$LzfDecoder$State -> $SwitchMap$io$netty$handler$codec$compression$LzfDecoder$State
    114:114:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State -> pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State:
# {"fileName":"LzfDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State INIT_BLOCK -> INIT_BLOCK
    pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State INIT_ORIGINAL_LENGTH -> INIT_ORIGINAL_LENGTH
    pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State DECOMPRESS_DATA -> DECOMPRESS_DATA
    pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State CORRUPTED -> CORRUPTED
    pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State[] $VALUES -> $VALUES
    44:44:pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State[] values() -> values
    44:44:pro.gravit.repackage.io.netty.handler.codec.compression.LzfDecoder$State valueOf(java.lang.String) -> valueOf
    44:44:void <init>(java.lang.String,int) -> <init>
    44:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.LzfEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.LzfEncoder:
# {"fileName":"LzfEncoder.java","id":"sourceFile"}
    int MIN_BLOCK_TO_COMPRESS -> MIN_BLOCK_TO_COMPRESS
    int compressThreshold -> compressThreshold
    com.ning.compress.lzf.ChunkEncoder encoder -> encoder
    com.ning.compress.BufferRecycler recycler -> recycler
    69:70:void <init>() -> <init>
    82:83:void <init>(boolean) -> <init>
    97:98:void <init>(boolean,int) -> <init>
    109:110:void <init>(int) -> <init>
    127:145:void <init>(boolean,int,int) -> <init>
    149:195:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    198:198:int encodeCompress(byte[],int,int,byte[],int) -> encodeCompress
    203:217:int lzfEncodeNonCompress(byte[],int,int,byte[],int) -> lzfEncodeNonCompress
    224:224:int encodeNonCompress(byte[],int,int,byte[],int) -> encodeNonCompress
    229:231:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    35:35:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.LzmaFrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.LzmaFrameEncoder:
# {"fileName":"LzmaFrameEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int MEDIUM_DICTIONARY_SIZE -> MEDIUM_DICTIONARY_SIZE
    int MIN_FAST_BYTES -> MIN_FAST_BYTES
    int MEDIUM_FAST_BYTES -> MEDIUM_FAST_BYTES
    int MAX_FAST_BYTES -> MAX_FAST_BYTES
    int DEFAULT_MATCH_FINDER -> DEFAULT_MATCH_FINDER
    int DEFAULT_LC -> DEFAULT_LC
    int DEFAULT_LP -> DEFAULT_LP
    int DEFAULT_PB -> DEFAULT_PB
    lzma.sdk.lzma.Encoder encoder -> encoder
    byte properties -> properties
    int littleEndianDictionarySize -> littleEndianDictionarySize
    boolean warningLogged -> warningLogged
    88:89:void <init>() -> <init>
    96:97:void <init>(int,int,int) -> <init>
    106:107:void <init>(int) -> <init>
    113:114:void <init>(int,int,int,int) -> <init>
    137:173:void <init>(int,int,int,int,boolean,int) -> <init>
    177:195:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    199:201:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> allocateBuffer
    209:220:int maxOutputBufferLength(int) -> maxOutputBufferLength
    39:39:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    39:39:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    41:41:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Snappy -> pro.gravit.repackage.io.netty.handler.codec.compression.Snappy:
# {"fileName":"Snappy.java","id":"sourceFile"}
    int MAX_HT_SIZE -> MAX_HT_SIZE
    int MIN_COMPRESSIBLE_BYTES -> MIN_COMPRESSIBLE_BYTES
    int PREAMBLE_NOT_FULL -> PREAMBLE_NOT_FULL
    int NOT_ENOUGH_INPUT -> NOT_ENOUGH_INPUT
    int LITERAL -> LITERAL
    int COPY_1_BYTE_OFFSET -> COPY_1_BYTE_OFFSET
    int COPY_2_BYTE_OFFSET -> COPY_2_BYTE_OFFSET
    int COPY_4_BYTE_OFFSET -> COPY_4_BYTE_OFFSET
    pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State state -> state
    byte tag -> tag
    int written -> written
    26:41:void <init>() -> <init>
    53:56:void reset() -> reset
    60:137:void encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> encode
    150:150:int hash(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> hash
    160:164:short[] getHashTable(int) -> getHashTable
    179:192:int findMatchingLength(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int) -> findMatchingLength
    204:210:int bitsToEncode(int) -> bitsToEncode
    223:235:void encodeLiteral(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> encodeLiteral
    238:246:void encodeCopyWithOffset(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> encodeCopyWithOffset
    256:267:void encodeCopy(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> encodeCopy
    270:347:void decode(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    359:373:int readPreamble(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readPreamble
    386:394:int getPreamble(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> getPreamble
    409:447:int decodeLiteral(byte,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decodeLiteral
    464:491:int decodeCopyWith1ByteOffset(byte,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> decodeCopyWith1ByteOffset
    508:535:int decodeCopyWith2ByteOffset(byte,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> decodeCopyWith2ByteOffset
    552:579:int decodeCopyWith4ByteOffset(byte,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> decodeCopyWith4ByteOffset
    592:604:void validateOffset(int,int) -> validateOffset
    613:613:int calculateChecksum(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> calculateChecksum
    623:629:int calculateChecksum(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> calculateChecksum
    642:643:void validateChecksum(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> validateChecksum
    655:661:void validateChecksum(int,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> validateChecksum
    675:675:int maskChecksum(long) -> maskChecksum
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$1:
# {"fileName":"Snappy.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$Snappy$State -> $SwitchMap$io$netty$handler$codec$compression$Snappy$State
    271:271:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State -> pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State:
# {"fileName":"Snappy.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State READING_PREAMBLE -> READING_PREAMBLE
    pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State READING_TAG -> READING_TAG
    pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State READING_LITERAL -> READING_LITERAL
    pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State READING_COPY -> READING_COPY
    pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State[] $VALUES -> $VALUES
    45:45:pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State[] values() -> values
    45:45:pro.gravit.repackage.io.netty.handler.codec.compression.Snappy$State valueOf(java.lang.String) -> valueOf
    45:45:void <init>(java.lang.String,int) -> <init>
    45:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder:
# {"fileName":"SnappyFrameDecoder.java","id":"sourceFile"}
    int SNAPPY_IDENTIFIER_LEN -> SNAPPY_IDENTIFIER_LEN
    int MAX_UNCOMPRESSED_DATA_SIZE -> MAX_UNCOMPRESSED_DATA_SIZE
    int MAX_DECOMPRESSED_DATA_SIZE -> MAX_DECOMPRESSED_DATA_SIZE
    int MAX_COMPRESSED_CHUNK_SIZE -> MAX_COMPRESSED_CHUNK_SIZE
    pro.gravit.repackage.io.netty.handler.codec.compression.Snappy snappy -> snappy
    boolean validateChecksums -> validateChecksums
    boolean started -> started
    boolean corrupted -> corrupted
    int numBytesToSkip -> numBytesToSkip
    68:69:void <init>() -> <init>
    55:82:void <init>(boolean) -> <init>
    86:231:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    234:238:void checkByte(byte,byte) -> checkByte
    247:256:pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType mapChunkType(byte) -> mapChunkType
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$1:
# {"fileName":"SnappyFrameDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$SnappyFrameDecoder$ChunkType -> $SwitchMap$io$netty$handler$codec$compression$SnappyFrameDecoder$ChunkType
    114:114:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType -> pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType:
# {"fileName":"SnappyFrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType STREAM_IDENTIFIER -> STREAM_IDENTIFIER
    pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType COMPRESSED_DATA -> COMPRESSED_DATA
    pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType UNCOMPRESSED_DATA -> UNCOMPRESSED_DATA
    pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType RESERVED_UNSKIPPABLE -> RESERVED_UNSKIPPABLE
    pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType RESERVED_SKIPPABLE -> RESERVED_SKIPPABLE
    pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] $VALUES -> $VALUES
    39:39:pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType[] values() -> values
    39:39:pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameDecoder$ChunkType valueOf(java.lang.String) -> valueOf
    39:39:void <init>(java.lang.String,int) -> <init>
    39:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFrameEncoder:
# {"fileName":"SnappyFrameEncoder.java","id":"sourceFile"}
    int MIN_COMPRESSIBLE_LENGTH -> MIN_COMPRESSIBLE_LENGTH
    byte[] STREAM_START -> STREAM_START
    pro.gravit.repackage.io.netty.handler.codec.compression.Snappy snappy -> snappy
    boolean started -> started
    29:45:void <init>() -> <init>
    50:87:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    90:94:void writeUnencodedChunk(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeUnencodedChunk
    97:102:void setChunkLength(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> setChunkLength
    111:112:void writeChunkLength(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeChunkLength
    121:122:void calculateAndWriteChecksum(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> calculateAndWriteChecksum
    29:29:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    41:41:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFramedDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFramedDecoder:
# {"fileName":"SnappyFramedDecoder.java","id":"sourceFile"}
    23:23:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFramedEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.SnappyFramedEncoder:
# {"fileName":"SnappyFramedEncoder.java","id":"sourceFile"}
    23:23:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.StandardCompressionOptions -> pro.gravit.repackage.io.netty.handler.codec.compression.StandardCompressionOptions:
# {"fileName":"StandardCompressionOptions.java","id":"sourceFile"}
    26:28:void <init>() -> <init>
    35:35:pro.gravit.repackage.io.netty.handler.codec.compression.BrotliOptions brotli() -> brotli
    45:45:pro.gravit.repackage.io.netty.handler.codec.compression.BrotliOptions brotli(com.aayushatharva.brotli4j.encoder.Encoder$Parameters) -> brotli
    54:54:pro.gravit.repackage.io.netty.handler.codec.compression.ZstdOptions zstd() -> zstd
    68:68:pro.gravit.repackage.io.netty.handler.codec.compression.ZstdOptions zstd(int,int,int) -> zstd
    76:76:pro.gravit.repackage.io.netty.handler.codec.compression.GzipOptions gzip() -> gzip
    97:97:pro.gravit.repackage.io.netty.handler.codec.compression.GzipOptions gzip(int,int,int) -> gzip
    105:105:pro.gravit.repackage.io.netty.handler.codec.compression.DeflateOptions deflate() -> deflate
    126:126:pro.gravit.repackage.io.netty.handler.codec.compression.DeflateOptions deflate(int,int,int) -> deflate
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZlibCodecFactory -> pro.gravit.repackage.io.netty.handler.codec.compression.ZlibCodecFactory:
# {"fileName":"ZlibCodecFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_JDK_WINDOW_SIZE -> DEFAULT_JDK_WINDOW_SIZE
    int DEFAULT_JDK_MEM_LEVEL -> DEFAULT_JDK_MEM_LEVEL
    boolean noJdkZlibDecoder -> noJdkZlibDecoder
    boolean noJdkZlibEncoder -> noJdkZlibEncoder
    boolean supportsWindowSizeAndMemLevel -> supportsWindowSizeAndMemLevel
    51:51:boolean isSupportingWindowSizeAndMemLevel() -> isSupportingWindowSizeAndMemLevel
    55:58:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int) -> newZlibEncoder
    63:66:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper) -> newZlibEncoder
    71:74:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,int) -> newZlibEncoder
    79:83:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper,int,int,int) -> newZlibEncoder
    88:91:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(byte[]) -> newZlibEncoder
    96:99:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int,byte[]) -> newZlibEncoder
    104:108:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(int,int,int,byte[]) -> newZlibEncoder
    113:116:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder() -> newZlibDecoder
    121:124:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper) -> newZlibDecoder
    129:132:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(byte[]) -> newZlibDecoder
    136:138:void <init>() -> <init>
    27:45:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZlibDecoder -> pro.gravit.repackage.io.netty.handler.codec.compression.ZlibDecoder:
# {"fileName":"ZlibDecoder.java","id":"sourceFile"}
    int maxAllocation -> maxAllocation
    39:40:void <init>() -> <init>
    48:50:void <init>(int) -> <init>
    boolean isClosed() -> isClosed
    63:83:pro.gravit.repackage.io.netty.buffer.ByteBuf prepareDecompressBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> prepareDecompressBuffer
    93:93:void decompressionBufferExhausted(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decompressionBufferExhausted
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.ZlibEncoder:
# {"fileName":"ZlibEncoder.java","id":"sourceFile"}
    29:30:void <init>() -> <init>
    boolean isClosed() -> isClosed
    pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZlibUtil -> pro.gravit.repackage.io.netty.handler.codec.compression.ZlibUtil:
# {"fileName":"ZlibUtil.java","id":"sourceFile"}
    28:28:void fail(com.jcraft.jzlib.Inflater,java.lang.String,int) -> fail
    32:32:void fail(com.jcraft.jzlib.Deflater,java.lang.String,int) -> fail
    36:36:pro.gravit.repackage.io.netty.handler.codec.compression.DecompressionException inflaterException(com.jcraft.jzlib.Inflater,java.lang.String,int) -> inflaterException
    40:40:pro.gravit.repackage.io.netty.handler.codec.compression.CompressionException deflaterException(com.jcraft.jzlib.Deflater,java.lang.String,int) -> deflaterException
    45:61:com.jcraft.jzlib.JZlib$WrapperType convertWrapperType(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper) -> convertWrapperType
    66:80:int wrapperOverhead(pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper) -> wrapperOverhead
    83:84:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZlibUtil$1 -> pro.gravit.repackage.io.netty.handler.codec.compression.ZlibUtil$1:
# {"fileName":"ZlibUtil.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    45:45:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper -> pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper:
# {"fileName":"ZlibWrapper.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper ZLIB -> ZLIB
    pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper GZIP -> GZIP
    pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper NONE -> NONE
    pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE -> ZLIB_OR_NONE
    pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper[] $VALUES -> $VALUES
    22:22:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper[] values() -> values
    22:22:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:39:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.Zstd -> pro.gravit.repackage.io.netty.handler.codec.compression.Zstd:
# {"fileName":"Zstd.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.Throwable cause -> cause
    52:52:boolean isAvailable() -> isAvailable
    61:64:void ensureAvailability() -> ensureAvailability
    70:70:java.lang.Throwable cause() -> cause
    73:74:void <init>() -> <init>
    25:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZstdConstants -> pro.gravit.repackage.io.netty.handler.codec.compression.ZstdConstants:
# {"fileName":"ZstdConstants.java","id":"sourceFile"}
    int DEFAULT_COMPRESSION_LEVEL -> DEFAULT_COMPRESSION_LEVEL
    int MAX_COMPRESSION_LEVEL -> MAX_COMPRESSION_LEVEL
    int MAX_BLOCK_SIZE -> MAX_BLOCK_SIZE
    int DEFAULT_BLOCK_SIZE -> DEFAULT_BLOCK_SIZE
    39:39:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZstdEncoder -> pro.gravit.repackage.io.netty.handler.codec.compression.ZstdEncoder:
# {"fileName":"ZstdEncoder.java","id":"sourceFile"}
    int blockSize -> blockSize
    int compressionLevel -> compressionLevel
    int maxEncodeSize -> maxEncodeSize
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    51:52:void <init>() -> <init>
    60:61:void <init>(int) -> <init>
    71:72:void <init>(int,int) -> <init>
    83:87:void <init>(int,int,int) -> <init>
    91:115:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> allocateBuffer
    120:135:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    138:159:void flushBufferedData(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> flushBufferedData
    163:169:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    173:175:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    179:184:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    36:36:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    36:36:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateBuffer(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> allocateBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.compression.ZstdOptions -> pro.gravit.repackage.io.netty.handler.codec.compression.ZstdOptions:
# {"fileName":"ZstdOptions.java","id":"sourceFile"}
    int blockSize -> blockSize
    int compressionLevel -> compressionLevel
    int maxEncodeSize -> maxEncodeSize
    pro.gravit.repackage.io.netty.handler.codec.compression.ZstdOptions DEFAULT -> DEFAULT
    52:60:void <init>(int,int,int) -> <init>
    63:63:int compressionLevel() -> compressionLevel
    67:67:int blockSize() -> blockSize
    71:71:int maxEncodeSize() -> maxEncodeSize
    40:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ClientCookieEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.ClientCookieEncoder:
# {"fileName":"ClientCookieEncoder.java","id":"sourceFile"}
    49:49:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    60:60:java.lang.String encode(pro.gravit.repackage.io.netty.handler.codec.http.Cookie) -> encode
    71:71:java.lang.String encode(pro.gravit.repackage.io.netty.handler.codec.http.Cookie[]) -> encode
    82:82:java.lang.String encode(java.lang.Iterable) -> encode
    85:87:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders -> pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders:
# {"fileName":"CombinedHttpHeaders.java","id":"sourceFile"}
    41:43:void <init>(boolean) -> <init>
    47:47:boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean) -> containsValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl -> pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl:
# {"fileName":"CombinedHttpHeaders.java","id":"sourceFile"}
    int VALUE_LENGTH_ESTIMATE -> VALUE_LENGTH_ESTIMATE
    pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper objectEscaper -> objectEscaper
    pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper charSequenceEscaper -> charSequenceEscaper
    60:75:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper objectEscaper() -> objectEscaper
    79:87:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper charSequenceEscaper() -> charSequenceEscaper
    94:95:void <init>(pro.gravit.repackage.io.netty.util.HashingStrategy,pro.gravit.repackage.io.netty.handler.codec.ValueConverter,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator) -> <init>
    99:107:java.util.Iterator valueIterator(java.lang.CharSequence) -> valueIterator
    112:119:java.util.List getAll(java.lang.CharSequence) -> getAll
    125:143:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(pro.gravit.repackage.io.netty.handler.codec.Headers) -> add
    148:152:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl set(pro.gravit.repackage.io.netty.handler.codec.Headers) -> set
    157:163:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl setAll(pro.gravit.repackage.io.netty.handler.codec.Headers) -> setAll
    168:168:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(java.lang.CharSequence,java.lang.CharSequence) -> add
    173:173:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(java.lang.CharSequence,java.lang.CharSequence[]) -> add
    178:178:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl add(java.lang.CharSequence,java.lang.Iterable) -> add
    183:183:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addObject(java.lang.CharSequence,java.lang.Object) -> addObject
    188:188:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addObject(java.lang.CharSequence,java.lang.Iterable) -> addObject
    193:193:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addObject(java.lang.CharSequence,java.lang.Object[]) -> addObject
    198:199:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl set(java.lang.CharSequence,java.lang.CharSequence[]) -> set
    204:205:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl set(java.lang.CharSequence,java.lang.Iterable) -> set
    210:211:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl setObject(java.lang.CharSequence,java.lang.Object) -> setObject
    216:217:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl setObject(java.lang.CharSequence,java.lang.Object[]) -> setObject
    222:223:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl setObject(java.lang.CharSequence,java.lang.Iterable) -> setObject
    227:227:boolean cannotBeCombined(java.lang.CharSequence) -> cannotBeCombined
    231:237:pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl addEscapedValue(java.lang.CharSequence,java.lang.CharSequence) -> addEscapedValue
    241:249:java.lang.CharSequence commaSeparate(java.lang.CharSequence,pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper,java.lang.Object[]) -> commaSeparate
    255:266:java.lang.CharSequence commaSeparate(java.lang.CharSequence,pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper,java.lang.Iterable) -> commaSeparate
    270:273:java.lang.CharSequence commaSeparateEscapedValues(java.lang.CharSequence,java.lang.CharSequence) -> commaSeparateEscapedValues
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers setAll(pro.gravit.repackage.io.netty.handler.codec.Headers) -> setAll
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers set(pro.gravit.repackage.io.netty.handler.codec.Headers) -> set
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object[]) -> setObject
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Iterable) -> setObject
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers setObject(java.lang.Object,java.lang.Object) -> setObject
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object[]) -> set
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Iterable) -> set
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers add(pro.gravit.repackage.io.netty.handler.codec.Headers) -> add
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object[]) -> addObject
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Iterable) -> addObject
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object) -> addObject
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object[]) -> add
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Iterable) -> add
    50:50:pro.gravit.repackage.io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object) -> add
    50:50:java.util.Iterator valueIterator(java.lang.Object) -> valueIterator
    50:50:java.util.List getAll(java.lang.Object) -> getAll
    50:50:pro.gravit.repackage.io.netty.handler.codec.ValueConverter access$000(pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$1 -> pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$1:
# {"fileName":"CombinedHttpHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl this$0 -> this$0
    61:61:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> <init>
    66:71:java.lang.CharSequence escape(java.lang.CharSequence,java.lang.Object) -> escape
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$2 -> pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$2:
# {"fileName":"CombinedHttpHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl this$0 -> this$0
    80:80:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl) -> <init>
    83:83:java.lang.CharSequence escape(java.lang.CharSequence,java.lang.CharSequence) -> escape
    80:80:java.lang.CharSequence escape(java.lang.CharSequence,java.lang.Object) -> escape
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper -> pro.gravit.repackage.io.netty.handler.codec.http.CombinedHttpHeaders$CombinedHttpHeadersImpl$CsvValueEscaper:
# {"fileName":"CombinedHttpHeaders.java","id":"sourceFile"}
    java.lang.CharSequence escape(java.lang.CharSequence,java.lang.Object) -> escape
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ComposedLastHttpContent -> pro.gravit.repackage.io.netty.handler.codec.http.ComposedLastHttpContent:
# {"fileName":"ComposedLastHttpContent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    pro.gravit.repackage.io.netty.handler.codec.DecoderResult result -> result
    27:29:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    32:34:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,pro.gravit.repackage.io.netty.handler.codec.DecoderResult) -> <init>
    38:38:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    43:45:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    50:50:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    55:55:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    60:62:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    67:67:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    72:72:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    77:77:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    82:82:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    87:87:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    92:92:pro.gravit.repackage.io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    97:97:pro.gravit.repackage.io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    102:103:void setDecoderResult(pro.gravit.repackage.io.netty.handler.codec.DecoderResult) -> setDecoderResult
    107:107:int refCnt() -> refCnt
    112:112:boolean release() -> release
    117:117:boolean release(int) -> release
    23:23:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    23:23:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    23:23:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    23:23:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    23:23:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    23:23:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    23:23:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    23:23:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    23:23:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    23:23:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    23:23:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    23:23:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    23:23:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    23:23:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    23:23:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    23:23:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    23:23:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    23:23:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    23:23:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    23:23:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.CompressionEncoderFactory -> pro.gravit.repackage.io.netty.handler.codec.http.CompressionEncoderFactory:
# {"fileName":"CompressionEncoderFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.MessageToByteEncoder createEncoder() -> createEncoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.Cookie -> pro.gravit.repackage.io.netty.handler.codec.http.Cookie:
# {"fileName":"Cookie.java","id":"sourceFile"}
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    java.lang.String getComment() -> getComment
    java.lang.String comment() -> comment
    void setComment(java.lang.String) -> setComment
    long getMaxAge() -> getMaxAge
    long maxAge() -> maxAge
    void setMaxAge(long) -> setMaxAge
    int getVersion() -> getVersion
    int version() -> version
    void setVersion(int) -> setVersion
    java.lang.String getCommentUrl() -> getCommentUrl
    java.lang.String commentUrl() -> commentUrl
    void setCommentUrl(java.lang.String) -> setCommentUrl
    boolean isDiscard() -> isDiscard
    void setDiscard(boolean) -> setDiscard
    java.util.Set getPorts() -> getPorts
    java.util.Set ports() -> ports
    void setPorts(int[]) -> setPorts
    void setPorts(java.lang.Iterable) -> setPorts
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.CookieDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.CookieDecoder:
# {"fileName":"CookieDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.handler.codec.http.CookieDecoder STRICT -> STRICT
    pro.gravit.repackage.io.netty.handler.codec.http.CookieDecoder LAX -> LAX
    java.lang.String COMMENT -> COMMENT
    java.lang.String COMMENTURL -> COMMENTURL
    java.lang.String DISCARD -> DISCARD
    java.lang.String PORT -> PORT
    java.lang.String VERSION -> VERSION
    boolean strict -> strict
    72:72:java.util.Set decode(java.lang.String) -> decode
    76:76:java.util.Set decode(java.lang.String,boolean) -> decode
    85:198:java.util.Set doDecode(java.lang.String) -> doDecode
    203:322:void extractKeyValuePairs(java.lang.String,java.util.List,java.util.List) -> extractKeyValuePairs
    53:326:void <init>(boolean) -> <init>
    329:367:pro.gravit.repackage.io.netty.handler.codec.http.DefaultCookie initCookie(java.lang.String,java.lang.String) -> initCookie
    55:57:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.CookieUtil -> pro.gravit.repackage.io.netty.handler.codec.http.CookieUtil:
# {"fileName":"CookieUtil.java","id":"sourceFile"}
    java.util.BitSet VALID_COOKIE_VALUE_OCTETS -> VALID_COOKIE_VALUE_OCTETS
    java.util.BitSet VALID_COOKIE_NAME_OCTETS -> VALID_COOKIE_NAME_OCTETS
    32:41:java.util.BitSet validCookieValueOctets() -> validCookieValueOctets
    50:67:java.util.BitSet validCookieNameOctets(java.util.BitSet) -> validCookieNameOctets
    71:71:int firstInvalidCookieNameOctet(java.lang.CharSequence) -> firstInvalidCookieNameOctet
    75:75:int firstInvalidCookieValueOctet(java.lang.CharSequence) -> firstInvalidCookieValueOctet
    79:85:int firstInvalidOctet(java.lang.CharSequence,java.util.BitSet) -> firstInvalidOctet
    89:98:java.lang.CharSequence unwrapValue(java.lang.CharSequence) -> unwrapValue
    101:103:void <init>() -> <init>
    26:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultCookie -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultCookie:
# {"fileName":"DefaultCookie.java","id":"sourceFile"}
    java.lang.String comment -> comment
    java.lang.String commentUrl -> commentUrl
    boolean discard -> discard
    java.util.Set ports -> ports
    java.util.Set unmodifiablePorts -> unmodifiablePorts
    int version -> version
    35:44:void <init>(java.lang.String,java.lang.String) -> <init>
    49:49:java.lang.String getName() -> getName
    55:55:java.lang.String getValue() -> getValue
    61:61:java.lang.String getDomain() -> getDomain
    67:67:java.lang.String getPath() -> getPath
    73:73:java.lang.String getComment() -> getComment
    79:79:java.lang.String comment() -> comment
    85:86:void setComment(java.lang.String) -> setComment
    91:91:java.lang.String getCommentUrl() -> getCommentUrl
    97:97:java.lang.String commentUrl() -> commentUrl
    103:104:void setCommentUrl(java.lang.String) -> setCommentUrl
    109:109:boolean isDiscard() -> isDiscard
    115:116:void setDiscard(boolean) -> setDiscard
    121:121:java.util.Set getPorts() -> getPorts
    127:130:java.util.Set ports() -> ports
    136:152:void setPorts(int[]) -> setPorts
    157:170:void setPorts(java.lang.Iterable) -> setPorts
    175:175:long getMaxAge() -> getMaxAge
    181:181:int getVersion() -> getVersion
    187:187:int version() -> version
    193:194:void setVersion(int) -> setVersion
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultFullHttpRequest -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultFullHttpRequest:
# {"fileName":"DefaultFullHttpRequest.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf content -> content
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeader -> trailingHeader
    int hash -> hash
    37:38:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod,java.lang.String) -> <init>
    41:42:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod,java.lang.String,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    45:46:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod,java.lang.String,boolean) -> <init>
    50:53:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod,java.lang.String,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> <init>
    57:60:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod,java.lang.String,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    64:64:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    69:69:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    74:74:int refCnt() -> refCnt
    79:80:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retain() -> retain
    85:86:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    91:92:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest touch() -> touch
    97:98:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> touch
    103:103:boolean release() -> release
    108:108:boolean release(int) -> release
    113:114:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    119:120:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    125:126:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    131:131:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest copy() -> copy
    136:136:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    141:141:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retainedDuplicate() -> retainedDuplicate
    146:149:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    154:170:int hashCode() -> hashCode
    175:183:boolean equals(java.lang.Object) -> equals
    188:188:java.lang.String toString() -> toString
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultFullHttpResponse -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultFullHttpResponse:
# {"fileName":"DefaultFullHttpResponse.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf content -> content
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    int hash -> hash
    39:40:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> <init>
    43:44:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    47:48:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,boolean) -> <init>
    52:53:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,boolean,boolean) -> <init>
    57:58:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> <init>
    62:66:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean,boolean) -> <init>
    70:73:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    77:77:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    82:82:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    87:87:int refCnt() -> refCnt
    92:93:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    98:99:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    104:105:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse touch() -> touch
    110:111:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> touch
    116:116:boolean release() -> release
    121:121:boolean release(int) -> release
    126:127:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    132:133:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse setStatus(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    138:138:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse copy() -> copy
    143:143:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse duplicate() -> duplicate
    148:148:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    153:156:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    161:177:int hashCode() -> hashCode
    182:190:boolean equals(java.lang.Object) -> equals
    195:195:java.lang.String toString() -> toString
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse setStatus(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    28:28:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    28:28:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    28:28:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    28:28:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    28:28:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    28:28:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpContent -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpContent:
# {"fileName":"DefaultHttpContent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf content -> content
    32:34:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    38:38:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    43:43:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    48:48:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    53:53:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    58:58:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    63:63:int refCnt() -> refCnt
    68:69:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    74:75:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    80:81:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    86:87:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    92:92:boolean release() -> release
    97:97:boolean release(int) -> release
    102:103:java.lang.String toString() -> toString
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders:
# {"fileName":"DefaultHttpHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator HttpNameValidator -> HttpNameValidator
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders headers -> headers
    61:62:void <init>() -> <init>
    77:78:void <init>(boolean) -> <init>
    81:87:void <init>(boolean,pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator) -> <init>
    89:91:void <init>(pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders) -> <init>
    95:99:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> add
    105:109:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> set
    115:116:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    121:122:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> add
    127:128:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    133:134:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> add
    139:140:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders addInt(java.lang.CharSequence,int) -> addInt
    145:146:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders addShort(java.lang.CharSequence,short) -> addShort
    151:152:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    157:158:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> remove
    163:164:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    169:170:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object) -> set
    175:176:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    181:182:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> set
    187:188:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int) -> setInt
    193:194:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence,short) -> setShort
    199:200:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders clear() -> clear
    205:205:java.lang.String get(java.lang.String) -> get
    210:210:java.lang.String get(java.lang.CharSequence) -> get
    215:215:java.lang.Integer getInt(java.lang.CharSequence) -> getInt
    220:220:int getInt(java.lang.CharSequence,int) -> getInt
    225:225:java.lang.Short getShort(java.lang.CharSequence) -> getShort
    230:230:short getShort(java.lang.CharSequence,short) -> getShort
    235:235:java.lang.Long getTimeMillis(java.lang.CharSequence) -> getTimeMillis
    240:240:long getTimeMillis(java.lang.CharSequence,long) -> getTimeMillis
    245:245:java.util.List getAll(java.lang.String) -> getAll
    250:250:java.util.List getAll(java.lang.CharSequence) -> getAll
    255:263:java.util.List entries() -> entries
    269:269:java.util.Iterator iterator() -> iterator
    274:274:java.util.Iterator iteratorCharSequence() -> iteratorCharSequence
    279:280:java.util.Iterator valueStringIterator(java.lang.CharSequence) -> valueStringIterator
    300:300:java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence) -> valueCharSequenceIterator
    305:305:boolean contains(java.lang.String) -> contains
    310:310:boolean contains(java.lang.CharSequence) -> contains
    315:315:boolean isEmpty() -> isEmpty
    320:320:int size() -> size
    325:325:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    330:330:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    335:335:java.util.Set names() -> names
    340:341:boolean equals(java.lang.Object) -> equals
    346:346:int hashCode() -> hashCode
    351:351:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders copy() -> copy
    355:355:pro.gravit.repackage.io.netty.handler.codec.ValueConverter valueConverter() -> valueConverter
    360:360:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator(boolean) -> valueValidator
    366:366:pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator(boolean) -> nameValidator
    43:43:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$1 -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$1:
# {"fileName":"DefaultHttpHeaders.java","id":"sourceFile"}
    43:43:void <init>() -> <init>
    46:55:void validateName(java.lang.CharSequence) -> validateName
    43:43:void validateName(java.lang.Object) -> validateName
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$2 -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$2:
# {"fileName":"DefaultHttpHeaders.java","id":"sourceFile"}
    java.util.Iterator val$itr -> val$itr
    pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders this$0 -> this$0
    280:280:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders,java.util.Iterator) -> <init>
    283:283:boolean hasNext() -> hasNext
    288:288:java.lang.String next() -> next
    293:294:void remove() -> remove
    280:280:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter:
# {"fileName":"DefaultHttpHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter INSTANCE -> INSTANCE
    369:369:void <init>() -> <init>
    374:383:java.lang.CharSequence convertObject(java.lang.Object) -> convertObject
    369:369:java.lang.Object convertObject(java.lang.Object) -> convertObject
    370:370:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueValidator -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueValidator:
# {"fileName":"DefaultHttpHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueValidator INSTANCE -> INSTANCE
    387:387:void <init>() -> <init>
    392:397:void validate(java.lang.CharSequence) -> validate
    387:387:void validate(java.lang.Object) -> validate
    388:388:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpMessage -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpMessage:
# {"fileName":"DefaultHttpMessage.java","id":"sourceFile"}
    int HASH_CODE_PRIME -> HASH_CODE_PRIME
    pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion version -> version
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders headers -> headers
    34:35:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> <init>
    41:44:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,boolean,boolean) -> <init>
    49:52:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    56:56:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders headers() -> headers
    62:62:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    67:67:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    72:76:int hashCode() -> hashCode
    81:89:boolean equals(java.lang.Object) -> equals
    94:95:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpObject -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpObject:
# {"fileName":"DefaultHttpObject.java","id":"sourceFile"}
    int HASH_CODE_PRIME -> HASH_CODE_PRIME
    pro.gravit.repackage.io.netty.handler.codec.DecoderResult decoderResult -> decoderResult
    24:28:void <init>() -> <init>
    32:32:pro.gravit.repackage.io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    38:38:pro.gravit.repackage.io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    43:44:void setDecoderResult(pro.gravit.repackage.io.netty.handler.codec.DecoderResult) -> setDecoderResult
    48:50:int hashCode() -> hashCode
    55:61:boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpRequest -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpRequest:
# {"fileName":"DefaultHttpRequest.java","id":"sourceFile"}
    int HASH_CODE_PRIME -> HASH_CODE_PRIME
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod method -> method
    java.lang.String uri -> uri
    38:39:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod,java.lang.String) -> <init>
    50:53:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod,java.lang.String,boolean) -> <init>
    64:67:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    72:72:pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    77:77:pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod method() -> method
    83:83:java.lang.String getUri() -> getUri
    88:88:java.lang.String uri() -> uri
    93:94:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    99:100:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    105:106:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    111:115:int hashCode() -> hashCode
    120:128:boolean equals(java.lang.Object) -> equals
    133:133:java.lang.String toString() -> toString
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpResponse -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultHttpResponse:
# {"fileName":"DefaultHttpResponse.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus status -> status
    36:37:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> <init>
    47:48:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,boolean) -> <init>
    64:66:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,boolean,boolean) -> <init>
    76:78:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    83:83:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    88:88:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus status() -> status
    93:94:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse setStatus(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    99:100:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    105:105:java.lang.String toString() -> toString
    110:113:int hashCode() -> hashCode
    118:124:boolean equals(java.lang.Object) -> equals
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultLastHttpContent -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultLastHttpContent:
# {"fileName":"DefaultLastHttpContent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    boolean validateHeaders -> validateHeaders
    35:36:void <init>() -> <init>
    39:40:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    43:46:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> <init>
    49:52:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    56:56:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    61:61:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    66:66:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    71:73:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    78:79:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    84:85:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    90:91:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    96:97:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    102:102:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    107:113:java.lang.String toString() -> toString
    117:123:void appendHeaders(java.lang.StringBuilder) -> appendHeaders
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    30:30:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    30:30:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders:
# {"fileName":"DefaultLastHttpContent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator TrailerNameValidator -> TrailerNameValidator
    140:141:void <init>(boolean) -> <init>
    126:126:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders$1 -> pro.gravit.repackage.io.netty.handler.codec.http.DefaultLastHttpContent$TrailingHttpHeaders$1:
# {"fileName":"DefaultLastHttpContent.java","id":"sourceFile"}
    126:126:void <init>() -> <init>
    129:135:void validateName(java.lang.CharSequence) -> validateName
    126:126:void validateName(java.lang.Object) -> validateName
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.EmptyHttpHeaders -> pro.gravit.repackage.io.netty.handler.codec.http.EmptyHttpHeaders:
# {"fileName":"EmptyHttpHeaders.java","id":"sourceFile"}
    java.util.Iterator EMPTY_CHARS_ITERATOR -> EMPTY_CHARS_ITERATOR
    pro.gravit.repackage.io.netty.handler.codec.http.EmptyHttpHeaders INSTANCE -> INSTANCE
    40:40:pro.gravit.repackage.io.netty.handler.codec.http.EmptyHttpHeaders instance() -> instance
    43:44:void <init>() -> <init>
    48:48:java.lang.String get(java.lang.String) -> get
    53:53:java.lang.Integer getInt(java.lang.CharSequence) -> getInt
    58:58:int getInt(java.lang.CharSequence,int) -> getInt
    63:63:java.lang.Short getShort(java.lang.CharSequence) -> getShort
    68:68:short getShort(java.lang.CharSequence,short) -> getShort
    73:73:java.lang.Long getTimeMillis(java.lang.CharSequence) -> getTimeMillis
    78:78:long getTimeMillis(java.lang.CharSequence,long) -> getTimeMillis
    83:83:java.util.List getAll(java.lang.String) -> getAll
    88:88:java.util.List entries() -> entries
    93:93:boolean contains(java.lang.String) -> contains
    98:98:boolean isEmpty() -> isEmpty
    103:103:int size() -> size
    108:108:java.util.Set names() -> names
    113:113:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    118:118:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    123:123:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders addInt(java.lang.CharSequence,int) -> addInt
    128:128:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders addShort(java.lang.CharSequence,short) -> addShort
    133:133:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    138:138:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    143:143:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int) -> setInt
    148:148:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence,short) -> setShort
    153:153:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    158:158:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders clear() -> clear
    163:163:java.util.Iterator iterator() -> iterator
    168:168:java.util.Iterator iteratorCharSequence() -> iteratorCharSequence
    27:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.EmptyHttpHeaders$InstanceInitializer -> pro.gravit.repackage.io.netty.handler.codec.http.EmptyHttpHeaders$InstanceInitializer:
# {"fileName":"EmptyHttpHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.EmptyHttpHeaders EMPTY_HEADERS -> EMPTY_HEADERS
    185:186:void <init>() -> <init>
    176:176:pro.gravit.repackage.io.netty.handler.codec.http.EmptyHttpHeaders access$000() -> access$000
    183:183:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage -> pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage:
# {"fileName":"FullHttpMessage.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest -> pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest:
# {"fileName":"FullHttpRequest.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse -> pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse:
# {"fileName":"FullHttpResponse.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse setStatus(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpChunkedInput -> pro.gravit.repackage.io.netty.handler.codec.http.HttpChunkedInput:
# {"fileName":"HttpChunkedInput.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.stream.ChunkedInput input -> input
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent lastHttpContent -> lastHttpContent
    boolean sentLastChunk -> sentLastChunk
    53:56:void <init>(pro.gravit.repackage.io.netty.handler.stream.ChunkedInput) -> <init>
    65:68:void <init>(pro.gravit.repackage.io.netty.handler.stream.ChunkedInput,pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent) -> <init>
    72:76:boolean isEndOfInput() -> isEndOfInput
    82:83:void close() -> close
    88:88:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    93:106:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    112:112:long length() -> length
    117:117:long progress() -> progress
    43:43:java.lang.Object readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    43:43:java.lang.Object readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec -> pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec:
# {"fileName":"HttpClientCodec.java","id":"sourceFile"}
    boolean DEFAULT_FAIL_ON_MISSING_RESPONSE -> DEFAULT_FAIL_ON_MISSING_RESPONSE
    boolean DEFAULT_PARSE_HTTP_AFTER_CONNECT_REQUEST -> DEFAULT_PARSE_HTTP_AFTER_CONNECT_REQUEST
    java.util.Queue queue -> queue
    boolean parseHttpAfterConnectRequest -> parseHttpAfterConnectRequest
    boolean done -> done
    java.util.concurrent.atomic.AtomicLong requestResponseCounter -> requestResponseCounter
    boolean failOnMissingResponse -> failOnMissingResponse
    73:75:void <init>() -> <init>
    81:82:void <init>(int,int,int) -> <init>
    89:90:void <init>(int,int,int,boolean) -> <init>
    98:100:void <init>(int,int,int,boolean,boolean) -> <init>
    58:111:void <init>(int,int,int,boolean,boolean,boolean) -> <init>
    119:121:void <init>(int,int,int,boolean,boolean,int) -> <init>
    129:131:void <init>(int,int,int,boolean,boolean,int,boolean) -> <init>
    140:143:void <init>(int,int,int,boolean,boolean,int,boolean,boolean) -> <init>
    58:157:void <init>(int,int,int,boolean,boolean,int,boolean,boolean,boolean) -> <init>
    164:165:void prepareUpgradeFrom(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> prepareUpgradeFrom
    173:175:void upgradeFrom(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> upgradeFrom
    178:179:void setSingleDecode(boolean) -> setSingleDecode
    182:182:boolean isSingleDecode() -> isSingleDecode
    52:52:java.util.Queue access$100(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec) -> access$100
    52:52:boolean access$200(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec) -> access$200
    52:52:boolean access$300(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec) -> access$300
    52:52:java.util.concurrent.atomic.AtomicLong access$400(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec) -> access$400
    52:52:boolean access$500(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec) -> access$500
    52:52:boolean access$302(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec,boolean) -> access$302
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec$1:
# {"fileName":"HttpClientCodec.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec$Decoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec$Decoder:
# {"fileName":"HttpClientCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec this$0 -> this$0
    216:218:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec,int,int,int,boolean) -> <init>
    221:224:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec,int,int,int,boolean,int,boolean,boolean) -> <init>
    229:247:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    250:258:void decrement(java.lang.Object) -> decrement
    267:323:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    329:339:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec$Encoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec$Encoder:
# {"fileName":"HttpClientCodec.java","id":"sourceFile"}
    boolean upgraded -> upgraded
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec this$0 -> this$0
    185:185:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec) -> <init>
    193:212:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    185:185:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec,pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler -> pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler:
# {"fileName":"HttpClientUpgradeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec sourceCodec -> sourceCodec
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec upgradeCodec -> upgradeCodec
    boolean upgradeRequested -> upgradeRequested
    boolean $assertionsDisabled -> $assertionsDisabled
    118:121:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec,pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec,int) -> <init>
    125:126:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    131:132:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    136:137:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    141:142:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    146:147:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    151:152:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    157:177:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    181:182:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    187:251:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpObject,java.util.List) -> decode
    254:255:void removeThisHandler(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> removeThisHandler
    262:276:void setUpgradeRequestHeaders(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> setUpgradeRequestHeaders
    39:39:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    39:39:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec -> pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$SourceCodec:
# {"fileName":"HttpClientUpgradeHandler.java","id":"sourceFile"}
    void prepareUpgradeFrom(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> prepareUpgradeFrom
    void upgradeFrom(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> upgradeFrom
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec -> pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeCodec:
# {"fileName":"HttpClientUpgradeHandler.java","id":"sourceFile"}
    java.lang.CharSequence protocol() -> protocol
    java.util.Collection setUpgradeHeaders(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> setUpgradeHeaders
    void upgradeTo(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> upgradeTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent -> pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent:
# {"fileName":"HttpClientUpgradeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_ISSUED -> UPGRADE_ISSUED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_SUCCESSFUL -> UPGRADE_SUCCESSFUL
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent UPGRADE_REJECTED -> UPGRADE_REJECTED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent[] $VALUES -> $VALUES
    44:44:pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent[] values() -> values
    44:44:pro.gravit.repackage.io.netty.handler.codec.http.HttpClientUpgradeHandler$UpgradeEvent valueOf(java.lang.String) -> valueOf
    44:44:void <init>(java.lang.String,int) -> <init>
    44:59:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpConstants -> pro.gravit.repackage.io.netty.handler.codec.http.HttpConstants:
# {"fileName":"HttpConstants.java","id":"sourceFile"}
    byte SP -> SP
    byte HT -> HT
    byte CR -> CR
    byte EQUALS -> EQUALS
    byte LF -> LF
    byte COLON -> COLON
    byte SEMICOLON -> SEMICOLON
    byte COMMA -> COMMA
    byte DOUBLE_QUOTE -> DOUBLE_QUOTE
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    char SP_CHAR -> SP_CHAR
    79:81:void <init>() -> <init>
    72:72:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContent -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContent:
# {"fileName":"HttpContent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor:
# {"fileName":"HttpContentCompressor.java","id":"sourceFile"}
    boolean supportsCompressionOptions -> supportsCompressionOptions
    pro.gravit.repackage.io.netty.handler.codec.compression.BrotliOptions brotliOptions -> brotliOptions
    pro.gravit.repackage.io.netty.handler.codec.compression.GzipOptions gzipOptions -> gzipOptions
    pro.gravit.repackage.io.netty.handler.codec.compression.DeflateOptions deflateOptions -> deflateOptions
    pro.gravit.repackage.io.netty.handler.codec.compression.ZstdOptions zstdOptions -> zstdOptions
    int compressionLevel -> compressionLevel
    int windowBits -> windowBits
    int memLevel -> memLevel
    int contentSizeThreshold -> contentSizeThreshold
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    java.util.Map factories -> factories
    67:68:void <init>() -> <init>
    81:82:void <init>(int) -> <init>
    105:106:void <init>(int,int,int) -> <init>
    132:143:void <init>(int,int,int,int) -> <init>
    153:154:void <init>(pro.gravit.repackage.io.netty.handler.codec.compression.CompressionOptions[]) -> <init>
    167:226:void <init>(int,pro.gravit.repackage.io.netty.handler.codec.compression.CompressionOptions[]) -> <init>
    230:231:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    235:285:pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse,java.lang.String) -> beginEncode
    292:345:java.lang.String determineEncoding(java.lang.String) -> determineEncoding
    351:388:pro.gravit.repackage.io.netty.handler.codec.compression.ZlibWrapper determineWrapper(java.lang.String) -> determineWrapper
    47:47:pro.gravit.repackage.io.netty.handler.codec.compression.GzipOptions access$400(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor) -> access$400
    47:47:pro.gravit.repackage.io.netty.handler.codec.compression.DeflateOptions access$500(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor) -> access$500
    47:47:pro.gravit.repackage.io.netty.handler.codec.compression.BrotliOptions access$600(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor) -> access$600
    47:47:pro.gravit.repackage.io.netty.handler.codec.compression.ZstdOptions access$700(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor) -> access$700
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$1:
# {"fileName":"HttpContentCompressor.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper -> $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper
    271:271:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$BrEncoderFactory -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$BrEncoderFactory:
# {"fileName":"HttpContentCompressor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor this$0 -> this$0
    423:423:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor) -> <init>
    427:427:pro.gravit.repackage.io.netty.handler.codec.MessageToByteEncoder createEncoder() -> createEncoder
    423:423:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor,pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$DeflateEncoderFactory -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$DeflateEncoderFactory:
# {"fileName":"HttpContentCompressor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor this$0 -> this$0
    409:409:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor) -> <init>
    413:415:pro.gravit.repackage.io.netty.handler.codec.MessageToByteEncoder createEncoder() -> createEncoder
    409:409:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor,pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$GzipEncoderFactory -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$GzipEncoderFactory:
# {"fileName":"HttpContentCompressor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor this$0 -> this$0
    395:395:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor) -> <init>
    399:401:pro.gravit.repackage.io.netty.handler.codec.MessageToByteEncoder createEncoder() -> createEncoder
    395:395:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor,pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$ZstdEncoderFactory -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$ZstdEncoderFactory:
# {"fileName":"HttpContentCompressor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor this$0 -> this$0
    435:435:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor) -> <init>
    439:440:pro.gravit.repackage.io.netty.handler.codec.MessageToByteEncoder createEncoder() -> createEncoder
    435:435:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor,pro.gravit.repackage.io.netty.handler.codec.http.HttpContentCompressor$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentDecoder:
# {"fileName":"HttpContentDecoder.java","id":"sourceFile"}
    java.lang.String IDENTITY -> IDENTITY
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel decoder -> decoder
    boolean continueResponse -> continueResponse
    boolean needRead -> needRead
    47:54:void <init>() -> <init>
    59:166:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpObject,java.util.List) -> decode
    169:186:void decodeContent(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent,java.util.List) -> decodeContent
    190:200:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel newContentDecoder(java.lang.String) -> newContentDecoder
    223:223:java.lang.String getTargetContentEncoding(java.lang.String) -> getTargetContentEncoding
    228:230:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    234:236:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    240:242:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    245:250:void cleanup() -> cleanup
    254:260:void cleanupSafely(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> cleanupSafely
    264:266:void decode(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    269:273:void finishDecode(java.util.List) -> finishDecode
    277:287:void fetchDecoderOutput(java.util.List) -> fetchDecoderOutput
    47:47:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    49:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentDecompressor -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentDecompressor:
# {"fileName":"HttpContentDecompressor.java","id":"sourceFile"}
    boolean strict -> strict
    43:44:void <init>() -> <init>
    52:54:void <init>(boolean) -> <init>
    58:76:pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel newContentDecoder(java.lang.String) -> newContentDecoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder:
# {"fileName":"HttpContentEncoder.java","id":"sourceFile"}
    java.lang.CharSequence ZERO_LENGTH_HEAD -> ZERO_LENGTH_HEAD
    java.lang.CharSequence ZERO_LENGTH_CONNECT -> ZERO_LENGTH_CONNECT
    java.util.Queue acceptEncodingQueue -> acceptEncodingQueue
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel encoder -> encoder
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State state -> state
    boolean $assertionsDisabled -> $assertionsDisabled
    56:69:void <init>() -> <init>
    73:73:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    79:102:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.util.List) -> decode
    106:224:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpObject,java.util.List) -> encode
    227:243:void encodeFullResponse(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse,pro.gravit.repackage.io.netty.handler.codec.http.HttpContent,java.util.List) -> encodeFullResponse
    246:246:boolean isPassthru(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,int,java.lang.CharSequence) -> isPassthru
    252:257:void ensureHeaders(pro.gravit.repackage.io.netty.handler.codec.http.HttpObject) -> ensureHeaders
    260:265:void ensureContent(pro.gravit.repackage.io.netty.handler.codec.http.HttpObject) -> ensureContent
    268:286:boolean encodeContent(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent,java.util.List) -> encodeContent
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse,java.lang.String) -> beginEncode
    307:309:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    313:315:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    318:323:void cleanup() -> cleanup
    327:333:void cleanupSafely(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> cleanupSafely
    337:339:void encode(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> encode
    342:346:void finishEncode(java.util.List) -> finishEncode
    350:360:void fetchEncoderOutput(java.util.List) -> fetchEncoderOutput
    56:56:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    56:56:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    56:65:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$1:
# {"fileName":"HttpContentEncoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$http$HttpContentEncoder$State -> $SwitchMap$io$netty$handler$codec$http$HttpContentEncoder$State
    107:107:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$Result -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$Result:
# {"fileName":"HttpContentEncoder.java","id":"sourceFile"}
    java.lang.String targetContentEncoding -> targetContentEncoding
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel contentEncoder -> contentEncoder
    366:369:void <init>(java.lang.String,pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel) -> <init>
    372:372:java.lang.String targetContentEncoding() -> targetContentEncoding
    376:376:pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel contentEncoder() -> contentEncoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State -> pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State:
# {"fileName":"HttpContentEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State PASS_THROUGH -> PASS_THROUGH
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_HEADERS -> AWAIT_HEADERS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State AWAIT_CONTENT -> AWAIT_CONTENT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State[] $VALUES -> $VALUES
    58:58:pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State[] values() -> values
    58:58:pro.gravit.repackage.io.netty.handler.codec.http.HttpContentEncoder$State valueOf(java.lang.String) -> valueOf
    58:58:void <init>(java.lang.String,int) -> <init>
    58:61:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpExpectationFailedEvent -> pro.gravit.repackage.io.netty.handler.codec.http.HttpExpectationFailedEvent:
# {"fileName":"HttpExpectationFailedEvent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpExpectationFailedEvent INSTANCE -> INSTANCE
    24:24:void <init>() -> <init>
    23:23:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat:
# {"fileName":"HttpHeaderDateFormat.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.text.SimpleDateFormat format1 -> format1
    java.text.SimpleDateFormat format2 -> format2
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    54:54:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat get() -> get
    42:64:void <init>() -> <init>
    68:75:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    39:39:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat$1) -> <init>
    45:45:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat$1:
# {"fileName":"HttpHeaderDateFormat.java","id":"sourceFile"}
    46:46:void <init>() -> <init>
    49:49:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat initialValue() -> initialValue
    46:46:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete1:
# {"fileName":"HttpHeaderDateFormat.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    86:88:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderDateFormat$HttpHeaderDateFormatObsolete2:
# {"fileName":"HttpHeaderDateFormat.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    100:102:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderNames -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderNames:
# {"fileName":"HttpHeaderNames.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT -> ACCEPT
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT_CHARSET -> ACCEPT_CHARSET
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT_ENCODING -> ACCEPT_ENCODING
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT_RANGES -> ACCEPT_RANGES
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT_PATCH -> ACCEPT_PATCH
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_CREDENTIALS -> ACCESS_CONTROL_ALLOW_CREDENTIALS
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_HEADERS -> ACCESS_CONTROL_ALLOW_HEADERS
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_METHODS -> ACCESS_CONTROL_ALLOW_METHODS
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_ORIGIN -> ACCESS_CONTROL_ALLOW_ORIGIN
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_ALLOW_PRIVATE_NETWORK -> ACCESS_CONTROL_ALLOW_PRIVATE_NETWORK
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_EXPOSE_HEADERS -> ACCESS_CONTROL_EXPOSE_HEADERS
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_MAX_AGE -> ACCESS_CONTROL_MAX_AGE
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_REQUEST_HEADERS -> ACCESS_CONTROL_REQUEST_HEADERS
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_REQUEST_METHOD -> ACCESS_CONTROL_REQUEST_METHOD
    pro.gravit.repackage.io.netty.util.AsciiString ACCESS_CONTROL_REQUEST_PRIVATE_NETWORK -> ACCESS_CONTROL_REQUEST_PRIVATE_NETWORK
    pro.gravit.repackage.io.netty.util.AsciiString AGE -> AGE
    pro.gravit.repackage.io.netty.util.AsciiString ALLOW -> ALLOW
    pro.gravit.repackage.io.netty.util.AsciiString AUTHORIZATION -> AUTHORIZATION
    pro.gravit.repackage.io.netty.util.AsciiString CACHE_CONTROL -> CACHE_CONTROL
    pro.gravit.repackage.io.netty.util.AsciiString CONNECTION -> CONNECTION
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_BASE -> CONTENT_BASE
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_ENCODING -> CONTENT_ENCODING
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_LENGTH -> CONTENT_LENGTH
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_LOCATION -> CONTENT_LOCATION
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_MD5 -> CONTENT_MD5
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_RANGE -> CONTENT_RANGE
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_SECURITY_POLICY -> CONTENT_SECURITY_POLICY
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_TYPE -> CONTENT_TYPE
    pro.gravit.repackage.io.netty.util.AsciiString COOKIE -> COOKIE
    pro.gravit.repackage.io.netty.util.AsciiString DATE -> DATE
    pro.gravit.repackage.io.netty.util.AsciiString DNT -> DNT
    pro.gravit.repackage.io.netty.util.AsciiString ETAG -> ETAG
    pro.gravit.repackage.io.netty.util.AsciiString EXPECT -> EXPECT
    pro.gravit.repackage.io.netty.util.AsciiString EXPIRES -> EXPIRES
    pro.gravit.repackage.io.netty.util.AsciiString FROM -> FROM
    pro.gravit.repackage.io.netty.util.AsciiString HOST -> HOST
    pro.gravit.repackage.io.netty.util.AsciiString IF_MATCH -> IF_MATCH
    pro.gravit.repackage.io.netty.util.AsciiString IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    pro.gravit.repackage.io.netty.util.AsciiString IF_NONE_MATCH -> IF_NONE_MATCH
    pro.gravit.repackage.io.netty.util.AsciiString IF_RANGE -> IF_RANGE
    pro.gravit.repackage.io.netty.util.AsciiString IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    pro.gravit.repackage.io.netty.util.AsciiString KEEP_ALIVE -> KEEP_ALIVE
    pro.gravit.repackage.io.netty.util.AsciiString LAST_MODIFIED -> LAST_MODIFIED
    pro.gravit.repackage.io.netty.util.AsciiString LOCATION -> LOCATION
    pro.gravit.repackage.io.netty.util.AsciiString MAX_FORWARDS -> MAX_FORWARDS
    pro.gravit.repackage.io.netty.util.AsciiString ORIGIN -> ORIGIN
    pro.gravit.repackage.io.netty.util.AsciiString PRAGMA -> PRAGMA
    pro.gravit.repackage.io.netty.util.AsciiString PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    pro.gravit.repackage.io.netty.util.AsciiString PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    pro.gravit.repackage.io.netty.util.AsciiString PROXY_CONNECTION -> PROXY_CONNECTION
    pro.gravit.repackage.io.netty.util.AsciiString RANGE -> RANGE
    pro.gravit.repackage.io.netty.util.AsciiString REFERER -> REFERER
    pro.gravit.repackage.io.netty.util.AsciiString RETRY_AFTER -> RETRY_AFTER
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_KEY1 -> SEC_WEBSOCKET_KEY1
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_KEY2 -> SEC_WEBSOCKET_KEY2
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_LOCATION -> SEC_WEBSOCKET_LOCATION
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_ORIGIN -> SEC_WEBSOCKET_ORIGIN
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL -> SEC_WEBSOCKET_PROTOCOL
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_VERSION -> SEC_WEBSOCKET_VERSION
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_KEY -> SEC_WEBSOCKET_KEY
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_ACCEPT -> SEC_WEBSOCKET_ACCEPT
    pro.gravit.repackage.io.netty.util.AsciiString SEC_WEBSOCKET_EXTENSIONS -> SEC_WEBSOCKET_EXTENSIONS
    pro.gravit.repackage.io.netty.util.AsciiString SERVER -> SERVER
    pro.gravit.repackage.io.netty.util.AsciiString SET_COOKIE -> SET_COOKIE
    pro.gravit.repackage.io.netty.util.AsciiString SET_COOKIE2 -> SET_COOKIE2
    pro.gravit.repackage.io.netty.util.AsciiString TE -> TE
    pro.gravit.repackage.io.netty.util.AsciiString TRAILER -> TRAILER
    pro.gravit.repackage.io.netty.util.AsciiString TRANSFER_ENCODING -> TRANSFER_ENCODING
    pro.gravit.repackage.io.netty.util.AsciiString UPGRADE -> UPGRADE
    pro.gravit.repackage.io.netty.util.AsciiString UPGRADE_INSECURE_REQUESTS -> UPGRADE_INSECURE_REQUESTS
    pro.gravit.repackage.io.netty.util.AsciiString USER_AGENT -> USER_AGENT
    pro.gravit.repackage.io.netty.util.AsciiString VARY -> VARY
    pro.gravit.repackage.io.netty.util.AsciiString VIA -> VIA
    pro.gravit.repackage.io.netty.util.AsciiString WARNING -> WARNING
    pro.gravit.repackage.io.netty.util.AsciiString WEBSOCKET_LOCATION -> WEBSOCKET_LOCATION
    pro.gravit.repackage.io.netty.util.AsciiString WEBSOCKET_ORIGIN -> WEBSOCKET_ORIGIN
    pro.gravit.repackage.io.netty.util.AsciiString WEBSOCKET_PROTOCOL -> WEBSOCKET_PROTOCOL
    pro.gravit.repackage.io.netty.util.AsciiString WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    pro.gravit.repackage.io.netty.util.AsciiString X_FRAME_OPTIONS -> X_FRAME_OPTIONS
    pro.gravit.repackage.io.netty.util.AsciiString X_REQUESTED_WITH -> X_REQUESTED_WITH
    380:380:void <init>() -> <init>
    31:378:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil:
# {"fileName":"HttpHeaderValidationUtil.java","id":"sourceFile"}
    long TOKEN_CHARS_HIGH -> TOKEN_CHARS_HIGH
    long TOKEN_CHARS_LOW -> TOKEN_CHARS_LOW
    28:29:void <init>() -> <init>
    65:74:boolean isConnectionHeader(java.lang.CharSequence,boolean) -> isConnectionHeader
    92:96:boolean isTeNotTrailers(java.lang.CharSequence,java.lang.CharSequence) -> isTeNotTrailers
    107:114:int validateValidHeaderValue(java.lang.CharSequence) -> validateValidHeaderValue
    127:140:int verifyValidHeaderValueAsciiString(pro.gravit.repackage.io.netty.util.AsciiString) -> verifyValidHeaderValueAsciiString
    153:164:int verifyValidHeaderValueCharSequence(java.lang.CharSequence) -> verifyValidHeaderValueCharSequence
    181:184:int validateToken(java.lang.CharSequence) -> validateToken
    194:200:int validateAsciiStringToken(pro.gravit.repackage.io.netty.util.AsciiString) -> validateAsciiStringToken
    210:216:int validateCharSequenceToken(java.lang.CharSequence) -> validateCharSequenceToken
    248:254:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil$1:
# {"fileName":"HttpHeaderValidationUtil.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil$BitSet128 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil$BitSet128:
# {"fileName":"HttpHeaderValidationUtil.java","id":"sourceFile"}
    long high -> high
    long low -> low
    256:256:void <init>() -> <init>
    261:268:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil$BitSet128 range(char,char) -> range
    272:279:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil$BitSet128 bits(char[]) -> bits
    283:283:long high() -> high
    287:287:long low() -> low
    291:297:boolean contains(byte,long,long) -> contains
    256:256:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValidationUtil$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValues -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaderValues:
# {"fileName":"HttpHeaderValues.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString APPLICATION_JSON -> APPLICATION_JSON
    pro.gravit.repackage.io.netty.util.AsciiString APPLICATION_X_WWW_FORM_URLENCODED -> APPLICATION_X_WWW_FORM_URLENCODED
    pro.gravit.repackage.io.netty.util.AsciiString APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    pro.gravit.repackage.io.netty.util.AsciiString APPLICATION_XHTML -> APPLICATION_XHTML
    pro.gravit.repackage.io.netty.util.AsciiString APPLICATION_XML -> APPLICATION_XML
    pro.gravit.repackage.io.netty.util.AsciiString APPLICATION_ZSTD -> APPLICATION_ZSTD
    pro.gravit.repackage.io.netty.util.AsciiString ATTACHMENT -> ATTACHMENT
    pro.gravit.repackage.io.netty.util.AsciiString BASE64 -> BASE64
    pro.gravit.repackage.io.netty.util.AsciiString BINARY -> BINARY
    pro.gravit.repackage.io.netty.util.AsciiString BOUNDARY -> BOUNDARY
    pro.gravit.repackage.io.netty.util.AsciiString BYTES -> BYTES
    pro.gravit.repackage.io.netty.util.AsciiString CHARSET -> CHARSET
    pro.gravit.repackage.io.netty.util.AsciiString CHUNKED -> CHUNKED
    pro.gravit.repackage.io.netty.util.AsciiString CLOSE -> CLOSE
    pro.gravit.repackage.io.netty.util.AsciiString COMPRESS -> COMPRESS
    pro.gravit.repackage.io.netty.util.AsciiString CONTINUE -> CONTINUE
    pro.gravit.repackage.io.netty.util.AsciiString DEFLATE -> DEFLATE
    pro.gravit.repackage.io.netty.util.AsciiString X_DEFLATE -> X_DEFLATE
    pro.gravit.repackage.io.netty.util.AsciiString FILE -> FILE
    pro.gravit.repackage.io.netty.util.AsciiString FILENAME -> FILENAME
    pro.gravit.repackage.io.netty.util.AsciiString FORM_DATA -> FORM_DATA
    pro.gravit.repackage.io.netty.util.AsciiString GZIP -> GZIP
    pro.gravit.repackage.io.netty.util.AsciiString BR -> BR
    pro.gravit.repackage.io.netty.util.AsciiString ZSTD -> ZSTD
    pro.gravit.repackage.io.netty.util.AsciiString GZIP_DEFLATE -> GZIP_DEFLATE
    pro.gravit.repackage.io.netty.util.AsciiString X_GZIP -> X_GZIP
    pro.gravit.repackage.io.netty.util.AsciiString IDENTITY -> IDENTITY
    pro.gravit.repackage.io.netty.util.AsciiString KEEP_ALIVE -> KEEP_ALIVE
    pro.gravit.repackage.io.netty.util.AsciiString MAX_AGE -> MAX_AGE
    pro.gravit.repackage.io.netty.util.AsciiString MAX_STALE -> MAX_STALE
    pro.gravit.repackage.io.netty.util.AsciiString MIN_FRESH -> MIN_FRESH
    pro.gravit.repackage.io.netty.util.AsciiString MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    pro.gravit.repackage.io.netty.util.AsciiString MULTIPART_MIXED -> MULTIPART_MIXED
    pro.gravit.repackage.io.netty.util.AsciiString MUST_REVALIDATE -> MUST_REVALIDATE
    pro.gravit.repackage.io.netty.util.AsciiString NAME -> NAME
    pro.gravit.repackage.io.netty.util.AsciiString NO_CACHE -> NO_CACHE
    pro.gravit.repackage.io.netty.util.AsciiString NO_STORE -> NO_STORE
    pro.gravit.repackage.io.netty.util.AsciiString NO_TRANSFORM -> NO_TRANSFORM
    pro.gravit.repackage.io.netty.util.AsciiString NONE -> NONE
    pro.gravit.repackage.io.netty.util.AsciiString ZERO -> ZERO
    pro.gravit.repackage.io.netty.util.AsciiString ONLY_IF_CACHED -> ONLY_IF_CACHED
    pro.gravit.repackage.io.netty.util.AsciiString PRIVATE -> PRIVATE
    pro.gravit.repackage.io.netty.util.AsciiString PROXY_REVALIDATE -> PROXY_REVALIDATE
    pro.gravit.repackage.io.netty.util.AsciiString PUBLIC -> PUBLIC
    pro.gravit.repackage.io.netty.util.AsciiString QUOTED_PRINTABLE -> QUOTED_PRINTABLE
    pro.gravit.repackage.io.netty.util.AsciiString S_MAXAGE -> S_MAXAGE
    pro.gravit.repackage.io.netty.util.AsciiString TEXT_CSS -> TEXT_CSS
    pro.gravit.repackage.io.netty.util.AsciiString TEXT_HTML -> TEXT_HTML
    pro.gravit.repackage.io.netty.util.AsciiString TEXT_EVENT_STREAM -> TEXT_EVENT_STREAM
    pro.gravit.repackage.io.netty.util.AsciiString TEXT_PLAIN -> TEXT_PLAIN
    pro.gravit.repackage.io.netty.util.AsciiString TRAILERS -> TRAILERS
    pro.gravit.repackage.io.netty.util.AsciiString UPGRADE -> UPGRADE
    pro.gravit.repackage.io.netty.util.AsciiString WEBSOCKET -> WEBSOCKET
    pro.gravit.repackage.io.netty.util.AsciiString XML_HTTP_REQUEST -> XML_HTTP_REQUEST
    248:248:void <init>() -> <init>
    28:246:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders:
# {"fileName":"HttpHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders EMPTY_HEADERS -> EMPTY_HEADERS
    519:519:boolean isKeepAlive(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isKeepAlive
    545:546:void setKeepAlive(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,boolean) -> setKeepAlive
    553:553:java.lang.String getHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String) -> getHeader
    567:567:java.lang.String getHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> getHeader
    577:577:java.lang.String getHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.String) -> getHeader
    592:592:java.lang.String getHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.String) -> getHeader
    602:603:void setHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Object) -> setHeader
    617:618:void setHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Object) -> setHeader
    627:628:void setHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Iterable) -> setHeader
    648:649:void setHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Iterable) -> setHeader
    658:659:void addHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Object) -> addHeader
    672:673:void addHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Object) -> addHeader
    682:683:void removeHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String) -> removeHeader
    692:693:void removeHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> removeHeader
    702:703:void clearHeaders(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> clearHeaders
    712:712:int getIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String) -> getIntHeader
    728:732:int getIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> getIntHeader
    742:742:int getIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,int) -> getIntHeader
    757:757:int getIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,int) -> getIntHeader
    767:768:void setIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,int) -> setIntHeader
    778:779:void setIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,int) -> setIntHeader
    788:789:void setIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Iterable) -> setIntHeader
    799:800:void setIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Iterable) -> setIntHeader
    809:810:void addIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,int) -> addIntHeader
    819:820:void addIntHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,int) -> addIntHeader
    829:829:java.util.Date getDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String) -> getDateHeader
    845:853:java.util.Date getDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> getDateHeader
    863:863:java.util.Date getDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.util.Date) -> getDateHeader
    878:880:java.util.Date getDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date) -> getDateHeader
    890:891:void setDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.util.Date) -> setDateHeader
    903:908:void setDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date) -> setDateHeader
    917:918:void setDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.lang.Iterable) -> setDateHeader
    930:931:void setDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.lang.Iterable) -> setDateHeader
    940:941:void addDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String,java.util.Date) -> addDateHeader
    952:953:void addDateHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date) -> addDateHeader
    971:971:long getContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getContentLength
    988:988:long getContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,long) -> getContentLength
    996:997:void setContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,long) -> setContentLength
    1006:1006:java.lang.String getHost(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getHost
    1017:1017:java.lang.String getHost(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String) -> getHost
    1027:1028:void setHost(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.String) -> setHost
    1037:1038:void setHost(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence) -> setHost
    1050:1050:java.util.Date getDate(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getDate
    1062:1062:java.util.Date getDate(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.util.Date) -> getDate
    1072:1073:void setDate(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.util.Date) -> setDate
    1083:1083:boolean is100ContinueExpected(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> is100ContinueExpected
    1095:1096:void set100ContinueExpected(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> set100ContinueExpected
    1109:1110:void set100ContinueExpected(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,boolean) -> set100ContinueExpected
    1122:1122:boolean isTransferEncodingChunked(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isTransferEncodingChunked
    1130:1131:void removeTransferEncodingChunked(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> removeTransferEncodingChunked
    1138:1139:void setTransferEncodingChunked(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> setTransferEncodingChunked
    1146:1146:boolean isContentLengthSet(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentLengthSet
    1154:1154:boolean equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> equalsIgnoreCase
    1159:1164:void encodeAscii(java.lang.CharSequence,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeAscii
    1174:1174:java.lang.CharSequence newEntity(java.lang.String) -> newEntity
    1177:1177:void <init>() -> <init>
    java.lang.String get(java.lang.String) -> get
    1193:1193:java.lang.String get(java.lang.CharSequence) -> get
    1204:1208:java.lang.String get(java.lang.CharSequence,java.lang.String) -> get
    java.lang.Integer getInt(java.lang.CharSequence) -> getInt
    int getInt(java.lang.CharSequence,int) -> getInt
    java.lang.Short getShort(java.lang.CharSequence) -> getShort
    short getShort(java.lang.CharSequence,short) -> getShort
    java.lang.Long getTimeMillis(java.lang.CharSequence) -> getTimeMillis
    long getTimeMillis(java.lang.CharSequence,long) -> getTimeMillis
    java.util.List getAll(java.lang.String) -> getAll
    1288:1288:java.util.List getAll(java.lang.CharSequence) -> getAll
    java.util.List entries() -> entries
    boolean contains(java.lang.String) -> contains
    java.util.Iterator iterator() -> iterator
    java.util.Iterator iteratorCharSequence() -> iteratorCharSequence
    1323:1323:java.util.Iterator valueStringIterator(java.lang.CharSequence) -> valueStringIterator
    1332:1332:java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence) -> valueCharSequenceIterator
    1342:1342:boolean contains(java.lang.CharSequence) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.util.Set names() -> names
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    1381:1381:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object) -> add
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    1407:1407:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable) -> add
    1416:1420:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> add
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders addInt(java.lang.CharSequence,int) -> addInt
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders addShort(java.lang.CharSequence,short) -> addShort
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    1458:1458:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object) -> set
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    1486:1486:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable) -> set
    1495:1506:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> set
    1516:1525:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setAll(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> setAll
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int) -> setInt
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence,short) -> setShort
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    1556:1556:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence) -> remove
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders clear() -> clear
    1570:1584:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    1598:1604:boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean) -> containsValue
    1609:1650:boolean containsCommaSeparatedTrimmed(java.lang.CharSequence,java.lang.CharSequence,boolean) -> containsCommaSeparatedTrimmed
    1659:1659:java.lang.String getAsString(java.lang.CharSequence) -> getAsString
    1668:1668:java.util.List getAllAsString(java.lang.CharSequence) -> getAllAsString
    1675:1675:java.util.Iterator iteratorAsString() -> iteratorAsString
    1688:1688:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1693:1693:java.lang.String toString() -> toString
    1700:1700:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders copy() -> copy
    54:54:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders$Names -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders$Names:
# {"fileName":"HttpHeaders.java","id":"sourceFile"}
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String ACCEPT_PATCH -> ACCEPT_PATCH
    java.lang.String ACCESS_CONTROL_ALLOW_CREDENTIALS -> ACCESS_CONTROL_ALLOW_CREDENTIALS
    java.lang.String ACCESS_CONTROL_ALLOW_HEADERS -> ACCESS_CONTROL_ALLOW_HEADERS
    java.lang.String ACCESS_CONTROL_ALLOW_METHODS -> ACCESS_CONTROL_ALLOW_METHODS
    java.lang.String ACCESS_CONTROL_ALLOW_ORIGIN -> ACCESS_CONTROL_ALLOW_ORIGIN
    java.lang.String ACCESS_CONTROL_EXPOSE_HEADERS -> ACCESS_CONTROL_EXPOSE_HEADERS
    java.lang.String ACCESS_CONTROL_MAX_AGE -> ACCESS_CONTROL_MAX_AGE
    java.lang.String ACCESS_CONTROL_REQUEST_HEADERS -> ACCESS_CONTROL_REQUEST_HEADERS
    java.lang.String ACCESS_CONTROL_REQUEST_METHOD -> ACCESS_CONTROL_REQUEST_METHOD
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_BASE -> CONTENT_BASE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String COOKIE -> COOKIE
    java.lang.String DATE -> DATE
    java.lang.String ETAG -> ETAG
    java.lang.String EXPECT -> EXPECT
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String ORIGIN -> ORIGIN
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SEC_WEBSOCKET_KEY1 -> SEC_WEBSOCKET_KEY1
    java.lang.String SEC_WEBSOCKET_KEY2 -> SEC_WEBSOCKET_KEY2
    java.lang.String SEC_WEBSOCKET_LOCATION -> SEC_WEBSOCKET_LOCATION
    java.lang.String SEC_WEBSOCKET_ORIGIN -> SEC_WEBSOCKET_ORIGIN
    java.lang.String SEC_WEBSOCKET_PROTOCOL -> SEC_WEBSOCKET_PROTOCOL
    java.lang.String SEC_WEBSOCKET_VERSION -> SEC_WEBSOCKET_VERSION
    java.lang.String SEC_WEBSOCKET_KEY -> SEC_WEBSOCKET_KEY
    java.lang.String SEC_WEBSOCKET_ACCEPT -> SEC_WEBSOCKET_ACCEPT
    java.lang.String SERVER -> SERVER
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
    java.lang.String TE -> TE
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String WEBSOCKET_LOCATION -> WEBSOCKET_LOCATION
    java.lang.String WEBSOCKET_ORIGIN -> WEBSOCKET_ORIGIN
    java.lang.String WEBSOCKET_PROTOCOL -> WEBSOCKET_PROTOCOL
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    356:357:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders$Values -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders$Values:
# {"fileName":"HttpHeaders.java","id":"sourceFile"}
    java.lang.String APPLICATION_JSON -> APPLICATION_JSON
    java.lang.String APPLICATION_X_WWW_FORM_URLENCODED -> APPLICATION_X_WWW_FORM_URLENCODED
    java.lang.String BASE64 -> BASE64
    java.lang.String BINARY -> BINARY
    java.lang.String BOUNDARY -> BOUNDARY
    java.lang.String BYTES -> BYTES
    java.lang.String CHARSET -> CHARSET
    java.lang.String CHUNKED -> CHUNKED
    java.lang.String CLOSE -> CLOSE
    java.lang.String COMPRESS -> COMPRESS
    java.lang.String CONTINUE -> CONTINUE
    java.lang.String DEFLATE -> DEFLATE
    java.lang.String GZIP -> GZIP
    java.lang.String GZIP_DEFLATE -> GZIP_DEFLATE
    java.lang.String IDENTITY -> IDENTITY
    java.lang.String KEEP_ALIVE -> KEEP_ALIVE
    java.lang.String MAX_AGE -> MAX_AGE
    java.lang.String MAX_STALE -> MAX_STALE
    java.lang.String MIN_FRESH -> MIN_FRESH
    java.lang.String MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    java.lang.String MUST_REVALIDATE -> MUST_REVALIDATE
    java.lang.String NO_CACHE -> NO_CACHE
    java.lang.String NO_STORE -> NO_STORE
    java.lang.String NO_TRANSFORM -> NO_TRANSFORM
    java.lang.String NONE -> NONE
    java.lang.String ONLY_IF_CACHED -> ONLY_IF_CACHED
    java.lang.String PRIVATE -> PRIVATE
    java.lang.String PROXY_REVALIDATE -> PROXY_REVALIDATE
    java.lang.String PUBLIC -> PUBLIC
    java.lang.String QUOTED_PRINTABLE -> QUOTED_PRINTABLE
    java.lang.String S_MAXAGE -> S_MAXAGE
    java.lang.String TRAILERS -> TRAILERS
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String WEBSOCKET -> WEBSOCKET
    505:506:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpHeadersEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpHeadersEncoder:
# {"fileName":"HttpHeadersEncoder.java","id":"sourceFile"}
    int COLON_AND_SPACE_SHORT -> COLON_AND_SPACE_SHORT
    30:31:void <init>() -> <init>
    34:48:void encoderHeader(java.lang.CharSequence,java.lang.CharSequence,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encoderHeader
    51:56:void writeAscii(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,java.lang.CharSequence) -> writeAscii
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage -> pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage:
# {"fileName":"HttpMessage.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders headers() -> headers
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpMessageDecoderResult -> pro.gravit.repackage.io.netty.handler.codec.http.HttpMessageDecoderResult:
# {"fileName":"HttpMessageDecoderResult.java","id":"sourceFile"}
    int initialLineLength -> initialLineLength
    int headerSize -> headerSize
    33:36:void <init>(int,int) -> <init>
    42:42:int initialLineLength() -> initialLineLength
    49:49:int headerSize() -> headerSize
    56:56:int totalSize() -> totalSize
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpMessageUtil -> pro.gravit.repackage.io.netty.handler.codec.http.HttpMessageUtil:
# {"fileName":"HttpMessageUtil.java","id":"sourceFile"}
    28:32:java.lang.StringBuilder appendRequest(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> appendRequest
    36:40:java.lang.StringBuilder appendResponse(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> appendResponse
    44:51:void appendCommon(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> appendCommon
    54:59:java.lang.StringBuilder appendFullRequest(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest) -> appendFullRequest
    63:68:java.lang.StringBuilder appendFullResponse(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> appendFullResponse
    72:81:void appendFullCommon(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage) -> appendFullCommon
    84:90:void appendInitialLine(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> appendInitialLine
    93:97:void appendInitialLine(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> appendInitialLine
    100:106:void appendHeaders(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> appendHeaders
    109:110:void removeLastNewLine(java.lang.StringBuilder) -> removeLastNewLine
    112:112:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod -> pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod:
# {"fileName":"HttpMethod.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod OPTIONS -> OPTIONS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod GET -> GET
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod HEAD -> HEAD
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod POST -> POST
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod PUT -> PUT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod PATCH -> PATCH
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod DELETE -> DELETE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod TRACE -> TRACE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod CONNECT -> CONNECT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod$EnumNameMap methodMap -> methodMap
    pro.gravit.repackage.io.netty.util.AsciiString name -> name
    109:110:pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String) -> valueOf
    122:133:void <init>(java.lang.String) -> <init>
    139:139:java.lang.String name() -> name
    146:146:pro.gravit.repackage.io.netty.util.AsciiString asciiName() -> asciiName
    151:151:int hashCode() -> hashCode
    156:164:boolean equals(java.lang.Object) -> equals
    169:169:java.lang.String toString() -> toString
    174:177:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> compareTo
    28:28:int compareTo(java.lang.Object) -> compareTo
    36:101:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod$EnumNameMap -> pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod$EnumNameMap:
# {"fileName":"HttpMethod.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node[] values -> values
    int valuesMask -> valuesMask
    184:195:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node[]) -> <init>
    198:199:java.lang.Object get(java.lang.String) -> get
    208:208:int hashCode(java.lang.String) -> hashCode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node -> pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node:
# {"fileName":"HttpMethod.java","id":"sourceFile"}
    java.lang.String key -> key
    java.lang.Object value -> value
    215:218:void <init>(java.lang.String,java.lang.Object) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObject -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObject:
# {"fileName":"HttpObject.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator:
# {"fileName":"HttpObjectAggregator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse CONTINUE -> CONTINUE
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED -> EXPECTATION_FAILED
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse TOO_LARGE_CLOSE -> TOO_LARGE_CLOSE
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse TOO_LARGE -> TOO_LARGE
    boolean closeOnExpectationFailed -> closeOnExpectationFailed
    boolean $assertionsDisabled -> $assertionsDisabled
    115:116:void <init>(int) -> <init>
    128:130:void <init>(int,boolean) -> <init>
    134:134:boolean isStartMessage(pro.gravit.repackage.io.netty.handler.codec.http.HttpObject) -> isStartMessage
    139:139:boolean isContentMessage(pro.gravit.repackage.io.netty.handler.codec.http.HttpObject) -> isContentMessage
    144:144:boolean isLastContentMessage(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> isLastContentMessage
    149:149:boolean isAggregated(pro.gravit.repackage.io.netty.handler.codec.http.HttpObject) -> isAggregated
    155:157:boolean isContentLengthInvalid(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,int) -> isContentLengthInvalid
    162:175:java.lang.Object continueResponse(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,int,pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> continueResponse
    180:186:java.lang.Object newContinueResponse(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,int,pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> newContinueResponse
    191:191:boolean closeAfterContinueResponse(java.lang.Object) -> closeAfterContinueResponse
    196:200:boolean ignoreContentAfterContinueResponse(java.lang.Object) -> ignoreContentAfterContinueResponse
    205:217:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage beginAggregation(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> beginAggregation
    222:226:void aggregate(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage,pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> aggregate
    236:241:void finishAggregation(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage) -> finishAggregation
    245:279:void handleOversizedMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> handleOversizedMessage
    86:86:void handleOversizedMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleOversizedMessage
    86:86:void finishAggregation(pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> finishAggregation
    86:86:void aggregate(pro.gravit.repackage.io.netty.buffer.ByteBufHolder,pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> aggregate
    86:86:pro.gravit.repackage.io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> beginAggregation
    86:86:java.lang.Object newContinueResponse(java.lang.Object,int,pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> newContinueResponse
    86:86:boolean isContentLengthInvalid(java.lang.Object,int) -> isContentLengthInvalid
    86:86:boolean isAggregated(java.lang.Object) -> isAggregated
    86:86:boolean isLastContentMessage(pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> isLastContentMessage
    86:86:boolean isContentMessage(java.lang.Object) -> isContentMessage
    86:86:boolean isStartMessage(java.lang.Object) -> isStartMessage
    86:86:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    86:104:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$1:
# {"fileName":"HttpObjectAggregator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator this$0 -> this$0
    253:253:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    256:260:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    253:253:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$2 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$2:
# {"fileName":"HttpObjectAggregator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator this$0 -> this$0
    263:263:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    266:270:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    263:263:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:
# {"fileName":"HttpObjectAggregator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage message -> message
    pro.gravit.repackage.io.netty.buffer.ByteBuf content -> content
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders -> trailingHeaders
    286:290:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    294:298:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    303:304:void setTrailingHeaders(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> setTrailingHeaders
    308:308:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    313:313:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    318:319:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    324:324:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders headers() -> headers
    329:329:pro.gravit.repackage.io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    334:334:pro.gravit.repackage.io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    339:340:void setDecoderResult(pro.gravit.repackage.io.netty.handler.codec.DecoderResult) -> setDecoderResult
    344:344:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    349:349:int refCnt() -> refCnt
    354:355:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    360:361:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    366:367:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    372:373:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    378:378:boolean release() -> release
    383:383:boolean release(int) -> release
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    281:281:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    281:281:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    281:281:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    281:281:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    281:281:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    281:281:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    281:281:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    281:281:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    281:281:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    281:281:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    281:281:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:
# {"fileName":"HttpObjectAggregator.java","id":"sourceFile"}
    399:400:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    404:404:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest copy() -> copy
    409:409:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    414:414:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retainedDuplicate() -> retainedDuplicate
    419:422:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    427:428:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    433:434:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retain() -> retain
    439:440:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest touch() -> touch
    445:446:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> touch
    451:452:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    457:458:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    463:463:pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    468:468:java.lang.String getUri() -> getUri
    473:473:pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod method() -> method
    478:478:java.lang.String uri() -> uri
    483:484:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    489:489:java.lang.String toString() -> toString
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    396:396:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    396:396:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    396:396:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    396:396:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    396:396:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    396:396:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    396:396:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    396:396:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    396:396:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    396:396:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    396:396:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    396:396:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    396:396:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:
# {"fileName":"HttpObjectAggregator.java","id":"sourceFile"}
    497:498:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    502:502:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse copy() -> copy
    507:507:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse duplicate() -> duplicate
    512:512:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retainedDuplicate() -> retainedDuplicate
    517:520:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    525:526:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse setStatus(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    531:531:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    536:536:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus status() -> status
    541:542:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    547:548:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retain(int) -> retain
    553:554:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse retain() -> retain
    559:560:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse touch(java.lang.Object) -> touch
    565:566:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse touch() -> touch
    571:571:java.lang.String toString() -> toString
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    493:493:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    493:493:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    493:493:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    493:493:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    493:493:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    493:493:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    493:493:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    493:493:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    493:493:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    493:493:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    493:493:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    493:493:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    493:493:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse setStatus(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder:
# {"fileName":"HttpObjectDecoder.java","id":"sourceFile"}
    int DEFAULT_MAX_INITIAL_LINE_LENGTH -> DEFAULT_MAX_INITIAL_LINE_LENGTH
    int DEFAULT_MAX_HEADER_SIZE -> DEFAULT_MAX_HEADER_SIZE
    boolean DEFAULT_CHUNKED_SUPPORTED -> DEFAULT_CHUNKED_SUPPORTED
    boolean DEFAULT_ALLOW_PARTIAL_CHUNKS -> DEFAULT_ALLOW_PARTIAL_CHUNKS
    int DEFAULT_MAX_CHUNK_SIZE -> DEFAULT_MAX_CHUNK_SIZE
    boolean DEFAULT_VALIDATE_HEADERS -> DEFAULT_VALIDATE_HEADERS
    int DEFAULT_INITIAL_BUFFER_SIZE -> DEFAULT_INITIAL_BUFFER_SIZE
    boolean DEFAULT_ALLOW_DUPLICATE_CONTENT_LENGTHS -> DEFAULT_ALLOW_DUPLICATE_CONTENT_LENGTHS
    java.lang.String EMPTY_VALUE -> EMPTY_VALUE
    int maxChunkSize -> maxChunkSize
    boolean chunkedSupported -> chunkedSupported
    boolean allowPartialChunks -> allowPartialChunks
    boolean validateHeaders -> validateHeaders
    boolean allowDuplicateContentLengths -> allowDuplicateContentLengths
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser headerParser -> headerParser
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$LineParser lineParser -> lineParser
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage message -> message
    long chunkSize -> chunkSize
    long contentLength -> contentLength
    boolean resetRequested -> resetRequested
    java.lang.CharSequence name -> name
    java.lang.CharSequence value -> value
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent trailer -> trailer
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State currentState -> currentState
    boolean $assertionsDisabled -> $assertionsDisabled
    188:190:void <init>() -> <init>
    197:198:void <init>(int,int,int,boolean) -> <init>
    206:208:void <init>(int,int,int,boolean,boolean) -> <init>
    216:218:void <init>(int,int,int,boolean,boolean,int) -> <init>
    227:229:void <init>(int,int,int,boolean,boolean,int,boolean) -> <init>
    153:250:void <init>(int,int,int,boolean,boolean,int,boolean,boolean) -> <init>
    254:457:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    461:504:void decodeLast(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    508:520:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    523:547:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    555:561:boolean isSwitchingToNonHttp1Protocol(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> isSwitchingToNonHttp1Protocol
    569:570:void reset() -> reset
    573:591:void resetNow() -> resetNow
    594:607:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage invalidMessage(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.Exception) -> invalidMessage
    611:621:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent invalidChunk(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.Exception) -> invalidChunk
    625:697:pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State readHeaders(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readHeaders
    723:725:void handleTransferEncodingChunkedWithContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> handleTransferEncodingChunkedWithContentLength
    728:731:long contentLength() -> contentLength
    735:782:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent readTrailingHeaders(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readTrailingHeaders
    boolean isDecodingRequest() -> isDecodingRequest
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    790:799:int getChunkSize(java.lang.String) -> getChunkSize
    810:822:java.lang.String[] splitInitialLine(pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence) -> splitInitialLine
    826:875:void splitHeader(pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence) -> splitHeader
    878:890:int findNonSPLenient(pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence,int) -> findNonSPLenient
    894:899:int findSPLenient(pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence,int) -> findSPLenient
    904:904:boolean isSPLenient(char) -> isSPLenient
    908:918:int findNonWhitespace(pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence,int) -> findNonWhitespace
    922:927:int findEndOfString(pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence) -> findEndOfString
    931:931:boolean isOWS(char) -> isOWS
    131:131:pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State access$000(pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder) -> access$000
    131:131:pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State access$002(pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder,pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State) -> access$002
    131:131:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$1:
# {"fileName":"HttpObjectDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$http$HttpObjectDecoder$State -> $SwitchMap$io$netty$handler$codec$http$HttpObjectDecoder$State
    286:286:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser:
# {"fileName":"HttpObjectDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence seq -> seq
    int maxLength -> maxLength
    int size -> size
    939:942:void <init>(pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence,int) -> <init>
    945:953:pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence parse(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> parse
    957:958:void reset() -> reset
    962:976:boolean process(byte) -> process
    980:987:void increaseCount() -> increaseCount
    990:990:pro.gravit.repackage.io.netty.handler.codec.TooLongFrameException newException(int) -> newException
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$LineParser -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$LineParser:
# {"fileName":"HttpObjectDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder this$0 -> this$0
    996:998:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder,pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence,int) -> <init>
    1003:1004:pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence parse(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> parse
    1009:1017:boolean process(byte) -> process
    1022:1022:pro.gravit.repackage.io.netty.handler.codec.TooLongFrameException newException(int) -> newException
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State:
# {"fileName":"HttpObjectDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State SKIP_CONTROL_CHARS -> SKIP_CONTROL_CHARS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State READ_INITIAL -> READ_INITIAL
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State READ_HEADER -> READ_HEADER
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State READ_VARIABLE_LENGTH_CONTENT -> READ_VARIABLE_LENGTH_CONTENT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State READ_FIXED_LENGTH_CONTENT -> READ_FIXED_LENGTH_CONTENT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_SIZE -> READ_CHUNK_SIZE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNKED_CONTENT -> READ_CHUNKED_CONTENT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_DELIMITER -> READ_CHUNK_DELIMITER
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State READ_CHUNK_FOOTER -> READ_CHUNK_FOOTER
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State BAD_MESSAGE -> BAD_MESSAGE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State UPGRADED -> UPGRADED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State[] $VALUES -> $VALUES
    166:166:pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State[] values() -> values
    166:166:pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectDecoder$State valueOf(java.lang.String) -> valueOf
    166:166:void <init>(java.lang.String,int) -> <init>
    166:177:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpObjectEncoder:
# {"fileName":"HttpObjectEncoder.java","id":"sourceFile"}
    int CRLF_SHORT -> CRLF_SHORT
    int ZERO_CRLF_MEDIUM -> ZERO_CRLF_MEDIUM
    byte[] ZERO_CRLF_CRLF -> ZERO_CRLF_CRLF
    pro.gravit.repackage.io.netty.buffer.ByteBuf CRLF_BUF -> CRLF_BUF
    pro.gravit.repackage.io.netty.buffer.ByteBuf ZERO_CRLF_CRLF_BUF -> ZERO_CRLF_CRLF_BUF
    float HEADERS_WEIGHT_NEW -> HEADERS_WEIGHT_NEW
    float HEADERS_WEIGHT_HISTORICAL -> HEADERS_WEIGHT_HISTORICAL
    float TRAILERS_WEIGHT_NEW -> TRAILERS_WEIGHT_NEW
    float TRAILERS_WEIGHT_HISTORICAL -> TRAILERS_WEIGHT_HISTORICAL
    int ST_INIT -> ST_INIT
    int ST_CONTENT_NON_CHUNK -> ST_CONTENT_NON_CHUNK
    int ST_CONTENT_CHUNK -> ST_CONTENT_CHUNK
    int ST_CONTENT_ALWAYS_EMPTY -> ST_CONTENT_ALWAYS_EMPTY
    int state -> state
    float headersEncodedSizeAccumulator -> headersEncodedSizeAccumulator
    float trailersEncodedSizeAccumulator -> trailersEncodedSizeAccumulator
    java.util.List out -> out
    boolean $assertionsDisabled -> $assertionsDisabled
    54:87:void <init>() -> <init>
    90:90:boolean checkContentState(int) -> checkContentState
    96:112:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    115:131:void writeOutList(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.util.List,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writeOutList
    134:138:void writeVoidPromise(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.util.List) -> writeVoidPromise
    141:146:void writePromiseCombiner(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.util.List,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> writePromiseCombiner
    152:183:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    186:199:void encodeJustHttpMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.util.List) -> encodeJustHttpMessage
    203:221:void encodeByteBufHttpContent(int,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,java.util.List) -> encodeByteBufHttpContent
    224:239:void encodeHttpMessageNotLastContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.util.List) -> encodeHttpMessageNotLastContent
    242:258:void encodeHttpMessageLastContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.util.List) -> encodeHttpMessageLastContent
    261:297:void encodeNotHttpMessageContentTypes(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encodeNotHttpMessageContentTypes
    301:329:void encodeFullHttpMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encodeFullHttpMessage
    332:344:boolean encodeContentNonChunk(java.util.List,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeContentNonChunk
    348:348:void throwUnexpectedMessageTypeEx(java.lang.Object,int) -> throwUnexpectedMessageTypeEx
    354:382:void encodeFileRegionContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.FileRegion,java.util.List) -> encodeFileRegionContent
    390:394:boolean bypassEncoderIfEmpty(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> bypassEncoderIfEmpty
    399:407:void encodeByteBufContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> encodeByteBufContent
    410:423:int encodeEmptyLastHttpContent(int,java.util.List) -> encodeEmptyLastHttpContent
    427:435:void encodeLastHttpContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent,java.util.List) -> encodeLastHttpContent
    438:446:void encodeHttpContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpContent,java.util.List) -> encodeHttpContent
    450:466:void encodeByteBufAndTrailers(int,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.util.List,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> encodeByteBufAndTrailers
    470:483:void encodeChunkedHttpContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,java.util.List) -> encodeChunkedHttpContent
    486:497:void encodeTrailingHeaders(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,java.util.List) -> encodeTrailingHeaders
    500:515:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeInitHttpMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> encodeInitHttpMessage
    522:527:void encodeHeaders(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeHeaders
    530:540:void encodedChunkedFileRegionContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.FileRegion,java.util.List) -> encodedChunkedFileRegionContent
    543:548:void addEncodedLengthHex(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long,java.util.List) -> addEncodedLengthHex
    555:555:void sanitizeHeadersBeforeEncode(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
    565:565:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    571:571:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    588:588:int padSizeForAccumulation(int) -> padSizeForAccumulation
    593:594:void encodeAscii(java.lang.String,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeAscii
    void encodeInitialLine(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    54:61:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest -> pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest:
# {"fileName":"HttpRequest.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod method() -> method
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    java.lang.String getUri() -> getUri
    java.lang.String uri() -> uri
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpRequestDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpRequestDecoder:
# {"fileName":"HttpRequestDecoder.java","id":"sourceFile"}
    84:85:void <init>() -> <init>
    92:93:void <init>(int,int,int) -> <init>
    97:98:void <init>(int,int,int,boolean) -> <init>
    103:105:void <init>(int,int,int,boolean,int) -> <init>
    110:112:void <init>(int,int,int,boolean,int,boolean) -> <init>
    117:119:void <init>(int,int,int,boolean,int,boolean,boolean) -> <init>
    123:125:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    130:130:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    135:135:boolean isDecodingRequest() -> isDecodingRequest
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpRequestEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpRequestEncoder:
# {"fileName":"HttpRequestEncoder.java","id":"sourceFile"}
    char SLASH -> SLASH
    char QUESTION_MARK -> QUESTION_MARK
    int SLASH_AND_SPACE_SHORT -> SLASH_AND_SPACE_SHORT
    int SPACE_SLASH_AND_SPACE_MEDIUM -> SPACE_SLASH_AND_SPACE_MEDIUM
    28:28:void <init>() -> <init>
    36:36:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    41:79:void encodeInitialLine(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> encodeInitialLine
    28:28:void encodeInitialLine(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse -> pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse:
# {"fileName":"HttpResponse.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus getStatus() -> getStatus
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus status() -> status
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse setStatus(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> setStatus
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseDecoder:
# {"fileName":"HttpResponseDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS -> UNKNOWN_STATUS
    115:116:void <init>() -> <init>
    123:124:void <init>(int,int,int) -> <init>
    128:129:void <init>(int,int,int,boolean) -> <init>
    134:136:void <init>(int,int,int,boolean,int) -> <init>
    141:143:void <init>(int,int,int,boolean,int,boolean) -> <init>
    148:150:void <init>(int,int,int,boolean,int,boolean,boolean) -> <init>
    154:156:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    161:161:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    166:166:boolean isDecodingRequest() -> isDecodingRequest
    108:108:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseEncoder:
# {"fileName":"HttpResponseEncoder.java","id":"sourceFile"}
    27:27:void <init>() -> <init>
    31:31:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    36:40:void encodeInitialLine(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> encodeInitialLine
    44:66:void sanitizeHeadersBeforeEncode(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse,boolean) -> sanitizeHeadersBeforeEncode
    72:86:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> isContentAlwaysEmpty
    27:27:void encodeInitialLine(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    27:27:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    27:27:void sanitizeHeadersBeforeEncode(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus -> pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus:
# {"fileName":"HttpResponseStatus.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus CONTINUE -> CONTINUE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS -> SWITCHING_PROTOCOLS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PROCESSING -> PROCESSING
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus EARLY_HINTS -> EARLY_HINTS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus OK -> OK
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus CREATED -> CREATED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus ACCEPTED -> ACCEPTED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NON_AUTHORITATIVE_INFORMATION -> NON_AUTHORITATIVE_INFORMATION
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NO_CONTENT -> NO_CONTENT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus RESET_CONTENT -> RESET_CONTENT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PARTIAL_CONTENT -> PARTIAL_CONTENT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus MULTI_STATUS -> MULTI_STATUS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus MULTIPLE_CHOICES -> MULTIPLE_CHOICES
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus MOVED_PERMANENTLY -> MOVED_PERMANENTLY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus FOUND -> FOUND
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus SEE_OTHER -> SEE_OTHER
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_MODIFIED -> NOT_MODIFIED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus USE_PROXY -> USE_PROXY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus TEMPORARY_REDIRECT -> TEMPORARY_REDIRECT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PERMANENT_REDIRECT -> PERMANENT_REDIRECT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus BAD_REQUEST -> BAD_REQUEST
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNAUTHORIZED -> UNAUTHORIZED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PAYMENT_REQUIRED -> PAYMENT_REQUIRED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus FORBIDDEN -> FORBIDDEN
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_FOUND -> NOT_FOUND
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus METHOD_NOT_ALLOWED -> METHOD_NOT_ALLOWED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PROXY_AUTHENTICATION_REQUIRED -> PROXY_AUTHENTICATION_REQUIRED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus REQUEST_TIMEOUT -> REQUEST_TIMEOUT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus CONFLICT -> CONFLICT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus GONE -> GONE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus LENGTH_REQUIRED -> LENGTH_REQUIRED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PRECONDITION_FAILED -> PRECONDITION_FAILED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus REQUEST_ENTITY_TOO_LARGE -> REQUEST_ENTITY_TOO_LARGE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus REQUEST_URI_TOO_LONG -> REQUEST_URI_TOO_LONG
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus REQUESTED_RANGE_NOT_SATISFIABLE -> REQUESTED_RANGE_NOT_SATISFIABLE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus EXPECTATION_FAILED -> EXPECTATION_FAILED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus MISDIRECTED_REQUEST -> MISDIRECTED_REQUEST
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNPROCESSABLE_ENTITY -> UNPROCESSABLE_ENTITY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus LOCKED -> LOCKED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus FAILED_DEPENDENCY -> FAILED_DEPENDENCY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNORDERED_COLLECTION -> UNORDERED_COLLECTION
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UPGRADE_REQUIRED -> UPGRADE_REQUIRED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PRECONDITION_REQUIRED -> PRECONDITION_REQUIRED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus TOO_MANY_REQUESTS -> TOO_MANY_REQUESTS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus REQUEST_HEADER_FIELDS_TOO_LARGE -> REQUEST_HEADER_FIELDS_TOO_LARGE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus BAD_GATEWAY -> BAD_GATEWAY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus GATEWAY_TIMEOUT -> GATEWAY_TIMEOUT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus HTTP_VERSION_NOT_SUPPORTED -> HTTP_VERSION_NOT_SUPPORTED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus VARIANT_ALSO_NEGOTIATES -> VARIANT_ALSO_NEGOTIATES
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus INSUFFICIENT_STORAGE -> INSUFFICIENT_STORAGE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_EXTENDED -> NOT_EXTENDED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NETWORK_AUTHENTICATION_REQUIRED -> NETWORK_AUTHENTICATION_REQUIRED
    int code -> code
    pro.gravit.repackage.io.netty.util.AsciiString codeAsText -> codeAsText
    pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass codeClass -> codeClass
    java.lang.String reasonPhrase -> reasonPhrase
    byte[] bytes -> bytes
    331:331:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus newStatus(int,java.lang.String) -> newStatus
    340:341:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus valueOf(int) -> valueOf
    345:461:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus valueOf0(int) -> valueOf0
    473:474:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus valueOf(int,java.lang.String) -> valueOf
    488:488:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus parseLine(java.lang.CharSequence) -> parseLine
    502:506:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus parseLine(java.lang.String) -> parseLine
    521:524:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus parseLine(pro.gravit.repackage.io.netty.util.AsciiString) -> parseLine
    539:540:void <init>(int) -> <init>
    546:547:void <init>(int,java.lang.String) -> <init>
    549:573:void <init>(int,java.lang.String,boolean) -> <init>
    579:579:int code() -> code
    586:586:pro.gravit.repackage.io.netty.util.AsciiString codeAsText() -> codeAsText
    593:593:java.lang.String reasonPhrase() -> reasonPhrase
    600:604:pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass codeClass() -> codeClass
    609:609:int hashCode() -> hashCode
    618:622:boolean equals(java.lang.Object) -> equals
    631:631:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus) -> compareTo
    636:640:java.lang.String toString() -> toString
    644:651:void encode(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    34:34:int compareTo(java.lang.Object) -> compareTo
    39:328:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpScheme -> pro.gravit.repackage.io.netty.handler.codec.http.HttpScheme:
# {"fileName":"HttpScheme.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpScheme HTTP -> HTTP
    pro.gravit.repackage.io.netty.handler.codec.http.HttpScheme HTTPS -> HTTPS
    int port -> port
    pro.gravit.repackage.io.netty.util.AsciiString name -> name
    39:42:void <init>(int,java.lang.String) -> <init>
    45:45:pro.gravit.repackage.io.netty.util.AsciiString name() -> name
    49:49:int port() -> port
    54:58:boolean equals(java.lang.Object) -> equals
    63:63:int hashCode() -> hashCode
    68:68:java.lang.String toString() -> toString
    29:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec:
# {"fileName":"HttpServerCodec.java","id":"sourceFile"}
    java.util.Queue queue -> queue
    48:49:void <init>() -> <init>
    40:57:void <init>(int,int,int) -> <init>
    40:65:void <init>(int,int,int,boolean) -> <init>
    40:76:void <init>(int,int,int,boolean,int) -> <init>
    40:86:void <init>(int,int,int,boolean,int,boolean) -> <init>
    40:96:void <init>(int,int,int,boolean,int,boolean,boolean) -> <init>
    104:105:void upgradeFrom(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> upgradeFrom
    36:36:java.util.Queue access$100(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec$1:
# {"fileName":"HttpServerCodec.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder:
# {"fileName":"HttpServerCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec this$0 -> this$0
    109:111:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec,int,int,int) -> <init>
    114:116:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec,int,int,int,boolean) -> <init>
    120:122:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec,int,int,int,boolean,int) -> <init>
    125:128:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec,int,int,int,boolean,int,boolean) -> <init>
    132:135:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec,int,int,int,boolean,int,boolean,boolean) -> <init>
    139:148:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder:
# {"fileName":"HttpServerCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod method -> method
    pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec this$0 -> this$0
    151:151:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec) -> <init>
    157:166:void sanitizeHeadersBeforeEncode(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse,boolean) -> sanitizeHeadersBeforeEncode
    170:171:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> isContentAlwaysEmpty
    151:151:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    151:151:void sanitizeHeadersBeforeEncode(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,boolean) -> sanitizeHeadersBeforeEncode
    151:151:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec,pro.gravit.repackage.io.netty.handler.codec.http.HttpServerCodec$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerExpectContinueHandler -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerExpectContinueHandler:
# {"fileName":"HttpServerExpectContinueHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED -> EXPECTATION_FAILED
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse ACCEPT -> ACCEPT
    47:47:void <init>() -> <init>
    65:65:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse acceptMessage(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> acceptMessage
    72:72:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse rejectResponse(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> rejectResponse
    77:96:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    49:58:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerKeepAliveHandler -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerKeepAliveHandler:
# {"fileName":"HttpServerKeepAliveHandler.java","id":"sourceFile"}
    java.lang.String MULTIPART_PREFIX -> MULTIPART_PREFIX
    boolean persistentConnection -> persistentConnection
    int pendingResponses -> pendingResponses
    47:50:void <init>() -> <init>
    57:65:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    70:88:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    91:94:void trackResponse(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> trackResponse
    97:97:boolean shouldKeepAlive() -> shouldKeepAlive
    115:116:boolean isSelfDefinedMessageLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> isSelfDefinedMessageLength
    120:120:boolean isInformational(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> isInformational
    124:126:boolean isMultipart(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> isMultipart
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler:
# {"fileName":"HttpServerUpgradeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$SourceCodec sourceCodec -> sourceCodec
    pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodecFactory upgradeCodecFactory -> upgradeCodecFactory
    boolean validateHeaders -> validateHeaders
    boolean handlingUpgrade -> handlingUpgrade
    boolean $assertionsDisabled -> $assertionsDisabled
    190:191:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$SourceCodec,pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodecFactory) -> <init>
    203:204:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$SourceCodec,pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodecFactory,int) -> <init>
    217:222:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$SourceCodec,pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodecFactory,int,boolean) -> <init>
    228:275:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpObject,java.util.List) -> decode
    291:291:boolean shouldHandleUpgradeRequest(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> shouldHandleUpgradeRequest
    304:386:boolean upgrade(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest) -> upgrade
    393:397:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse createUpgradeResponse(java.lang.CharSequence) -> createUpgradeResponse
    405:427:java.util.List splitHeader(java.lang.CharSequence) -> splitHeader
    40:40:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    40:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$SourceCodec -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$SourceCodec:
# {"fileName":"HttpServerUpgradeHandler.java","id":"sourceFile"}
    void upgradeFrom(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> upgradeFrom
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodec -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodec:
# {"fileName":"HttpServerUpgradeHandler.java","id":"sourceFile"}
    java.util.Collection requiredUpgradeHeaders() -> requiredUpgradeHeaders
    boolean prepareUpgradeResponse(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> prepareUpgradeResponse
    void upgradeTo(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest) -> upgradeTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodecFactory -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodecFactory:
# {"fileName":"HttpServerUpgradeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodec newUpgradeCodec(java.lang.CharSequence) -> newUpgradeCodec
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent -> pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent:
# {"fileName":"HttpServerUpgradeHandler.java","id":"sourceFile"}
    java.lang.CharSequence protocol -> protocol
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest upgradeRequest -> upgradeRequest
    106:109:void <init>(java.lang.CharSequence,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest) -> <init>
    115:115:java.lang.CharSequence protocol() -> protocol
    122:122:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest upgradeRequest() -> upgradeRequest
    127:127:int refCnt() -> refCnt
    132:133:pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent retain() -> retain
    138:139:pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent retain(int) -> retain
    144:145:pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent touch() -> touch
    150:151:pro.gravit.repackage.io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent touch(java.lang.Object) -> touch
    156:156:boolean release() -> release
    161:161:boolean release(int) -> release
    166:166:java.lang.String toString() -> toString
    102:102:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    102:102:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    102:102:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    102:102:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass -> pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass:
# {"fileName":"HttpStatusClass.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass INFORMATIONAL -> INFORMATIONAL
    pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass SUCCESS -> SUCCESS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass REDIRECTION -> REDIRECTION
    pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass CLIENT_ERROR -> CLIENT_ERROR
    pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass SERVER_ERROR -> SERVER_ERROR
    pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass UNKNOWN -> UNKNOWN
    int min -> min
    int max -> max
    pro.gravit.repackage.io.netty.util.AsciiString defaultReasonPhrase -> defaultReasonPhrase
    pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass[] $VALUES -> $VALUES
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass[] values() -> values
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass valueOf(java.lang.String) -> valueOf
    59:74:pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass valueOf(int) -> valueOf
    82:87:pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass valueOf(java.lang.CharSequence) -> valueOf
    91:91:int digit(char) -> digit
    95:95:boolean isDigit(char) -> isDigit
    102:106:void <init>(java.lang.String,int,int,int,java.lang.String) -> <init>
    112:112:boolean contains(int) -> contains
    119:119:pro.gravit.repackage.io.netty.util.AsciiString defaultReasonPhrase() -> defaultReasonPhrase
    24:24:void <init>(java.lang.String,int,int,int,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass$1) -> <init>
    24:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass$1 -> pro.gravit.repackage.io.netty.handler.codec.http.HttpStatusClass$1:
# {"fileName":"HttpStatusClass.java","id":"sourceFile"}
    48:48:void <init>(java.lang.String,int,int,int,java.lang.String) -> <init>
    51:51:boolean contains(int) -> contains
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpUtil -> pro.gravit.repackage.io.netty.handler.codec.http.HttpUtil:
# {"fileName":"HttpUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString CHARSET_EQUALS -> CHARSET_EQUALS
    pro.gravit.repackage.io.netty.util.AsciiString SEMICOLON -> SEMICOLON
    java.lang.String COMMA_STRING -> COMMA_STRING
    45:45:void <init>() -> <init>
    52:52:boolean isOriginForm(java.net.URI) -> isOriginForm
    60:60:boolean isOriginForm(java.lang.String) -> isOriginForm
    68:68:boolean isAsteriskForm(java.net.URI) -> isAsteriskForm
    76:76:boolean isAsteriskForm(java.lang.String) -> isAsteriskForm
    87:89:boolean isKeepAlive(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isKeepAlive
    113:114:void setKeepAlive(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,boolean) -> setKeepAlive
    136:149:void setKeepAlive(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion,boolean) -> setKeepAlive
    164:177:long getContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getContentLength
    191:204:long getContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,long) -> getContentLength
    216:216:int getContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,int) -> getContentLength
    225:243:int getWebSocketContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getWebSocketContentLength
    250:251:void setContentLength(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,long) -> setContentLength
    254:254:boolean isContentLengthSet(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentLengthSet
    267:269:boolean is100ContinueExpected(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> is100ContinueExpected
    281:286:boolean isUnsupportedExpectation(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isUnsupportedExpectation
    295:296:boolean isExpectHeaderValid(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isExpectHeaderValid
    307:312:void set100ContinueExpected(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,boolean) -> set100ContinueExpected
    321:321:boolean isTransferEncodingChunked(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isTransferEncodingChunked
    333:355:void setTransferEncodingChunked(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,boolean) -> setTransferEncodingChunked
    365:365:java.nio.charset.Charset getCharset(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getCharset
    376:379:java.nio.charset.Charset getCharset(java.lang.CharSequence) -> getCharset
    392:396:java.nio.charset.Charset getCharset(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.nio.charset.Charset) -> getCharset
    409:426:java.nio.charset.Charset getCharset(java.lang.CharSequence,java.nio.charset.Charset) -> getCharset
    442:442:java.lang.CharSequence getCharsetAsString(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getCharsetAsString
    455:459:java.lang.CharSequence getCharsetAsSequence(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getCharsetAsSequence
    475:493:java.lang.CharSequence getCharsetAsSequence(java.lang.CharSequence) -> getCharsetAsSequence
    508:512:java.lang.CharSequence getMimeType(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> getMimeType
    529:535:java.lang.CharSequence getMimeType(java.lang.CharSequence) -> getMimeType
    547:554:java.lang.String formatHostnameForHttp(java.net.InetSocketAddress) -> formatHostnameForHttp
    571:628:long normalizeAndGetContentLength(java.util.List,boolean,boolean) -> normalizeAndGetContentLength
    41:43:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion -> pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion:
# {"fileName":"HttpVersion.java","id":"sourceFile"}
    java.util.regex.Pattern VERSION_PATTERN -> VERSION_PATTERN
    java.lang.String HTTP_1_0_STRING -> HTTP_1_0_STRING
    java.lang.String HTTP_1_1_STRING -> HTTP_1_1_STRING
    pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    java.lang.String protocolName -> protocolName
    int majorVersion -> majorVersion
    int minorVersion -> minorVersion
    java.lang.String text -> text
    boolean keepAliveDefault -> keepAliveDefault
    byte[] bytes -> bytes
    60:80:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String) -> valueOf
    84:90:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion version0(java.lang.String) -> version0
    111:125:void <init>(java.lang.String,boolean) -> <init>
    141:142:void <init>(java.lang.String,int,int,boolean) -> <init>
    146:170:void <init>(java.lang.String,int,int,boolean,boolean) -> <init>
    176:176:java.lang.String protocolName() -> protocolName
    183:183:int majorVersion() -> majorVersion
    190:190:int minorVersion() -> minorVersion
    197:197:java.lang.String text() -> text
    205:205:boolean isKeepAliveDefault() -> isKeepAliveDefault
    213:213:java.lang.String toString() -> toString
    218:219:int hashCode() -> hashCode
    224:231:boolean equals(java.lang.Object) -> equals
    236:246:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> compareTo
    250:255:void encode(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    33:33:int compareTo(java.lang.Object) -> compareTo
    35:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent -> pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent:
# {"fileName":"LastHttpContent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent EMPTY_LAST_CONTENT -> EMPTY_LAST_CONTENT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    30:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent$1 -> pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent$1:
# {"fileName":"LastHttpContent.java","id":"sourceFile"}
    30:30:void <init>() -> <init>
    34:34:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    39:39:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    44:44:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    49:49:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    54:54:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    59:59:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    64:64:pro.gravit.repackage.io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    70:70:pro.gravit.repackage.io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    75:75:void setDecoderResult(pro.gravit.repackage.io.netty.handler.codec.DecoderResult) -> setDecoderResult
    80:80:int refCnt() -> refCnt
    85:85:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    90:90:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    95:95:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    100:100:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    105:105:boolean release() -> release
    110:110:boolean release(int) -> release
    115:115:java.lang.String toString() -> toString
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    30:30:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    30:30:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    30:30:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    30:30:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    30:30:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.QueryStringDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.QueryStringDecoder:
# {"fileName":"QueryStringDecoder.java","id":"sourceFile"}
    int DEFAULT_MAX_PARAMS -> DEFAULT_MAX_PARAMS
    java.nio.charset.Charset charset -> charset
    java.lang.String uri -> uri
    int maxParams -> maxParams
    boolean semicolonIsNormalChar -> semicolonIsNormalChar
    int pathEndIdx -> pathEndIdx
    java.lang.String path -> path
    java.util.Map params -> params
    80:81:void <init>(java.lang.String) -> <init>
    88:89:void <init>(java.lang.String,boolean) -> <init>
    96:97:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    104:105:void <init>(java.lang.String,java.nio.charset.Charset,boolean) -> <init>
    112:113:void <init>(java.lang.String,java.nio.charset.Charset,boolean,int) -> <init>
    120:128:void <init>(java.lang.String,java.nio.charset.Charset,boolean,int,boolean) -> <init>
    135:136:void <init>(java.net.URI) -> <init>
    143:144:void <init>(java.net.URI,java.nio.charset.Charset) -> <init>
    151:152:void <init>(java.net.URI,java.nio.charset.Charset,int) -> <init>
    158:170:void <init>(java.net.URI,java.nio.charset.Charset,int,boolean) -> <init>
    174:174:java.lang.String toString() -> toString
    181:181:java.lang.String uri() -> uri
    188:191:java.lang.String path() -> path
    198:201:java.util.Map parameters() -> parameters
    208:208:java.lang.String rawPath() -> rawPath
    215:216:java.lang.String rawQuery() -> rawQuery
    220:223:int pathEndIdx() -> pathEndIdx
    228:270:java.util.Map decodeParams(java.lang.String,int,java.nio.charset.Charset,int,boolean) -> decodeParams
    275:289:boolean addParam(java.lang.String,int,int,int,java.util.Map,java.nio.charset.Charset) -> addParam
    304:304:java.lang.String decodeComponent(java.lang.String) -> decodeComponent
    330:333:java.lang.String decodeComponent(java.lang.String,java.nio.charset.Charset) -> decodeComponent
    337:380:java.lang.String decodeComponent(java.lang.String,int,int,java.nio.charset.Charset,boolean) -> decodeComponent
    384:391:int findPathEndIndex(java.lang.String) -> findPathEndIndex
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.QueryStringEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.QueryStringEncoder:
# {"fileName":"QueryStringEncoder.java","id":"sourceFile"}
    java.nio.charset.Charset charset -> charset
    java.lang.StringBuilder uriBuilder -> uriBuilder
    boolean hasParams -> hasParams
    byte WRITE_UTF_UNKNOWN -> WRITE_UTF_UNKNOWN
    char[] CHAR_MAP -> CHAR_MAP
    53:54:void <init>(java.lang.String) -> <init>
    60:64:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    70:83:void addParam(java.lang.String,java.lang.String) -> addParam
    86:91:void encodeComponent(java.lang.CharSequence) -> encodeComponent
    99:99:java.net.URI toUri() -> toUri
    109:109:java.lang.String toString() -> toString
    124:150:void encodeNonUtf8Component(java.lang.CharSequence) -> encodeNonUtf8Component
    156:164:void encodeUtf8Component(java.lang.CharSequence) -> encodeUtf8Component
    167:172:void encodeUtf8Component(java.lang.CharSequence,int,int) -> encodeUtf8Component
    175:204:void encodeUtf8ComponentSlow(java.lang.CharSequence,int,int) -> encodeUtf8ComponentSlow
    207:218:void writeUtf8Surrogate(char,char) -> writeUtf8Surrogate
    221:222:void appendEncoded(int) -> appendEncoded
    232:232:char forDigit(int) -> forDigit
    247:247:boolean dontNeedEncoding(char) -> dontNeedEncoding
    46:46:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders -> pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders:
# {"fileName":"ReadOnlyHttpHeaders.java","id":"sourceFile"}
    java.lang.CharSequence[] nameValuePairs -> nameValuePairs
    56:64:void <init>(boolean,java.lang.CharSequence[]) -> <init>
    67:67:java.lang.IllegalArgumentException newInvalidArraySizeException() -> newInvalidArraySizeException
    71:74:void validateHeaders(java.lang.CharSequence[]) -> validateHeaders
    77:85:java.lang.CharSequence get0(java.lang.CharSequence) -> get0
    90:91:java.lang.String get(java.lang.String) -> get
    96:97:java.lang.Integer getInt(java.lang.CharSequence) -> getInt
    102:103:int getInt(java.lang.CharSequence,int) -> getInt
    108:109:java.lang.Short getShort(java.lang.CharSequence) -> getShort
    114:115:short getShort(java.lang.CharSequence,short) -> getShort
    120:121:java.lang.Long getTimeMillis(java.lang.CharSequence) -> getTimeMillis
    126:127:long getTimeMillis(java.lang.CharSequence,long) -> getTimeMillis
    132:143:java.util.List getAll(java.lang.String) -> getAll
    148:156:java.util.List entries() -> entries
    161:161:boolean contains(java.lang.String) -> contains
    166:166:boolean contains(java.lang.String,java.lang.String,boolean) -> contains
    171:186:boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean) -> containsValue
    191:191:java.util.Iterator valueStringIterator(java.lang.CharSequence) -> valueStringIterator
    196:196:java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence) -> valueCharSequenceIterator
    201:201:java.util.Iterator iterator() -> iterator
    206:206:java.util.Iterator iteratorCharSequence() -> iteratorCharSequence
    211:211:boolean isEmpty() -> isEmpty
    216:216:int size() -> size
    221:228:java.util.Set names() -> names
    233:233:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object) -> add
    238:238:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable) -> add
    243:243:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders addInt(java.lang.CharSequence,int) -> addInt
    248:248:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders addShort(java.lang.CharSequence,short) -> addShort
    253:253:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    258:258:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable) -> set
    263:263:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int) -> setInt
    268:268:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence,short) -> setShort
    273:273:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders remove(java.lang.String) -> remove
    278:278:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders clear() -> clear
    46:46:java.lang.CharSequence[] access$200(pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders) -> access$200
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$1 -> pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$1:
# {"fileName":"ReadOnlyHttpHeaders.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyIterator -> pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyIterator:
# {"fileName":"ReadOnlyHttpHeaders.java","id":"sourceFile"}
    java.lang.CharSequence key -> key
    java.lang.CharSequence value -> value
    int nextNameIndex -> nextNameIndex
    pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0 -> this$0
    281:281:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders) -> <init>
    289:289:boolean hasNext() -> hasNext
    294:300:java.util.Map$Entry next() -> next
    305:305:void remove() -> remove
    310:310:java.lang.CharSequence getKey() -> getKey
    315:315:java.lang.CharSequence getValue() -> getValue
    320:320:java.lang.CharSequence setValue(java.lang.CharSequence) -> setValue
    325:325:java.lang.String toString() -> toString
    281:281:java.lang.Object setValue(java.lang.Object) -> setValue
    281:281:java.lang.Object getValue() -> getValue
    281:281:java.lang.Object getKey() -> getKey
    281:281:java.lang.Object next() -> next
    281:281:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders,pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringIterator -> pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringIterator:
# {"fileName":"ReadOnlyHttpHeaders.java","id":"sourceFile"}
    java.lang.String key -> key
    java.lang.String value -> value
    int nextNameIndex -> nextNameIndex
    pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0 -> this$0
    329:329:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders) -> <init>
    337:337:boolean hasNext() -> hasNext
    342:348:java.util.Map$Entry next() -> next
    353:353:void remove() -> remove
    358:358:java.lang.String getKey() -> getKey
    363:363:java.lang.String getValue() -> getValue
    368:368:java.lang.String setValue(java.lang.String) -> setValue
    373:373:java.lang.String toString() -> toString
    329:329:java.lang.Object setValue(java.lang.Object) -> setValue
    329:329:java.lang.Object getValue() -> getValue
    329:329:java.lang.Object getKey() -> getKey
    329:329:java.lang.Object next() -> next
    329:329:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders,pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator -> pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringValueIterator:
# {"fileName":"ReadOnlyHttpHeaders.java","id":"sourceFile"}
    java.lang.CharSequence name -> name
    int nameHash -> nameHash
    int nextNameIndex -> nextNameIndex
    pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0 -> this$0
    382:386:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders,java.lang.CharSequence) -> <init>
    390:390:boolean hasNext() -> hasNext
    395:400:java.lang.String next() -> next
    405:405:void remove() -> remove
    409:415:int findNextValue() -> findNextValue
    377:377:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyValueIterator -> pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyValueIterator:
# {"fileName":"ReadOnlyHttpHeaders.java","id":"sourceFile"}
    java.lang.CharSequence name -> name
    int nameHash -> nameHash
    int nextNameIndex -> nextNameIndex
    pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0 -> this$0
    424:428:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.ReadOnlyHttpHeaders,java.lang.CharSequence) -> <init>
    432:432:boolean hasNext() -> hasNext
    437:442:java.lang.CharSequence next() -> next
    447:447:void remove() -> remove
    451:457:int findNextValue() -> findNextValue
    419:419:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.ServerCookieEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.ServerCookieEncoder:
# {"fileName":"ServerCookieEncoder.java","id":"sourceFile"}
    53:53:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    64:64:java.lang.String encode(pro.gravit.repackage.io.netty.handler.codec.http.Cookie) -> encode
    75:75:java.util.List encode(pro.gravit.repackage.io.netty.handler.codec.http.Cookie[]) -> encode
    86:86:java.util.List encode(java.util.Collection) -> encode
    97:97:java.util.List encode(java.lang.Iterable) -> encode
    100:102:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.TooLongHttpContentException -> pro.gravit.repackage.io.netty.handler.codec.http.TooLongHttpContentException:
# {"fileName":"TooLongHttpContentException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    31:32:void <init>() -> <init>
    38:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.TooLongHttpHeaderException -> pro.gravit.repackage.io.netty.handler.codec.http.TooLongHttpHeaderException:
# {"fileName":"TooLongHttpHeaderException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    31:32:void <init>() -> <init>
    38:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.TooLongHttpLineException -> pro.gravit.repackage.io.netty.handler.codec.http.TooLongHttpLineException:
# {"fileName":"TooLongHttpLineException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    31:32:void <init>() -> <init>
    38:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieDecoder:
# {"fileName":"ClientCookieDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieDecoder STRICT -> STRICT
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieDecoder LAX -> LAX
    47:48:void <init>(boolean) -> <init>
    56:144:pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie decode(java.lang.String) -> decode
    39:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieDecoder$CookieBuilder -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieDecoder$CookieBuilder:
# {"fileName":"ClientCookieDecoder.java","id":"sourceFile"}
    java.lang.String header -> header
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.DefaultCookie cookie -> cookie
    java.lang.String domain -> domain
    java.lang.String path -> path
    long maxAge -> maxAge
    int expiresStart -> expiresStart
    int expiresEnd -> expiresEnd
    boolean secure -> secure
    boolean httpOnly -> httpOnly
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite sameSite -> sameSite
    153:163:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.cookie.DefaultCookie,java.lang.String) -> <init>
    167:176:long mergeMaxAgeAndExpires() -> mergeMaxAgeAndExpires
    180:186:pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie cookie() -> cookie
    203:214:void appendAttribute(int,int,int,int) -> appendAttribute
    217:220:void parse4(int,int,int) -> parse4
    223:228:void parse6(int,int,int) -> parse6
    232:236:void setMaxAge(java.lang.String) -> setMaxAge
    239:245:void parse7(int,int,int) -> parse7
    248:253:void parse8(int,int,int) -> parse8
    256:256:boolean isValueDefined(int,int) -> isValueDefined
    260:260:java.lang.String computeValue(int,int) -> computeValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieEncoder:
# {"fileName":"ClientCookieEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieEncoder STRICT -> STRICT
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieEncoder LAX -> LAX
    java.util.Comparator COOKIE_COMPARATOR -> COOKIE_COMPARATOR
    62:63:void <init>(boolean) -> <init>
    75:75:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    85:87:java.lang.String encode(pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie) -> encode
    122:142:java.lang.String encode(pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie[]) -> encode
    153:173:java.lang.String encode(java.util.Collection) -> encode
    183:210:java.lang.String encode(java.lang.Iterable) -> encode
    214:224:void encode(java.lang.StringBuilder,pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie) -> encode
    53:95:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieEncoder$1 -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.ClientCookieEncoder$1:
# {"fileName":"ClientCookieEncoder.java","id":"sourceFile"}
    95:95:void <init>() -> <init>
    98:110:int compare(pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie,pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie) -> compare
    95:95:int compare(java.lang.Object,java.lang.Object) -> compare
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie:
# {"fileName":"Cookie.java","id":"sourceFile"}
    long UNDEFINED_MAX_AGE -> UNDEFINED_MAX_AGE
    java.lang.String name() -> name
    java.lang.String value() -> value
    void setValue(java.lang.String) -> setValue
    boolean wrap() -> wrap
    void setWrap(boolean) -> setWrap
    java.lang.String domain() -> domain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String path() -> path
    void setPath(java.lang.String) -> setPath
    long maxAge() -> maxAge
    void setMaxAge(long) -> setMaxAge
    boolean isSecure() -> isSecure
    void setSecure(boolean) -> setSecure
    boolean isHttpOnly() -> isHttpOnly
    void setHttpOnly(boolean) -> setHttpOnly
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieDecoder:
# {"fileName":"CookieDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean strict -> strict
    32:38:void <init>(boolean) -> <init>
    41:82:pro.gravit.repackage.io.netty.handler.codec.http.cookie.DefaultCookie initCookie(java.lang.String,int,int,int,int) -> initCookie
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieEncoder:
# {"fileName":"CookieEncoder.java","id":"sourceFile"}
    boolean strict -> strict
    29:31:void <init>(boolean) -> <init>
    34:51:void validateCookie(java.lang.String,java.lang.String) -> validateCookie
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames:
# {"fileName":"CookieHeaderNames.java","id":"sourceFile"}
    java.lang.String PATH -> PATH
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String MAX_AGE -> MAX_AGE
    java.lang.String DOMAIN -> DOMAIN
    java.lang.String SECURE -> SECURE
    java.lang.String HTTPONLY -> HTTPONLY
    java.lang.String SAMESITE -> SAMESITE
    60:62:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite:
# {"fileName":"CookieHeaderNames.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite Lax -> Lax
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite Strict -> Strict
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite None -> None
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite[] $VALUES -> $VALUES
    37:37:pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite[] values() -> values
    37:37:pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite valueOf(java.lang.String) -> valueOf
    37:37:void <init>(java.lang.String,int) -> <init>
    49:56:pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite of(java.lang.String) -> of
    37:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieUtil -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieUtil:
# {"fileName":"CookieUtil.java","id":"sourceFile"}
    java.util.BitSet VALID_COOKIE_NAME_OCTETS -> VALID_COOKIE_NAME_OCTETS
    java.util.BitSet VALID_COOKIE_VALUE_OCTETS -> VALID_COOKIE_VALUE_OCTETS
    java.util.BitSet VALID_COOKIE_ATTRIBUTE_VALUE_OCTETS -> VALID_COOKIE_ATTRIBUTE_VALUE_OCTETS
    37:46:java.util.BitSet validCookieNameOctets() -> validCookieNameOctets
    52:66:java.util.BitSet validCookieValueOctets() -> validCookieValueOctets
    71:76:java.util.BitSet validCookieAttributeValueOctets() -> validCookieAttributeValueOctets
    80:80:java.lang.StringBuilder stringBuilder() -> stringBuilder
    88:88:java.lang.String stripTrailingSeparatorOrNull(java.lang.StringBuilder) -> stripTrailingSeparatorOrNull
    92:95:java.lang.String stripTrailingSeparator(java.lang.StringBuilder) -> stripTrailingSeparator
    99:104:void add(java.lang.StringBuilder,java.lang.String,long) -> add
    107:112:void add(java.lang.StringBuilder,java.lang.String,java.lang.String) -> add
    115:118:void add(java.lang.StringBuilder,java.lang.String) -> add
    121:132:void addQuoted(java.lang.StringBuilder,java.lang.String,java.lang.String) -> addQuoted
    135:135:int firstInvalidCookieNameOctet(java.lang.CharSequence) -> firstInvalidCookieNameOctet
    139:139:int firstInvalidCookieValueOctet(java.lang.CharSequence) -> firstInvalidCookieValueOctet
    143:149:int firstInvalidOctet(java.lang.CharSequence,java.util.BitSet) -> firstInvalidOctet
    153:162:java.lang.CharSequence unwrapValue(java.lang.CharSequence) -> unwrapValue
    166:177:java.lang.String validateAttributeValue(java.lang.String,java.lang.String) -> validateAttributeValue
    180:182:void <init>() -> <init>
    25:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.DefaultCookie -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.DefaultCookie:
# {"fileName":"DefaultCookie.java","id":"sourceFile"}
    java.lang.String name -> name
    java.lang.String value -> value
    boolean wrap -> wrap
    java.lang.String domain -> domain
    java.lang.String path -> path
    long maxAge -> maxAge
    boolean secure -> secure
    boolean httpOnly -> httpOnly
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite sameSite -> sameSite
    35:46:void <init>(java.lang.String,java.lang.String) -> <init>
    50:50:java.lang.String name() -> name
    55:55:java.lang.String value() -> value
    60:61:void setValue(java.lang.String) -> setValue
    65:65:boolean wrap() -> wrap
    70:71:void setWrap(boolean) -> setWrap
    75:75:java.lang.String domain() -> domain
    80:81:void setDomain(java.lang.String) -> setDomain
    85:85:java.lang.String path() -> path
    90:91:void setPath(java.lang.String) -> setPath
    95:95:long maxAge() -> maxAge
    100:101:void setMaxAge(long) -> setMaxAge
    105:105:boolean isSecure() -> isSecure
    110:111:void setSecure(boolean) -> setSecure
    115:115:boolean isHttpOnly() -> isHttpOnly
    120:121:void setHttpOnly(boolean) -> setHttpOnly
    130:130:pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite sameSite() -> sameSite
    140:141:void setSameSite(pro.gravit.repackage.io.netty.handler.codec.http.cookie.CookieHeaderNames$SameSite) -> setSameSite
    145:145:int hashCode() -> hashCode
    150:181:boolean equals(java.lang.Object) -> equals
    186:215:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie) -> compareTo
    228:228:java.lang.String validateValue(java.lang.String,java.lang.String) -> validateValue
    233:259:java.lang.String toString() -> toString
    28:28:int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.ServerCookieDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.ServerCookieDecoder:
# {"fileName":"ServerCookieDecoder.java","id":"sourceFile"}
    java.lang.String RFC2965_VERSION -> RFC2965_VERSION
    java.lang.String RFC2965_PATH -> RFC2965_PATH
    java.lang.String RFC2965_DOMAIN -> RFC2965_DOMAIN
    java.lang.String RFC2965_PORT -> RFC2965_PORT
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.ServerCookieDecoder STRICT -> STRICT
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.ServerCookieDecoder LAX -> LAX
    59:60:void <init>(boolean) -> <init>
    69:71:java.util.List decodeAll(java.lang.String) -> decodeAll
    80:82:java.util.Set decode(java.lang.String) -> decode
    89:174:void decode(java.util.Collection,java.lang.String) -> decode
    51:56:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cookie.ServerCookieEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.cookie.ServerCookieEncoder:
# {"fileName":"ServerCookieEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.ServerCookieEncoder STRICT -> STRICT
    pro.gravit.repackage.io.netty.handler.codec.http.cookie.ServerCookieEncoder LAX -> LAX
    70:71:void <init>(boolean) -> <init>
    81:81:java.lang.String encode(java.lang.String,java.lang.String) -> encode
    91:134:java.lang.String encode(pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie) -> encode
    144:154:java.util.List dedup(java.util.List,java.util.Map) -> dedup
    164:178:java.util.List encode(pro.gravit.repackage.io.netty.handler.codec.http.cookie.Cookie[]) -> encode
    188:202:java.util.List encode(java.util.Collection) -> encode
    212:230:java.util.List encode(java.lang.Iterable) -> encode
    61:67:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig -> pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig:
# {"fileName":"CorsConfig.java","id":"sourceFile"}
    java.util.Set origins -> origins
    boolean anyOrigin -> anyOrigin
    boolean enabled -> enabled
    java.util.Set exposeHeaders -> exposeHeaders
    boolean allowCredentials -> allowCredentials
    long maxAge -> maxAge
    java.util.Set allowedRequestMethods -> allowedRequestMethods
    java.util.Set allowedRequestHeaders -> allowedRequestHeaders
    boolean allowNullOrigin -> allowNullOrigin
    java.util.Map preflightHeaders -> preflightHeaders
    boolean shortCircuit -> shortCircuit
    boolean allowPrivateNetwork -> allowPrivateNetwork
    50:63:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder) -> <init>
    71:71:boolean isCorsSupportEnabled() -> isCorsSupportEnabled
    80:80:boolean isAnyOriginSupported() -> isAnyOriginSupported
    89:89:java.lang.String origin() -> origin
    98:98:java.util.Set origins() -> origins
    111:111:boolean isNullOriginAllowed() -> isNullOriginAllowed
    125:125:boolean isPrivateNetworkAllowed() -> isPrivateNetworkAllowed
    151:151:java.util.Set exposedHeaders() -> exposedHeaders
    172:172:boolean isCredentialsAllowed() -> isCredentialsAllowed
    186:186:long maxAge() -> maxAge
    196:196:java.util.Set allowedRequestMethods() -> allowedRequestMethods
    208:208:java.util.Set allowedRequestHeaders() -> allowedRequestHeaders
    217:229:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders preflightResponseHeaders() -> preflightResponseHeaders
    243:243:boolean isShortCircuit() -> isShortCircuit
    251:251:boolean isShortCurcuit() -> isShortCurcuit
    256:258:java.lang.Object getValue(java.util.concurrent.Callable) -> getValue
    264:264:java.lang.String toString() -> toString
    281:281:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder withAnyOrigin() -> withAnyOrigin
    289:292:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder withOrigin(java.lang.String) -> withOrigin
    300:300:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder withOrigins(java.lang.String[]) -> withOrigins
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder -> pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder:
# {"fileName":"CorsConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder builder -> builder
    315:317:void <init>(java.lang.String[]) -> <init>
    323:325:void <init>() -> <init>
    332:333:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder allowNullOrigin() -> allowNullOrigin
    341:342:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder disable() -> disable
    350:351:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder exposeHeaders(java.lang.String[]) -> exposeHeaders
    359:360:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder allowCredentials() -> allowCredentials
    368:369:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder maxAge(long) -> maxAge
    377:378:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder allowedRequestMethods(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod[]) -> allowedRequestMethods
    386:387:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder allowedRequestHeaders(java.lang.String[]) -> allowedRequestHeaders
    395:396:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder preflightResponseHeader(java.lang.CharSequence,java.lang.Object[]) -> preflightResponseHeader
    404:405:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder preflightResponseHeader(java.lang.CharSequence,java.lang.Iterable) -> preflightResponseHeader
    413:414:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder preflightResponseHeader(java.lang.String,java.util.concurrent.Callable) -> preflightResponseHeader
    422:423:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder noPreflightResponseHeaders() -> noPreflightResponseHeaders
    431:431:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig build() -> build
    439:440:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$Builder shortCurcuit() -> shortCurcuit
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$DateValueGenerator -> pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig$DateValueGenerator:
# {"fileName":"CorsConfig.java","id":"sourceFile"}
    448:448:void <init>() -> <init>
    452:452:java.util.Date call() -> call
    447:447:java.lang.Object call() -> call
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder -> pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder:
# {"fileName":"CorsConfigBuilder.java","id":"sourceFile"}
    java.util.Set origins -> origins
    boolean anyOrigin -> anyOrigin
    boolean allowNullOrigin -> allowNullOrigin
    boolean enabled -> enabled
    boolean allowCredentials -> allowCredentials
    java.util.Set exposeHeaders -> exposeHeaders
    long maxAge -> maxAge
    java.util.Set requestMethods -> requestMethods
    java.util.Set requestHeaders -> requestHeaders
    java.util.Map preflightHeaders -> preflightHeaders
    boolean noPreflightHeaders -> noPreflightHeaders
    boolean shortCircuit -> shortCircuit
    boolean allowPrivateNetwork -> allowPrivateNetwork
    44:44:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder forAnyOrigin() -> forAnyOrigin
    53:56:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder forOrigin(java.lang.String) -> forOrigin
    65:65:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder forOrigins(java.lang.String[]) -> forOrigins
    71:90:void <init>(java.lang.String[]) -> <init>
    71:100:void <init>() -> <init>
    110:111:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder allowNullOrigin() -> allowNullOrigin
    120:121:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder disable() -> disable
    150:151:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder exposeHeaders(java.lang.String[]) -> exposeHeaders
    180:183:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder exposeHeaders(java.lang.CharSequence[]) -> exposeHeaders
    202:203:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder allowCredentials() -> allowCredentials
    216:217:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder maxAge(long) -> maxAge
    228:229:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder allowedRequestMethods(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod[]) -> allowedRequestMethods
    249:250:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder allowedRequestHeaders(java.lang.String[]) -> allowedRequestHeaders
    270:273:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder allowedRequestHeaders(java.lang.CharSequence[]) -> allowedRequestHeaders
    287:292:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder preflightResponseHeader(java.lang.CharSequence,java.lang.Object[]) -> preflightResponseHeader
    307:308:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder preflightResponseHeader(java.lang.CharSequence,java.lang.Iterable) -> preflightResponseHeader
    327:328:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder preflightResponseHeader(java.lang.CharSequence,java.util.concurrent.Callable) -> preflightResponseHeader
    337:338:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder noPreflightResponseHeaders() -> noPreflightResponseHeaders
    352:353:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder shortCircuit() -> shortCircuit
    365:366:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder allowPrivateNetwork() -> allowPrivateNetwork
    375:379:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig build() -> build
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder$1 -> pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder$1:
# {"fileName":"CorsConfigBuilder.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder$ConstantValueGenerator -> pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder$ConstantValueGenerator:
# {"fileName":"CorsConfigBuilder.java","id":"sourceFile"}
    java.lang.Object value -> value
    396:398:void <init>(java.lang.Object) -> <init>
    402:402:java.lang.Object call() -> call
    387:387:void <init>(java.lang.Object,pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder$DateValueGenerator -> pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder$DateValueGenerator:
# {"fileName":"CorsConfigBuilder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfigBuilder$DateValueGenerator INSTANCE -> INSTANCE
    411:411:void <init>() -> <init>
    417:417:java.util.Date call() -> call
    411:411:java.lang.Object call() -> call
    413:413:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsHandler -> pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsHandler:
# {"fileName":"CorsHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String ANY_ORIGIN -> ANY_ORIGIN
    java.lang.String NULL_ORIGIN -> NULL_ORIGIN
    pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig config -> config
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest request -> request
    java.util.List configList -> configList
    boolean isShortCircuit -> isShortCircuit
    64:65:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig) -> <init>
    74:78:void <init>(java.util.List,boolean) -> <init>
    82:96:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    99:113:void handlePreflight(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> handlePreflight
    122:123:void setPreflightHeaders(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setPreflightHeaders
    126:137:pro.gravit.repackage.io.netty.handler.codec.http.cors.CorsConfig getForOrigin(java.lang.String) -> getForOrigin
    141:163:boolean setOrigin(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setOrigin
    167:168:void echoRequestOrigin(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> echoRequestOrigin
    171:172:void setVaryHeader(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setVaryHeader
    175:176:void setAnyOrigin(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setAnyOrigin
    179:180:void setNullOrigin(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setNullOrigin
    183:184:void setOrigin(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse,java.lang.String) -> setOrigin
    187:191:void setAllowCredentials(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setAllowCredentials
    194:197:boolean isPreflightRequest(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> isPreflightRequest
    201:204:void setExposeHeaders(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setExposeHeaders
    207:208:void setAllowMethods(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setAllowMethods
    211:212:void setAllowHeaders(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setAllowHeaders
    215:216:void setMaxAge(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setMaxAge
    219:226:void setAllowPrivateNetwork(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> setAllowPrivateNetwork
    231:239:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    242:247:void forbidden(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> forbidden
    254:262:void respond(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> respond
    51:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.AbstractDiskHttpData -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.AbstractDiskHttpData:
# {"fileName":"AbstractDiskHttpData.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.io.File file -> file
    boolean isRenamed -> isRenamed
    java.nio.channels.FileChannel fileChannel -> fileChannel
    49:50:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    java.lang.String getDiskFilename() -> getDiskFilename
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getBaseDirectory() -> getBaseDirectory
    java.lang.String getPostfix() -> getPostfix
    boolean deleteOnExit() -> deleteOnExit
    83:101:java.io.File tempFile() -> tempFile
    106:149:void setContent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setContent
    154:208:void addContent(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> addContent
    212:221:void setContent(java.io.File) -> setContent
    225:258:void setContent(java.io.InputStream) -> setContent
    262:293:void delete() -> delete
    297:300:byte[] get() -> get
    305:309:pro.gravit.repackage.io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    314:345:pro.gravit.repackage.io.netty.buffer.ByteBuf getChunk(int) -> getChunk
    350:350:java.lang.String getString() -> getString
    355:363:java.lang.String getString(java.nio.charset.Charset) -> getString
    368:368:boolean isInMemory() -> isInMemory
    373:440:boolean renameTo(java.io.File) -> renameTo
    449:466:byte[] readFrom(java.io.File) -> readFrom
    471:471:java.io.File getFile() -> getFile
    476:476:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    481:481:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    40:40:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    40:40:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    40:40:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    40:40:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    40:40:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    42:42:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.AbstractHttpData -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.AbstractHttpData:
# {"fileName":"AbstractHttpData.java","id":"sourceFile"}
    java.util.regex.Pattern STRIP_PATTERN -> STRIP_PATTERN
    java.util.regex.Pattern REPLACE_PATTERN -> REPLACE_PATTERN
    java.lang.String name -> name
    long definedSize -> definedSize
    long size -> size
    java.nio.charset.Charset charset -> charset
    boolean completed -> completed
    long maxSize -> maxSize
    41:56:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    60:60:long getMaxSize() -> getMaxSize
    65:66:void setMaxSize(long) -> setMaxSize
    70:73:void checkSize(long) -> checkSize
    77:77:java.lang.String getName() -> getName
    82:82:boolean isCompleted() -> isCompleted
    86:87:void setCompleted() -> setCompleted
    90:91:void setCompleted(boolean) -> setCompleted
    95:95:java.nio.charset.Charset getCharset() -> getCharset
    100:101:void setCharset(java.nio.charset.Charset) -> setCharset
    105:105:long length() -> length
    110:110:long definedLength() -> definedLength
    116:118:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    124:125:void deallocate() -> deallocate
    129:130:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    135:136:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    33:33:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    33:33:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    33:33:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    33:33:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    33:33:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    33:33:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    33:33:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    33:33:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    33:33:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    33:33:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    33:33:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    33:33:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    35:36:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.AbstractMemoryHttpData -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.AbstractMemoryHttpData:
# {"fileName":"AbstractMemoryHttpData.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf byteBuf -> byteBuf
    int chunkPosition -> chunkPosition
    45:47:void <init>(java.lang.String,java.nio.charset.Charset,long) -> <init>
    51:70:void setContent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setContent
    74:101:void setContent(java.io.InputStream) -> setContent
    106:143:void addContent(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> addContent
    147:178:void setContent(java.io.File) -> setContent
    182:186:void delete() -> delete
    190:195:byte[] get() -> get
    200:200:java.lang.String getString() -> getString
    205:211:java.lang.String getString(java.nio.charset.Charset) -> getString
    221:221:pro.gravit.repackage.io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    226:241:pro.gravit.repackage.io.netty.buffer.ByteBuf getChunk(int) -> getChunk
    246:246:boolean isInMemory() -> isInMemory
    251:283:boolean renameTo(java.io.File) -> renameTo
    288:288:java.io.File getFile() -> getFile
    293:293:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    298:301:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    39:39:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    39:39:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    39:39:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    39:39:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    39:39:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    39:39:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.AbstractMixedHttpData -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.AbstractMixedHttpData:
# {"fileName":"AbstractMixedHttpData.java","id":"sourceFile"}
    java.lang.String baseDir -> baseDir
    boolean deleteOnExit -> deleteOnExit
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData wrapped -> wrapped
    long limitSize -> limitSize
    33:38:void <init>(long,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData) -> <init>
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData makeDiskData() -> makeDiskData
    44:44:long getMaxSize() -> getMaxSize
    49:50:void setMaxSize(long) -> setMaxSize
    54:54:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    59:60:void checkSize(long) -> checkSize
    64:64:long definedLength() -> definedLength
    69:69:java.nio.charset.Charset getCharset() -> getCharset
    74:74:java.lang.String getName() -> getName
    79:97:void addContent(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> addContent
    101:102:void deallocate() -> deallocate
    106:107:void delete() -> delete
    111:111:byte[] get() -> get
    116:116:pro.gravit.repackage.io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    121:121:java.lang.String getString() -> getString
    126:126:java.lang.String getString(java.nio.charset.Charset) -> getString
    131:131:boolean isInMemory() -> isInMemory
    136:136:long length() -> length
    141:141:boolean renameTo(java.io.File) -> renameTo
    146:147:void setCharset(java.nio.charset.Charset) -> setCharset
    152:165:void setContent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setContent
    169:178:void setContent(java.io.File) -> setContent
    182:188:void setContent(java.io.InputStream) -> setContent
    192:192:boolean isCompleted() -> isCompleted
    197:197:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    202:202:int hashCode() -> hashCode
    207:207:boolean equals(java.lang.Object) -> equals
    212:212:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    217:217:java.lang.String toString() -> toString
    222:222:pro.gravit.repackage.io.netty.buffer.ByteBuf getChunk(int) -> getChunk
    227:227:java.io.File getFile() -> getFile
    233:233:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    239:239:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    245:245:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    251:251:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    257:258:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    264:265:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    271:271:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    277:277:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    26:26:int compareTo(java.lang.Object) -> compareTo
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute:
# {"fileName":"Attribute.java","id":"sourceFile"}
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.CaseIgnoringComparator -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.CaseIgnoringComparator:
# {"fileName":"CaseIgnoringComparator.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.CaseIgnoringComparator INSTANCE -> INSTANCE
    27:28:void <init>() -> <init>
    32:50:int compare(java.lang.CharSequence,java.lang.CharSequence) -> compare
    54:54:java.lang.Object readResolve() -> readResolve
    21:21:int compare(java.lang.Object,java.lang.Object) -> compare
    25:25:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.DefaultHttpDataFactory -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.DefaultHttpDataFactory:
# {"fileName":"DefaultHttpDataFactory.java","id":"sourceFile"}
    long MINSIZE -> MINSIZE
    long MAXSIZE -> MAXSIZE
    boolean useDisk -> useDisk
    boolean checkSize -> checkSize
    long minSize -> minSize
    long maxSize -> maxSize
    java.nio.charset.Charset charset -> charset
    java.lang.String baseDir -> baseDir
    boolean deleteOnExit -> deleteOnExit
    java.util.Map requestFileDeleteMap -> requestFileDeleteMap
    67:93:void <init>() -> <init>
    96:98:void <init>(java.nio.charset.Charset) -> <init>
    67:106:void <init>(boolean) -> <init>
    109:111:void <init>(boolean,java.nio.charset.Charset) -> <init>
    67:120:void <init>(long) -> <init>
    123:125:void <init>(long,java.nio.charset.Charset) -> <init>
    133:134:void setBaseDir(java.lang.String) -> setBaseDir
    143:144:void setDeleteOnExit(boolean) -> setDeleteOnExit
    148:149:void setMaxLimit(long) -> setMaxLimit
    155:160:java.util.List getList(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> getList
    165:181:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute createAttribute(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String) -> createAttribute
    186:202:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute createAttribute(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String,long) -> createAttribute
    210:214:void checkHttpDataSize(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData) -> checkHttpDataSize
    218:247:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute createAttribute(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String) -> createAttribute
    255:277:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload createFileUpload(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
    282:309:void removeHttpDataFromClean(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    313:319:void cleanRequestHttpData(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpData
    323:337:void cleanAllHttpData() -> cleanAllHttpData
    341:342:void cleanRequestHttpDatas(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpDatas
    346:347:void cleanAllHttpDatas() -> cleanAllHttpDatas
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.DeleteFileOnExitHook -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.DeleteFileOnExitHook:
# {"fileName":"DeleteFileOnExitHook.java","id":"sourceFile"}
    java.util.Set FILES -> FILES
    29:30:void <init>() -> <init>
    52:53:void remove(java.lang.String) -> remove
    61:62:void add(java.lang.String) -> add
    71:71:boolean checkFileExist(java.lang.String) -> checkFileExist
    78:81:void runHook() -> runHook
    27:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.DeleteFileOnExitHook$1 -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.DeleteFileOnExitHook$1:
# {"fileName":"DeleteFileOnExitHook.java","id":"sourceFile"}
    37:37:void <init>() -> <init>
    41:42:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.DiskAttribute -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.DiskAttribute:
# {"fileName":"DiskAttribute.java","id":"sourceFile"}
    java.lang.String baseDirectory -> baseDirectory
    boolean deleteOnExitTemporaryFile -> deleteOnExitTemporaryFile
    java.lang.String prefix -> prefix
    java.lang.String postfix -> postfix
    java.lang.String baseDir -> baseDir
    boolean deleteOnExit -> deleteOnExit
    48:49:void <init>(java.lang.String) -> <init>
    52:55:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    58:59:void <init>(java.lang.String,long) -> <init>
    62:65:void <init>(java.lang.String,long,java.lang.String,boolean) -> <init>
    68:69:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    72:75:void <init>(java.lang.String,java.nio.charset.Charset,java.lang.String,boolean) -> <init>
    78:79:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    82:85:void <init>(java.lang.String,long,java.nio.charset.Charset,java.lang.String,boolean) -> <init>
    88:89:void <init>(java.lang.String,java.lang.String) -> <init>
    92:93:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    97:101:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset,java.lang.String,boolean) -> <init>
    105:105:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    110:111:java.lang.String getValue() -> getValue
    116:124:void setValue(java.lang.String) -> setValue
    128:139:void addContent(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> addContent
    143:143:int hashCode() -> hashCode
    148:152:boolean equals(java.lang.Object) -> equals
    157:161:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    165:165:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute) -> compareTo
    171:173:java.lang.String toString() -> toString
    179:179:boolean deleteOnExit() -> deleteOnExit
    184:184:java.lang.String getBaseDirectory() -> getBaseDirectory
    189:189:java.lang.String getDiskFilename() -> getDiskFilename
    194:194:java.lang.String getPostfix() -> getPostfix
    199:199:java.lang.String getPrefix() -> getPrefix
    204:205:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute copy() -> copy
    210:211:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute duplicate() -> duplicate
    216:230:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retainedDuplicate() -> retainedDuplicate
    236:246:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    251:252:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    257:258:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retain() -> retain
    263:264:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute touch() -> touch
    269:270:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    31:31:int compareTo(java.lang.Object) -> compareTo
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    34:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.DiskFileUpload -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.DiskFileUpload:
# {"fileName":"DiskFileUpload.java","id":"sourceFile"}
    java.lang.String baseDirectory -> baseDirectory
    boolean deleteOnExitTemporaryFile -> deleteOnExitTemporaryFile
    java.lang.String prefix -> prefix
    java.lang.String postfix -> postfix
    java.lang.String baseDir -> baseDir
    boolean deleteOnExit -> deleteOnExit
    java.lang.String filename -> filename
    java.lang.String contentType -> contentType
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    52:58:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long,java.lang.String,boolean) -> <init>
    62:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    68:68:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    73:73:java.lang.String getFilename() -> getFilename
    78:79:void setFilename(java.lang.String) -> setFilename
    83:83:int hashCode() -> hashCode
    88:88:boolean equals(java.lang.Object) -> equals
    93:97:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    101:101:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload) -> compareTo
    106:107:void setContentType(java.lang.String) -> setContentType
    111:111:java.lang.String getContentType() -> getContentType
    116:116:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    121:122:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    126:141:java.lang.String toString() -> toString
    146:146:boolean deleteOnExit() -> deleteOnExit
    151:151:java.lang.String getBaseDirectory() -> getBaseDirectory
    156:156:java.lang.String getDiskFilename() -> getDiskFilename
    161:161:java.lang.String getPostfix() -> getPostfix
    166:166:java.lang.String getPrefix() -> getPrefix
    171:172:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    177:178:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    183:197:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate() -> retainedDuplicate
    203:214:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    219:220:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    225:226:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    231:232:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    237:238:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    31:31:int compareTo(java.lang.Object) -> compareTo
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    34:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload:
# {"fileName":"FileUpload.java","id":"sourceFile"}
    java.lang.String getFilename() -> getFilename
    void setFilename(java.lang.String) -> setFilename
    void setContentType(java.lang.String) -> setContentType
    java.lang.String getContentType() -> getContentType
    void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUploadUtil -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUploadUtil:
# {"fileName":"FileUploadUtil.java","id":"sourceFile"}
    20:20:void <init>() -> <init>
    23:23:int hashCode(pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload) -> hashCode
    27:27:boolean equals(pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload,pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload) -> equals
    31:31:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload,pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData:
# {"fileName":"HttpData.java","id":"sourceFile"}
    long getMaxSize() -> getMaxSize
    void setMaxSize(long) -> setMaxSize
    void checkSize(long) -> checkSize
    void setContent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setContent
    void addContent(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> addContent
    void setContent(java.io.File) -> setContent
    void setContent(java.io.InputStream) -> setContent
    boolean isCompleted() -> isCompleted
    long length() -> length
    long definedLength() -> definedLength
    void delete() -> delete
    byte[] get() -> get
    pro.gravit.repackage.io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    pro.gravit.repackage.io.netty.buffer.ByteBuf getChunk(int) -> getChunk
    java.lang.String getString() -> getString
    java.lang.String getString(java.nio.charset.Charset) -> getString
    void setCharset(java.nio.charset.Charset) -> setCharset
    java.nio.charset.Charset getCharset() -> getCharset
    boolean renameTo(java.io.File) -> renameTo
    boolean isInMemory() -> isInMemory
    java.io.File getFile() -> getFile
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory:
# {"fileName":"HttpDataFactory.java","id":"sourceFile"}
    void setMaxLimit(long) -> setMaxLimit
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute createAttribute(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String) -> createAttribute
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute createAttribute(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String,long) -> createAttribute
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute createAttribute(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String) -> createAttribute
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload createFileUpload(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> createFileUpload
    void removeHttpDataFromClean(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    void cleanRequestHttpData(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpData
    void cleanAllHttpData() -> cleanAllHttpData
    void cleanRequestHttpDatas(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> cleanRequestHttpDatas
    void cleanAllHttpDatas() -> cleanAllHttpDatas
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil:
# {"fileName":"HttpPostBodyUtil.java","id":"sourceFile"}
    int chunkSize -> chunkSize
    java.lang.String DEFAULT_BINARY_CONTENT_TYPE -> DEFAULT_BINARY_CONTENT_TYPE
    java.lang.String DEFAULT_TEXT_CONTENT_TYPE -> DEFAULT_TEXT_CONTENT_TYPE
    76:77:void <init>() -> <init>
    132:137:int findNonWhitespace(java.lang.String,int) -> findNonWhitespace
    146:151:int findEndOfString(java.lang.String) -> findEndOfString
    163:172:int findLineBreak(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> findLineBreak
    184:204:int findLastLineBreak(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> findLastLineBreak
    221:267:int findDelimiter(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,byte[],boolean) -> findDelimiter
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize:
# {"fileName":"HttpPostBodyUtil.java","id":"sourceFile"}
    byte[] bytes -> bytes
    int readerIndex -> readerIndex
    int pos -> pos
    int origPos -> origPos
    int limit -> limit
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    94:103:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    111:114:void setReadPosition(int) -> setReadPosition
    122:122:int getReadPosition(int) -> getReadPosition
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism:
# {"fileName":"HttpPostBodyUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BIT7 -> BIT7
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BIT8 -> BIT8
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism BINARY -> BINARY
    java.lang.String value -> value
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism[] $VALUES -> $VALUES
    46:46:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism[] values() -> values
    46:46:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostBodyUtil$TransferEncodingMechanism valueOf(java.lang.String) -> valueOf
    62:64:void <init>(java.lang.String,int,java.lang.String) -> <init>
    67:67:java.lang.String value() -> value
    72:72:java.lang.String toString() -> toString
    46:58:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder:
# {"fileName":"HttpPostMultipartRequestDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory factory -> factory
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest request -> request
    java.nio.charset.Charset charset -> charset
    boolean isLastChunk -> isLastChunk
    java.util.List bodyListHttpData -> bodyListHttpData
    java.util.Map bodyMapHttpData -> bodyMapHttpData
    pro.gravit.repackage.io.netty.buffer.ByteBuf undecodedChunk -> undecodedChunk
    int bodyListHttpDataRank -> bodyListHttpDataRank
    java.lang.String multipartDataBoundary -> multipartDataBoundary
    java.lang.String multipartMixedBoundary -> multipartMixedBoundary
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus currentStatus -> currentStatus
    java.util.Map currentFieldAttributes -> currentFieldAttributes
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload currentFileUpload -> currentFileUpload
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute currentAttribute -> currentAttribute
    boolean destroyed -> destroyed
    int discardThreshold -> discardThreshold
    java.lang.String FILENAME_ENCODED -> FILENAME_ENCODED
    143:144:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> <init>
    159:160:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> <init>
    79:214:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    217:221:void checkDestroyed() -> checkDestroyed
    230:231:boolean isMultipart() -> isMultipart
    241:242:void setDiscardThreshold(int) -> setDiscardThreshold
    249:249:int getDiscardThreshold() -> getDiscardThreshold
    264:269:java.util.List getBodyHttpDatas() -> getBodyHttpDatas
    285:290:java.util.List getBodyHttpDatas(java.lang.String) -> getBodyHttpDatas
    307:316:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData getBodyHttpData(java.lang.String) -> getBodyHttpData
    330:361:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder offer(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> offer
    376:384:boolean hasNext() -> hasNext
    401:406:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    411:414:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData currentPartialHttpData() -> currentPartialHttpData
    426:433:void parseBody() -> parseBody
    439:449:void addHttpData(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> addHttpData
    459:471:void parseBodyMultipart() -> parseBodyMultipart
    490:592:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData decodeMultipart(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus) -> decodeMultipart
    602:618:void skipControlCharacters(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> skipControlCharacters
    623:629:void skipControlCharactersStandard(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> skipControlCharactersStandard
    646:677:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDelimiter(java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus,pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus) -> findMultipartDelimiter
    687:824:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData findMultipartDisposition() -> findMultipartDisposition
    832:858:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute getContentDispositionAttribute(java.lang.String[]) -> getContentDispositionAttribute
    872:958:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData getFileUpload(java.lang.String) -> getFileUpload
    968:983:void destroy() -> destroy
    990:993:void cleanFiles() -> cleanFiles
    1000:1003:void removeHttpDataFromClean(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    1010:1015:void cleanMixedAttributes() -> cleanMixedAttributes
    1026:1053:java.lang.String readLineOptimized(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.nio.charset.Charset) -> readLineOptimized
    1072:1144:java.lang.String readDelimiterOptimized(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.String,java.nio.charset.Charset) -> readDelimiterOptimized
    1157:1170:void rewriteCurrentBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> rewriteCurrentBuffer
    1179:1242:boolean loadDataMultipartOptimized(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData) -> loadDataMultipartOptimized
    1251:1271:java.lang.String cleanString(java.lang.String) -> cleanString
    1280:1300:boolean skipOneLine() -> skipOneLine
    1310:1346:java.lang.String[] splitMultipartHeader(java.lang.String) -> splitMultipartHeader
    1354:1380:java.lang.String[] splitMultipartHeaderValues(java.lang.String) -> splitMultipartHeaderValues
    1391:1391:int getCurrentAllocatedCapacity() -> getCurrentAllocatedCapacity
    54:54:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> offer
    829:829:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder$1:
# {"fileName":"HttpPostMultipartRequestDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus -> $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus
    490:490:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:
# {"fileName":"HttpPostRequestDecoder.java","id":"sourceFile"}
    int DEFAULT_DISCARD_THRESHOLD -> DEFAULT_DISCARD_THRESHOLD
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder decoder -> decoder
    53:54:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> <init>
    69:70:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> <init>
    86:97:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    139:143:boolean isMultipart(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> isMultipart
    153:188:java.lang.String[] getMultipartDataBoundary(java.lang.String) -> getMultipartDataBoundary
    193:193:boolean isMultipart() -> isMultipart
    198:199:void setDiscardThreshold(int) -> setDiscardThreshold
    203:203:int getDiscardThreshold() -> getDiscardThreshold
    208:208:java.util.List getBodyHttpDatas() -> getBodyHttpDatas
    213:213:java.util.List getBodyHttpDatas(java.lang.String) -> getBodyHttpDatas
    218:218:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData getBodyHttpData(java.lang.String) -> getBodyHttpData
    223:223:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> offer
    228:228:boolean hasNext() -> hasNext
    233:233:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    238:238:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData currentPartialHttpData() -> currentPartialHttpData
    243:244:void destroy() -> destroy
    248:249:void cleanFiles() -> cleanFiles
    253:254:void removeHttpDataFromClean(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    268:287:java.lang.String[] splitHeaderContentType(java.lang.String) -> splitHeaderContentType
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$EndOfDataDecoderException:
# {"fileName":"HttpPostRequestDecoder.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    316:316:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException:
# {"fileName":"HttpPostRequestDecoder.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    326:327:void <init>() -> <init>
    330:331:void <init>(java.lang.String) -> <init>
    334:335:void <init>(java.lang.Throwable) -> <init>
    338:339:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus:
# {"fileName":"HttpPostRequestDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus NOTSTARTED -> NOTSTARTED
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus PREAMBLE -> PREAMBLE
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus HEADERDELIMITER -> HEADERDELIMITER
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus DISPOSITION -> DISPOSITION
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus FIELD -> FIELD
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus FILEUPLOAD -> FILEUPLOAD
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDPREAMBLE -> MIXEDPREAMBLE
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDDELIMITER -> MIXEDDELIMITER
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDDISPOSITION -> MIXEDDISPOSITION
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDFILEUPLOAD -> MIXEDFILEUPLOAD
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus MIXEDCLOSEDELIMITER -> MIXEDCLOSEDELIMITER
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus CLOSEDELIMITER -> CLOSEDELIMITER
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus PREEPILOGUE -> PREEPILOGUE
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus EPILOGUE -> EPILOGUE
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus[] $VALUES -> $VALUES
    129:129:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus[] values() -> values
    129:129:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus valueOf(java.lang.String) -> valueOf
    129:129:void <init>(java.lang.String,int) -> <init>
    129:131:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$NotEnoughDataDecoderException:
# {"fileName":"HttpPostRequestDecoder.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    297:298:void <init>() -> <init>
    301:302:void <init>(java.lang.String) -> <init>
    305:306:void <init>(java.lang.Throwable) -> <init>
    309:310:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder:
# {"fileName":"HttpPostRequestEncoder.java","id":"sourceFile"}
    java.util.Map$Entry[] percentEncodings -> percentEncodings
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory factory -> factory
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest request -> request
    java.nio.charset.Charset charset -> charset
    boolean isChunked -> isChunked
    java.util.List bodyListDatas -> bodyListDatas
    java.util.List multipartHttpDatas -> multipartHttpDatas
    boolean isMultipart -> isMultipart
    java.lang.String multipartDataBoundary -> multipartDataBoundary
    java.lang.String multipartMixedBoundary -> multipartMixedBoundary
    boolean headerFinalized -> headerFinalized
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode encoderMode -> encoderMode
    boolean isLastChunk -> isLastChunk
    boolean isLastChunkSent -> isLastChunkSent
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload currentFileUpload -> currentFileUpload
    boolean duringMixedMode -> duringMixedMode
    long globalBodySize -> globalBodySize
    long globalProgress -> globalProgress
    java.util.ListIterator iterator -> iterator
    pro.gravit.repackage.io.netty.buffer.ByteBuf currentBuffer -> currentBuffer
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData currentData -> currentData
    boolean isKey -> isKey
    170:172:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,boolean) -> <init>
    189:190:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,boolean) -> <init>
    212:865:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,boolean,java.nio.charset.Charset,pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode) -> <init>
    236:237:void cleanFiles() -> cleanFiles
    270:270:boolean isMultipart() -> isMultipart
    277:278:void initDataMultipart() -> initDataMultipart
    284:285:void initMixedMultipart() -> initMixedMultipart
    293:293:java.lang.String getNewMultipartDelimiter() -> getNewMultipartDelimiter
    302:302:java.util.List getBodyListAttributes() -> getBodyListAttributes
    314:323:void setBodyHttpDatas(java.util.List) -> setBodyHttpDatas
    338:341:void addBodyAttribute(java.lang.String,java.lang.String) -> addBodyAttribute
    361:362:void addBodyFileUpload(java.lang.String,java.io.File,java.lang.String,boolean) -> addBodyFileUpload
    385:410:void addBodyFileUpload(java.lang.String,java.lang.String,java.io.File,java.lang.String,boolean) -> addBodyFileUpload
    430:436:void addBodyFileUploads(java.lang.String,java.io.File[],java.lang.String[],boolean[]) -> addBodyFileUploads
    447:719:void addBodyHttpData(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> addBodyHttpData
    738:816:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest finalizeRequest() -> finalizeRequest
    825:825:boolean isChunked() -> isChunked
    837:850:java.lang.String encodeAttribute(java.lang.String,java.nio.charset.Charset) -> encodeAttribute
    872:879:pro.gravit.repackage.io.netty.buffer.ByteBuf fillByteBuf() -> fillByteBuf
    894:923:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent encodeNextChunkMultipart(int) -> encodeNextChunkMultipart
    937:1019:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent encodeNextChunkUrlEncoded(int) -> encodeNextChunkUrlEncoded
    1026:1026:void close() -> close
    1031:1031:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    1044:1049:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    1062:1108:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent nextChunk() -> nextChunk
    1112:1116:int calculateRemainingSize() -> calculateRemainingSize
    1120:1129:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent lastChunk() -> lastChunk
    1134:1134:boolean isEndOfInput() -> isEndOfInput
    1139:1139:long length() -> length
    1144:1144:long progress() -> progress
    68:68:java.lang.Object readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    68:68:java.lang.Object readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    101:106:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$1 -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$1:
# {"fileName":"HttpPostRequestEncoder.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode:
# {"fileName":"HttpPostRequestEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode RFC1738 -> RFC1738
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode RFC3986 -> RFC3986
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode HTML5 -> HTML5
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode[] $VALUES -> $VALUES
    73:73:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode[] values() -> values
    73:73:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$EncoderMode valueOf(java.lang.String) -> valueOf
    73:73:void <init>(java.lang.String,int) -> <init>
    73:94:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$ErrorDataEncoderException:
# {"fileName":"HttpPostRequestEncoder.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    1153:1154:void <init>() -> <init>
    1157:1158:void <init>(java.lang.String) -> <init>
    1161:1162:void <init>(java.lang.Throwable) -> <init>
    1165:1166:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedFullHttpRequest -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedFullHttpRequest:
# {"fileName":"HttpPostRequestEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpContent content -> content
    1249:1251:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> <init>
    1255:1256:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    1261:1262:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    1267:1268:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String) -> setUri
    1273:1273:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest copy() -> copy
    1278:1278:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest duplicate() -> duplicate
    1283:1283:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retainedDuplicate() -> retainedDuplicate
    1288:1291:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    1296:1297:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retain(int) -> retain
    1302:1303:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest retain() -> retain
    1308:1309:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest touch() -> touch
    1314:1315:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest touch(java.lang.Object) -> touch
    1320:1320:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    1325:1328:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders trailingHeaders() -> trailingHeaders
    1334:1334:int refCnt() -> refCnt
    1339:1339:boolean release() -> release
    1344:1344:boolean release(int) -> release
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch(java.lang.Object) -> touch
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage touch() -> touch
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain() -> retain
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retain(int) -> retain
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage retainedDuplicate() -> retainedDuplicate
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage duplicate() -> duplicate
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage copy() -> copy
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch(java.lang.Object) -> touch
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent touch() -> touch
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain() -> retain
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retain(int) -> retain
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent retainedDuplicate() -> retainedDuplicate
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent duplicate() -> duplicate
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.LastHttpContent copy() -> copy
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch(java.lang.Object) -> touch
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent touch() -> touch
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain(int) -> retain
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retain() -> retain
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent retainedDuplicate() -> retainedDuplicate
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent duplicate() -> duplicate
    1245:1245:pro.gravit.repackage.io.netty.handler.codec.http.HttpContent copy() -> copy
    1245:1245:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    1245:1245:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    1245:1245:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    1245:1245:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    1245:1245:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    1245:1245:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    1245:1245:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    1245:1245:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    1245:1245:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    1245:1245:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    1245:1245:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    1245:1245:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    1245:1245:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpContent,pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedHttpRequest -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestEncoder$WrappedHttpRequest:
# {"fileName":"HttpPostRequestEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest request -> request
    1171:1173:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> <init>
    1177:1178:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    1183:1184:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setMethod(pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod) -> setMethod
    1189:1190:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest setUri(java.lang.String) -> setUri
    1195:1195:pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod getMethod() -> getMethod
    1200:1200:pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod method() -> method
    1205:1205:java.lang.String getUri() -> getUri
    1210:1210:java.lang.String uri() -> uri
    1215:1215:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion getProtocolVersion() -> getProtocolVersion
    1220:1220:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion protocolVersion() -> protocolVersion
    1225:1225:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders headers() -> headers
    1230:1230:pro.gravit.repackage.io.netty.handler.codec.DecoderResult decoderResult() -> decoderResult
    1236:1236:pro.gravit.repackage.io.netty.handler.codec.DecoderResult getDecoderResult() -> getDecoderResult
    1241:1242:void setDecoderResult(pro.gravit.repackage.io.netty.handler.codec.DecoderResult) -> setDecoderResult
    1169:1169:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage setProtocolVersion(pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion) -> setProtocolVersion
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder:
# {"fileName":"HttpPostStandardRequestDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory factory -> factory
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest request -> request
    java.nio.charset.Charset charset -> charset
    boolean isLastChunk -> isLastChunk
    java.util.List bodyListHttpData -> bodyListHttpData
    java.util.Map bodyMapHttpData -> bodyMapHttpData
    pro.gravit.repackage.io.netty.buffer.ByteBuf undecodedChunk -> undecodedChunk
    int bodyListHttpDataRank -> bodyListHttpDataRank
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$MultiPartStatus currentStatus -> currentStatus
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute currentAttribute -> currentAttribute
    boolean destroyed -> destroyed
    int discardThreshold -> discardThreshold
    117:118:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> <init>
    133:134:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> <init>
    74:166:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpDataFactory,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset) -> <init>
    169:173:void checkDestroyed() -> checkDestroyed
    182:183:boolean isMultipart() -> isMultipart
    193:194:void setDiscardThreshold(int) -> setDiscardThreshold
    201:201:int getDiscardThreshold() -> getDiscardThreshold
    216:221:java.util.List getBodyHttpDatas() -> getBodyHttpDatas
    237:242:java.util.List getBodyHttpDatas(java.lang.String) -> getBodyHttpDatas
    259:268:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData getBodyHttpData(java.lang.String) -> getBodyHttpData
    282:313:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder offer(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> offer
    328:336:boolean hasNext() -> hasNext
    353:358:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    363:363:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData currentPartialHttpData() -> currentPartialHttpData
    374:381:void parseBody() -> parseBody
    387:397:void addHttpData(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> addHttpData
    408:515:void parseBodyAttributesStandard() -> parseBodyAttributesStandard
    526:650:void parseBodyAttributes() -> parseBodyAttributes
    653:660:void setFinalBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setFinalBuffer
    669:671:java.lang.String decodeAttribute(java.lang.String,java.nio.charset.Charset) -> decodeAttribute
    676:694:pro.gravit.repackage.io.netty.buffer.ByteBuf decodeAttribute(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.nio.charset.Charset) -> decodeAttribute
    704:719:void destroy() -> destroy
    726:729:void cleanFiles() -> cleanFiles
    736:739:void removeHttpDataFromClean(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    49:49:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> offer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$1:
# {"fileName":"HttpPostStandardRequestDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus -> $SwitchMap$io$netty$handler$codec$http$multipart$HttpPostRequestDecoder$MultiPartStatus
    420:420:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$UrlDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$UrlDecoder:
# {"fileName":"HttpPostStandardRequestDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf output -> output
    int nextEscapedIdx -> nextEscapedIdx
    byte hiByte -> hiByte
    754:756:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    760:781:boolean process(byte) -> process
    748:748:int access$100(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$UrlDecoder) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$UrlEncodedDetector -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$UrlEncodedDetector:
# {"fileName":"HttpPostStandardRequestDecoder.java","id":"sourceFile"}
    741:741:void <init>() -> <init>
    744:744:boolean process(byte) -> process
    741:741:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData:
# {"fileName":"InterfaceHttpData.java","id":"sourceFile"}
    java.lang.String getName() -> getName
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType:
# {"fileName":"InterfaceHttpData.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType Attribute -> Attribute
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType FileUpload -> FileUpload
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType InternalAttribute -> InternalAttribute
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType[] $VALUES -> $VALUES
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType[] values() -> values
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:25:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder:
# {"fileName":"InterfaceHttpPostRequestDecoder.java","id":"sourceFile"}
    boolean isMultipart() -> isMultipart
    void setDiscardThreshold(int) -> setDiscardThreshold
    int getDiscardThreshold() -> getDiscardThreshold
    java.util.List getBodyHttpDatas() -> getBodyHttpDatas
    java.util.List getBodyHttpDatas(java.lang.String) -> getBodyHttpDatas
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData getBodyHttpData(java.lang.String) -> getBodyHttpData
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpPostRequestDecoder offer(pro.gravit.repackage.io.netty.handler.codec.http.HttpContent) -> offer
    boolean hasNext() -> hasNext
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData next() -> next
    pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData currentPartialHttpData() -> currentPartialHttpData
    void destroy() -> destroy
    void cleanFiles() -> cleanFiles
    void removeHttpDataFromClean(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> removeHttpDataFromClean
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.InternalAttribute -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.InternalAttribute:
# {"fileName":"InternalAttribute.java","id":"sourceFile"}
    java.util.List value -> value
    java.nio.charset.Charset charset -> charset
    int size -> size
    32:38:void <init>(java.nio.charset.Charset) -> <init>
    42:42:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    46:50:void addValue(java.lang.String) -> addValue
    53:57:void addValue(java.lang.String,int) -> addValue
    60:68:void setValue(java.lang.String,int) -> setValue
    72:72:int hashCode() -> hashCode
    77:81:boolean equals(java.lang.Object) -> equals
    86:90:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    94:94:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InternalAttribute) -> compareTo
    99:103:java.lang.String toString() -> toString
    107:107:int size() -> size
    111:111:pro.gravit.repackage.io.netty.buffer.ByteBuf toByteBuf() -> toByteBuf
    116:116:java.lang.String getName() -> getName
    122:122:void deallocate() -> deallocate
    126:129:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    134:137:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    142:145:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    150:153:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.MemoryAttribute -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.MemoryAttribute:
# {"fileName":"MemoryAttribute.java","id":"sourceFile"}
    34:35:void <init>(java.lang.String) -> <init>
    38:39:void <init>(java.lang.String,long) -> <init>
    42:43:void <init>(java.lang.String,java.nio.charset.Charset) -> <init>
    46:47:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    50:51:void <init>(java.lang.String,java.lang.String) -> <init>
    54:56:void <init>(java.lang.String,java.lang.String,java.nio.charset.Charset) -> <init>
    60:60:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    65:65:java.lang.String getValue() -> getValue
    70:78:void setValue(java.lang.String) -> setValue
    82:93:void addContent(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> addContent
    97:97:int hashCode() -> hashCode
    102:106:boolean equals(java.lang.Object) -> equals
    111:115:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    119:119:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute) -> compareTo
    124:124:java.lang.String toString() -> toString
    129:130:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute copy() -> copy
    135:136:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute duplicate() -> duplicate
    141:155:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retainedDuplicate() -> retainedDuplicate
    161:171:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    176:177:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retain() -> retain
    182:183:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    188:189:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute touch() -> touch
    194:195:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    31:31:int compareTo(java.lang.Object) -> compareTo
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.MemoryFileUpload -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.MemoryFileUpload:
# {"fileName":"MemoryFileUpload.java","id":"sourceFile"}
    java.lang.String filename -> filename
    java.lang.String contentType -> contentType
    java.lang.String contentTransferEncoding -> contentTransferEncoding
    42:46:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long) -> <init>
    50:50:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    55:55:java.lang.String getFilename() -> getFilename
    60:61:void setFilename(java.lang.String) -> setFilename
    65:65:int hashCode() -> hashCode
    70:70:boolean equals(java.lang.Object) -> equals
    75:79:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    83:83:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload) -> compareTo
    88:89:void setContentType(java.lang.String) -> setContentType
    93:93:java.lang.String getContentType() -> getContentType
    98:98:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    103:104:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    108:115:java.lang.String toString() -> toString
    120:121:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    126:127:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    132:146:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate() -> retainedDuplicate
    152:162:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    167:168:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    173:174:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    179:180:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    185:186:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    32:32:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    32:32:int compareTo(java.lang.Object) -> compareTo
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    32:32:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    32:32:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.MixedAttribute -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.MixedAttribute:
# {"fileName":"MixedAttribute.java","id":"sourceFile"}
    29:30:void <init>(java.lang.String,long) -> <init>
    33:34:void <init>(java.lang.String,long,long) -> <init>
    37:38:void <init>(java.lang.String,long,java.nio.charset.Charset) -> <init>
    41:42:void <init>(java.lang.String,long,java.nio.charset.Charset,java.lang.String,boolean) -> <init>
    45:47:void <init>(java.lang.String,long,long,java.nio.charset.Charset) -> <init>
    51:53:void <init>(java.lang.String,long,long,java.nio.charset.Charset,java.lang.String,boolean) -> <init>
    56:58:void <init>(java.lang.String,java.lang.String,long) -> <init>
    61:63:void <init>(java.lang.String,java.lang.String,long,java.nio.charset.Charset) -> <init>
    67:82:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute makeInitialAttributeFromValue(java.lang.String,java.lang.String,long,java.nio.charset.Charset,java.lang.String,boolean) -> makeInitialAttributeFromValue
    89:91:void <init>(java.lang.String,java.lang.String,long,java.nio.charset.Charset,java.lang.String,boolean) -> <init>
    95:95:java.lang.String getValue() -> getValue
    100:101:void setValue(java.lang.String) -> setValue
    105:107:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute makeDiskData() -> makeDiskData
    113:113:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute copy() -> copy
    119:119:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute duplicate() -> duplicate
    125:125:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    131:131:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retain() -> retain
    137:137:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retain(int) -> retain
    143:143:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute retainedDuplicate() -> retainedDuplicate
    149:149:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute touch() -> touch
    155:155:pro.gravit.repackage.io.netty.handler.codec.http.multipart.Attribute touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    27:27:java.io.File getFile() -> getFile
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBuf getChunk(int) -> getChunk
    27:27:java.lang.String toString() -> toString
    27:27:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    27:27:boolean equals(java.lang.Object) -> equals
    27:27:int hashCode() -> hashCode
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    27:27:boolean isCompleted() -> isCompleted
    27:27:void setContent(java.io.InputStream) -> setContent
    27:27:void setContent(java.io.File) -> setContent
    27:27:void setContent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setContent
    27:27:void setCharset(java.nio.charset.Charset) -> setCharset
    27:27:boolean renameTo(java.io.File) -> renameTo
    27:27:long length() -> length
    27:27:boolean isInMemory() -> isInMemory
    27:27:java.lang.String getString(java.nio.charset.Charset) -> getString
    27:27:java.lang.String getString() -> getString
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    27:27:byte[] get() -> get
    27:27:void delete() -> delete
    27:27:void addContent(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> addContent
    27:27:java.lang.String getName() -> getName
    27:27:java.nio.charset.Charset getCharset() -> getCharset
    27:27:long definedLength() -> definedLength
    27:27:void checkSize(long) -> checkSize
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    27:27:void setMaxSize(long) -> setMaxSize
    27:27:long getMaxSize() -> getMaxSize
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData makeDiskData() -> makeDiskData
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.multipart.MixedFileUpload -> pro.gravit.repackage.io.netty.handler.codec.http.multipart.MixedFileUpload:
# {"fileName":"MixedFileUpload.java","id":"sourceFile"}
    30:32:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long,long) -> <init>
    37:42:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long,long,java.lang.String,boolean) -> <init>
    46:46:java.lang.String getContentTransferEncoding() -> getContentTransferEncoding
    51:51:java.lang.String getFilename() -> getFilename
    56:57:void setContentTransferEncoding(java.lang.String) -> setContentTransferEncoding
    61:62:void setFilename(java.lang.String) -> setFilename
    66:67:void setContentType(java.lang.String) -> setContentType
    71:71:java.lang.String getContentType() -> getContentType
    76:80:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload makeDiskData() -> makeDiskData
    86:86:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload copy() -> copy
    92:92:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload duplicate() -> duplicate
    98:98:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate() -> retainedDuplicate
    104:104:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    110:110:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload touch() -> touch
    116:116:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object) -> touch
    122:122:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retain() -> retain
    128:128:pro.gravit.repackage.io.netty.handler.codec.http.multipart.FileUpload retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retain() -> retain
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData touch() -> touch
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData retainedDuplicate() -> retainedDuplicate
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData duplicate() -> duplicate
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData copy() -> copy
    25:25:java.io.File getFile() -> getFile
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBuf getChunk(int) -> getChunk
    25:25:java.lang.String toString() -> toString
    25:25:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData) -> compareTo
    25:25:boolean equals(java.lang.Object) -> equals
    25:25:int hashCode() -> hashCode
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType() -> getHttpDataType
    25:25:boolean isCompleted() -> isCompleted
    25:25:void setContent(java.io.InputStream) -> setContent
    25:25:void setContent(java.io.File) -> setContent
    25:25:void setContent(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setContent
    25:25:void setCharset(java.nio.charset.Charset) -> setCharset
    25:25:boolean renameTo(java.io.File) -> renameTo
    25:25:long length() -> length
    25:25:boolean isInMemory() -> isInMemory
    25:25:java.lang.String getString(java.nio.charset.Charset) -> getString
    25:25:java.lang.String getString() -> getString
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBuf getByteBuf() -> getByteBuf
    25:25:byte[] get() -> get
    25:25:void delete() -> delete
    25:25:void addContent(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> addContent
    25:25:java.lang.String getName() -> getName
    25:25:java.nio.charset.Charset getCharset() -> getCharset
    25:25:long definedLength() -> definedLength
    25:25:void checkSize(long) -> checkSize
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    25:25:void setMaxSize(long) -> setMaxSize
    25:25:long getMaxSize() -> getMaxSize
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.HttpData makeDiskData() -> makeDiskData
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData touch() -> touch
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.multipart.InterfaceHttpData retain() -> retain
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame:
# {"fileName":"BinaryWebSocketFrame.java","id":"sourceFile"}
    30:31:void <init>() -> <init>
    40:41:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    59:59:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame copy() -> copy
    64:64:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame duplicate() -> duplicate
    69:69:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retainedDuplicate() -> retainedDuplicate
    74:74:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    79:80:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain() -> retain
    85:86:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame retain(int) -> retain
    91:92:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame touch() -> touch
    97:98:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame:
# {"fileName":"CloseWebSocketFrame.java","id":"sourceFile"}
    32:33:void <init>() -> <init>
    43:44:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus) -> <init>
    56:57:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,java.lang.String) -> <init>
    69:70:void <init>(int,java.lang.String) -> <init>
    81:82:void <init>(boolean,int) -> <init>
    98:99:void <init>(boolean,int,int,java.lang.String) -> <init>
    102:111:pro.gravit.repackage.io.netty.buffer.ByteBuf newBinaryData(int,java.lang.String) -> newBinaryData
    125:126:void <init>(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    133:138:int statusCode() -> statusCode
    146:151:java.lang.String reasonText() -> reasonText
    156:156:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame copy() -> copy
    161:161:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame duplicate() -> duplicate
    166:166:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retainedDuplicate() -> retainedDuplicate
    171:171:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    176:177:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain() -> retain
    182:183:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame retain(int) -> retain
    188:189:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame touch() -> touch
    194:195:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame touch(java.lang.Object) -> touch
    199:202:int requireValidStatusCode(int) -> requireValidStatusCode
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame:
# {"fileName":"ContinuationWebSocketFrame.java","id":"sourceFile"}
    32:33:void <init>() -> <init>
    42:43:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    56:57:void <init>(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    70:71:void <init>(boolean,int,java.lang.String) -> <init>
    77:77:java.lang.String text() -> text
    87:90:pro.gravit.repackage.io.netty.buffer.ByteBuf fromText(java.lang.String) -> fromText
    96:96:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame copy() -> copy
    101:101:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame duplicate() -> duplicate
    106:106:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retainedDuplicate() -> retainedDuplicate
    111:111:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    116:117:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain() -> retain
    122:123:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame retain(int) -> retain
    128:129:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame touch() -> touch
    134:135:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    26:26:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    26:26:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CorruptedWebSocketFrameException -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CorruptedWebSocketFrameException:
# {"fileName":"CorruptedWebSocketFrameException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus closeStatus -> closeStatus
    35:36:void <init>() -> <init>
    42:44:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,java.lang.String,java.lang.Throwable) -> <init>
    50:51:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,java.lang.String) -> <init>
    57:58:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,java.lang.Throwable) -> <init>
    61:61:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus closeStatus() -> closeStatus
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame:
# {"fileName":"PingWebSocketFrame.java","id":"sourceFile"}
    30:31:void <init>() -> <init>
    40:41:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    59:59:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame copy() -> copy
    64:64:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame duplicate() -> duplicate
    69:69:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame retainedDuplicate() -> retainedDuplicate
    74:74:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    79:80:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame retain() -> retain
    85:86:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame retain(int) -> retain
    91:92:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame touch() -> touch
    97:98:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PingWebSocketFrame touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame:
# {"fileName":"PongWebSocketFrame.java","id":"sourceFile"}
    30:31:void <init>() -> <init>
    40:41:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    54:55:void <init>(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    59:59:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame copy() -> copy
    64:64:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame duplicate() -> duplicate
    69:69:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame retainedDuplicate() -> retainedDuplicate
    74:74:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    79:80:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame retain() -> retain
    85:86:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame retain(int) -> retain
    91:92:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame touch() -> touch
    97:98:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.PongWebSocketFrame touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    24:24:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    24:24:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    24:24:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame:
# {"fileName":"TextWebSocketFrame.java","id":"sourceFile"}
    31:32:void <init>() -> <init>
    41:42:void <init>(java.lang.String) -> <init>
    51:52:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    65:66:void <init>(boolean,int,java.lang.String) -> <init>
    69:72:pro.gravit.repackage.io.netty.buffer.ByteBuf fromText(java.lang.String) -> fromText
    87:88:void <init>(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    94:94:java.lang.String text() -> text
    99:99:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame copy() -> copy
    104:104:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame duplicate() -> duplicate
    109:109:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame retainedDuplicate() -> retainedDuplicate
    114:114:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    119:120:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame retain() -> retain
    125:126:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame retain(int) -> retain
    131:132:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame touch() -> touch
    137:138:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.TextWebSocketFrame touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    25:25:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.Utf8FrameValidator -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.Utf8FrameValidator:
# {"fileName":"Utf8FrameValidator.java","id":"sourceFile"}
    boolean closeOnProtocolViolation -> closeOnProtocolViolation
    int fragmentedFramesCount -> fragmentedFramesCount
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.Utf8Validator utf8Validator -> utf8Validator
    34:35:void <init>() -> <init>
    37:39:void <init>(boolean) -> <init>
    43:90:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    93:97:void checkUTF8String(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> checkUTF8String
    101:113:void protocolViolation(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CorruptedWebSocketFrameException) -> protocolViolation
    118:119:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.Utf8Validator -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.Utf8Validator:
# {"fileName":"Utf8Validator.java","id":"sourceFile"}
    int UTF8_ACCEPT -> UTF8_ACCEPT
    int UTF8_REJECT -> UTF8_REJECT
    byte[] TYPES -> TYPES
    byte[] STATES -> STATES
    int state -> state
    int codep -> codep
    boolean checking -> checking
    44:66:void <init>() -> <init>
    72:74:void check(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> check
    77:79:void check(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> check
    82:89:void finish() -> finish
    93:104:boolean process(byte) -> process
    108:108:boolean isChecking() -> isChecking
    48:59:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder:
# {"fileName":"WebSocket00FrameDecoder.java","id":"sourceFile"}
    int DEFAULT_MAX_FRAME_SIZE -> DEFAULT_MAX_FRAME_SIZE
    long maxFrameSize -> maxFrameSize
    boolean receivedClosingHandshake -> receivedClosingHandshake
    42:43:void <init>() -> <init>
    52:54:void <init>(int) -> <init>
    63:65:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    70:89:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    92:114:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame decodeBinaryFrame(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,byte,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decodeBinaryFrame
    118:146:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame decodeTextFrame(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decodeTextFrame
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder:
# {"fileName":"WebSocket00FrameEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf _0X00 -> _0X00
    pro.gravit.repackage.io.netty.buffer.ByteBuf _0XFF -> _0XFF
    pro.gravit.repackage.io.netty.buffer.ByteBuf _0XFF_0X00 -> _0XFF_0X00
    33:33:void <init>() -> <init>
    43:98:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> encode
    32:32:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    34:39:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder:
# {"fileName":"WebSocket07FrameDecoder.java","id":"sourceFile"}
    74:79:void <init>(boolean,boolean,int) -> <init>
    98:104:void <init>(boolean,boolean,int,boolean) -> <init>
    113:114:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder:
# {"fileName":"WebSocket07FrameEncoder.java","id":"sourceFile"}
    71:72:void <init>(boolean) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder:
# {"fileName":"WebSocket08FrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    byte OPCODE_CONT -> OPCODE_CONT
    byte OPCODE_TEXT -> OPCODE_TEXT
    byte OPCODE_BINARY -> OPCODE_BINARY
    byte OPCODE_CLOSE -> OPCODE_CLOSE
    byte OPCODE_PING -> OPCODE_PING
    byte OPCODE_PONG -> OPCODE_PONG
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig config -> config
    int fragmentedFramesCount -> fragmentedFramesCount
    boolean frameFinalFlag -> frameFinalFlag
    boolean frameMasked -> frameMasked
    int frameRsv -> frameRsv
    int frameOpcode -> frameOpcode
    long framePayloadLength -> framePayloadLength
    int mask -> mask
    int framePayloadLen1 -> framePayloadLen1
    boolean receivedClosingHandshake -> receivedClosingHandshake
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State state -> state
    122:123:void <init>(boolean,boolean,int) -> <init>
    142:148:void <init>(boolean,boolean,int,boolean) -> <init>
    107:158:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    163:388:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    393:420:void unmask(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unmask
    423:424:void protocolViolation(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.String) -> protocolViolation
    427:428:void protocolViolation(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,java.lang.String) -> protocolViolation
    431:452:void protocolViolation(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CorruptedWebSocketFrameException) -> protocolViolation
    456:459:int toFrameLength(long) -> toFrameLength
    466:487:void checkCloseFrameBody(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> checkCloseFrameBody
    87:87:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$1:
# {"fileName":"WebSocket08FrameDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$http$websocketx$WebSocket08FrameDecoder$State -> $SwitchMap$io$netty$handler$codec$http$websocketx$WebSocket08FrameDecoder$State
    168:168:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State:
# {"fileName":"WebSocket08FrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_FIRST -> READING_FIRST
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_SECOND -> READING_SECOND
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State READING_SIZE -> READING_SIZE
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State MASKING_KEY -> MASKING_KEY
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State PAYLOAD -> PAYLOAD
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State CORRUPT -> CORRUPT
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State[] $VALUES -> $VALUES
    78:78:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State[] values() -> values
    78:78:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder$State valueOf(java.lang.String) -> valueOf
    78:78:void <init>(java.lang.String,int) -> <init>
    78:84:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder:
# {"fileName":"WebSocket08FrameEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    byte OPCODE_CONT -> OPCODE_CONT
    byte OPCODE_TEXT -> OPCODE_TEXT
    byte OPCODE_BINARY -> OPCODE_BINARY
    byte OPCODE_CLOSE -> OPCODE_CLOSE
    byte OPCODE_PING -> OPCODE_PING
    byte OPCODE_PONG -> OPCODE_PONG
    int GATHERING_WRITE_THRESHOLD -> GATHERING_WRITE_THRESHOLD
    boolean maskPayload -> maskPayload
    101:103:void <init>(boolean) -> <init>
    107:231:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> encode
    73:73:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    75:75:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder:
# {"fileName":"WebSocket13FrameDecoder.java","id":"sourceFile"}
    74:75:void <init>(boolean,boolean,int) -> <init>
    94:100:void <init>(boolean,boolean,int,boolean) -> <init>
    109:110:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder:
# {"fileName":"WebSocket13FrameEncoder.java","id":"sourceFile"}
    71:72:void <init>(boolean) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketChunkedInput -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketChunkedInput:
# {"fileName":"WebSocketChunkedInput.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.stream.ChunkedInput input -> input
    int rsv -> rsv
    40:41:void <init>(pro.gravit.repackage.io.netty.handler.stream.ChunkedInput) -> <init>
    50:53:void <init>(pro.gravit.repackage.io.netty.handler.stream.ChunkedInput,int) -> <init>
    61:61:boolean isEndOfInput() -> isEndOfInput
    69:70:void close() -> close
    85:85:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    98:102:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    107:107:long length() -> length
    112:112:long progress() -> progress
    31:31:java.lang.Object readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    31:31:java.lang.Object readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException:
# {"fileName":"WebSocketClientHandshakeException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse response -> response
    36:37:void <init>(java.lang.String) -> <init>
    40:47:void <init>(java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> <init>
    53:53:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse response() -> response
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:
# {"fileName":"WebSocketClientHandshaker.java","id":"sourceFile"}
    java.lang.String HTTP_SCHEME_PREFIX -> HTTP_SCHEME_PREFIX
    java.lang.String HTTPS_SCHEME_PREFIX -> HTTPS_SCHEME_PREFIX
    int DEFAULT_FORCE_CLOSE_TIMEOUT_MILLIS -> DEFAULT_FORCE_CLOSE_TIMEOUT_MILLIS
    java.net.URI uri -> uri
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion version -> version
    boolean handshakeComplete -> handshakeComplete
    long forceCloseTimeoutMillis -> forceCloseTimeoutMillis
    int forceCloseInit -> forceCloseInit
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater FORCE_CLOSE_INIT_UPDATER -> FORCE_CLOSE_INIT_UPDATER
    boolean forceCloseComplete -> forceCloseComplete
    java.lang.String expectedSubprotocol -> expectedSubprotocol
    java.lang.String actualSubprotocol -> actualSubprotocol
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders customHeaders -> customHeaders
    int maxFramePayloadLength -> maxFramePayloadLength
    boolean absoluteUpgradeUrl -> absoluteUpgradeUrl
    boolean generateOriginHeader -> generateOriginHeader
    107:108:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    130:131:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,long) -> <init>
    156:158:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,long,boolean) -> <init>
    69:194:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,long,boolean,boolean) -> <init>
    200:200:java.net.URI uri() -> uri
    207:207:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion version() -> version
    214:214:int maxFramePayloadLength() -> maxFramePayloadLength
    221:221:boolean isHandshakeComplete() -> isHandshakeComplete
    225:226:void setHandshakeComplete() -> setHandshakeComplete
    232:232:java.lang.String expectedSubprotocol() -> expectedSubprotocol
    240:240:java.lang.String actualSubprotocol() -> actualSubprotocol
    244:245:void setActualSubprotocol(java.lang.String) -> setActualSubprotocol
    248:248:long forceCloseTimeoutMillis() -> forceCloseTimeoutMillis
    256:256:boolean isForceCloseComplete() -> isForceCloseComplete
    266:267:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    277:278:pro.gravit.repackage.io.netty.channel.ChannelFuture handshake(pro.gravit.repackage.io.netty.channel.Channel) -> handshake
    290:347:pro.gravit.repackage.io.netty.channel.ChannelFuture handshake(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> handshake
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    364:449:void finishHandshake(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> finishHandshake
    462:462:pro.gravit.repackage.io.netty.channel.ChannelFuture processHandshake(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> processHandshake
    479:601:pro.gravit.repackage.io.netty.channel.ChannelFuture processHandshake(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> processHandshake
    void verify(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> verify
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    631:632:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> close
    649:650:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    662:663:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> close
    677:678:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    683:718:pro.gravit.repackage.io.netty.channel.ChannelFuture close0(pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close0
    725:732:java.lang.String upgradeUrl(java.net.URI) -> upgradeUrl
    736:755:java.lang.CharSequence websocketHostValue(java.net.URI) -> websocketHostValue
    759:782:java.lang.CharSequence websocketOriginValue(java.net.URI) -> websocketOriginValue
    57:57:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$000() -> access$000
    57:57:boolean access$102(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean) -> access$102
    59:74:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$1:
# {"fileName":"WebSocketClientHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    325:325:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    328:345:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    325:325:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$2:
# {"fileName":"WebSocketClientHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPipeline val$p -> val$p
    pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec val$codec -> val$codec
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    425:425:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,pro.gravit.repackage.io.netty.channel.ChannelPipeline,pro.gravit.repackage.io.netty.handler.codec.http.HttpClientCodec) -> <init>
    428:429:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$3 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$3:
# {"fileName":"WebSocketClientHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPipeline val$p -> val$p
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$context -> val$context
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    442:442:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,pro.gravit.repackage.io.netty.channel.ChannelPipeline,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    445:446:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4:
# {"fileName":"WebSocketClientHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse fullHttpResponse -> fullHttpResponse
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    506:506:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.channel.Channel) -> <init>
    512:521:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    526:528:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    534:541:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    545:546:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    549:577:void handleHandshakeResponse(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpObject) -> handleHandshakeResponse
    581:586:void tryFinishHandshake(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> tryFinishHandshake
    589:593:void releaseFullHttpResponse() -> releaseFullHttpResponse
    506:506:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5:
# {"fileName":"WebSocketClientHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker val$handshaker -> val$handshaker
    pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker val$invoker -> val$invoker
    long val$forceCloseTimeoutMillis -> val$forceCloseTimeoutMillis
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker this$0 -> this$0
    690:690:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker,long) -> <init>
    697:716:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    690:690:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5$1:
# {"fileName":"WebSocketClientHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5 this$1 -> this$1
    699:699:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5) -> <init>
    702:706:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5$2:
# {"fileName":"WebSocketClientHandshaker.java","id":"sourceFile"}
    java.util.concurrent.Future val$forceCloseFuture -> val$forceCloseFuture
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5 this$1 -> this$1
    709:709:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$5,java.util.concurrent.Future) -> <init>
    712:713:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    709:709:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00:
# {"fileName":"WebSocketClientHandshaker00.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf expectedChallengeResponseBytes -> expectedChallengeResponseBytes
    65:67:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    89:90:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,long) -> <init>
    115:117:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,long,boolean) -> <init>
    146:148:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,long,boolean,boolean) -> <init>
    171:243:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    268:288:void verify(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> verify
    291:310:java.lang.String insertRandomCharacters(java.lang.String) -> insertRandomCharacters
    314:321:java.lang.String insertSpaces(java.lang.String,int) -> insertSpaces
    326:326:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    331:331:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    336:337:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00 setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    44:44:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07:
# {"fileName":"WebSocketClientHandshaker07.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String MAGIC_GUID -> MAGIC_GUID
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    boolean performMasking -> performMasking
    boolean allowMaskMismatch -> allowMaskMismatch
    71:72:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    101:103:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    134:136:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long) -> <init>
    171:173:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean) -> <init>
    211:216:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean,boolean) -> <init>
    238:285:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    307:328:void verify(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> verify
    332:332:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    337:337:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    342:343:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    41:41:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    43:43:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08:
# {"fileName":"WebSocketClientHandshaker08.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String MAGIC_GUID -> MAGIC_GUID
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    boolean performMasking -> performMasking
    boolean allowMaskMismatch -> allowMaskMismatch
    72:74:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    103:105:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    136:138:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long) -> <init>
    173:175:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean) -> <init>
    213:218:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean,boolean) -> <init>
    240:287:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    309:330:void verify(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> verify
    334:334:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    339:339:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    344:345:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08 setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    41:41:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    43:43:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13:
# {"fileName":"WebSocketClientHandshaker13.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String MAGIC_GUID -> MAGIC_GUID
    java.lang.String expectedChallengeResponseString -> expectedChallengeResponseString
    boolean allowExtensions -> allowExtensions
    boolean performMasking -> performMasking
    boolean allowMaskMismatch -> allowMaskMismatch
    72:74:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    103:105:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> <init>
    137:139:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long) -> <init>
    174:176:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean) -> <init>
    215:220:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean,boolean) -> <init>
    241:288:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest() -> newHandshakeRequest
    310:331:void verify(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse) -> verify
    335:335:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    340:340:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    345:346:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13 setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    350:350:boolean isAllowExtensions() -> isAllowExtensions
    354:354:boolean isPerformMasking() -> isPerformMasking
    358:358:boolean isAllowMaskMismatch() -> isAllowMaskMismatch
    41:41:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker setForceCloseTimeoutMillis(long) -> setForceCloseTimeoutMillis
    43:43:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory:
# {"fileName":"WebSocketClientHandshakerFactory.java","id":"sourceFile"}
    32:33:void <init>() -> <init>
    53:53:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> newHandshaker
    77:77:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int) -> newHandshaker
    110:110:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean) -> newHandshaker
    145:165:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long) -> newHandshaker
    202:223:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean) -> newHandshaker
    264:288:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean,boolean) -> newHandshaker
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig:
# {"fileName":"WebSocketClientProtocolConfig.java","id":"sourceFile"}
    boolean DEFAULT_PERFORM_MASKING -> DEFAULT_PERFORM_MASKING
    boolean DEFAULT_ALLOW_MASK_MISMATCH -> DEFAULT_ALLOW_MASK_MISMATCH
    boolean DEFAULT_HANDLE_CLOSE_FRAMES -> DEFAULT_HANDLE_CLOSE_FRAMES
    boolean DEFAULT_DROP_PONG_FRAMES -> DEFAULT_DROP_PONG_FRAMES
    boolean DEFAULT_GENERATE_ORIGIN_HEADER -> DEFAULT_GENERATE_ORIGIN_HEADER
    java.net.URI webSocketUri -> webSocketUri
    java.lang.String subprotocol -> subprotocol
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion version -> version
    boolean allowExtensions -> allowExtensions
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders customHeaders -> customHeaders
    int maxFramePayloadLength -> maxFramePayloadLength
    boolean performMasking -> performMasking
    boolean allowMaskMismatch -> allowMaskMismatch
    boolean handleCloseFrames -> handleCloseFrames
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame -> sendCloseFrame
    boolean dropPongFrames -> dropPongFrames
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    long forceCloseTimeoutMillis -> forceCloseTimeoutMillis
    boolean absoluteUpgradeUrl -> absoluteUpgradeUrl
    boolean generateOriginHeader -> generateOriginHeader
    71:87:void <init>(java.net.URI,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,long,long,boolean,boolean) -> <init>
    90:90:java.net.URI webSocketUri() -> webSocketUri
    94:94:java.lang.String subprotocol() -> subprotocol
    98:98:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion version() -> version
    102:102:boolean allowExtensions() -> allowExtensions
    106:106:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders customHeaders() -> customHeaders
    110:110:int maxFramePayloadLength() -> maxFramePayloadLength
    114:114:boolean performMasking() -> performMasking
    118:118:boolean allowMaskMismatch() -> allowMaskMismatch
    122:122:boolean handleCloseFrames() -> handleCloseFrames
    126:126:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame() -> sendCloseFrame
    130:130:boolean dropPongFrames() -> dropPongFrames
    134:134:long handshakeTimeoutMillis() -> handshakeTimeoutMillis
    138:138:long forceCloseTimeoutMillis() -> forceCloseTimeoutMillis
    142:142:boolean absoluteUpgradeUrl() -> absoluteUpgradeUrl
    146:146:boolean generateOriginHeader() -> generateOriginHeader
    151:151:java.lang.String toString() -> toString
    171:171:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder toBuilder() -> toBuilder
    175:176:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder newBuilder() -> newBuilder
    31:31:void <init>(java.net.URI,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,long,long,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$1:
# {"fileName":"WebSocketClientProtocolConfig.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder:
# {"fileName":"WebSocketClientProtocolConfig.java","id":"sourceFile"}
    java.net.URI webSocketUri -> webSocketUri
    java.lang.String subprotocol -> subprotocol
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion version -> version
    boolean allowExtensions -> allowExtensions
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders customHeaders -> customHeaders
    int maxFramePayloadLength -> maxFramePayloadLength
    boolean performMasking -> performMasking
    boolean allowMaskMismatch -> allowMaskMismatch
    boolean handleCloseFrames -> handleCloseFrames
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame -> sendCloseFrame
    boolean dropPongFrames -> dropPongFrames
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    long forceCloseTimeoutMillis -> forceCloseTimeoutMillis
    boolean absoluteUpgradeUrl -> absoluteUpgradeUrl
    boolean generateOriginHeader -> generateOriginHeader
    211:226:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig) -> <init>
    242:258:void <init>(java.net.URI,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,long,long,boolean,boolean) -> <init>
    265:265:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder webSocketUri(java.lang.String) -> webSocketUri
    273:274:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder webSocketUri(java.net.URI) -> webSocketUri
    281:282:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder subprotocol(java.lang.String) -> subprotocol
    289:290:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder version(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion) -> version
    297:298:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder allowExtensions(boolean) -> allowExtensions
    305:306:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder customHeaders(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> customHeaders
    313:314:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder maxFramePayloadLength(int) -> maxFramePayloadLength
    323:324:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder performMasking(boolean) -> performMasking
    331:332:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder allowMaskMismatch(boolean) -> allowMaskMismatch
    339:340:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder handleCloseFrames(boolean) -> handleCloseFrames
    347:348:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder sendCloseFrame(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus) -> sendCloseFrame
    355:356:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder dropPongFrames(boolean) -> dropPongFrames
    364:365:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder handshakeTimeoutMillis(long) -> handshakeTimeoutMillis
    372:373:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder forceCloseTimeoutMillis(long) -> forceCloseTimeoutMillis
    380:381:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder absoluteUpgradeUrl(boolean) -> absoluteUpgradeUrl
    390:391:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder generateOriginHeader(boolean) -> generateOriginHeader
    398:398:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig build() -> build
    193:193:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$1) -> <init>
    193:193:void <init>(java.net.URI,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,long,long,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler:
# {"fileName":"WebSocketClientProtocolHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker -> handshaker
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig clientConfig -> clientConfig
    55:55:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker() -> handshaker
    85:101:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig) -> <init>
    131:133:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean) -> <init>
    166:170:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,long) -> <init>
    192:194:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean) -> <init>
    219:221:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,boolean,long) -> <init>
    241:243:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int) -> <init>
    266:268:void <init>(java.net.URI,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,int,long) -> <init>
    280:281:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean) -> <init>
    297:298:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean,long) -> <init>
    313:314:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean,boolean) -> <init>
    332:338:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean,boolean,long) -> <init>
    348:349:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker) -> <init>
    362:363:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,long) -> <init>
    367:372:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    376:376:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException buildHandshakeException(java.lang.String) -> buildHandshakeException
    381:392:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    47:47:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    47:47:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    47:47:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    47:47:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    47:47:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    47:47:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    47:47:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    47:47:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketHandshakeException buildHandshakeException(java.lang.String) -> buildHandshakeException
    47:47:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    47:47:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    47:47:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent:
# {"fileName":"WebSocketClientProtocolHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent HANDSHAKE_TIMEOUT -> HANDSHAKE_TIMEOUT
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent HANDSHAKE_ISSUED -> HANDSHAKE_ISSUED
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent HANDSHAKE_COMPLETE -> HANDSHAKE_COMPLETE
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent[] $VALUES -> $VALUES
    61:61:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent[] values() -> values
    61:61:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler$ClientHandshakeStateEvent valueOf(java.lang.String) -> valueOf
    61:61:void <init>(java.lang.String,int) -> <init>
    61:75:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler:
# {"fileName":"WebSocketClientProtocolHandshakeHandler.java","id":"sourceFile"}
    long DEFAULT_HANDSHAKE_TIMEOUT_MS -> DEFAULT_HANDSHAKE_TIMEOUT_MS
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker -> handshaker
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise handshakePromise -> handshakePromise
    41:42:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker) -> <init>
    44:47:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,long) -> <init>
    51:53:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    57:71:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    75:81:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    85:103:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    107:134:void applyHandshakeTimeout() -> applyHandshakeTimeout
    142:142:pro.gravit.repackage.io.netty.channel.ChannelFuture getHandshakeFuture() -> getHandshakeFuture
    32:32:pro.gravit.repackage.io.netty.channel.ChannelPromise access$000(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler) -> access$000
    32:32:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$100(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$1:
# {"fileName":"WebSocketClientProtocolHandshakeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler this$0 -> this$0
    58:58:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    61:68:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    58:58:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$2:
# {"fileName":"WebSocketClientProtocolHandshakeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$localHandshakePromise -> val$localHandshakePromise
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler this$0 -> this$0
    112:112:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    115:124:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$3 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler$3:
# {"fileName":"WebSocketClientProtocolHandshakeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$timeoutFuture -> val$timeoutFuture
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler this$0 -> this$0
    128:128:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler,pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    131:132:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus:
# {"fileName":"WebSocketCloseStatus.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus NORMAL_CLOSURE -> NORMAL_CLOSURE
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus ENDPOINT_UNAVAILABLE -> ENDPOINT_UNAVAILABLE
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus PROTOCOL_ERROR -> PROTOCOL_ERROR
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INVALID_MESSAGE_TYPE -> INVALID_MESSAGE_TYPE
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INVALID_PAYLOAD_DATA -> INVALID_PAYLOAD_DATA
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus POLICY_VIOLATION -> POLICY_VIOLATION
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus MESSAGE_TOO_BIG -> MESSAGE_TOO_BIG
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus MANDATORY_EXTENSION -> MANDATORY_EXTENSION
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus SERVICE_RESTART -> SERVICE_RESTART
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus TRY_AGAIN_LATER -> TRY_AGAIN_LATER
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus BAD_GATEWAY -> BAD_GATEWAY
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus EMPTY -> EMPTY
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus ABNORMAL_CLOSURE -> ABNORMAL_CLOSURE
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus TLS_HANDSHAKE_FAILED -> TLS_HANDSHAKE_FAILED
    int statusCode -> statusCode
    java.lang.String reasonText -> reasonText
    java.lang.String text -> text
    226:227:void <init>(int,java.lang.String) -> <init>
    229:236:void <init>(int,java.lang.String,boolean) -> <init>
    239:239:int code() -> code
    243:243:java.lang.String reasonText() -> reasonText
    251:251:int compareTo(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus) -> compareTo
    259:268:boolean equals(java.lang.Object) -> equals
    273:273:int hashCode() -> hashCode
    278:283:java.lang.String toString() -> toString
    287:287:boolean isValidStatusCode(int) -> isValidStatusCode
    294:326:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus valueOf(int) -> valueOf
    171:171:int compareTo(java.lang.Object) -> compareTo
    173:218:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig:
# {"fileName":"WebSocketDecoderConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig DEFAULT -> DEFAULT
    int maxFramePayloadLength -> maxFramePayloadLength
    boolean expectMaskedFrames -> expectMaskedFrames
    boolean allowMaskMismatch -> allowMaskMismatch
    boolean allowExtensions -> allowExtensions
    boolean closeOnProtocolViolation -> closeOnProtocolViolation
    boolean withUTF8Validator -> withUTF8Validator
    58:65:void <init>(int,boolean,boolean,boolean,boolean,boolean) -> <init>
    68:68:int maxFramePayloadLength() -> maxFramePayloadLength
    72:72:boolean expectMaskedFrames() -> expectMaskedFrames
    76:76:boolean allowMaskMismatch() -> allowMaskMismatch
    80:80:boolean allowExtensions() -> allowExtensions
    84:84:boolean closeOnProtocolViolation() -> closeOnProtocolViolation
    88:88:boolean withUTF8Validator() -> withUTF8Validator
    93:93:java.lang.String toString() -> toString
    104:104:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder toBuilder() -> toBuilder
    108:108:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder newBuilder() -> newBuilder
    23:23:void <init>(int,boolean,boolean,boolean,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$1) -> <init>
    25:25:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$1:
# {"fileName":"WebSocketDecoderConfig.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder:
# {"fileName":"WebSocketDecoderConfig.java","id":"sourceFile"}
    int maxFramePayloadLength -> maxFramePayloadLength
    boolean expectMaskedFrames -> expectMaskedFrames
    boolean allowMaskMismatch -> allowMaskMismatch
    boolean allowExtensions -> allowExtensions
    boolean closeOnProtocolViolation -> closeOnProtocolViolation
    boolean withUTF8Validator -> withUTF8Validator
    119:127:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    130:131:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder maxFramePayloadLength(int) -> maxFramePayloadLength
    135:136:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder expectMaskedFrames(boolean) -> expectMaskedFrames
    140:141:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowMaskMismatch(boolean) -> allowMaskMismatch
    145:146:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowExtensions(boolean) -> allowExtensions
    150:151:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder closeOnProtocolViolation(boolean) -> closeOnProtocolViolation
    155:156:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder withUTF8Validator(boolean) -> withUTF8Validator
    160:160:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig build() -> build
    111:111:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame:
# {"fileName":"WebSocketFrame.java","id":"sourceFile"}
    boolean finalFragment -> finalFragment
    int rsv -> rsv
    39:40:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    43:46:void <init>(boolean,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    53:53:boolean isFinalFragment() -> isFinalFragment
    60:60:int rsv() -> rsv
    65:65:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame copy() -> copy
    70:70:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame duplicate() -> duplicate
    75:75:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    83:83:java.lang.String toString() -> toString
    88:89:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain() -> retain
    94:95:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame retain(int) -> retain
    100:101:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch() -> touch
    106:107:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    25:25:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    25:25:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameAggregator -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameAggregator:
# {"fileName":"WebSocketFrameAggregator.java","id":"sourceFile"}
    39:40:void <init>(int) -> <init>
    44:44:boolean isStartMessage(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> isStartMessage
    49:49:boolean isContentMessage(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> isContentMessage
    54:54:boolean isLastContentMessage(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame) -> isLastContentMessage
    59:63:boolean isAggregated(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> isAggregated
    68:68:boolean isContentLengthInvalid(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,int) -> isContentLengthInvalid
    73:73:java.lang.Object newContinueResponse(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,int,pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> newContinueResponse
    78:78:boolean closeAfterContinueResponse(java.lang.Object) -> closeAfterContinueResponse
    83:83:boolean ignoreContentAfterContinueResponse(java.lang.Object) -> ignoreContentAfterContinueResponse
    88:97:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame beginAggregation(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> beginAggregation
    29:29:pro.gravit.repackage.io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> beginAggregation
    29:29:java.lang.Object newContinueResponse(java.lang.Object,int,pro.gravit.repackage.io.netty.channel.ChannelPipeline) -> newContinueResponse
    29:29:boolean isContentLengthInvalid(java.lang.Object,int) -> isContentLengthInvalid
    29:29:boolean isAggregated(java.lang.Object) -> isAggregated
    29:29:boolean isLastContentMessage(pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> isLastContentMessage
    29:29:boolean isContentMessage(java.lang.Object) -> isContentMessage
    29:29:boolean isStartMessage(java.lang.Object) -> isStartMessage
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder:
# {"fileName":"WebSocketFrameDecoder.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder:
# {"fileName":"WebSocketFrameEncoder.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketHandshakeException -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketHandshakeException:
# {"fileName":"WebSocketHandshakeException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    26:27:void <init>(java.lang.String) -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler:
# {"fileName":"WebSocketProtocolHandler.java","id":"sourceFile"}
    boolean dropPongFrames -> dropPongFrames
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus closeStatus -> closeStatus
    long forceCloseTimeoutMillis -> forceCloseTimeoutMillis
    pro.gravit.repackage.io.netty.channel.ChannelPromise closeSent -> closeSent
    46:47:void <init>() -> <init>
    57:58:void <init>(boolean) -> <init>
    62:66:void <init>(boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,long) -> <init>
    70:82:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    85:88:void readIfNeeded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readIfNeeded
    92:107:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    111:120:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    123:124:void closeSent(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> closeSent
    127:146:void applyCloseSentTimeout(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> applyCloseSentTimeout
    153:153:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketHandshakeException buildHandshakeException(java.lang.String) -> buildHandshakeException
    159:160:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    165:166:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    171:172:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    176:177:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    181:182:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    186:187:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    191:193:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    34:34:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    34:34:pro.gravit.repackage.io.netty.channel.ChannelPromise access$000(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$1:
# {"fileName":"WebSocketProtocolHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler this$0 -> this$0
    100:100:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    103:104:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    100:100:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$2:
# {"fileName":"WebSocketProtocolHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler this$0 -> this$0
    131:131:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler) -> <init>
    134:137:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3:
# {"fileName":"WebSocketProtocolHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$timeoutTask -> val$timeoutTask
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler this$0 -> this$0
    140:140:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler,pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    143:144:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    140:140:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketScheme -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketScheme:
# {"fileName":"WebSocketScheme.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketScheme WS -> WS
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketScheme WSS -> WSS
    int port -> port
    pro.gravit.repackage.io.netty.util.AsciiString name -> name
    38:41:void <init>(int,java.lang.String) -> <init>
    44:44:pro.gravit.repackage.io.netty.util.AsciiString name() -> name
    48:48:int port() -> port
    53:57:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    67:67:java.lang.String toString() -> toString
    28:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException:
# {"fileName":"WebSocketServerHandshakeException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest request -> request
    36:37:void <init>(java.lang.String) -> <init>
    40:47:void <init>(java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> <init>
    53:53:pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest request() -> request
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker:
# {"fileName":"WebSocketServerHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String uri -> uri
    java.lang.String[] subprotocols -> subprotocols
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion version -> version
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig -> decoderConfig
    java.lang.String selectedSubprotocol -> selectedSubprotocol
    java.lang.String SUB_PROTOCOL_WILDCARD -> SUB_PROTOCOL_WILDCARD
    90:93:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,java.lang.String,int) -> <init>
    109:122:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    128:128:java.lang.String uri() -> uri
    135:137:java.util.Set subprotocols() -> subprotocols
    144:144:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion version() -> version
    153:153:int maxFramePayloadLength() -> maxFramePayloadLength
    162:162:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig() -> decoderConfig
    177:177:pro.gravit.repackage.io.netty.channel.ChannelFuture handshake(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest) -> handshake
    199:241:pro.gravit.repackage.io.netty.channel.ChannelFuture handshake(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> handshake
    256:256:pro.gravit.repackage.io.netty.channel.ChannelFuture handshake(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> handshake
    277:391:pro.gravit.repackage.io.netty.channel.ChannelFuture handshake(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> handshake
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    411:412:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> close
    429:429:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    441:442:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame) -> close
    456:457:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    461:461:pro.gravit.repackage.io.netty.channel.ChannelFuture close0(pro.gravit.repackage.io.netty.channel.ChannelOutboundInvoker,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close0
    472:490:java.lang.String selectSubprotocol(java.lang.String) -> selectSubprotocol
    500:500:java.lang.String selectedSubprotocol() -> selectedSubprotocol
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    57:57:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1:
# {"fileName":"WebSocketServerHandshaker.java","id":"sourceFile"}
    java.lang.String val$encoderName -> val$encoderName
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker this$0 -> this$0
    229:229:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,java.lang.String,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    232:239:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    229:229:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2:
# {"fileName":"WebSocketServerHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest fullHttpRequest -> fullHttpRequest
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.channel.Channel val$channel -> val$channel
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders val$responseHeaders -> val$responseHeaders
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker this$0 -> this$0
    306:306:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> <init>
    312:321:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    326:329:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    335:342:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    346:347:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    350:377:void handleHandshakeRequest(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpObject) -> handleHandshakeRequest
    380:384:void releaseFullHttpRequest() -> releaseFullHttpRequest
    306:306:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00:
# {"fileName":"WebSocketServerHandshaker00.java","id":"sourceFile"}
    java.util.regex.Pattern BEGINNING_DIGIT -> BEGINNING_DIGIT
    java.util.regex.Pattern BEGINNING_SPACE -> BEGINNING_SPACE
    64:67:void <init>(java.lang.String,java.lang.String,int) -> <init>
    81:82:void <init>(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    128:196:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    211:211:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    227:227:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.CloseWebSocketFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    232:232:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    237:237:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    48:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07:
# {"fileName":"WebSocketServerHandshaker07.java","id":"sourceFile"}
    java.lang.String WEBSOCKET_07_ACCEPT_GUID -> WEBSOCKET_07_ACCEPT_GUID
    56:57:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    79:84:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    93:94:void <init>(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    131:167:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    172:172:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    177:177:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08:
# {"fileName":"WebSocketServerHandshaker08.java","id":"sourceFile"}
    java.lang.String WEBSOCKET_08_ACCEPT_GUID -> WEBSOCKET_08_ACCEPT_GUID
    56:57:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    79:84:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    99:100:void <init>(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    138:173:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    178:178:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    183:183:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13:
# {"fileName":"WebSocketServerHandshaker13.java","id":"sourceFile"}
    java.lang.String WEBSOCKET_13_ACCEPT_GUID -> WEBSOCKET_13_ACCEPT_GUID
    55:56:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    78:83:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    98:99:void <init>(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    137:183:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> newHandshakeResponse
    188:188:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder() -> newWebsocketDecoder
    193:193:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder() -> newWebSocketEncoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:
# {"fileName":"WebSocketServerHandshakerFactory.java","id":"sourceFile"}
    java.lang.String webSocketURL -> webSocketURL
    java.lang.String subprotocols -> subprotocols
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig -> decoderConfig
    55:56:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    75:76:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    98:103:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    117:121:void <init>(java.lang.String,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    131:150:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker newHandshaker(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> newHandshaker
    159:160:void sendUnsupportedWebSocketVersionResponse(pro.gravit.repackage.io.netty.channel.Channel) -> sendUnsupportedWebSocketVersionResponse
    166:166:pro.gravit.repackage.io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(pro.gravit.repackage.io.netty.channel.Channel) -> sendUnsupportedVersionResponse
    173:178:pro.gravit.repackage.io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> sendUnsupportedVersionResponse
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig:
# {"fileName":"WebSocketServerProtocolConfig.java","id":"sourceFile"}
    long DEFAULT_HANDSHAKE_TIMEOUT_MILLIS -> DEFAULT_HANDSHAKE_TIMEOUT_MILLIS
    java.lang.String websocketPath -> websocketPath
    java.lang.String subprotocols -> subprotocols
    boolean checkStartsWith -> checkStartsWith
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    long forceCloseTimeoutMillis -> forceCloseTimeoutMillis
    boolean handleCloseFrames -> handleCloseFrames
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame -> sendCloseFrame
    boolean dropPongFrames -> dropPongFrames
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig -> decoderConfig
    50:60:void <init>(java.lang.String,java.lang.String,boolean,long,long,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    63:63:java.lang.String websocketPath() -> websocketPath
    67:67:java.lang.String subprotocols() -> subprotocols
    71:71:boolean checkStartsWith() -> checkStartsWith
    75:75:long handshakeTimeoutMillis() -> handshakeTimeoutMillis
    79:79:long forceCloseTimeoutMillis() -> forceCloseTimeoutMillis
    83:83:boolean handleCloseFrames() -> handleCloseFrames
    87:87:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame() -> sendCloseFrame
    91:91:boolean dropPongFrames() -> dropPongFrames
    95:95:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig() -> decoderConfig
    100:100:java.lang.String toString() -> toString
    114:114:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder toBuilder() -> toBuilder
    118:118:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder newBuilder() -> newBuilder
    26:26:void <init>(java.lang.String,java.lang.String,boolean,long,long,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$1:
# {"fileName":"WebSocketServerProtocolConfig.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder:
# {"fileName":"WebSocketServerProtocolConfig.java","id":"sourceFile"}
    java.lang.String websocketPath -> websocketPath
    java.lang.String subprotocols -> subprotocols
    boolean checkStartsWith -> checkStartsWith
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    long forceCloseTimeoutMillis -> forceCloseTimeoutMillis
    boolean handleCloseFrames -> handleCloseFrames
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame -> sendCloseFrame
    boolean dropPongFrames -> dropPongFrames
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig -> decoderConfig
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder -> decoderConfigBuilder
    135:145:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig) -> <init>
    155:165:void <init>(java.lang.String,java.lang.String,boolean,long,long,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    171:172:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder websocketPath(java.lang.String) -> websocketPath
    179:180:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder subprotocols(java.lang.String) -> subprotocols
    188:189:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder checkStartsWith(boolean) -> checkStartsWith
    197:198:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder handshakeTimeoutMillis(long) -> handshakeTimeoutMillis
    205:206:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder forceCloseTimeoutMillis(long) -> forceCloseTimeoutMillis
    213:214:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder handleCloseFrames(boolean) -> handleCloseFrames
    221:222:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder sendCloseFrame(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus) -> sendCloseFrame
    229:230:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder dropPongFrames(boolean) -> dropPongFrames
    237:239:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder decoderConfig(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> decoderConfig
    243:246:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder() -> decoderConfigBuilder
    250:251:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder maxFramePayloadLength(int) -> maxFramePayloadLength
    255:256:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder expectMaskedFrames(boolean) -> expectMaskedFrames
    260:261:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder allowMaskMismatch(boolean) -> allowMaskMismatch
    265:266:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder allowExtensions(boolean) -> allowExtensions
    270:271:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder closeOnProtocolViolation(boolean) -> closeOnProtocolViolation
    275:276:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder withUTF8Validator(boolean) -> withUTF8Validator
    283:292:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig build() -> build
    122:122:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$1) -> <init>
    122:122:void <init>(java.lang.String,java.lang.String,boolean,long,long,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:
# {"fileName":"WebSocketServerProtocolHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AttributeKey HANDSHAKER_ATTR_KEY -> HANDSHAKER_ATTR_KEY
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig serverConfig -> serverConfig
    114:119:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig) -> <init>
    122:123:void <init>(java.lang.String) -> <init>
    126:127:void <init>(java.lang.String,long) -> <init>
    130:131:void <init>(java.lang.String,boolean) -> <init>
    134:135:void <init>(java.lang.String,boolean,long) -> <init>
    138:139:void <init>(java.lang.String,java.lang.String) -> <init>
    142:143:void <init>(java.lang.String,java.lang.String,long) -> <init>
    146:147:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    151:152:void <init>(java.lang.String,java.lang.String,boolean,long) -> <init>
    156:157:void <init>(java.lang.String,java.lang.String,boolean,int) -> <init>
    161:162:void <init>(java.lang.String,java.lang.String,boolean,int,long) -> <init>
    166:168:void <init>(java.lang.String,java.lang.String,boolean,int,boolean) -> <init>
    172:174:void <init>(java.lang.String,java.lang.String,boolean,int,boolean,long) -> <init>
    178:180:void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean) -> <init>
    185:187:void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean,long) -> <init>
    192:194:void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean,boolean) -> <init>
    199:205:void <init>(java.lang.String,java.lang.String,boolean,int,boolean,boolean,boolean,long) -> <init>
    210:218:void <init>(java.lang.String,java.lang.String,boolean,boolean,long,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig) -> <init>
    222:233:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    237:250:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    254:254:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException buildHandshakeException(java.lang.String) -> buildHandshakeException
    259:267:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    270:270:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker getHandshaker(pro.gravit.repackage.io.netty.channel.Channel) -> getHandshaker
    274:275:void setHandshaker(pro.gravit.repackage.io.netty.channel.Channel,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker) -> setHandshaker
    54:54:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    54:54:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    54:54:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    54:54:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    54:54:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    54:54:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    54:54:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketHandshakeException buildHandshakeException(java.lang.String) -> buildHandshakeException
    54:54:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    54:54:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    54:54:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    102:103:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$HandshakeComplete -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$HandshakeComplete:
# {"fileName":"WebSocketServerProtocolHandler.java","id":"sourceFile"}
    java.lang.String requestUri -> requestUri
    pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders requestHeaders -> requestHeaders
    java.lang.String selectedSubprotocol -> selectedSubprotocol
    83:87:void <init>(java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders,java.lang.String) -> <init>
    90:90:java.lang.String requestUri() -> requestUri
    94:94:pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders requestHeaders() -> requestHeaders
    98:98:java.lang.String selectedSubprotocol() -> selectedSubprotocol
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent:
# {"fileName":"WebSocketServerProtocolHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent HANDSHAKE_COMPLETE -> HANDSHAKE_COMPLETE
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent HANDSHAKE_TIMEOUT -> HANDSHAKE_TIMEOUT
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent[] $VALUES -> $VALUES
    59:59:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent[] values() -> values
    59:59:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent valueOf(java.lang.String) -> valueOf
    59:59:void <init>(java.lang.String,int) -> <init>
    59:72:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler:
# {"fileName":"WebSocketServerProtocolHandshakeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig serverConfig -> serverConfig
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise handshakePromise -> handshakePromise
    boolean isWebSocketPath -> isWebSocketPath
    53:55:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig) -> <init>
    59:61:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    65:125:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    128:132:boolean isWebSocketPath(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> isWebSocketPath
    136:141:boolean checkNextUri(java.lang.String,java.lang.String) -> checkNextUri
    145:149:void sendHttpResponse(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> sendHttpResponse
    152:158:java.lang.String getWebSocketLocation(pro.gravit.repackage.io.netty.channel.ChannelPipeline,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,java.lang.String) -> getWebSocketLocation
    162:187:void applyHandshakeTimeout() -> applyHandshakeTimeout
    46:46:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$000(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1:
# {"fileName":"WebSocketServerProtocolHandshakeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$localHandshakePromise -> val$localHandshakePromise
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest val$req -> val$req
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker val$handshaker -> val$handshaker
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler this$0 -> this$0
    98:98:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker) -> <init>
    101:113:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    98:98:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$2:
# {"fileName":"WebSocketServerProtocolHandshakeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$localHandshakePromise -> val$localHandshakePromise
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler this$0 -> this$0
    168:168:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    171:177:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$3 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$3:
# {"fileName":"WebSocketServerProtocolHandshakeHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$timeoutFuture -> val$timeoutFuture
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler this$0 -> this$0
    181:181:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler,pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    184:185:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketUtil -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketUtil:
# {"fileName":"WebSocketUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal MD5 -> MD5
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal SHA1 -> SHA1
    boolean $assertionsDisabled -> $assertionsDisabled
    72:72:byte[] md5(byte[]) -> md5
    83:83:byte[] sha1(byte[]) -> sha1
    87:89:byte[] digest(pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal,byte[]) -> digest
    100:115:java.lang.String base64(byte[]) -> base64
    125:127:byte[] randomBytes(int) -> randomBytes
    138:160:int randomNumber(int,int) -> randomNumber
    164:164:int byteAtIndex(int,int) -> byteAtIndex
    170:172:void <init>() -> <init>
    32:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketUtil$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketUtil$1:
# {"fileName":"WebSocketUtil.java","id":"sourceFile"}
    34:34:void <init>() -> <init>
    41:44:java.security.MessageDigest initialValue() -> initialValue
    34:34:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketUtil$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketUtil$2:
# {"fileName":"WebSocketUtil.java","id":"sourceFile"}
    49:49:void <init>() -> <init>
    56:59:java.security.MessageDigest initialValue() -> initialValue
    49:49:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion:
# {"fileName":"WebSocketVersion.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion UNKNOWN -> UNKNOWN
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion V00 -> V00
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion V07 -> V07
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion V08 -> V08
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion V13 -> V13
    pro.gravit.repackage.io.netty.util.AsciiString headerValue -> headerValue
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion[] $VALUES -> $VALUES
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion[] values() -> values
    30:30:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketVersion valueOf(java.lang.String) -> valueOf
    60:62:void <init>(java.lang.String,int,pro.gravit.repackage.io.netty.util.AsciiString) -> <init>
    67:67:java.lang.String toHttpHeaderValue() -> toHttpHeaderValue
    71:75:pro.gravit.repackage.io.netty.util.AsciiString toAsciiString() -> toAsciiString
    30:56:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension:
# {"fileName":"WebSocketClientExtension.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler:
# {"fileName":"WebSocketClientExtensionHandler.java","id":"sourceFile"}
    java.util.List extensionHandshakers -> extensionHandshakers
    54:56:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker[]) -> <init>
    60:75:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    80:126:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker:
# {"fileName":"WebSocketClientExtensionHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newRequestData() -> newRequestData
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension handshakeExtension(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData) -> handshakeExtension
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtension -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtension:
# {"fileName":"WebSocketExtension.java","id":"sourceFile"}
    int RSV1 -> RSV1
    int RSV2 -> RSV2
    int RSV3 -> RSV3
    int rsv() -> rsv
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder newExtensionEncoder() -> newExtensionEncoder
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder newExtensionDecoder() -> newExtensionDecoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData:
# {"fileName":"WebSocketExtensionData.java","id":"sourceFile"}
    java.lang.String name -> name
    java.util.Map parameters -> parameters
    33:37:void <init>(java.lang.String,java.util.Map) -> <init>
    43:43:java.lang.String name() -> name
    50:50:java.util.Map parameters() -> parameters
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder:
# {"fileName":"WebSocketExtensionDecoder.java","id":"sourceFile"}
    24:24:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder:
# {"fileName":"WebSocketExtensionEncoder.java","id":"sourceFile"}
    24:24:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter:
# {"fileName":"WebSocketExtensionFilter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter NEVER_SKIP -> NEVER_SKIP
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter ALWAYS_SKIP -> ALWAYS_SKIP
    boolean mustSkip(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> mustSkip
    30:41:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter$1:
# {"fileName":"WebSocketExtensionFilter.java","id":"sourceFile"}
    30:30:void <init>() -> <init>
    33:33:boolean mustSkip(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> mustSkip
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter$2:
# {"fileName":"WebSocketExtensionFilter.java","id":"sourceFile"}
    41:41:void <init>() -> <init>
    44:44:boolean mustSkip(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> mustSkip
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider:
# {"fileName":"WebSocketExtensionFilterProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider DEFAULT -> DEFAULT
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter encoderFilter() -> encoderFilter
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter decoderFilter() -> decoderFilter
    23:23:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider$1:
# {"fileName":"WebSocketExtensionFilterProvider.java","id":"sourceFile"}
    23:23:void <init>() -> <init>
    26:26:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter encoderFilter() -> encoderFilter
    31:31:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter decoderFilter() -> decoderFilter
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil:
# {"fileName":"WebSocketExtensionUtil.java","id":"sourceFile"}
    java.lang.String EXTENSION_SEPARATOR -> EXTENSION_SEPARATOR
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    char PARAMETER_EQUAL -> PARAMETER_EQUAL
    java.util.regex.Pattern PARAMETER -> PARAMETER
    42:44:boolean isWebsocketUpgrade(pro.gravit.repackage.io.netty.handler.codec.http.HttpHeaders) -> isWebsocketUpgrade
    48:71:java.util.List extractExtensions(java.lang.String) -> extractExtensions
    77:121:java.lang.String computeMergeExtensionsHeaderValue(java.lang.String,java.util.List) -> computeMergeExtensionsHeaderValue
    124:126:void <init>() -> <init>
    37:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtension -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtension:
# {"fileName":"WebSocketServerExtension.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newReponseData() -> newReponseData
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler:
# {"fileName":"WebSocketServerExtensionHandler.java","id":"sourceFile"}
    java.util.List extensionHandshakers -> extensionHandshakers
    java.util.List validExtensions -> validExtensions
    59:61:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandshaker[]) -> <init>
    65:100:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    104:114:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    118:161:void handlePotentialUpgrade(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> handlePotentialUpgrade
    46:46:java.util.List access$000(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$1 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$1:
# {"fileName":"WebSocketServerExtensionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler this$0 -> this$0
    131:131:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    134:144:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    131:131:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$2 -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$2:
# {"fileName":"WebSocketServerExtensionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler this$0 -> this$0
    152:152:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    155:158:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    152:152:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandshaker -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandshaker:
# {"fileName":"WebSocketServerExtensionHandshaker.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtension handshakeExtension(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData) -> handshakeExtension
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder:
# {"fileName":"DeflateDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf FRAME_TAIL -> FRAME_TAIL
    pro.gravit.repackage.io.netty.buffer.ByteBuf EMPTY_DEFLATE_BLOCK -> EMPTY_DEFLATE_BLOCK
    boolean noContext -> noContext
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionDecoderFilter -> extensionDecoderFilter
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel decoder -> decoder
    62:65:void <init>(boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter) -> <init>
    71:71:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionDecoderFilter() -> extensionDecoderFilter
    boolean appendFrameTail(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> appendFrameTail
    int newRsv(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> newRsv
    80:94:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    98:100:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    104:106:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    109:151:pro.gravit.repackage.io.netty.buffer.ByteBuf decompressContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> decompressContent
    155:160:void cleanup() -> cleanup
    41:41:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    43:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder:
# {"fileName":"DeflateEncoder.java","id":"sourceFile"}
    int compressionLevel -> compressionLevel
    int windowSize -> windowSize
    boolean noContext -> noContext
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionEncoderFilter -> extensionEncoderFilter
    pro.gravit.repackage.io.netty.channel.embedded.EmbeddedChannel encoder -> encoder
    58:63:void <init>(int,int,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter) -> <init>
    69:69:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionEncoderFilter() -> extensionEncoderFilter
    int rsv(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> rsv
    boolean removeFrameTail(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> removeFrameTail
    87:109:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> encode
    113:115:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    118:155:pro.gravit.repackage.io.netty.buffer.ByteBuf compressContent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> compressContent
    159:164:void cleanup() -> cleanup
    41:41:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameClientExtensionHandshaker -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameClientExtensionHandshaker:
# {"fileName":"DeflateFrameClientExtensionHandshaker.java","id":"sourceFile"}
    int compressionLevel -> compressionLevel
    boolean useWebkitExtensionName -> useWebkitExtensionName
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider -> extensionFilterProvider
    44:45:void <init>(boolean) -> <init>
    54:55:void <init>(int,boolean) -> <init>
    66:74:void <init>(int,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider) -> <init>
    78:80:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newRequestData() -> newRequestData
    85:93:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension handshakeExtension(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData) -> handshakeExtension
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameClientExtensionHandshaker$DeflateFrameClientExtension -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameClientExtensionHandshaker$DeflateFrameClientExtension:
# {"fileName":"DeflateFrameClientExtensionHandshaker.java","id":"sourceFile"}
    int compressionLevel -> compressionLevel
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider -> extensionFilterProvider
    102:105:void <init>(int,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider) -> <init>
    109:109:int rsv() -> rsv
    114:115:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder newExtensionEncoder() -> newExtensionEncoder
    120:120:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder newExtensionDecoder() -> newExtensionDecoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameServerExtensionHandshaker -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameServerExtensionHandshaker:
# {"fileName":"DeflateFrameServerExtensionHandshaker.java","id":"sourceFile"}
    java.lang.String X_WEBKIT_DEFLATE_FRAME_EXTENSION -> X_WEBKIT_DEFLATE_FRAME_EXTENSION
    java.lang.String DEFLATE_FRAME_EXTENSION -> DEFLATE_FRAME_EXTENSION
    int compressionLevel -> compressionLevel
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider -> extensionFilterProvider
    45:46:void <init>() -> <init>
    55:56:void <init>(int) -> <init>
    67:74:void <init>(int,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider) -> <init>
    78:86:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtension handshakeExtension(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData) -> handshakeExtension
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameServerExtensionHandshaker$DeflateFrameServerExtension -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameServerExtensionHandshaker$DeflateFrameServerExtension:
# {"fileName":"DeflateFrameServerExtensionHandshaker.java","id":"sourceFile"}
    java.lang.String extensionName -> extensionName
    int compressionLevel -> compressionLevel
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider -> extensionFilterProvider
    97:101:void <init>(int,java.lang.String,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider) -> <init>
    105:105:int rsv() -> rsv
    110:111:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder newExtensionEncoder() -> newExtensionEncoder
    116:116:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder newExtensionDecoder() -> newExtensionDecoder
    121:121:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newReponseData() -> newReponseData
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder:
# {"fileName":"PerFrameDeflateDecoder.java","id":"sourceFile"}
    36:37:void <init>(boolean) -> <init>
    46:47:void <init>(boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter) -> <init>
    51:62:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    67:67:int newRsv(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> newRsv
    72:72:boolean appendFrameTail(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> appendFrameTail
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateEncoder:
# {"fileName":"PerFrameDeflateEncoder.java","id":"sourceFile"}
    38:39:void <init>(int,int,boolean) -> <init>
    51:52:void <init>(int,int,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter) -> <init>
    56:68:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    73:73:int rsv(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> rsv
    78:78:boolean removeFrameTail(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> removeFrameTail
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker:
# {"fileName":"PerMessageDeflateClientExtensionHandshaker.java","id":"sourceFile"}
    int compressionLevel -> compressionLevel
    boolean allowClientWindowSize -> allowClientWindowSize
    int requestedServerWindowSize -> requestedServerWindowSize
    boolean allowClientNoContext -> allowClientNoContext
    boolean requestedServerNoContext -> requestedServerNoContext
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider -> extensionFilterProvider
    50:51:void <init>() -> <init>
    73:75:void <init>(int,boolean,int,boolean,boolean) -> <init>
    99:115:void <init>(int,boolean,int,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider) -> <init>
    119:132:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newRequestData() -> newRequestData
    137:193:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension handshakeExtension(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData) -> handshakeExtension
    37:37:int access$000(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker$PermessageDeflateExtension -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker$PermessageDeflateExtension:
# {"fileName":"PerMessageDeflateClientExtensionHandshaker.java","id":"sourceFile"}
    boolean serverNoContext -> serverNoContext
    int serverWindowSize -> serverWindowSize
    boolean clientNoContext -> clientNoContext
    int clientWindowSize -> clientWindowSize
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider -> extensionFilterProvider
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker this$0 -> this$0
    207:207:int rsv() -> rsv
    212:218:void <init>(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker,boolean,int,boolean,int,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider) -> <init>
    222:223:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder newExtensionEncoder() -> newExtensionEncoder
    228:228:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder newExtensionDecoder() -> newExtensionDecoder
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateDecoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateDecoder:
# {"fileName":"PerMessageDeflateDecoder.java","id":"sourceFile"}
    boolean compressing -> compressing
    41:42:void <init>(boolean) -> <init>
    51:52:void <init>(boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter) -> <init>
    56:69:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    75:76:int newRsv(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> newRsv
    81:81:boolean appendFrameTail(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> appendFrameTail
    87:94:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> decode
    31:31:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder:
# {"fileName":"PerMessageDeflateEncoder.java","id":"sourceFile"}
    boolean compressing -> compressing
    43:44:void <init>(int,int,boolean) -> <init>
    56:57:void <init>(int,int,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter) -> <init>
    61:74:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    80:81:int rsv(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> rsv
    86:86:boolean removeFrameTail(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame) -> removeFrameTail
    92:99:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List) -> encode
    31:31:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker:
# {"fileName":"PerMessageDeflateServerExtensionHandshaker.java","id":"sourceFile"}
    int MIN_WINDOW_SIZE -> MIN_WINDOW_SIZE
    int MAX_WINDOW_SIZE -> MAX_WINDOW_SIZE
    java.lang.String PERMESSAGE_DEFLATE_EXTENSION -> PERMESSAGE_DEFLATE_EXTENSION
    java.lang.String CLIENT_MAX_WINDOW -> CLIENT_MAX_WINDOW
    java.lang.String SERVER_MAX_WINDOW -> SERVER_MAX_WINDOW
    java.lang.String CLIENT_NO_CONTEXT -> CLIENT_NO_CONTEXT
    java.lang.String SERVER_NO_CONTEXT -> SERVER_NO_CONTEXT
    int compressionLevel -> compressionLevel
    boolean allowServerWindowSize -> allowServerWindowSize
    int preferredClientWindowSize -> preferredClientWindowSize
    boolean allowServerNoContext -> allowServerNoContext
    boolean preferredClientNoContext -> preferredClientNoContext
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider -> extensionFilterProvider
    58:59:void <init>() -> <init>
    81:83:void <init>(int,boolean,int,boolean,boolean) -> <init>
    107:122:void <init>(int,boolean,int,boolean,boolean,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider) -> <init>
    126:174:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtension handshakeExtension(pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData) -> handshakeExtension
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker$PermessageDeflateExtension -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker$PermessageDeflateExtension:
# {"fileName":"PerMessageDeflateServerExtensionHandshaker.java","id":"sourceFile"}
    int compressionLevel -> compressionLevel
    boolean serverNoContext -> serverNoContext
    int serverWindowSize -> serverWindowSize
    boolean clientNoContext -> clientNoContext
    int clientWindowSize -> clientWindowSize
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider -> extensionFilterProvider
    189:196:void <init>(int,boolean,int,boolean,int,pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider) -> <init>
    200:200:int rsv() -> rsv
    205:206:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder newExtensionEncoder() -> newExtensionEncoder
    211:211:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder newExtensionDecoder() -> newExtensionDecoder
    216:229:pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newReponseData() -> newReponseData
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketClientCompressionHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketClientCompressionHandler:
# {"fileName":"WebSocketClientCompressionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketClientCompressionHandler INSTANCE -> INSTANCE
    33:36:void <init>() -> <init>
    30:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler -> pro.gravit.repackage.io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler:
# {"fileName":"WebSocketServerCompressionHandler.java","id":"sourceFile"}
    32:34:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.json.JsonObjectDecoder -> pro.gravit.repackage.io.netty.handler.codec.json.JsonObjectDecoder:
# {"fileName":"JsonObjectDecoder.java","id":"sourceFile"}
    int ST_CORRUPTED -> ST_CORRUPTED
    int ST_INIT -> ST_INIT
    int ST_DECODING_NORMAL -> ST_DECODING_NORMAL
    int ST_DECODING_ARRAY_STREAM -> ST_DECODING_ARRAY_STREAM
    int openBraces -> openBraces
    int idx -> idx
    int lastReaderIndex -> lastReaderIndex
    int state -> state
    boolean insideString -> insideString
    int maxObjectLength -> maxObjectLength
    boolean streamArrayElements -> streamArrayElements
    64:65:void <init>() -> <init>
    68:69:void <init>(int) -> <init>
    72:73:void <init>(boolean) -> <init>
    84:87:void <init>(int,boolean) -> <init>
    91:183:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    190:190:pro.gravit.repackage.io.netty.buffer.ByteBuf extractObject(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> extractObject
    194:221:void decodeByte(byte,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> decodeByte
    224:230:void initDecoding(byte) -> initDecoding
    233:236:void reset() -> reset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.ChannelBufferByteInput -> pro.gravit.repackage.io.netty.handler.codec.marshalling.ChannelBufferByteInput:
# {"fileName":"ChannelBufferByteInput.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    30:32:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    37:37:void close() -> close
    41:41:int available() -> available
    46:49:int read() -> read
    54:54:int read(byte[]) -> read
    59:66:int read(byte[],int,int) -> read
    71:76:long skip(long) -> skip
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.ChannelBufferByteOutput -> pro.gravit.repackage.io.netty.handler.codec.marshalling.ChannelBufferByteOutput:
# {"fileName":"ChannelBufferByteOutput.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf buffer -> buffer
    35:37:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    42:42:void close() -> close
    47:47:void flush() -> flush
    51:52:void write(int) -> write
    56:57:void write(byte[]) -> write
    61:62:void write(byte[],int,int) -> write
    69:69:pro.gravit.repackage.io.netty.buffer.ByteBuf getBuffer() -> getBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder -> pro.gravit.repackage.io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder:
# {"fileName":"CompatibleMarshallingDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.marshalling.UnmarshallerProvider provider -> provider
    int maxObjectSize -> maxObjectSize
    boolean discardingTooLongFrame -> discardingTooLongFrame
    52:55:void <init>(pro.gravit.repackage.io.netty.handler.codec.marshalling.UnmarshallerProvider,int) -> <init>
    59:83:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    87:99:void decodeLast(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decodeLast
    103:108:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder -> pro.gravit.repackage.io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder:
# {"fileName":"CompatibleMarshallingEncoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallerProvider provider -> provider
    46:48:void <init>(pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallerProvider) -> <init>
    52:57:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider -> pro.gravit.repackage.io.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider:
# {"fileName":"ContextBoundUnmarshallerProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AttributeKey UNMARSHALLER -> UNMARSHALLER
    41:42:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    46:52:org.jboss.marshalling.Unmarshaller getUnmarshaller(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getUnmarshaller
    37:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.DefaultMarshallerProvider -> pro.gravit.repackage.io.netty.handler.codec.marshalling.DefaultMarshallerProvider:
# {"fileName":"DefaultMarshallerProvider.java","id":"sourceFile"}
    org.jboss.marshalling.MarshallerFactory factory -> factory
    org.jboss.marshalling.MarshallingConfiguration config -> config
    39:42:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    46:46:org.jboss.marshalling.Marshaller getMarshaller(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getMarshaller
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.DefaultUnmarshallerProvider -> pro.gravit.repackage.io.netty.handler.codec.marshalling.DefaultUnmarshallerProvider:
# {"fileName":"DefaultUnmarshallerProvider.java","id":"sourceFile"}
    org.jboss.marshalling.MarshallerFactory factory -> factory
    org.jboss.marshalling.MarshallingConfiguration config -> config
    40:43:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    47:47:org.jboss.marshalling.Unmarshaller getUnmarshaller(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getUnmarshaller
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.LimitingByteInput -> pro.gravit.repackage.io.netty.handler.codec.marshalling.LimitingByteInput:
# {"fileName":"LimitingByteInput.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException EXCEPTION -> EXCEPTION
    org.jboss.marshalling.ByteInput input -> input
    long limit -> limit
    long read -> read
    37:40:void <init>(org.jboss.marshalling.ByteInput,long) -> <init>
    45:45:void close() -> close
    49:49:int available() -> available
    54:60:int read() -> read
    66:66:int read(byte[]) -> read
    71:77:int read(byte[],int,int) -> read
    83:89:long skip(long) -> skip
    94:94:int readable(int) -> readable
    31:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException -> pro.gravit.repackage.io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException:
# {"fileName":"LimitingByteInput.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    101:101:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallerProvider -> pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallerProvider:
# {"fileName":"MarshallerProvider.java","id":"sourceFile"}
    org.jboss.marshalling.Marshaller getMarshaller(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getMarshaller
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallingDecoder -> pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallingDecoder:
# {"fileName":"MarshallingDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.marshalling.UnmarshallerProvider provider -> provider
    45:46:void <init>(pro.gravit.repackage.io.netty.handler.codec.marshalling.UnmarshallerProvider) -> <init>
    57:59:void <init>(pro.gravit.repackage.io.netty.handler.codec.marshalling.UnmarshallerProvider,int) -> <init>
    63:80:java.lang.Object decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    85:85:pro.gravit.repackage.io.netty.buffer.ByteBuf extractFrame(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> extractFrame
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallingEncoder -> pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallingEncoder:
# {"fileName":"MarshallingEncoder.java","id":"sourceFile"}
    byte[] LENGTH_PLACEHOLDER -> LENGTH_PLACEHOLDER
    pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallerProvider provider -> provider
    48:50:void <init>(pro.gravit.repackage.io.netty.handler.codec.marshalling.MarshallerProvider) -> <init>
    54:64:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    40:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.ThreadLocalMarshallerProvider -> pro.gravit.repackage.io.netty.handler.codec.marshalling.ThreadLocalMarshallerProvider:
# {"fileName":"ThreadLocalMarshallerProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal marshallers -> marshallers
    org.jboss.marshalling.MarshallerFactory factory -> factory
    org.jboss.marshalling.MarshallingConfiguration config -> config
    31:45:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    49:54:org.jboss.marshalling.Marshaller getMarshaller(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getMarshaller
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider -> pro.gravit.repackage.io.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider:
# {"fileName":"ThreadLocalUnmarshallerProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal unmarshallers -> unmarshallers
    org.jboss.marshalling.MarshallerFactory factory -> factory
    org.jboss.marshalling.MarshallingConfiguration config -> config
    31:45:void <init>(org.jboss.marshalling.MarshallerFactory,org.jboss.marshalling.MarshallingConfiguration) -> <init>
    49:54:org.jboss.marshalling.Unmarshaller getUnmarshaller(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getUnmarshaller
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.marshalling.UnmarshallerProvider -> pro.gravit.repackage.io.netty.handler.codec.marshalling.UnmarshallerProvider:
# {"fileName":"UnmarshallerProvider.java","id":"sourceFile"}
    org.jboss.marshalling.Unmarshaller getUnmarshaller(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getUnmarshaller
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufDecoder -> pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufDecoder:
# {"fileName":"ProtobufDecoder.java","id":"sourceFile"}
    boolean HAS_PARSER -> HAS_PARSER
    com.google.protobuf.MessageLite prototype -> prototype
    com.google.protobuf.ExtensionRegistryLite extensionRegistry -> extensionRegistry
    91:92:void <init>(com.google.protobuf.MessageLite) -> <init>
    95:96:void <init>(com.google.protobuf.MessageLite,com.google.protobuf.ExtensionRegistry) -> <init>
    98:101:void <init>(com.google.protobuf.MessageLite,com.google.protobuf.ExtensionRegistryLite) -> <init>
    108:132:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    66:66:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    72:82:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufDecoderNano -> pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufDecoderNano:
# {"fileName":"ProtobufDecoderNano.java","id":"sourceFile"}
    java.lang.Class clazz -> clazz
    68:70:void <init>(java.lang.Class) -> <init>
    77:87:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    62:62:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufEncoder -> pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufEncoder:
# {"fileName":"ProtobufEncoder.java","id":"sourceFile"}
    62:62:void <init>() -> <init>
    66:73:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,com.google.protobuf.MessageLiteOrBuilder,java.util.List) -> encode
    61:61:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufEncoderNano -> pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufEncoderNano:
# {"fileName":"ProtobufEncoderNano.java","id":"sourceFile"}
    60:60:void <init>() -> <init>
    64:72:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,com.google.protobuf.nano.MessageNano,java.util.List) -> encode
    59:59:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder:
# {"fileName":"ProtobufVarint32FrameDecoder.java","id":"sourceFile"}
    43:43:void <init>() -> <init>
    51:66:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    74:118:int readRawVarint32(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readRawVarint32
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender -> pro.gravit.repackage.io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender:
# {"fileName":"ProtobufVarint32LengthFieldPrepender.java","id":"sourceFile"}
    41:41:void <init>() -> <init>
    46:51:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    60:65:void writeRawVarint32(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeRawVarint32
    76:88:int computeRawVarint32Size(int) -> computeRawVarint32Size
    40:40:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspDecoder -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspDecoder:
# {"fileName":"RtspDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNKNOWN_STATUS -> UNKNOWN_STATUS
    boolean isDecodingRequest -> isDecodingRequest
    java.util.regex.Pattern versionPattern -> versionPattern
    int DEFAULT_MAX_CONTENT_LENGTH -> DEFAULT_MAX_CONTENT_LENGTH
    85:88:void <init>() -> <init>
    99:100:void <init>(int,int,int) -> <init>
    113:118:void <init>(int,int,int,boolean) -> <init>
    125:134:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[]) -> createMessage
    144:144:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    149:153:pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage createInvalidMessage() -> createInvalidMessage
    161:161:boolean isDecodingRequest() -> isDecodingRequest
    61:72:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspEncoder -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspEncoder:
# {"fileName":"RtspEncoder.java","id":"sourceFile"}
    int CRLF_SHORT -> CRLF_SHORT
    35:35:void <init>() -> <init>
    41:41:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    47:67:void encodeInitialLine(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> encodeInitialLine
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaderNames -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaderNames:
# {"fileName":"RtspHeaderNames.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT -> ACCEPT
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT_ENCODING -> ACCEPT_ENCODING
    pro.gravit.repackage.io.netty.util.AsciiString ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    pro.gravit.repackage.io.netty.util.AsciiString ALLOW -> ALLOW
    pro.gravit.repackage.io.netty.util.AsciiString AUTHORIZATION -> AUTHORIZATION
    pro.gravit.repackage.io.netty.util.AsciiString BANDWIDTH -> BANDWIDTH
    pro.gravit.repackage.io.netty.util.AsciiString BLOCKSIZE -> BLOCKSIZE
    pro.gravit.repackage.io.netty.util.AsciiString CACHE_CONTROL -> CACHE_CONTROL
    pro.gravit.repackage.io.netty.util.AsciiString CONFERENCE -> CONFERENCE
    pro.gravit.repackage.io.netty.util.AsciiString CONNECTION -> CONNECTION
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_BASE -> CONTENT_BASE
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_ENCODING -> CONTENT_ENCODING
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_LENGTH -> CONTENT_LENGTH
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_LOCATION -> CONTENT_LOCATION
    pro.gravit.repackage.io.netty.util.AsciiString CONTENT_TYPE -> CONTENT_TYPE
    pro.gravit.repackage.io.netty.util.AsciiString CSEQ -> CSEQ
    pro.gravit.repackage.io.netty.util.AsciiString DATE -> DATE
    pro.gravit.repackage.io.netty.util.AsciiString EXPIRES -> EXPIRES
    pro.gravit.repackage.io.netty.util.AsciiString FROM -> FROM
    pro.gravit.repackage.io.netty.util.AsciiString HOST -> HOST
    pro.gravit.repackage.io.netty.util.AsciiString IF_MATCH -> IF_MATCH
    pro.gravit.repackage.io.netty.util.AsciiString IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    pro.gravit.repackage.io.netty.util.AsciiString KEYMGMT -> KEYMGMT
    pro.gravit.repackage.io.netty.util.AsciiString LAST_MODIFIED -> LAST_MODIFIED
    pro.gravit.repackage.io.netty.util.AsciiString PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    pro.gravit.repackage.io.netty.util.AsciiString PROXY_REQUIRE -> PROXY_REQUIRE
    pro.gravit.repackage.io.netty.util.AsciiString PUBLIC -> PUBLIC
    pro.gravit.repackage.io.netty.util.AsciiString RANGE -> RANGE
    pro.gravit.repackage.io.netty.util.AsciiString REFERER -> REFERER
    pro.gravit.repackage.io.netty.util.AsciiString REQUIRE -> REQUIRE
    pro.gravit.repackage.io.netty.util.AsciiString RETRT_AFTER -> RETRT_AFTER
    pro.gravit.repackage.io.netty.util.AsciiString RTP_INFO -> RTP_INFO
    pro.gravit.repackage.io.netty.util.AsciiString SCALE -> SCALE
    pro.gravit.repackage.io.netty.util.AsciiString SESSION -> SESSION
    pro.gravit.repackage.io.netty.util.AsciiString SERVER -> SERVER
    pro.gravit.repackage.io.netty.util.AsciiString SPEED -> SPEED
    pro.gravit.repackage.io.netty.util.AsciiString TIMESTAMP -> TIMESTAMP
    pro.gravit.repackage.io.netty.util.AsciiString TRANSPORT -> TRANSPORT
    pro.gravit.repackage.io.netty.util.AsciiString UNSUPPORTED -> UNSUPPORTED
    pro.gravit.repackage.io.netty.util.AsciiString USER_AGENT -> USER_AGENT
    pro.gravit.repackage.io.netty.util.AsciiString VARY -> VARY
    pro.gravit.repackage.io.netty.util.AsciiString VIA -> VIA
    pro.gravit.repackage.io.netty.util.AsciiString WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    206:206:void <init>() -> <init>
    32:204:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaderValues -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaderValues:
# {"fileName":"RtspHeaderValues.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString APPEND -> APPEND
    pro.gravit.repackage.io.netty.util.AsciiString AVP -> AVP
    pro.gravit.repackage.io.netty.util.AsciiString BYTES -> BYTES
    pro.gravit.repackage.io.netty.util.AsciiString CHARSET -> CHARSET
    pro.gravit.repackage.io.netty.util.AsciiString CLIENT_PORT -> CLIENT_PORT
    pro.gravit.repackage.io.netty.util.AsciiString CLOCK -> CLOCK
    pro.gravit.repackage.io.netty.util.AsciiString CLOSE -> CLOSE
    pro.gravit.repackage.io.netty.util.AsciiString COMPRESS -> COMPRESS
    pro.gravit.repackage.io.netty.util.AsciiString CONTINUE -> CONTINUE
    pro.gravit.repackage.io.netty.util.AsciiString DEFLATE -> DEFLATE
    pro.gravit.repackage.io.netty.util.AsciiString DESTINATION -> DESTINATION
    pro.gravit.repackage.io.netty.util.AsciiString GZIP -> GZIP
    pro.gravit.repackage.io.netty.util.AsciiString IDENTITY -> IDENTITY
    pro.gravit.repackage.io.netty.util.AsciiString INTERLEAVED -> INTERLEAVED
    pro.gravit.repackage.io.netty.util.AsciiString KEEP_ALIVE -> KEEP_ALIVE
    pro.gravit.repackage.io.netty.util.AsciiString LAYERS -> LAYERS
    pro.gravit.repackage.io.netty.util.AsciiString MAX_AGE -> MAX_AGE
    pro.gravit.repackage.io.netty.util.AsciiString MAX_STALE -> MAX_STALE
    pro.gravit.repackage.io.netty.util.AsciiString MIN_FRESH -> MIN_FRESH
    pro.gravit.repackage.io.netty.util.AsciiString MODE -> MODE
    pro.gravit.repackage.io.netty.util.AsciiString MULTICAST -> MULTICAST
    pro.gravit.repackage.io.netty.util.AsciiString MUST_REVALIDATE -> MUST_REVALIDATE
    pro.gravit.repackage.io.netty.util.AsciiString NONE -> NONE
    pro.gravit.repackage.io.netty.util.AsciiString NO_CACHE -> NO_CACHE
    pro.gravit.repackage.io.netty.util.AsciiString NO_TRANSFORM -> NO_TRANSFORM
    pro.gravit.repackage.io.netty.util.AsciiString ONLY_IF_CACHED -> ONLY_IF_CACHED
    pro.gravit.repackage.io.netty.util.AsciiString PORT -> PORT
    pro.gravit.repackage.io.netty.util.AsciiString PRIVATE -> PRIVATE
    pro.gravit.repackage.io.netty.util.AsciiString PROXY_REVALIDATE -> PROXY_REVALIDATE
    pro.gravit.repackage.io.netty.util.AsciiString PUBLIC -> PUBLIC
    pro.gravit.repackage.io.netty.util.AsciiString RTP -> RTP
    pro.gravit.repackage.io.netty.util.AsciiString RTPTIME -> RTPTIME
    pro.gravit.repackage.io.netty.util.AsciiString SEQ -> SEQ
    pro.gravit.repackage.io.netty.util.AsciiString SERVER_PORT -> SERVER_PORT
    pro.gravit.repackage.io.netty.util.AsciiString SSRC -> SSRC
    pro.gravit.repackage.io.netty.util.AsciiString TCP -> TCP
    pro.gravit.repackage.io.netty.util.AsciiString TIME -> TIME
    pro.gravit.repackage.io.netty.util.AsciiString TIMEOUT -> TIMEOUT
    pro.gravit.repackage.io.netty.util.AsciiString TTL -> TTL
    pro.gravit.repackage.io.netty.util.AsciiString UDP -> UDP
    pro.gravit.repackage.io.netty.util.AsciiString UNICAST -> UNICAST
    pro.gravit.repackage.io.netty.util.AsciiString URL -> URL
    195:195:void <init>() -> <init>
    29:193:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaders -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaders:
# {"fileName":"RtspHeaders.java","id":"sourceFile"}
    397:397:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaders$Names -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaders$Names:
# {"fileName":"RtspHeaders.java","id":"sourceFile"}
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String BANDWIDTH -> BANDWIDTH
    java.lang.String BLOCKSIZE -> BLOCKSIZE
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONFERENCE -> CONFERENCE
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_BASE -> CONTENT_BASE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CSEQ -> CSEQ
    java.lang.String DATE -> DATE
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String KEYMGMT -> KEYMGMT
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_REQUIRE -> PROXY_REQUIRE
    java.lang.String PUBLIC -> PUBLIC
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String REQUIRE -> REQUIRE
    java.lang.String RETRT_AFTER -> RETRT_AFTER
    java.lang.String RTP_INFO -> RTP_INFO
    java.lang.String SCALE -> SCALE
    java.lang.String SESSION -> SESSION
    java.lang.String SERVER -> SERVER
    java.lang.String SPEED -> SPEED
    java.lang.String TIMESTAMP -> TIMESTAMP
    java.lang.String TRANSPORT -> TRANSPORT
    java.lang.String UNSUPPORTED -> UNSUPPORTED
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    214:215:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaders$Values -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspHeaders$Values:
# {"fileName":"RtspHeaders.java","id":"sourceFile"}
    java.lang.String APPEND -> APPEND
    java.lang.String AVP -> AVP
    java.lang.String BYTES -> BYTES
    java.lang.String CHARSET -> CHARSET
    java.lang.String CLIENT_PORT -> CLIENT_PORT
    java.lang.String CLOCK -> CLOCK
    java.lang.String CLOSE -> CLOSE
    java.lang.String COMPRESS -> COMPRESS
    java.lang.String CONTINUE -> CONTINUE
    java.lang.String DEFLATE -> DEFLATE
    java.lang.String DESTINATION -> DESTINATION
    java.lang.String GZIP -> GZIP
    java.lang.String IDENTITY -> IDENTITY
    java.lang.String INTERLEAVED -> INTERLEAVED
    java.lang.String KEEP_ALIVE -> KEEP_ALIVE
    java.lang.String LAYERS -> LAYERS
    java.lang.String MAX_AGE -> MAX_AGE
    java.lang.String MAX_STALE -> MAX_STALE
    java.lang.String MIN_FRESH -> MIN_FRESH
    java.lang.String MODE -> MODE
    java.lang.String MULTICAST -> MULTICAST
    java.lang.String MUST_REVALIDATE -> MUST_REVALIDATE
    java.lang.String NONE -> NONE
    java.lang.String NO_CACHE -> NO_CACHE
    java.lang.String NO_TRANSFORM -> NO_TRANSFORM
    java.lang.String ONLY_IF_CACHED -> ONLY_IF_CACHED
    java.lang.String PORT -> PORT
    java.lang.String PRIVATE -> PRIVATE
    java.lang.String PROXY_REVALIDATE -> PROXY_REVALIDATE
    java.lang.String PUBLIC -> PUBLIC
    java.lang.String RTP -> RTP
    java.lang.String RTPTIME -> RTPTIME
    java.lang.String SEQ -> SEQ
    java.lang.String SERVER_PORT -> SERVER_PORT
    java.lang.String SSRC -> SSRC
    java.lang.String TCP -> TCP
    java.lang.String TIME -> TIME
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String TTL -> TTL
    java.lang.String UDP -> UDP
    java.lang.String UNICAST -> UNICAST
    java.lang.String URL -> URL
    394:394:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspMethods -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspMethods:
# {"fileName":"RtspMethods.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod OPTIONS -> OPTIONS
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod DESCRIBE -> DESCRIBE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod ANNOUNCE -> ANNOUNCE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod SETUP -> SETUP
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod PLAY -> PLAY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod PAUSE -> PAUSE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod TEARDOWN -> TEARDOWN
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod GET_PARAMETER -> GET_PARAMETER
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod SET_PARAMETER -> SET_PARAMETER
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod REDIRECT -> REDIRECT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod RECORD -> RECORD
    java.util.Map methodMap -> methodMap
    122:127:pro.gravit.repackage.io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String) -> valueOf
    131:132:void <init>() -> <init>
    37:114:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspObjectDecoder -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspObjectDecoder:
# {"fileName":"RtspObjectDecoder.java","id":"sourceFile"}
    64:65:void <init>() -> <init>
    71:72:void <init>(int,int,int) -> <init>
    76:77:void <init>(int,int,int,boolean) -> <init>
    83:90:boolean isContentAlwaysEmpty(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isContentAlwaysEmpty
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspObjectEncoder -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspObjectEncoder:
# {"fileName":"RtspObjectEncoder.java","id":"sourceFile"}
    37:38:void <init>() -> <init>
    42:42:boolean acceptOutboundMessage(java.lang.Object) -> acceptOutboundMessage
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspRequestDecoder -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspRequestDecoder:
# {"fileName":"RtspRequestDecoder.java","id":"sourceFile"}
    22:22:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspRequestEncoder -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspRequestEncoder:
# {"fileName":"RtspRequestEncoder.java","id":"sourceFile"}
    22:22:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspResponseDecoder -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspResponseDecoder:
# {"fileName":"RtspResponseDecoder.java","id":"sourceFile"}
    22:22:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspResponseEncoder -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspResponseEncoder:
# {"fileName":"RtspResponseEncoder.java","id":"sourceFile"}
    22:22:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspResponseStatuses -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspResponseStatuses:
# {"fileName":"RtspResponseStatuses.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus CONTINUE -> CONTINUE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus OK -> OK
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus CREATED -> CREATED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus LOW_STORAGE_SPACE -> LOW_STORAGE_SPACE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus MULTIPLE_CHOICES -> MULTIPLE_CHOICES
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus MOVED_PERMANENTLY -> MOVED_PERMANENTLY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus MOVED_TEMPORARILY -> MOVED_TEMPORARILY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_MODIFIED -> NOT_MODIFIED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus USE_PROXY -> USE_PROXY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus BAD_REQUEST -> BAD_REQUEST
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNAUTHORIZED -> UNAUTHORIZED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PAYMENT_REQUIRED -> PAYMENT_REQUIRED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus FORBIDDEN -> FORBIDDEN
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_FOUND -> NOT_FOUND
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus METHOD_NOT_ALLOWED -> METHOD_NOT_ALLOWED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PROXY_AUTHENTICATION_REQUIRED -> PROXY_AUTHENTICATION_REQUIRED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus REQUEST_TIMEOUT -> REQUEST_TIMEOUT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus GONE -> GONE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus LENGTH_REQUIRED -> LENGTH_REQUIRED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PRECONDITION_FAILED -> PRECONDITION_FAILED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus REQUEST_ENTITY_TOO_LARGE -> REQUEST_ENTITY_TOO_LARGE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus REQUEST_URI_TOO_LONG -> REQUEST_URI_TOO_LONG
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PARAMETER_NOT_UNDERSTOOD -> PARAMETER_NOT_UNDERSTOOD
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus CONFERENCE_NOT_FOUND -> CONFERENCE_NOT_FOUND
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_ENOUGH_BANDWIDTH -> NOT_ENOUGH_BANDWIDTH
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus SESSION_NOT_FOUND -> SESSION_NOT_FOUND
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus METHOD_NOT_VALID -> METHOD_NOT_VALID
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus HEADER_FIELD_NOT_VALID -> HEADER_FIELD_NOT_VALID
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus INVALID_RANGE -> INVALID_RANGE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus PARAMETER_IS_READONLY -> PARAMETER_IS_READONLY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus AGGREGATE_OPERATION_NOT_ALLOWED -> AGGREGATE_OPERATION_NOT_ALLOWED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus ONLY_AGGREGATE_OPERATION_ALLOWED -> ONLY_AGGREGATE_OPERATION_ALLOWED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus UNSUPPORTED_TRANSPORT -> UNSUPPORTED_TRANSPORT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus DESTINATION_UNREACHABLE -> DESTINATION_UNREACHABLE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus KEY_MANAGEMENT_FAILURE -> KEY_MANAGEMENT_FAILURE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus NOT_IMPLEMENTED -> NOT_IMPLEMENTED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus BAD_GATEWAY -> BAD_GATEWAY
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus GATEWAY_TIMEOUT -> GATEWAY_TIMEOUT
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus RTSP_VERSION_NOT_SUPPORTED -> RTSP_VERSION_NOT_SUPPORTED
    pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus OPTION_NOT_SUPPORTED -> OPTION_NOT_SUPPORTED
    268:286:pro.gravit.repackage.io.netty.handler.codec.http.HttpResponseStatus valueOf(int) -> valueOf
    290:291:void <init>() -> <init>
    28:259:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspVersions -> pro.gravit.repackage.io.netty.handler.codec.rtsp.RtspVersions:
# {"fileName":"RtspVersions.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion RTSP_1_0 -> RTSP_1_0
    38:45:pro.gravit.repackage.io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String) -> valueOf
    48:49:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.CachingClassResolver -> pro.gravit.repackage.io.netty.handler.codec.serialization.CachingClassResolver:
# {"fileName":"CachingClassResolver.java","id":"sourceFile"}
    java.util.Map classCache -> classCache
    pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver delegate -> delegate
    25:28:void <init>(pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver,java.util.Map) -> <init>
    34:43:java.lang.Class resolve(java.lang.String) -> resolve
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.ClassLoaderClassResolver -> pro.gravit.repackage.io.netty.handler.codec.serialization.ClassLoaderClassResolver:
# {"fileName":"ClassLoaderClassResolver.java","id":"sourceFile"}
    java.lang.ClassLoader classLoader -> classLoader
    22:24:void <init>(java.lang.ClassLoader) -> <init>
    29:31:java.lang.Class resolve(java.lang.String) -> resolve
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver -> pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver:
# {"fileName":"ClassResolver.java","id":"sourceFile"}
    java.lang.Class resolve(java.lang.String) -> resolve
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolvers -> pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolvers:
# {"fileName":"ClassResolvers.java","id":"sourceFile"}
    45:45:pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver cacheDisabled(java.lang.ClassLoader) -> cacheDisabled
    56:57:pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver weakCachingResolver(java.lang.ClassLoader) -> weakCachingResolver
    69:70:pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver softCachingResolver(java.lang.ClassLoader) -> softCachingResolver
    82:85:pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver weakCachingConcurrentResolver(java.lang.ClassLoader) -> weakCachingConcurrentResolver
    96:99:pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver softCachingConcurrentResolver(java.lang.ClassLoader) -> softCachingConcurrentResolver
    103:112:java.lang.ClassLoader defaultClassLoader(java.lang.ClassLoader) -> defaultClassLoader
    115:117:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.CompactObjectInputStream -> pro.gravit.repackage.io.netty.handler.codec.serialization.CompactObjectInputStream:
# {"fileName":"CompactObjectInputStream.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver classResolver -> classResolver
    30:32:void <init>(java.io.InputStream,pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver) -> <init>
    36:41:void readStreamHeader() -> readStreamHeader
    46:58:java.io.ObjectStreamClass readClassDescriptor() -> readClassDescriptor
    67:72:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.CompactObjectOutputStream -> pro.gravit.repackage.io.netty.handler.codec.serialization.CompactObjectOutputStream:
# {"fileName":"CompactObjectOutputStream.java","id":"sourceFile"}
    int TYPE_FAT_DESCRIPTOR -> TYPE_FAT_DESCRIPTOR
    int TYPE_THIN_DESCRIPTOR -> TYPE_THIN_DESCRIPTOR
    29:30:void <init>(java.io.OutputStream) -> <init>
    34:35:void writeStreamHeader() -> writeStreamHeader
    39:48:void writeClassDescriptor(java.io.ObjectStreamClass) -> writeClassDescriptor
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.CompatibleObjectEncoder -> pro.gravit.repackage.io.netty.handler.codec.serialization.CompatibleObjectEncoder:
# {"fileName":"CompatibleObjectEncoder.java","id":"sourceFile"}
    int resetInterval -> resetInterval
    int writtenObjects -> writtenObjects
    56:57:void <init>() -> <init>
    68:70:void <init>(int) -> <init>
    78:78:java.io.ObjectOutputStream newObjectOutputStream(java.io.OutputStream) -> newObjectOutputStream
    84:100:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.io.Serializable,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    47:47:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.ObjectDecoder -> pro.gravit.repackage.io.netty.handler.codec.serialization.ObjectDecoder:
# {"fileName":"ObjectDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver classResolver -> classResolver
    60:61:void <init>(pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver) -> <init>
    74:76:void <init>(int,pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver) -> <init>
    80:90:java.lang.Object decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.ObjectDecoderInputStream -> pro.gravit.repackage.io.netty.handler.codec.serialization.ObjectDecoderInputStream:
# {"fileName":"ObjectDecoderInputStream.java","id":"sourceFile"}
    java.io.DataInputStream in -> in
    int maxObjectSize -> maxObjectSize
    pro.gravit.repackage.io.netty.handler.codec.serialization.ClassResolver classResolver -> classResolver
    57:58:void <init>(java.io.InputStream) -> <init>
    71:72:void <init>(java.io.InputStream,java.lang.ClassLoader) -> <init>
    86:87:void <init>(java.io.InputStream,int) -> <init>
    103:114:void <init>(java.io.InputStream,java.lang.ClassLoader,int) -> <init>
    118:127:java.lang.Object readObject() -> readObject
    132:132:int available() -> available
    137:138:void close() -> close
    143:144:void mark(int) -> mark
    148:148:boolean markSupported() -> markSupported
    154:154:int read() -> read
    159:159:int read(byte[],int,int) -> read
    164:164:int read(byte[]) -> read
    169:169:boolean readBoolean() -> readBoolean
    174:174:byte readByte() -> readByte
    179:179:char readChar() -> readChar
    184:184:double readDouble() -> readDouble
    189:189:float readFloat() -> readFloat
    194:195:void readFully(byte[],int,int) -> readFully
    199:200:void readFully(byte[]) -> readFully
    204:204:int readInt() -> readInt
    213:213:java.lang.String readLine() -> readLine
    218:218:long readLong() -> readLong
    223:223:short readShort() -> readShort
    228:228:int readUnsignedByte() -> readUnsignedByte
    233:233:int readUnsignedShort() -> readUnsignedShort
    238:238:java.lang.String readUTF() -> readUTF
    243:244:void reset() -> reset
    248:248:long skip(long) -> skip
    253:253:int skipBytes(int) -> skipBytes
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.ObjectEncoder -> pro.gravit.repackage.io.netty.handler.codec.serialization.ObjectEncoder:
# {"fileName":"ObjectEncoder.java","id":"sourceFile"}
    byte[] LENGTH_PLACEHOLDER -> LENGTH_PLACEHOLDER
    48:48:void <init>() -> <init>
    53:73:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.io.Serializable,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    46:46:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encode
    49:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.ObjectEncoderOutputStream -> pro.gravit.repackage.io.netty.handler.codec.serialization.ObjectEncoderOutputStream:
# {"fileName":"ObjectEncoderOutputStream.java","id":"sourceFile"}
    java.io.DataOutputStream out -> out
    int estimatedLength -> estimatedLength
    59:60:void <init>(java.io.OutputStream) -> <init>
    77:87:void <init>(java.io.OutputStream,int) -> <init>
    91:109:void writeObject(java.lang.Object) -> writeObject
    113:114:void write(int) -> write
    118:119:void close() -> close
    123:124:void flush() -> flush
    127:127:int size() -> size
    132:133:void write(byte[],int,int) -> write
    137:138:void write(byte[]) -> write
    142:143:void writeBoolean(boolean) -> writeBoolean
    147:148:void writeByte(int) -> writeByte
    152:153:void writeBytes(java.lang.String) -> writeBytes
    157:158:void writeChar(int) -> writeChar
    162:163:void writeChars(java.lang.String) -> writeChars
    167:168:void writeDouble(double) -> writeDouble
    172:173:void writeFloat(float) -> writeFloat
    177:178:void writeInt(int) -> writeInt
    182:183:void writeLong(long) -> writeLong
    187:188:void writeShort(int) -> writeShort
    192:193:void writeUTF(java.lang.String) -> writeUTF
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.ReferenceMap -> pro.gravit.repackage.io.netty.handler.codec.serialization.ReferenceMap:
# {"fileName":"ReferenceMap.java","id":"sourceFile"}
    java.util.Map delegate -> delegate
    27:29:void <init>(java.util.Map) -> <init>
    java.lang.ref.Reference fold(java.lang.Object) -> fold
    34:38:java.lang.Object unfold(java.lang.ref.Reference) -> unfold
    43:43:int size() -> size
    48:48:boolean isEmpty() -> isEmpty
    53:53:boolean containsKey(java.lang.Object) -> containsKey
    58:58:boolean containsValue(java.lang.Object) -> containsValue
    63:63:java.lang.Object get(java.lang.Object) -> get
    68:68:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    73:73:java.lang.Object remove(java.lang.Object) -> remove
    78:81:void putAll(java.util.Map) -> putAll
    85:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:java.util.Collection values() -> values
    100:100:java.util.Set entrySet() -> entrySet
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.SoftReferenceMap -> pro.gravit.repackage.io.netty.handler.codec.serialization.SoftReferenceMap:
# {"fileName":"SoftReferenceMap.java","id":"sourceFile"}
    25:26:void <init>(java.util.Map) -> <init>
    30:30:java.lang.ref.Reference fold(java.lang.Object) -> fold
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.serialization.WeakReferenceMap -> pro.gravit.repackage.io.netty.handler.codec.serialization.WeakReferenceMap:
# {"fileName":"WeakReferenceMap.java","id":"sourceFile"}
    25:26:void <init>(java.util.Map) -> <init>
    30:30:java.lang.ref.Reference fold(java.lang.Object) -> fold
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyDataFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyDataFrame:
# {"fileName":"DefaultSpdyDataFrame.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf data -> data
    37:38:void <init>(int) -> <init>
    47:50:void <init>(int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    53:57:pro.gravit.repackage.io.netty.buffer.ByteBuf validate(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> validate
    62:63:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame setStreamId(int) -> setStreamId
    68:69:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame setLast(boolean) -> setLast
    74:74:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    79:79:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame copy() -> copy
    84:84:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame duplicate() -> duplicate
    89:89:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame retainedDuplicate() -> retainedDuplicate
    94:96:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    101:101:int refCnt() -> refCnt
    106:107:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame retain() -> retain
    112:113:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame retain(int) -> retain
    118:119:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame touch() -> touch
    124:125:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame touch(java.lang.Object) -> touch
    130:130:boolean release() -> release
    135:135:boolean release(int) -> release
    140:155:java.lang.String toString() -> toString
    27:27:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    27:27:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    27:27:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyGoAwayFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyGoAwayFrame:
# {"fileName":"DefaultSpdyGoAwayFrame.java","id":"sourceFile"}
    int lastGoodStreamId -> lastGoodStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus status -> status
    36:37:void <init>(int) -> <init>
    46:47:void <init>(int,int) -> <init>
    55:58:void <init>(int,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus) -> <init>
    62:62:int lastGoodStreamId() -> lastGoodStreamId
    67:69:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyGoAwayFrame setLastGoodStreamId(int) -> setLastGoodStreamId
    74:74:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus status() -> status
    79:80:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyGoAwayFrame setStatus(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus) -> setStatus
    85:93:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeaders -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeaders:
# {"fileName":"DefaultSpdyHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.DefaultHeaders$NameValidator SpdyNameValidator -> SpdyNameValidator
    38:39:void <init>() -> <init>
    43:46:void <init>(boolean) -> <init>
    50:50:java.lang.String getAsString(java.lang.CharSequence) -> getAsString
    55:55:java.util.List getAllAsString(java.lang.CharSequence) -> getAllAsString
    60:60:java.util.Iterator iteratorAsString() -> iteratorAsString
    65:65:boolean contains(java.lang.CharSequence,java.lang.CharSequence) -> contains
    70:70:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    29:29:boolean contains(java.lang.Object,java.lang.Object) -> contains
    30:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeaders$1 -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeaders$1:
# {"fileName":"DefaultSpdyHeaders.java","id":"sourceFile"}
    30:30:void <init>() -> <init>
    33:34:void validateName(java.lang.CharSequence) -> validateName
    30:30:void validateName(java.lang.Object) -> validateName
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderValueConverterAndValidator -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderValueConverterAndValidator:
# {"fileName":"DefaultSpdyHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderValueConverterAndValidator INSTANCE -> INSTANCE
    74:74:void <init>() -> <init>
    79:81:java.lang.CharSequence convertObject(java.lang.Object) -> convertObject
    74:74:java.lang.Object convertObject(java.lang.Object) -> convertObject
    75:75:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeadersFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyHeadersFrame:
# {"fileName":"DefaultSpdyHeadersFrame.java","id":"sourceFile"}
    boolean invalid -> invalid
    boolean truncated -> truncated
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaders headers -> headers
    38:39:void <init>(int) -> <init>
    48:50:void <init>(int,boolean) -> <init>
    54:55:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setStreamId(int) -> setStreamId
    60:61:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setLast(boolean) -> setLast
    66:66:boolean isInvalid() -> isInvalid
    71:72:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid() -> setInvalid
    77:77:boolean isTruncated() -> isTruncated
    82:83:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setTruncated() -> setTruncated
    88:88:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaders headers() -> headers
    93:108:java.lang.String toString() -> toString
    112:119:void appendHeaders(java.lang.StringBuilder) -> appendHeaders
    25:25:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    25:25:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyPingFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyPingFrame:
# {"fileName":"DefaultSpdyPingFrame.java","id":"sourceFile"}
    int id -> id
    32:34:void <init>(int) -> <init>
    38:38:int id() -> id
    43:44:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyPingFrame setId(int) -> setId
    49:54:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyRstStreamFrame:
# {"fileName":"DefaultSpdyRstStreamFrame.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus status -> status
    35:36:void <init>(int,int) -> <init>
    45:47:void <init>(int,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus) -> <init>
    51:52:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyRstStreamFrame setStreamId(int) -> setStreamId
    57:58:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyRstStreamFrame setLast(boolean) -> setLast
    63:63:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus status() -> status
    68:69:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyRstStreamFrame setStatus(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus) -> setStatus
    74:82:java.lang.String toString() -> toString
    23:23:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    23:23:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdySettingsFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdySettingsFrame:
# {"fileName":"DefaultSpdySettingsFrame.java","id":"sourceFile"}
    boolean clear -> clear
    java.util.Map settingsMap -> settingsMap
    27:30:void <init>() -> <init>
    34:34:java.util.Set ids() -> ids
    39:39:boolean isSet(int) -> isSet
    44:45:int getValue(int) -> getValue
    50:50:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setValue(int,int) -> setValue
    55:67:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setValue(int,int,boolean,boolean) -> setValue
    72:73:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame removeValue(int) -> removeValue
    78:79:boolean isPersistValue(int) -> isPersistValue
    84:88:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setPersistValue(int,boolean) -> setPersistValue
    93:94:boolean isPersisted(int) -> isPersisted
    99:103:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setPersisted(int,boolean) -> setPersisted
    108:108:boolean clearPreviouslyPersistedSettings() -> clearPreviouslyPersistedSettings
    113:114:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setClearPreviouslyPersistedSettings(boolean) -> setClearPreviouslyPersistedSettings
    118:118:java.util.Set getSettings() -> getSettings
    122:135:void appendSettings(java.lang.StringBuilder) -> appendSettings
    139:145:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdySettingsFrame$Setting -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdySettingsFrame$Setting:
# {"fileName":"DefaultSpdySettingsFrame.java","id":"sourceFile"}
    int value -> value
    boolean persist -> persist
    boolean persisted -> persisted
    154:158:void <init>(int,boolean,boolean) -> <init>
    161:161:int getValue() -> getValue
    165:166:void setValue(int) -> setValue
    169:169:boolean isPersist() -> isPersist
    173:174:void setPersist(boolean) -> setPersist
    177:177:boolean isPersisted() -> isPersisted
    181:182:void setPersisted(boolean) -> setPersisted
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyStreamFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyStreamFrame:
# {"fileName":"DefaultSpdyStreamFrame.java","id":"sourceFile"}
    int streamId -> streamId
    boolean last -> last
    33:35:void <init>(int) -> <init>
    39:39:int streamId() -> streamId
    44:46:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    51:51:boolean isLast() -> isLast
    56:57:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdySynReplyFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdySynReplyFrame:
# {"fileName":"DefaultSpdySynReplyFrame.java","id":"sourceFile"}
    31:32:void <init>(int) -> <init>
    41:42:void <init>(int,boolean) -> <init>
    46:47:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynReplyFrame setStreamId(int) -> setStreamId
    52:53:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynReplyFrame setLast(boolean) -> setLast
    58:59:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynReplyFrame setInvalid() -> setInvalid
    64:79:java.lang.String toString() -> toString
    23:23:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid() -> setInvalid
    23:23:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setLast(boolean) -> setLast
    23:23:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setStreamId(int) -> setStreamId
    23:23:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    23:23:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdySynStreamFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdySynStreamFrame:
# {"fileName":"DefaultSpdySynStreamFrame.java","id":"sourceFile"}
    int associatedStreamId -> associatedStreamId
    byte priority -> priority
    boolean unidirectional -> unidirectional
    40:41:void <init>(int,int,byte) -> <init>
    52:55:void <init>(int,int,byte,boolean) -> <init>
    59:60:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setStreamId(int) -> setStreamId
    65:66:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setLast(boolean) -> setLast
    71:72:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setInvalid() -> setInvalid
    77:77:int associatedStreamId() -> associatedStreamId
    82:84:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setAssociatedStreamId(int) -> setAssociatedStreamId
    89:89:byte priority() -> priority
    94:99:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setPriority(byte) -> setPriority
    104:104:boolean isUnidirectional() -> isUnidirectional
    109:110:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setUnidirectional(boolean) -> setUnidirectional
    115:140:java.lang.String toString() -> toString
    25:25:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid() -> setInvalid
    25:25:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setLast(boolean) -> setLast
    25:25:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setStreamId(int) -> setStreamId
    25:25:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    25:25:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyWindowUpdateFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.DefaultSpdyWindowUpdateFrame:
# {"fileName":"DefaultSpdyWindowUpdateFrame.java","id":"sourceFile"}
    int streamId -> streamId
    int deltaWindowSize -> deltaWindowSize
    37:40:void <init>(int,int) -> <init>
    44:44:int streamId() -> streamId
    49:51:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyWindowUpdateFrame setStreamId(int) -> setStreamId
    56:56:int deltaWindowSize() -> deltaWindowSize
    61:63:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyWindowUpdateFrame setDeltaWindowSize(int) -> setDeltaWindowSize
    68:76:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyCodecUtil -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyCodecUtil:
# {"fileName":"SpdyCodecUtil.java","id":"sourceFile"}
    int SPDY_SESSION_STREAM_ID -> SPDY_SESSION_STREAM_ID
    int SPDY_HEADER_TYPE_OFFSET -> SPDY_HEADER_TYPE_OFFSET
    int SPDY_HEADER_FLAGS_OFFSET -> SPDY_HEADER_FLAGS_OFFSET
    int SPDY_HEADER_LENGTH_OFFSET -> SPDY_HEADER_LENGTH_OFFSET
    int SPDY_HEADER_SIZE -> SPDY_HEADER_SIZE
    int SPDY_MAX_LENGTH -> SPDY_MAX_LENGTH
    byte SPDY_DATA_FLAG_FIN -> SPDY_DATA_FLAG_FIN
    int SPDY_DATA_FRAME -> SPDY_DATA_FRAME
    int SPDY_SYN_STREAM_FRAME -> SPDY_SYN_STREAM_FRAME
    int SPDY_SYN_REPLY_FRAME -> SPDY_SYN_REPLY_FRAME
    int SPDY_RST_STREAM_FRAME -> SPDY_RST_STREAM_FRAME
    int SPDY_SETTINGS_FRAME -> SPDY_SETTINGS_FRAME
    int SPDY_PUSH_PROMISE_FRAME -> SPDY_PUSH_PROMISE_FRAME
    int SPDY_PING_FRAME -> SPDY_PING_FRAME
    int SPDY_GOAWAY_FRAME -> SPDY_GOAWAY_FRAME
    int SPDY_HEADERS_FRAME -> SPDY_HEADERS_FRAME
    int SPDY_WINDOW_UPDATE_FRAME -> SPDY_WINDOW_UPDATE_FRAME
    byte SPDY_FLAG_FIN -> SPDY_FLAG_FIN
    byte SPDY_FLAG_UNIDIRECTIONAL -> SPDY_FLAG_UNIDIRECTIONAL
    byte SPDY_SETTINGS_CLEAR -> SPDY_SETTINGS_CLEAR
    byte SPDY_SETTINGS_PERSIST_VALUE -> SPDY_SETTINGS_PERSIST_VALUE
    byte SPDY_SETTINGS_PERSISTED -> SPDY_SETTINGS_PERSISTED
    int SPDY_SETTINGS_MAX_ID -> SPDY_SETTINGS_MAX_ID
    int SPDY_MAX_NV_LENGTH -> SPDY_MAX_NV_LENGTH
    byte[] SPDY_DICT -> SPDY_DICT
    240:241:void <init>() -> <init>
    247:248:int getUnsignedShort(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getUnsignedShort
    255:257:int getUnsignedMedium(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getUnsignedMedium
    264:267:int getUnsignedInt(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getUnsignedInt
    274:277:int getSignedInt(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getSignedInt
    285:285:boolean isServerId(int) -> isServerId
    292:313:void validateHeaderName(java.lang.CharSequence) -> validateHeaderName
    319:327:void validateHeaderValue(java.lang.CharSequence) -> validateHeaderValue
    59:59:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame:
# {"fileName":"SpdyDataFrame.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame setStreamId(int) -> setStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame setLast(boolean) -> setLast
    pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame copy() -> copy
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame retain() -> retain
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame touch() -> touch
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrame:
# {"fileName":"SpdyFrame.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameCodec -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameCodec:
# {"fileName":"SpdyFrameCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException INVALID_FRAME -> INVALID_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder spdyFrameDecoder -> spdyFrameDecoder
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameEncoder spdyFrameEncoder -> spdyFrameEncoder
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder spdyHeaderBlockDecoder -> spdyHeaderBlockDecoder
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockEncoder spdyHeaderBlockEncoder -> spdyHeaderBlockEncoder
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame spdyHeadersFrame -> spdyHeadersFrame
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame spdySettingsFrame -> spdySettingsFrame
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    boolean read -> read
    boolean validateHeaders -> validateHeaders
    61:62:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion) -> <init>
    73:74:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,boolean) -> <init>
    83:84:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,int,int,int,int) -> <init>
    93:96:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,int,int,int,int,boolean) -> <init>
    100:106:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockEncoder,boolean) -> <init>
    110:119:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    123:124:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    128:135:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    139:140:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    145:146:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    150:151:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    155:156:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    160:161:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    165:166:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    170:171:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    177:290:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    294:299:void readDataFrame(int,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readDataFrame
    304:309:void readSynStreamFrame(int,int,byte,boolean,boolean) -> readSynStreamFrame
    313:316:void readSynReplyFrame(int,boolean) -> readSynReplyFrame
    320:324:void readRstStreamFrame(int,int) -> readRstStreamFrame
    328:332:void readSettingsFrame(boolean) -> readSettingsFrame
    336:337:void readSetting(int,int,boolean,boolean) -> readSetting
    341:346:void readSettingsEnd() -> readSettingsEnd
    350:354:void readPingFrame(int) -> readPingFrame
    358:362:void readGoAwayFrame(int,int) -> readGoAwayFrame
    366:368:void readHeadersFrame(int,boolean) -> readHeadersFrame
    372:376:void readWindowUpdateFrame(int,int) -> readWindowUpdateFrame
    381:387:void readHeaderBlock(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readHeaderBlock
    391:404:void readHeaderBlockEnd() -> readHeaderBlockEnd
    408:409:void readFrameError(java.lang.String) -> readFrameError
    34:34:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder access$000(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameCodec) -> access$000
    34:34:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockEncoder access$100(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameCodec) -> access$100
    37:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameCodec$1 -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameCodec$1:
# {"fileName":"SpdyFrameCodec.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameCodec this$0 -> this$0
    112:112:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameCodec) -> <init>
    115:117:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    112:112:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder:
# {"fileName":"SpdyFrameDecoder.java","id":"sourceFile"}
    int spdyVersion -> spdyVersion
    int maxChunkSize -> maxChunkSize
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoderDelegate delegate -> delegate
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State state -> state
    byte flags -> flags
    int length -> length
    int streamId -> streamId
    int numSettings -> numSettings
    87:88:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoderDelegate) -> <init>
    93:98:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoderDelegate,int) -> <init>
    105:377:void decode(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decode
    383:383:boolean hasFlag(byte,byte) -> hasFlag
    387:419:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State getNextState(int,int) -> getNextState
    425:454:boolean isValidFrameHeader(int,int,byte,int) -> isValidFrameHeader
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$1:
# {"fileName":"SpdyFrameDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$spdy$SpdyFrameDecoder$State -> $SwitchMap$io$netty$handler$codec$spdy$SpdyFrameDecoder$State
    105:105:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State:
# {"fileName":"SpdyFrameDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_COMMON_HEADER -> READ_COMMON_HEADER
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_DATA_FRAME -> READ_DATA_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_SYN_STREAM_FRAME -> READ_SYN_STREAM_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_SYN_REPLY_FRAME -> READ_SYN_REPLY_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_RST_STREAM_FRAME -> READ_RST_STREAM_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_SETTINGS_FRAME -> READ_SETTINGS_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_SETTING -> READ_SETTING
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_PING_FRAME -> READ_PING_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_GOAWAY_FRAME -> READ_GOAWAY_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_HEADERS_FRAME -> READ_HEADERS_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_WINDOW_UPDATE_FRAME -> READ_WINDOW_UPDATE_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State READ_HEADER_BLOCK -> READ_HEADER_BLOCK
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State DISCARD_FRAME -> DISCARD_FRAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State FRAME_ERROR -> FRAME_ERROR
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State[] $VALUES -> $VALUES
    65:65:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State[] values() -> values
    65:65:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoder$State valueOf(java.lang.String) -> valueOf
    65:65:void <init>(java.lang.String,int) -> <init>
    65:79:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoderDelegate -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameDecoderDelegate:
# {"fileName":"SpdyFrameDecoderDelegate.java","id":"sourceFile"}
    void readDataFrame(int,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readDataFrame
    void readSynStreamFrame(int,int,byte,boolean,boolean) -> readSynStreamFrame
    void readSynReplyFrame(int,boolean) -> readSynReplyFrame
    void readRstStreamFrame(int,int) -> readRstStreamFrame
    void readSettingsFrame(boolean) -> readSettingsFrame
    void readSetting(int,int,boolean,boolean) -> readSetting
    void readSettingsEnd() -> readSettingsEnd
    void readPingFrame(int) -> readPingFrame
    void readGoAwayFrame(int,int) -> readGoAwayFrame
    void readHeadersFrame(int,boolean) -> readHeadersFrame
    void readWindowUpdateFrame(int,int) -> readWindowUpdateFrame
    void readHeaderBlock(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readHeaderBlock
    void readHeaderBlockEnd() -> readHeaderBlockEnd
    void readFrameError(java.lang.String) -> readFrameError
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameEncoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrameEncoder:
# {"fileName":"SpdyFrameEncoder.java","id":"sourceFile"}
    int version -> version
    37:39:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion) -> <init>
    42:46:void writeControlFrameHeader(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,byte,int) -> writeControlFrameHeader
    49:56:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeDataFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeDataFrame
    61:73:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeSynStreamFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int,byte,boolean,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeSynStreamFrame
    77:84:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeSynReplyFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeSynReplyFrame
    88:94:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeRstStreamFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> encodeRstStreamFrame
    98:119:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeSettingsFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame) -> encodeSettingsFrame
    123:128:pro.gravit.repackage.io.netty.buffer.ByteBuf encodePingFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int) -> encodePingFrame
    132:138:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeGoAwayFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> encodeGoAwayFrame
    142:149:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeHeadersFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,boolean,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> encodeHeadersFrame
    153:159:pro.gravit.repackage.io.netty.buffer.ByteBuf encodeWindowUpdateFrame(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> encodeWindowUpdateFrame
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyGoAwayFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyGoAwayFrame:
# {"fileName":"SpdyGoAwayFrame.java","id":"sourceFile"}
    int lastGoodStreamId() -> lastGoodStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyGoAwayFrame setLastGoodStreamId(int) -> setLastGoodStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus status() -> status
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyGoAwayFrame setStatus(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus) -> setStatus
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder:
# {"fileName":"SpdyHeaderBlockDecoder.java","id":"sourceFile"}
    27:27:void <init>() -> <init>
    30:30:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder newInstance(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int) -> newInstance
    void decode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> decode
    void endHeaderBlock(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> endHeaderBlock
    void end() -> end
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockEncoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockEncoder:
# {"fileName":"SpdyHeaderBlockEncoder.java","id":"sourceFile"}
    29:29:void <init>() -> <init>
    34:38:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockEncoder newInstance(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,int,int) -> newInstance
    pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> encode
    void end() -> end
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockJZlibEncoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockJZlibEncoder:
# {"fileName":"SpdyHeaderBlockJZlibEncoder.java","id":"sourceFile"}
    com.jcraft.jzlib.Deflater z -> z
    boolean finished -> finished
    30:62:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,int,int) -> <init>
    65:80:void setInput(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setInput
    83:121:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> encode
    126:143:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> encode
    148:155:void end() -> end
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder:
# {"fileName":"SpdyHeaderBlockRawDecoder.java","id":"sourceFile"}
    int LENGTH_FIELD_SIZE -> LENGTH_FIELD_SIZE
    int maxHeaderSize -> maxHeaderSize
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state -> state
    pro.gravit.repackage.io.netty.buffer.ByteBuf cumulation -> cumulation
    int headerSize -> headerSize
    int numHeaders -> numHeaders
    int length -> length
    java.lang.String name -> name
    51:55:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    58:60:int readLengthField(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> readLengthField
    65:83:void decode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> decode
    87:279:void decodeHeaderBlock(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> decodeHeaderBlock
    283:293:void endHeaderBlock(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> endHeaderBlock
    297:298:void end() -> end
    301:305:void releaseBuffer() -> releaseBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$1 -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$1:
# {"fileName":"SpdyHeaderBlockRawDecoder.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$codec$spdy$SpdyHeaderBlockRawDecoder$State -> $SwitchMap$io$netty$handler$codec$spdy$SpdyHeaderBlockRawDecoder$State
    88:88:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State:
# {"fileName":"SpdyHeaderBlockRawDecoder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NUM_HEADERS -> READ_NUM_HEADERS
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH -> READ_NAME_LENGTH
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME -> READ_NAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_NAME -> SKIP_NAME
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE_LENGTH -> READ_VALUE_LENGTH
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE -> READ_VALUE
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_VALUE -> SKIP_VALUE
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK -> END_HEADER_BLOCK
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR -> ERROR
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] $VALUES -> $VALUES
    39:39:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] values() -> values
    39:39:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State valueOf(java.lang.String) -> valueOf
    39:39:void <init>(java.lang.String,int) -> <init>
    39:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawEncoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockRawEncoder:
# {"fileName":"SpdyHeaderBlockRawEncoder.java","id":"sourceFile"}
    int version -> version
    32:34:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion) -> <init>
    37:38:void setLengthField(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> setLengthField
    41:42:void writeLengthField(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> writeLengthField
    46:83:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> encode
    88:88:void end() -> end
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockZlibDecoder:
# {"fileName":"SpdyHeaderBlockZlibDecoder.java","id":"sourceFile"}
    int DEFAULT_BUFFER_CAPACITY -> DEFAULT_BUFFER_CAPACITY
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException INVALID_HEADER_BLOCK -> INVALID_HEADER_BLOCK
    java.util.zip.Inflater decompressor -> decompressor
    pro.gravit.repackage.io.netty.buffer.ByteBuf decompressed -> decompressed
    32:38:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    42:57:void decode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> decode
    60:70:int setInput(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setInput
    74:95:int decompress(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> decompress
    100:104:void ensureBuffer(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> ensureBuffer
    108:110:void endHeaderBlock(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> endHeaderBlock
    114:117:void end() -> end
    120:124:void releaseBuffer() -> releaseBuffer
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockZlibEncoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaderBlockZlibEncoder:
# {"fileName":"SpdyHeaderBlockZlibEncoder.java","id":"sourceFile"}
    java.util.zip.Deflater compressor -> compressor
    boolean finished -> finished
    36:43:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    46:56:int setInput(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> setInput
    60:73:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int) -> encode
    78:88:boolean compressInto(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compressInto
    93:110:pro.gravit.repackage.io.netty.buffer.ByteBuf encode(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame) -> encode
    115:121:void end() -> end
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaders -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaders:
# {"fileName":"SpdyHeaders.java","id":"sourceFile"}
    java.lang.String getAsString(java.lang.CharSequence) -> getAsString
    java.util.List getAllAsString(java.lang.CharSequence) -> getAllAsString
    java.util.Iterator iteratorAsString() -> iteratorAsString
    boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaders$HttpNames -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaders$HttpNames:
# {"fileName":"SpdyHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString HOST -> HOST
    pro.gravit.repackage.io.netty.util.AsciiString METHOD -> METHOD
    pro.gravit.repackage.io.netty.util.AsciiString PATH -> PATH
    pro.gravit.repackage.io.netty.util.AsciiString SCHEME -> SCHEME
    pro.gravit.repackage.io.netty.util.AsciiString STATUS -> STATUS
    pro.gravit.repackage.io.netty.util.AsciiString VERSION -> VERSION
    60:60:void <init>() -> <init>
    38:58:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame:
# {"fileName":"SpdyHeadersFrame.java","id":"sourceFile"}
    boolean isInvalid() -> isInvalid
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid() -> setInvalid
    boolean isTruncated() -> isTruncated
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setTruncated() -> setTruncated
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeaders headers() -> headers
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setStreamId(int) -> setStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame setLast(boolean) -> setLast
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpCodec -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpCodec:
# {"fileName":"SpdyHttpCodec.java","id":"sourceFile"}
    28:29:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    35:36:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,boolean) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpDecoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpDecoder:
# {"fileName":"SpdyHttpDecoder.java","id":"sourceFile"}
    boolean validateHeaders -> validateHeaders
    int spdyVersion -> spdyVersion
    int maxContentLength -> maxContentLength
    java.util.Map messageMap -> messageMap
    64:65:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int) -> <init>
    77:78:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,boolean) -> <init>
    90:91:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,java.util.Map) -> <init>
    104:109:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,int,java.util.Map,boolean) -> <init>
    114:119:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    122:122:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage putMessage(int,pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage) -> putMessage
    126:126:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage getMessage(int) -> getMessage
    130:130:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpMessage removeMessage(int) -> removeMessage
    136:355:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyFrame,java.util.List) -> decode
    360:396:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpRequest createHttpRequest(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> createHttpRequest
    403:430:pro.gravit.repackage.io.netty.handler.codec.http.FullHttpResponse createHttpResponse(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean) -> createHttpResponse
    48:48:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpEncoder -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpEncoder:
# {"fileName":"SpdyHttpEncoder.java","id":"sourceFile"}
    int currentStreamId -> currentStreamId
    boolean validateHeaders -> validateHeaders
    boolean headersToLowerCase -> headersToLowerCase
    136:137:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion) -> <init>
    147:151:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,boolean,boolean) -> <init>
    156:215:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpObject,java.util.List) -> encode
    220:272:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame createSynStreamFrame(pro.gravit.repackage.io.netty.handler.codec.http.HttpRequest) -> createSynStreamFrame
    278:312:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHeadersFrame createHeadersFrame(pro.gravit.repackage.io.netty.handler.codec.http.HttpResponse) -> createHeadersFrame
    322:329:boolean isLast(pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage) -> isLast
    123:123:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpHeaders -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpHeaders:
# {"fileName":"SpdyHttpHeaders.java","id":"sourceFile"}
    50:50:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpHeaders$Names -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpHeaders$Names:
# {"fileName":"SpdyHttpHeaders.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString STREAM_ID -> STREAM_ID
    pro.gravit.repackage.io.netty.util.AsciiString ASSOCIATED_TO_STREAM_ID -> ASSOCIATED_TO_STREAM_ID
    pro.gravit.repackage.io.netty.util.AsciiString PRIORITY -> PRIORITY
    pro.gravit.repackage.io.netty.util.AsciiString SCHEME -> SCHEME
    47:47:void <init>() -> <init>
    33:45:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpResponseStreamIdHandler -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyHttpResponseStreamIdHandler:
# {"fileName":"SpdyHttpResponseStreamIdHandler.java","id":"sourceFile"}
    java.lang.Integer NO_ID -> NO_ID
    java.util.Queue ids -> ids
    33:36:void <init>() -> <init>
    40:40:boolean acceptInboundMessage(java.lang.Object) -> acceptInboundMessage
    45:51:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.http.HttpMessage,java.util.List) -> encode
    55:67:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    33:33:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    35:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyPingFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyPingFrame:
# {"fileName":"SpdyPingFrame.java","id":"sourceFile"}
    int id() -> id
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyPingFrame setId(int) -> setId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException:
# {"fileName":"SpdyProtocolException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    boolean $assertionsDisabled -> $assertionsDisabled
    29:29:void <init>() -> <init>
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    42:43:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.Throwable) -> <init>
    54:59:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException newStatic(java.lang.String,java.lang.Class,java.lang.String) -> newStatic
    65:67:void <init>(java.lang.String,boolean) -> <init>
    22:22:void <init>(java.lang.String,boolean,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException$1) -> <init>
    22:22:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException$1 -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException$1:
# {"fileName":"SpdyProtocolException.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException$StacklessSpdyProtocolException -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException$StacklessSpdyProtocolException:
# {"fileName":"SpdyProtocolException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    73:74:void <init>(java.lang.String) -> <init>
    77:78:void <init>(java.lang.String,boolean) -> <init>
    84:84:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyRstStreamFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyRstStreamFrame:
# {"fileName":"SpdyRstStreamFrame.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus status() -> status
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyRstStreamFrame setStatus(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus) -> setStatus
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyRstStreamFrame setStreamId(int) -> setStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyRstStreamFrame setLast(boolean) -> setLast
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession:
# {"fileName":"SpdySession.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicInteger activeLocalStreams -> activeLocalStreams
    java.util.concurrent.atomic.AtomicInteger activeRemoteStreams -> activeRemoteStreams
    java.util.Map activeStreams -> activeStreams
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$StreamComparator streamComparator -> streamComparator
    java.util.concurrent.atomic.AtomicInteger sendWindowSize -> sendWindowSize
    java.util.concurrent.atomic.AtomicInteger receiveWindowSize -> receiveWindowSize
    32:42:void <init>(int,int) -> <init>
    45:48:int numActiveStreams(boolean) -> numActiveStreams
    53:53:boolean noActiveStreams() -> noActiveStreams
    57:57:boolean isActiveStream(int) -> isActiveStream
    62:64:java.util.Map activeStreams() -> activeStreams
    70:81:void acceptStream(int,byte,boolean,boolean,int,int,boolean) -> acceptStream
    84:92:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$StreamState removeActiveStream(int,boolean) -> removeActiveStream
    96:100:void removeStream(int,java.lang.Throwable,boolean) -> removeStream
    103:104:boolean isRemoteSideClosed(int) -> isRemoteSideClosed
    108:115:void closeRemoteSide(int,boolean) -> closeRemoteSide
    118:119:boolean isLocalSideClosed(int) -> isLocalSideClosed
    123:130:void closeLocalSide(int,boolean) -> closeLocalSide
    137:138:boolean hasReceivedReply(int) -> hasReceivedReply
    142:146:void receivedReply(int) -> receivedReply
    149:154:int getSendWindowSize(int) -> getSendWindowSize
    158:163:int updateSendWindowSize(int,int) -> updateSendWindowSize
    167:178:int updateReceiveWindowSize(int,int) -> updateReceiveWindowSize
    182:187:int getReceiveWindowSizeLowerBound(int) -> getReceiveWindowSizeLowerBound
    191:194:void updateAllSendWindowSizes(int) -> updateAllSendWindowSizes
    197:203:void updateAllReceiveWindowSizes(int) -> updateAllReceiveWindowSizes
    206:207:boolean putPendingWrite(int,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$PendingWrite) -> putPendingWrite
    211:225:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$PendingWrite getPendingWrite(int) -> getPendingWrite
    229:230:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$PendingWrite removePendingWrite(int) -> removePendingWrite
    30:30:java.util.Map access$000(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$PendingWrite -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$PendingWrite:
# {"fileName":"SpdySession.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame spdyDataFrame -> spdyDataFrame
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    347:350:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyDataFrame,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    353:355:void fail(java.lang.Throwable) -> fail
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$StreamComparator -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$StreamComparator:
# {"fileName":"SpdySession.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession this$0 -> this$0
    327:327:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession) -> <init>
    331:339:int compare(java.lang.Integer,java.lang.Integer) -> compare
    325:325:int compare(java.lang.Object,java.lang.Object) -> compare
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$StreamState -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$StreamState:
# {"fileName":"SpdySession.java","id":"sourceFile"}
    byte priority -> priority
    boolean remoteSideClosed -> remoteSideClosed
    boolean localSideClosed -> localSideClosed
    boolean receivedReply -> receivedReply
    java.util.concurrent.atomic.AtomicInteger sendWindowSize -> sendWindowSize
    java.util.concurrent.atomic.AtomicInteger receiveWindowSize -> receiveWindowSize
    int receiveWindowSizeLowerBound -> receiveWindowSizeLowerBound
    java.util.Queue pendingWriteQueue -> pendingWriteQueue
    242:252:void <init>(byte,boolean,boolean,int,int) -> <init>
    255:255:byte getPriority() -> getPriority
    259:259:boolean isRemoteSideClosed() -> isRemoteSideClosed
    263:264:void closeRemoteSide() -> closeRemoteSide
    267:267:boolean isLocalSideClosed() -> isLocalSideClosed
    271:272:void closeLocalSide() -> closeLocalSide
    275:275:boolean hasReceivedReply() -> hasReceivedReply
    279:280:void receivedReply() -> receivedReply
    283:283:int getSendWindowSize() -> getSendWindowSize
    287:287:int updateSendWindowSize(int) -> updateSendWindowSize
    291:291:int updateReceiveWindowSize(int) -> updateReceiveWindowSize
    295:295:int getReceiveWindowSizeLowerBound() -> getReceiveWindowSizeLowerBound
    299:300:void setReceiveWindowSizeLowerBound(int) -> setReceiveWindowSizeLowerBound
    303:303:boolean putPendingWrite(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$PendingWrite) -> putPendingWrite
    307:307:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$PendingWrite getPendingWrite() -> getPendingWrite
    311:311:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession$PendingWrite removePendingWrite() -> removePendingWrite
    316:322:void clearPendingWrites(java.lang.Throwable) -> clearPendingWrites
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler:
# {"fileName":"SpdySessionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException PROTOCOL_EXCEPTION -> PROTOCOL_EXCEPTION
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyProtocolException STREAM_CLOSED -> STREAM_CLOSED
    int DEFAULT_WINDOW_SIZE -> DEFAULT_WINDOW_SIZE
    int initialSendWindowSize -> initialSendWindowSize
    int initialReceiveWindowSize -> initialReceiveWindowSize
    int initialSessionReceiveWindowSize -> initialSessionReceiveWindowSize
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySession spdySession -> spdySession
    int lastGoodStreamId -> lastGoodStreamId
    int DEFAULT_MAX_CONCURRENT_STREAMS -> DEFAULT_MAX_CONCURRENT_STREAMS
    int remoteConcurrentStreams -> remoteConcurrentStreams
    int localConcurrentStreams -> localConcurrentStreams
    java.util.concurrent.atomic.AtomicInteger pings -> pings
    boolean sentGoAwayFrame -> sentGoAwayFrame
    boolean receivedGoAwayFrame -> receivedGoAwayFrame
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener closeSessionFutureListener -> closeSessionFutureListener
    boolean server -> server
    int minorVersion -> minorVersion
    42:75:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion,boolean) -> <init>
    78:86:void setSessionReceiveWindowSize(int) -> setSessionReceiveWindowSize
    90:411:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    415:419:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    423:428:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    432:433:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    437:451:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    454:646:void handleOutboundMessage(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> handleOutboundMessage
    660:661:void issueSessionError(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus) -> issueSessionError
    675:684:void issueStreamError(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,int,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus) -> issueStreamError
    691:692:boolean isRemoteInitiatedId(int) -> isRemoteInitiatedId
    697:700:void updateInitialSendWindowSize(int) -> updateInitialSendWindowSize
    704:707:void updateInitialReceiveWindowSize(int) -> updateInitialReceiveWindowSize
    713:728:boolean acceptStream(int,byte,boolean,boolean) -> acceptStream
    732:740:void halfCloseStream(int,boolean,pro.gravit.repackage.io.netty.channel.ChannelFuture) -> halfCloseStream
    743:748:void removeStream(int,pro.gravit.repackage.io.netty.channel.ChannelFuture) -> removeStream
    751:810:void updateSendWindowSize(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,int,int) -> updateSendWindowSize
    815:827:void sendGoAwayFrame(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> sendGoAwayFrame
    831:836:pro.gravit.repackage.io.netty.channel.ChannelFuture sendGoAwayFrame(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus) -> sendGoAwayFrame
    34:34:void access$000(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus) -> access$000
    36:39:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$1 -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$1:
# {"fileName":"SpdySessionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$context -> val$context
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler this$0 -> this$0
    503:503:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    506:509:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    503:503:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$2 -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$2:
# {"fileName":"SpdySessionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$context -> val$context
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler this$0 -> this$0
    520:520:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    523:526:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    520:520:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$3 -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$3:
# {"fileName":"SpdySessionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler this$0 -> this$0
    780:780:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    783:786:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    780:780:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$4 -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$4:
# {"fileName":"SpdySessionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler this$0 -> this$0
    801:801:void <init>(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    804:807:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    801:801:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$ClosingChannelFutureListener -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionHandler$ClosingChannelFutureListener:
# {"fileName":"SpdySessionHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    844:847:void <init>(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    851:852:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    840:840:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus:
# {"fileName":"SpdySessionStatus.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus OK -> OK
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus PROTOCOL_ERROR -> PROTOCOL_ERROR
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus INTERNAL_ERROR -> INTERNAL_ERROR
    int code -> code
    java.lang.String statusPhrase -> statusPhrase
    49:58:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus valueOf(int) -> valueOf
    69:72:void <init>(int,java.lang.String) -> <init>
    78:78:int code() -> code
    85:85:java.lang.String statusPhrase() -> statusPhrase
    90:90:int hashCode() -> hashCode
    95:99:boolean equals(java.lang.Object) -> equals
    104:104:java.lang.String toString() -> toString
    109:109:int compareTo(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySessionStatus) -> compareTo
    23:23:int compareTo(java.lang.Object) -> compareTo
    28:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame:
# {"fileName":"SpdySettingsFrame.java","id":"sourceFile"}
    int SETTINGS_MINOR_VERSION -> SETTINGS_MINOR_VERSION
    int SETTINGS_UPLOAD_BANDWIDTH -> SETTINGS_UPLOAD_BANDWIDTH
    int SETTINGS_DOWNLOAD_BANDWIDTH -> SETTINGS_DOWNLOAD_BANDWIDTH
    int SETTINGS_ROUND_TRIP_TIME -> SETTINGS_ROUND_TRIP_TIME
    int SETTINGS_MAX_CONCURRENT_STREAMS -> SETTINGS_MAX_CONCURRENT_STREAMS
    int SETTINGS_CURRENT_CWND -> SETTINGS_CURRENT_CWND
    int SETTINGS_DOWNLOAD_RETRANS_RATE -> SETTINGS_DOWNLOAD_RETRANS_RATE
    int SETTINGS_INITIAL_WINDOW_SIZE -> SETTINGS_INITIAL_WINDOW_SIZE
    int SETTINGS_CLIENT_CERTIFICATE_VECTOR_SIZE -> SETTINGS_CLIENT_CERTIFICATE_VECTOR_SIZE
    java.util.Set ids() -> ids
    boolean isSet(int) -> isSet
    int getValue(int) -> getValue
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setValue(int,int) -> setValue
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setValue(int,int,boolean,boolean) -> setValue
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame removeValue(int) -> removeValue
    boolean isPersistValue(int) -> isPersistValue
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setPersistValue(int,boolean) -> setPersistValue
    boolean isPersisted(int) -> isPersisted
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setPersisted(int,boolean) -> setPersisted
    boolean clearPreviouslyPersistedSettings() -> clearPreviouslyPersistedSettings
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySettingsFrame setClearPreviouslyPersistedSettings(boolean) -> setClearPreviouslyPersistedSettings
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame:
# {"fileName":"SpdyStreamFrame.java","id":"sourceFile"}
    int streamId() -> streamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setStreamId(int) -> setStreamId
    boolean isLast() -> isLast
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamFrame setLast(boolean) -> setLast
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus:
# {"fileName":"SpdyStreamStatus.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus PROTOCOL_ERROR -> PROTOCOL_ERROR
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_STREAM -> INVALID_STREAM
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus REFUSED_STREAM -> REFUSED_STREAM
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus UNSUPPORTED_VERSION -> UNSUPPORTED_VERSION
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus CANCEL -> CANCEL
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus INTERNAL_ERROR -> INTERNAL_ERROR
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus FLOW_CONTROL_ERROR -> FLOW_CONTROL_ERROR
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus STREAM_IN_USE -> STREAM_IN_USE
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus STREAM_ALREADY_CLOSED -> STREAM_ALREADY_CLOSED
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus INVALID_CREDENTIALS -> INVALID_CREDENTIALS
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus FRAME_TOO_LARGE -> FRAME_TOO_LARGE
    int code -> code
    java.lang.String statusPhrase -> statusPhrase
    97:127:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus valueOf(int) -> valueOf
    138:146:void <init>(int,java.lang.String) -> <init>
    152:152:int code() -> code
    159:159:java.lang.String statusPhrase() -> statusPhrase
    164:164:int hashCode() -> hashCode
    169:173:boolean equals(java.lang.Object) -> equals
    178:178:java.lang.String toString() -> toString
    183:183:int compareTo(pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyStreamStatus) -> compareTo
    23:23:int compareTo(java.lang.Object) -> compareTo
    28:88:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynReplyFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynReplyFrame:
# {"fileName":"SpdySynReplyFrame.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynReplyFrame setStreamId(int) -> setStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynReplyFrame setLast(boolean) -> setLast
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynReplyFrame setInvalid() -> setInvalid
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame:
# {"fileName":"SpdySynStreamFrame.java","id":"sourceFile"}
    int associatedStreamId() -> associatedStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setAssociatedStreamId(int) -> setAssociatedStreamId
    byte priority() -> priority
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setPriority(byte) -> setPriority
    boolean isUnidirectional() -> isUnidirectional
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setUnidirectional(boolean) -> setUnidirectional
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setStreamId(int) -> setStreamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setLast(boolean) -> setLast
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdySynStreamFrame setInvalid() -> setInvalid
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion:
# {"fileName":"SpdyVersion.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion SPDY_3_1 -> SPDY_3_1
    int version -> version
    int minorVersion -> minorVersion
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion[] $VALUES -> $VALUES
    18:18:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion[] values() -> values
    18:18:pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyVersion valueOf(java.lang.String) -> valueOf
    24:27:void <init>(java.lang.String,int,int,int) -> <init>
    30:30:int getVersion() -> getVersion
    34:34:int getMinorVersion() -> getMinorVersion
    18:19:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyWindowUpdateFrame -> pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyWindowUpdateFrame:
# {"fileName":"SpdyWindowUpdateFrame.java","id":"sourceFile"}
    int streamId() -> streamId
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyWindowUpdateFrame setStreamId(int) -> setStreamId
    int deltaWindowSize() -> deltaWindowSize
    pro.gravit.repackage.io.netty.handler.codec.spdy.SpdyWindowUpdateFrame setDeltaWindowSize(int) -> setDeltaWindowSize
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.string.LineEncoder -> pro.gravit.repackage.io.netty.handler.codec.string.LineEncoder:
# {"fileName":"LineEncoder.java","id":"sourceFile"}
    java.nio.charset.Charset charset -> charset
    byte[] lineSeparator -> lineSeparator
    63:64:void <init>() -> <init>
    70:71:void <init>(pro.gravit.repackage.io.netty.handler.codec.string.LineSeparator) -> <init>
    77:78:void <init>(java.nio.charset.Charset) -> <init>
    83:86:void <init>(pro.gravit.repackage.io.netty.handler.codec.string.LineSeparator,java.nio.charset.Charset) -> <init>
    90:93:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.CharSequence,java.util.List) -> encode
    53:53:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.string.LineSeparator -> pro.gravit.repackage.io.netty.handler.codec.string.LineSeparator:
# {"fileName":"LineSeparator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.codec.string.LineSeparator DEFAULT -> DEFAULT
    pro.gravit.repackage.io.netty.handler.codec.string.LineSeparator UNIX -> UNIX
    pro.gravit.repackage.io.netty.handler.codec.string.LineSeparator WINDOWS -> WINDOWS
    java.lang.String value -> value
    48:50:void <init>(java.lang.String) -> <init>
    56:56:java.lang.String value() -> value
    61:68:boolean equals(java.lang.Object) -> equals
    73:73:int hashCode() -> hashCode
    81:81:java.lang.String toString() -> toString
    31:41:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.string.StringDecoder -> pro.gravit.repackage.io.netty.handler.codec.string.StringDecoder:
# {"fileName":"StringDecoder.java","id":"sourceFile"}
    java.nio.charset.Charset charset -> charset
    65:66:void <init>() -> <init>
    71:73:void <init>(java.nio.charset.Charset) -> <init>
    77:78:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    55:55:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> decode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.string.StringEncoder -> pro.gravit.repackage.io.netty.handler.codec.string.StringEncoder:
# {"fileName":"StringEncoder.java","id":"sourceFile"}
    java.nio.charset.Charset charset -> charset
    61:62:void <init>() -> <init>
    67:69:void <init>(java.nio.charset.Charset) -> <init>
    73:78:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.CharSequence,java.util.List) -> encode
    52:52:void encode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List) -> encode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.codec.xml.XmlFrameDecoder -> pro.gravit.repackage.io.netty.handler.codec.xml.XmlFrameDecoder:
# {"fileName":"XmlFrameDecoder.java","id":"sourceFile"}
    int maxFrameLength -> maxFrameLength
    82:84:void <init>(int) -> <init>
    88:193:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    196:200:void fail(long) -> fail
    206:207:void fail(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> fail
    210:210:pro.gravit.repackage.io.netty.buffer.ByteBuf extractFrame(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> extractFrame
    225:225:boolean isValidStartCharForXmlElement(byte) -> isValidStartCharForXmlElement
    229:231:boolean isCommentBlockStart(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> isCommentBlockStart
    235:242:boolean isCDATABlockStart(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> isCDATABlockStart
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler -> pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler:
# {"fileName":"FlowControlHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean releaseMessages -> releaseMessages
    pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque queue -> queue
    pro.gravit.repackage.io.netty.channel.ChannelConfig config -> config
    boolean shouldConsume -> shouldConsume
    80:81:void <init>() -> <init>
    83:85:void <init>(boolean) -> <init>
    92:92:boolean isQueueEmpty() -> isQueueEmpty
    99:115:void destroy() -> destroy
    119:120:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    124:129:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    133:135:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    139:146:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    150:163:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    167:174:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    189:215:int dequeue(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,int) -> dequeue
    69:69:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$1 -> pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$1:
# {"fileName":"FlowControlHandler.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque -> pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque:
# {"fileName":"FlowControlHandler.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    int DEFAULT_NUM_ELEMENTS -> DEFAULT_NUM_ELEMENTS
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle handle -> handle
    239:239:pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque newInstance() -> newInstance
    245:247:void <init>(int,pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    250:252:void recycle() -> recycle
    221:221:void <init>(int,pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$1) -> <init>
    230:230:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque$1 -> pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque$1:
# {"fileName":"FlowControlHandler.java","id":"sourceFile"}
    231:231:void <init>() -> <init>
    234:234:pro.gravit.repackage.io.netty.handler.flow.FlowControlHandler$RecyclableArrayDeque newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    231:231:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler -> pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler:
# {"fileName":"FlushConsolidationHandler.java","id":"sourceFile"}
    int explicitFlushAfterFlushes -> explicitFlushAfterFlushes
    boolean consolidateWhenNoReadInProgress -> consolidateWhenNoReadInProgress
    java.lang.Runnable flushTask -> flushTask
    int flushPendingCount -> flushPendingCount
    boolean readInProgress -> readInProgress
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    java.util.concurrent.Future nextScheduledFlush -> nextScheduledFlush
    int DEFAULT_EXPLICIT_FLUSH_AFTER_FLUSHES -> DEFAULT_EXPLICIT_FLUSH_AFTER_FLUSHES
    79:80:void <init>() -> <init>
    88:89:void <init>(int) -> <init>
    98:114:void <init>(int,boolean) -> <init>
    118:119:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    123:140:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    145:147:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    151:153:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    158:160:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    165:167:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    172:174:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    178:183:void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    187:188:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    191:193:void resetReadAndFlushIfNeeded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> resetReadAndFlushIfNeeded
    196:199:void flushIfNeeded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flushIfNeeded
    202:205:void flushNow(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flushNow
    208:212:void scheduleFlush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> scheduleFlush
    215:219:void cancelScheduledFlush() -> cancelScheduledFlush
    59:59:int access$000(pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler) -> access$000
    59:59:boolean access$100(pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler) -> access$100
    59:59:int access$002(pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler,int) -> access$002
    59:59:java.util.concurrent.Future access$202(pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler,java.util.concurrent.Future) -> access$202
    59:59:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$300(pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler) -> access$300
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler$1 -> pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler$1:
# {"fileName":"FlushConsolidationHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler this$0 -> this$0
    103:103:void <init>(pro.gravit.repackage.io.netty.handler.flush.FlushConsolidationHandler) -> <init>
    106:111:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.AbstractRemoteAddressFilter -> pro.gravit.repackage.io.netty.handler.ipfilter.AbstractRemoteAddressFilter:
# {"fileName":"AbstractRemoteAddressFilter.java","id":"sourceFile"}
    38:38:void <init>() -> <init>
    42:44:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    48:53:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    57:79:boolean handleNewChannel(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handleNewChannel
    boolean accept(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress) -> accept
    95:95:void channelAccepted(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress) -> channelAccepted
    107:107:pro.gravit.repackage.io.netty.channel.ChannelFuture channelRejected(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress) -> channelRejected
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRule -> pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRule:
# {"fileName":"IpFilterRule.java","id":"sourceFile"}
    boolean matches(java.net.InetSocketAddress) -> matches
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ruleType() -> ruleType
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType -> pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType:
# {"fileName":"IpFilterRuleType.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ACCEPT -> ACCEPT
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType REJECT -> REJECT
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType[] $VALUES -> $VALUES
    21:21:pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType[] values() -> values
    21:21:pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:23:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilter -> pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilter:
# {"fileName":"IpSubnetFilter.java","id":"sourceFile"}
    boolean acceptIfNotFound -> acceptIfNotFound
    java.util.List ipv4Rules -> ipv4Rules
    java.util.List ipv6Rules -> ipv6Rules
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ipFilterRuleTypeIPv4 -> ipFilterRuleTypeIPv4
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ipFilterRuleTypeIPv6 -> ipFilterRuleTypeIPv6
    70:71:void <init>(pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule[]) -> <init>
    81:82:void <init>(boolean,pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule[]) -> <init>
    91:92:void <init>(java.util.List) -> <init>
    101:165:void <init>(boolean,java.util.List) -> <init>
    169:189:boolean accept(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.InetSocketAddress) -> accept
    201:224:java.util.List sortAndFilter(java.util.List) -> sortAndFilter
    54:54:boolean accept(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress) -> accept
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule -> pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule:
# {"fileName":"IpSubnetFilterRule.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRule filterRule -> filterRule
    java.lang.String ipAddress -> ipAddress
    38:45:void <init>(java.lang.String,int,pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType) -> <init>
    47:50:void <init>(java.net.InetAddress,int,pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType) -> <init>
    53:61:pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRule selectFilterRule(java.net.InetAddress,int,pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType) -> selectFilterRule
    67:67:boolean matches(java.net.InetSocketAddress) -> matches
    72:72:pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ruleType() -> ruleType
    79:79:java.lang.String getIpAddress() -> getIpAddress
    86:86:pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRule getFilterRule() -> getFilterRule
    91:96:int compareTo(pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule) -> compareTo
    108:116:int compareTo(java.net.InetSocketAddress) -> compareTo
    124:124:int compareInt(int,int) -> compareInt
    33:33:int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$1 -> pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$1:
# {"fileName":"IpSubnetFilterRule.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule -> pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule:
# {"fileName":"IpSubnetFilterRule.java","id":"sourceFile"}
    int networkAddress -> networkAddress
    int subnetMask -> subnetMask
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ruleType -> ruleType
    133:142:void <init>(java.net.Inet4Address,int,pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType) -> <init>
    146:151:boolean matches(java.net.InetSocketAddress) -> matches
    156:156:pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ruleType() -> ruleType
    170:170:int prefixToSubnetMask(int) -> prefixToSubnetMask
    127:127:void <init>(java.net.Inet4Address,int,pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType,pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$1) -> <init>
    127:127:int access$200(pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule) -> access$200
    127:127:int access$400(pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$Ip4SubnetFilterRule) -> access$400
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$Ip6SubnetFilterRule -> pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$Ip6SubnetFilterRule:
# {"fileName":"IpSubnetFilterRule.java","id":"sourceFile"}
    java.math.BigInteger MINUS_ONE -> MINUS_ONE
    java.math.BigInteger networkAddress -> networkAddress
    java.math.BigInteger subnetMask -> subnetMask
    pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ruleType -> ruleType
    boolean $assertionsDisabled -> $assertionsDisabled
    182:191:void <init>(java.net.Inet6Address,int,pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType) -> <init>
    195:200:boolean matches(java.net.InetSocketAddress) -> matches
    205:205:pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType ruleType() -> ruleType
    209:212:java.math.BigInteger ipToInt(java.net.Inet6Address) -> ipToInt
    216:216:java.math.BigInteger prefixToSubnetMask(int) -> prefixToSubnetMask
    174:174:void <init>(java.net.Inet6Address,int,pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRuleType,pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$1) -> <init>
    174:174:java.math.BigInteger access$300(pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRule$Ip6SubnetFilterRule) -> access$300
    174:174:java.math.BigInteger access$500(java.net.Inet6Address) -> access$500
    174:176:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRuleComparator -> pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRuleComparator:
# {"fileName":"IpSubnetFilterRuleComparator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ipfilter.IpSubnetFilterRuleComparator INSTANCE -> INSTANCE
    28:30:void <init>() -> <init>
    34:34:int compare(java.lang.Object,java.lang.Object) -> compare
    26:26:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.RuleBasedIpFilter -> pro.gravit.repackage.io.netty.handler.ipfilter.RuleBasedIpFilter:
# {"fileName":"RuleBasedIpFilter.java","id":"sourceFile"}
    boolean acceptIfNotFound -> acceptIfNotFound
    java.util.List rules -> rules
    58:59:void <init>(pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRule[]) -> <init>
    69:80:void <init>(boolean,pro.gravit.repackage.io.netty.handler.ipfilter.IpFilterRule[]) -> <init>
    84:90:boolean accept(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.InetSocketAddress) -> accept
    43:43:boolean accept(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress) -> accept
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.UniqueIpFilter -> pro.gravit.repackage.io.netty.handler.ipfilter.UniqueIpFilter:
# {"fileName":"UniqueIpFilter.java","id":"sourceFile"}
    java.util.Set connected -> connected
    34:36:void <init>() -> <init>
    40:50:boolean accept(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.InetSocketAddress) -> accept
    33:33:boolean accept(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress) -> accept
    34:34:java.util.Set access$000(pro.gravit.repackage.io.netty.handler.ipfilter.UniqueIpFilter) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ipfilter.UniqueIpFilter$1 -> pro.gravit.repackage.io.netty.handler.ipfilter.UniqueIpFilter$1:
# {"fileName":"UniqueIpFilter.java","id":"sourceFile"}
    java.net.InetAddress val$remoteIp -> val$remoteIp
    pro.gravit.repackage.io.netty.handler.ipfilter.UniqueIpFilter this$0 -> this$0
    44:44:void <init>(pro.gravit.repackage.io.netty.handler.ipfilter.UniqueIpFilter,java.net.InetAddress) -> <init>
    47:48:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    44:44:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat -> pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat:
# {"fileName":"ByteBufFormat.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat SIMPLE -> SIMPLE
    pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat HEX_DUMP -> HEX_DUMP
    pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat[] $VALUES -> $VALUES
    27:27:pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat[] values() -> values
    27:27:pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    27:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.logging.LogLevel -> pro.gravit.repackage.io.netty.handler.logging.LogLevel:
# {"fileName":"LogLevel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.logging.LogLevel TRACE -> TRACE
    pro.gravit.repackage.io.netty.handler.logging.LogLevel DEBUG -> DEBUG
    pro.gravit.repackage.io.netty.handler.logging.LogLevel INFO -> INFO
    pro.gravit.repackage.io.netty.handler.logging.LogLevel WARN -> WARN
    pro.gravit.repackage.io.netty.handler.logging.LogLevel ERROR -> ERROR
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel internalLevel -> internalLevel
    pro.gravit.repackage.io.netty.handler.logging.LogLevel[] $VALUES -> $VALUES
    23:23:pro.gravit.repackage.io.netty.handler.logging.LogLevel[] values() -> values
    23:23:pro.gravit.repackage.io.netty.handler.logging.LogLevel valueOf(java.lang.String) -> valueOf
    32:34:void <init>(java.lang.String,int,pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel) -> <init>
    44:44:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel toInternalLevel() -> toInternalLevel
    23:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.logging.LoggingHandler -> pro.gravit.repackage.io.netty.handler.logging.LoggingHandler:
# {"fileName":"LoggingHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.logging.LogLevel DEFAULT_LEVEL -> DEFAULT_LEVEL
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel internalLevel -> internalLevel
    pro.gravit.repackage.io.netty.handler.logging.LogLevel level -> level
    pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat byteBufFormat -> byteBufFormat
    57:58:void <init>() -> <init>
    66:67:void <init>(pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat) -> <init>
    76:77:void <init>(pro.gravit.repackage.io.netty.handler.logging.LogLevel) -> <init>
    86:91:void <init>(pro.gravit.repackage.io.netty.handler.logging.LogLevel,pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat) -> <init>
    100:101:void <init>(java.lang.Class) -> <init>
    110:111:void <init>(java.lang.Class,pro.gravit.repackage.io.netty.handler.logging.LogLevel) -> <init>
    120:126:void <init>(java.lang.Class,pro.gravit.repackage.io.netty.handler.logging.LogLevel,pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat) -> <init>
    134:135:void <init>(java.lang.String) -> <init>
    144:145:void <init>(java.lang.String,pro.gravit.repackage.io.netty.handler.logging.LogLevel) -> <init>
    154:161:void <init>(java.lang.String,pro.gravit.repackage.io.netty.handler.logging.LogLevel,pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat) -> <init>
    167:167:pro.gravit.repackage.io.netty.handler.logging.LogLevel level() -> level
    174:174:pro.gravit.repackage.io.netty.handler.logging.ByteBufFormat byteBufFormat() -> byteBufFormat
    179:183:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    187:191:void channelUnregistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelUnregistered
    195:199:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    203:207:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    211:215:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    219:223:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    227:231:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    237:241:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    245:249:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    253:257:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    261:265:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    269:273:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    277:281:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    285:289:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    293:297:void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    301:305:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    313:318:java.lang.String format(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String) -> format
    328:333:java.lang.String format(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object) -> format
    346:356:java.lang.String format(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object,java.lang.Object) -> format
    363:383:java.lang.String formatByteBuf(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> formatByteBuf
    391:414:java.lang.String formatByteBufHolder(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,pro.gravit.repackage.io.netty.buffer.ByteBufHolder) -> formatByteBufHolder
    422:425:java.lang.String formatSimple(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,java.lang.Object) -> formatSimple
    44:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.EthernetPacket -> pro.gravit.repackage.io.netty.handler.pcap.EthernetPacket:
# {"fileName":"EthernetPacket.java","id":"sourceFile"}
    byte[] DUMMY_SOURCE_MAC_ADDRESS -> DUMMY_SOURCE_MAC_ADDRESS
    byte[] DUMMY_DESTINATION_MAC_ADDRESS -> DUMMY_DESTINATION_MAC_ADDRESS
    int V4 -> V4
    int V6 -> V6
    42:44:void <init>() -> <init>
    53:54:void writeIPv4(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeIPv4
    63:64:void writeIPv6(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeIPv6
    76:80:void writePacket(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,byte[],byte[],int) -> writePacket
    25:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.IPPacket -> pro.gravit.repackage.io.netty.handler.pcap.IPPacket:
# {"fileName":"IPPacket.java","id":"sourceFile"}
    byte MAX_TTL -> MAX_TTL
    short V4_HEADER_SIZE -> V4_HEADER_SIZE
    byte TCP -> TCP
    byte UDP -> UDP
    int IPV6_VERSION_TRAFFIC_FLOW -> IPV6_VERSION_TRAFFIC_FLOW
    32:34:void <init>() -> <init>
    45:46:void writeUDPv4(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeUDPv4
    57:58:void writeUDPv6(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,byte[],byte[]) -> writeUDPv6
    69:70:void writeTCPv4(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writeTCPv4
    81:82:void writeTCPv6(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,byte[],byte[]) -> writeTCPv6
    87:98:void writePacketv4(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int) -> writePacketv4
    103:110:void writePacketv6(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,byte[],byte[]) -> writePacketv6
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.PcapHeaders -> pro.gravit.repackage.io.netty.handler.pcap.PcapHeaders:
# {"fileName":"PcapHeaders.java","id":"sourceFile"}
    byte[] GLOBAL_HEADER -> GLOBAL_HEADER
    37:39:void <init>() -> <init>
    47:48:void writeGlobalHeader(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writeGlobalHeader
    60:64:void writePacketHeader(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int,int) -> writePacketHeader
    34:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler -> pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler:
# {"fileName":"PcapWriteHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.handler.pcap.PcapWriter pCapWriter -> pCapWriter
    java.io.OutputStream outputStream -> outputStream
    boolean captureZeroByte -> captureZeroByte
    boolean writePcapGlobalHeader -> writePcapGlobalHeader
    int sendSegmentNumber -> sendSegmentNumber
    int receiveSegmentNumber -> receiveSegmentNumber
    pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType channelType -> channelType
    java.net.InetSocketAddress initiatiorAddr -> initiatiorAddr
    java.net.InetSocketAddress handlerAddr -> handlerAddr
    boolean isServerPipeline -> isServerPipeline
    boolean isClosed -> isClosed
    boolean initialized -> initialized
    145:146:void <init>(java.io.OutputStream) -> <init>
    70:168:void <init>(java.io.OutputStream,boolean,boolean) -> <init>
    70:178:void <init>(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder,java.io.OutputStream) -> <init>
    181:181:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder builder() -> builder
    185:268:void initializeIfNecessary(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> initializeIfNecessary
    272:274:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    278:290:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    294:306:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    309:312:void logDiscard() -> logDiscard
    324:389:void handleTCP(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,boolean) -> handleTCP
    403:436:void completeTCPWrite(java.net.InetSocketAddress,java.net.InetSocketAddress,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> completeTCPWrite
    445:455:void logTCP(boolean,int,int,int,java.net.InetSocketAddress,java.net.InetSocketAddress,boolean) -> logTCP
    465:513:void handleUDP(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> handleUDP
    527:560:void completeUDPWrite(java.net.InetSocketAddress,java.net.InetSocketAddress,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> completeUDPWrite
    566:596:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    601:618:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    629:636:void close() -> close
    65:65:void <init>(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder,java.io.OutputStream,pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$1 -> pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$1:
# {"fileName":"PcapWriteHandler.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder -> pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder:
# {"fileName":"PcapWriteHandler.java","id":"sourceFile"}
    boolean captureZeroByte -> captureZeroByte
    boolean writePcapGlobalHeader -> writePcapGlobalHeader
    pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType channelType -> channelType
    java.net.InetSocketAddress initiatiorAddr -> initiatiorAddr
    java.net.InetSocketAddress handlerAddr -> handlerAddr
    boolean isServerPipeline -> isServerPipeline
    647:655:void <init>() -> <init>
    665:666:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder captureZeroByte(boolean) -> captureZeroByte
    678:679:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder writePcapGlobalHeader(boolean) -> writePcapGlobalHeader
    695:699:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder forceTcpChannel(java.net.InetSocketAddress,java.net.InetSocketAddress,boolean) -> forceTcpChannel
    714:717:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder forceUdpChannel(java.net.InetSocketAddress,java.net.InetSocketAddress) -> forceUdpChannel
    727:728:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler build(java.io.OutputStream) -> build
    645:645:boolean access$000(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder) -> access$000
    645:645:boolean access$100(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder) -> access$100
    645:645:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType access$200(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder) -> access$200
    645:645:java.net.InetSocketAddress access$300(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder) -> access$300
    645:645:java.net.InetSocketAddress access$400(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder) -> access$400
    645:645:boolean access$500(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$Builder) -> access$500
    645:645:void <init>(pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType -> pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType:
# {"fileName":"PcapWriteHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType TCP -> TCP
    pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType UDP -> UDP
    pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType[] $VALUES -> $VALUES
    638:638:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType[] values() -> values
    638:638:pro.gravit.repackage.io.netty.handler.pcap.PcapWriteHandler$ChannelType valueOf(java.lang.String) -> valueOf
    638:638:void <init>(java.lang.String,int) -> <init>
    638:639:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.PcapWriter -> pro.gravit.repackage.io.netty.handler.pcap.PcapWriter:
# {"fileName":"PcapWriter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.io.OutputStream outputStream -> outputStream
    boolean isClosed -> isClosed
    47:49:void <init>(java.io.OutputStream) -> <init>
    57:62:void <init>(java.io.OutputStream,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    72:88:void writePacket(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> writePacket
    92:100:void close() -> close
    31:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.TCPPacket -> pro.gravit.repackage.io.netty.handler.pcap.TCPPacket:
# {"fileName":"TCPPacket.java","id":"sourceFile"}
    short OFFSET -> OFFSET
    27:29:void <init>() -> <init>
    42:54:void writePacket(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int,int,int,pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag[]) -> writePacket
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag -> pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag:
# {"fileName":"TCPPacket.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag FIN -> FIN
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag SYN -> SYN
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag RST -> RST
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag PSH -> PSH
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag ACK -> ACK
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag URG -> URG
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag ECE -> ECE
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag CWR -> CWR
    int value -> value
    pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag[] $VALUES -> $VALUES
    56:56:pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag[] values() -> values
    56:56:pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag valueOf(java.lang.String) -> valueOf
    68:70:void <init>(java.lang.String,int,int) -> <init>
    73:79:int getFlag(pro.gravit.repackage.io.netty.handler.pcap.TCPPacket$TCPFlag[]) -> getFlag
    56:64:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.pcap.UDPPacket -> pro.gravit.repackage.io.netty.handler.pcap.UDPPacket:
# {"fileName":"UDPPacket.java","id":"sourceFile"}
    short UDP_HEADER_SIZE -> UDP_HEADER_SIZE
    24:26:void <init>() -> <init>
    37:42:void writePacket(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> writePacket
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.AbstractSniHandler -> pro.gravit.repackage.io.netty.handler.ssl.AbstractSniHandler:
# {"fileName":"AbstractSniHandler.java","id":"sourceFile"}
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture timeoutFuture -> timeoutFuture
    java.lang.String hostname -> hostname
    59:121:java.lang.String extractSniHostname(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> extractSniHostname
    131:133:void <init>(long) -> <init>
    136:137:void <init>() -> <init>
    141:144:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    148:150:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    153:167:void checkStartTimeout(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> checkStartTimeout
    171:173:pro.gravit.repackage.io.netty.util.concurrent.Future lookup(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> lookup
    178:186:void onLookupComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.util.concurrent.Future) -> onLookupComplete
    pro.gravit.repackage.io.netty.util.concurrent.Future lookup(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String) -> lookup
    void onLookupComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Future) -> onLookupComplete
    205:211:void fireSniCompletionEvent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Future) -> fireSniCompletionEvent
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.AbstractSniHandler$1 -> pro.gravit.repackage.io.netty.handler.ssl.AbstractSniHandler$1:
# {"fileName":"AbstractSniHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.ssl.AbstractSniHandler this$0 -> this$0
    156:156:void <init>(pro.gravit.repackage.io.netty.handler.ssl.AbstractSniHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    159:165:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolAccessor -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolAccessor:
# {"fileName":"ApplicationProtocolAccessor.java","id":"sourceFile"}
    java.lang.String getNegotiatedApplicationProtocol() -> getNegotiatedApplicationProtocol
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig:
# {"fileName":"ApplicationProtocolConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig DISABLED -> DISABLED
    java.util.List supportedProtocols -> supportedProtocols
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol -> protocol
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorBehavior -> selectorBehavior
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedBehavior -> selectedBehavior
    51:52:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.lang.Iterable) -> <init>
    63:64:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.lang.String[]) -> <init>
    75:85:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.util.List) -> <init>
    90:95:void <init>() -> <init>
    161:161:java.util.List supportedProtocols() -> supportedProtocols
    168:168:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    175:175:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    182:182:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
    35:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol:
# {"fileName":"ApplicationProtocolConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NONE -> NONE
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NPN -> NPN
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol ALPN -> ALPN
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NPN_AND_ALPN -> NPN_AND_ALPN
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol[] $VALUES -> $VALUES
    100:100:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol[] values() -> values
    100:100:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol valueOf(java.lang.String) -> valueOf
    100:100:void <init>(java.lang.String,int) -> <init>
    100:101:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior:
# {"fileName":"ApplicationProtocolConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior ACCEPT -> ACCEPT
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior FATAL_ALERT -> FATAL_ALERT
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior CHOOSE_MY_LAST_PROTOCOL -> CHOOSE_MY_LAST_PROTOCOL
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior[] $VALUES -> $VALUES
    136:136:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior[] values() -> values
    136:136:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior valueOf(java.lang.String) -> valueOf
    136:136:void <init>(java.lang.String,int) -> <init>
    136:154:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior:
# {"fileName":"ApplicationProtocolConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior FATAL_ALERT -> FATAL_ALERT
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior NO_ADVERTISE -> NO_ADVERTISE
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior CHOOSE_MY_LAST_PROTOCOL -> CHOOSE_MY_LAST_PROTOCOL
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior[] $VALUES -> $VALUES
    107:107:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior[] values() -> values
    107:107:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior valueOf(java.lang.String) -> valueOf
    107:107:void <init>(java.lang.String,int) -> <init>
    107:130:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNames -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNames:
# {"fileName":"ApplicationProtocolNames.java","id":"sourceFile"}
    java.lang.String HTTP_2 -> HTTP_2
    java.lang.String HTTP_1_1 -> HTTP_1_1
    java.lang.String SPDY_3_1 -> SPDY_3_1
    java.lang.String SPDY_3 -> SPDY_3
    java.lang.String SPDY_2 -> SPDY_2
    java.lang.String SPDY_1 -> SPDY_1
    58:58:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNegotiationHandler -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNegotiationHandler:
# {"fileName":"ApplicationProtocolNegotiationHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String fallbackProtocol -> fallbackProtocol
    pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList bufferedMessages -> bufferedMessages
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    boolean sslHandlerChecked -> sslHandlerChecked
    73:85:void <init>(java.lang.String) -> <init>
    89:91:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    95:98:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    103:112:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    118:125:void fireBufferedMessages() -> fireBufferedMessages
    129:162:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    166:168:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    171:175:void removeSelfIfPresent(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> removeSelfIfPresent
    void configurePipeline(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String) -> configurePipeline
    191:193:void handshakeFailure(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> handshakeFailure
    198:209:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    69:70:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNegotiator:
# {"fileName":"ApplicationProtocolNegotiator.java","id":"sourceFile"}
    java.util.List protocols() -> protocols
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolUtil -> pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolUtil:
# {"fileName":"ApplicationProtocolUtil.java","id":"sourceFile"}
    int DEFAULT_LIST_SIZE -> DEFAULT_LIST_SIZE
    29:30:void <init>() -> <init>
    33:33:java.util.List toList(java.lang.Iterable) -> toList
    37:46:java.util.List toList(int,java.lang.Iterable) -> toList
    50:50:java.util.List toList(java.lang.String[]) -> toList
    54:63:java.util.List toList(int,java.lang.String[]) -> toList
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.AsyncRunnable -> pro.gravit.repackage.io.netty.handler.ssl.AsyncRunnable:
# {"fileName":"AsyncRunnable.java","id":"sourceFile"}
    void run(java.lang.Runnable) -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastle -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastle:
# {"fileName":"BouncyCastle.java","id":"sourceFile"}
    boolean BOUNCY_CASTLE_ON_CLASSPATH -> BOUNCY_CASTLE_ON_CLASSPATH
    42:42:boolean isAvailable() -> isAvailable
    49:49:boolean isInUse(javax.net.ssl.SSLEngine) -> isInUse
    52:53:void <init>() -> <init>
    28:36:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslEngine -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslEngine:
# {"fileName":"BouncyCastleAlpnSslEngine.java","id":"sourceFile"}
    31:44:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> <init>
    47:47:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    51:51:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    55:56:void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    59:59:java.util.function.BiFunction getHandshakeApplicationProtocolSelector() -> getHandshakeApplicationProtocolSelector
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslEngine$1:
# {"fileName":"BouncyCastleAlpnSslEngine.java","id":"sourceFile"}
    32:32:void <init>() -> <init>
    35:36:void accept(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector) -> accept
    32:32:void accept(java.lang.Object,java.lang.Object) -> accept
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslEngine$2 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslEngine$2:
# {"fileName":"BouncyCastleAlpnSslEngine.java","id":"sourceFile"}
    38:38:void <init>() -> <init>
    41:42:void accept(javax.net.ssl.SSLEngine,java.util.List) -> accept
    38:38:void accept(java.lang.Object,java.lang.Object) -> accept
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.Class BC_SSL_PARAMETERS -> BC_SSL_PARAMETERS
    java.lang.reflect.Method SET_PARAMETERS -> SET_PARAMETERS
    java.lang.reflect.Method SET_APPLICATION_PROTOCOLS -> SET_APPLICATION_PROTOCOLS
    java.lang.reflect.Method GET_APPLICATION_PROTOCOL -> GET_APPLICATION_PROTOCOL
    java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL -> GET_HANDSHAKE_APPLICATION_PROTOCOL
    java.lang.reflect.Method SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR -> SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR
    java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR -> GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR
    java.lang.Class BC_APPLICATION_PROTOCOL_SELECTOR -> BC_APPLICATION_PROTOCOL_SELECTOR
    java.lang.reflect.Method BC_APPLICATION_PROTOCOL_SELECTOR_SELECT -> BC_APPLICATION_PROTOCOL_SELECTOR_SELECT
    158:159:void <init>() -> <init>
    163:167:java.lang.String getApplicationProtocol(javax.net.ssl.SSLEngine) -> getApplicationProtocol
    172:185:void setApplicationProtocols(javax.net.ssl.SSLEngine,java.util.List) -> setApplicationProtocols
    189:193:java.lang.String getHandshakeApplicationProtocol(javax.net.ssl.SSLEngine) -> getHandshakeApplicationProtocol
    200:226:void setHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine,java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    231:248:java.util.function.BiFunction getHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine) -> getHandshakeApplicationProtocolSelector
    38:38:java.lang.reflect.Method access$000() -> access$000
    39:156:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$1 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$1:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.lang.Class val$testBCApplicationProtocolSelector -> val$testBCApplicationProtocolSelector
    76:76:void <init>(java.lang.Class) -> <init>
    79:79:java.lang.reflect.Method run() -> run
    76:76:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$2 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$2:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.lang.Class val$testBCSslEngine -> val$testBCSslEngine
    java.lang.Class val$testBCSslParameters -> val$testBCSslParameters
    85:85:void <init>(java.lang.Class,java.lang.Class) -> <init>
    88:88:java.lang.reflect.Method run() -> run
    85:85:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$3 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$3:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.lang.Class val$testBCSslParameters -> val$testBCSslParameters
    93:93:void <init>(java.lang.Class) -> <init>
    96:96:java.lang.reflect.Method run() -> run
    93:93:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$4 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$4:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.lang.Class val$testBCSslEngine -> val$testBCSslEngine
    101:101:void <init>(java.lang.Class) -> <init>
    104:104:java.lang.reflect.Method run() -> run
    101:101:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$5 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$5:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.lang.Class val$testBCSslEngine -> val$testBCSslEngine
    109:109:void <init>(java.lang.Class) -> <init>
    112:112:java.lang.reflect.Method run() -> run
    109:109:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$6 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$6:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.lang.Class val$testBCSslEngine -> val$testBCSslEngine
    java.lang.Class val$testBCApplicationProtocolSelector -> val$testBCApplicationProtocolSelector
    118:118:void <init>(java.lang.Class,java.lang.Class) -> <init>
    121:121:java.lang.reflect.Method run() -> run
    118:118:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$7 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$7:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.lang.Class val$testBCSslEngine -> val$testBCSslEngine
    127:127:void <init>(java.lang.Class) -> <init>
    130:130:java.lang.reflect.Method run() -> run
    127:127:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$8 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$8:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.util.function.BiFunction val$selector -> val$selector
    203:203:void <init>(java.util.function.BiFunction) -> <init>
    206:215:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$9 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastleAlpnSslUtils$9:
# {"fileName":"BouncyCastleAlpnSslUtils.java","id":"sourceFile"}
    java.lang.Object val$selector -> val$selector
    232:232:void <init>(java.lang.Object) -> <init>
    237:240:java.lang.String apply(javax.net.ssl.SSLEngine,java.util.List) -> apply
    232:232:java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastlePemReader -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastlePemReader:
# {"fileName":"BouncyCastlePemReader.java","id":"sourceFile"}
    java.lang.String BC_PROVIDER -> BC_PROVIDER
    java.lang.String BC_PEMPARSER -> BC_PEMPARSER
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.Throwable unavailabilityCause -> unavailabilityCause
    java.security.Provider bcProvider -> bcProvider
    boolean attemptedLoading -> attemptedLoading
    55:55:boolean hasAttemptedLoading() -> hasAttemptedLoading
    59:62:boolean isAvailable() -> isAvailable
    69:69:java.lang.Throwable unavailabilityCause() -> unavailabilityCause
    73:94:void tryLoading() -> tryLoading
    105:116:java.security.PrivateKey getPrivateKey(java.io.InputStream,java.lang.String) -> getPrivateKey
    129:140:java.security.PrivateKey getPrivateKey(java.io.File,java.lang.String) -> getPrivateKey
    145:145:org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter newConverter() -> newConverter
    151:211:java.security.PrivateKey getPrivateKey(org.bouncycastle.openssl.PEMParser,java.lang.String) -> getPrivateKey
    215:215:org.bouncycastle.openssl.PEMParser newParser(java.io.File) -> newParser
    219:219:org.bouncycastle.openssl.PEMParser newParser(java.io.InputStream) -> newParser
    222:222:void <init>() -> <init>
    45:45:java.security.Provider access$002(java.security.Provider) -> access$002
    45:45:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$100() -> access$100
    45:45:boolean access$202(boolean) -> access$202
    45:45:java.lang.Throwable access$302(java.lang.Throwable) -> access$302
    48:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.BouncyCastlePemReader$1 -> pro.gravit.repackage.io.netty.handler.ssl.BouncyCastlePemReader$1:
# {"fileName":"BouncyCastlePemReader.java","id":"sourceFile"}
    73:73:void <init>() -> <init>
    77:91:java.lang.Void run() -> run
    73:73:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteConverter -> pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteConverter:
# {"fileName":"CipherSuiteConverter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern JAVA_CIPHERSUITE_PATTERN -> JAVA_CIPHERSUITE_PATTERN
    java.util.regex.Pattern OPENSSL_CIPHERSUITE_PATTERN -> OPENSSL_CIPHERSUITE_PATTERN
    java.util.regex.Pattern JAVA_AES_CBC_PATTERN -> JAVA_AES_CBC_PATTERN
    java.util.regex.Pattern JAVA_AES_PATTERN -> JAVA_AES_PATTERN
    java.util.regex.Pattern OPENSSL_AES_CBC_PATTERN -> OPENSSL_AES_CBC_PATTERN
    java.util.regex.Pattern OPENSSL_AES_PATTERN -> OPENSSL_AES_PATTERN
    java.util.concurrent.ConcurrentMap j2o -> j2o
    java.util.concurrent.ConcurrentMap o2j -> o2j
    java.util.Map j2oTls13 -> j2oTls13
    java.util.Map o2jTls13 -> o2jTls13
    127:129:void clearCache() -> clearCache
    135:135:boolean isJ2OCached(java.lang.String,java.lang.String) -> isJ2OCached
    142:146:boolean isO2JCached(java.lang.String,java.lang.String,java.lang.String) -> isO2JCached
    156:160:java.lang.String toOpenSsl(java.lang.String,boolean) -> toOpenSsl
    164:187:java.lang.String cacheFromJava(java.lang.String,boolean) -> cacheFromJava
    191:209:java.lang.String toOpenSslUncached(java.lang.String,boolean) -> toOpenSslUncached
    214:233:java.lang.String toOpenSslHandshakeAlgo(java.lang.String) -> toOpenSslHandshakeAlgo
    237:265:java.lang.String toOpenSslBulkCipher(java.lang.String) -> toOpenSslBulkCipher
    275:275:java.lang.String toOpenSslHmacAlgo(java.lang.String) -> toOpenSslHmacAlgo
    285:304:java.lang.String toJava(java.lang.String,java.lang.String) -> toJava
    308:335:java.util.Map cacheFromOpenSsl(java.lang.String) -> cacheFromOpenSsl
    339:339:java.lang.String toJavaUncached(java.lang.String) -> toJavaUncached
    343:379:java.lang.String toJavaUncached0(java.lang.String,boolean) -> toJavaUncached0
    383:395:java.lang.String toJavaHandshakeAlgo(java.lang.String,boolean) -> toJavaHandshakeAlgo
    400:440:java.lang.String toJavaBulkCipher(java.lang.String,boolean) -> toJavaBulkCipher
    450:450:java.lang.String toJavaHmacAlgo(java.lang.String) -> toJavaHmacAlgo
    461:493:void convertToCipherStrings(java.lang.Iterable,java.lang.StringBuilder,java.lang.StringBuilder,boolean) -> convertToCipherStrings
    495:495:void <init>() -> <init>
    41:121:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter -> pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter:
# {"fileName":"CipherSuiteFilter.java","id":"sourceFile"}
    java.lang.String[] filterCipherSuites(java.lang.Iterable,java.util.List,java.util.Set) -> filterCipherSuites
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.Ciphers -> pro.gravit.repackage.io.netty.handler.ssl.Ciphers:
# {"fileName":"Ciphers.java","id":"sourceFile"}
    java.lang.String TLS_AES_256_GCM_SHA384 -> TLS_AES_256_GCM_SHA384
    java.lang.String TLS_CHACHA20_POLY1305_SHA256 -> TLS_CHACHA20_POLY1305_SHA256
    java.lang.String TLS_AES_128_GCM_SHA256 -> TLS_AES_128_GCM_SHA256
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 -> TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 -> TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 -> TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 -> TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 -> TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
    java.lang.String TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 -> TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
    java.lang.String TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 -> TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_256_CBC_CCM8 -> TLS_ECDHE_ECDSA_WITH_AES_256_CBC_CCM8
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_256_CBC_CCM -> TLS_ECDHE_ECDSA_WITH_AES_256_CBC_CCM
    java.lang.String TLS_DHE_RSA_WITH_AES_256_CBC_CCM8 -> TLS_DHE_RSA_WITH_AES_256_CBC_CCM8
    java.lang.String TLS_DHE_RSA_WITH_AES_256_CBC_CCM -> TLS_DHE_RSA_WITH_AES_256_CBC_CCM
    java.lang.String TLS_ECDHE_ECDSA_WITH_ARIA256_GCM_SHA384 -> TLS_ECDHE_ECDSA_WITH_ARIA256_GCM_SHA384
    java.lang.String TLS_RSA_WITH_ECDHE_ARIA256_GCM_SHA384 -> TLS_RSA_WITH_ECDHE_ARIA256_GCM_SHA384
    java.lang.String TLS_DHE_DSS_WITH_ARIA256_GCM_SHA384 -> TLS_DHE_DSS_WITH_ARIA256_GCM_SHA384
    java.lang.String TLS_DHE_RSA_WITH_ARIA256_GCM_SHA384 -> TLS_DHE_RSA_WITH_ARIA256_GCM_SHA384
    java.lang.String TLS_DH_anon_WITH_AES_256_GCM_SHA384 -> TLS_DH_anon_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 -> TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 -> TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 -> TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 -> TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_128_CBC_CCM8 -> TLS_ECDHE_ECDSA_WITH_AES_128_CBC_CCM8
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_128_CBC_CCM -> TLS_ECDHE_ECDSA_WITH_AES_128_CBC_CCM
    java.lang.String TLS_DHE_RSA_WITH_AES_128_CBC_CCM8 -> TLS_DHE_RSA_WITH_AES_128_CBC_CCM8
    java.lang.String TLS_DHE_RSA_WITH_AES_128_CBC_CCM -> TLS_DHE_RSA_WITH_AES_128_CBC_CCM
    java.lang.String TLS_ECDHE_ECDSA_WITH_ARIA128_GCM_SHA256 -> TLS_ECDHE_ECDSA_WITH_ARIA128_GCM_SHA256
    java.lang.String TLS_RSA_WITH_ECDHE_ARIA128_GCM_SHA256 -> TLS_RSA_WITH_ECDHE_ARIA128_GCM_SHA256
    java.lang.String TLS_DHE_DSS_WITH_ARIA128_GCM_SHA256 -> TLS_DHE_DSS_WITH_ARIA128_GCM_SHA256
    java.lang.String TLS_DHE_RSA_WITH_ARIA128_GCM_SHA256 -> TLS_DHE_RSA_WITH_ARIA128_GCM_SHA256
    java.lang.String TLS_DH_anon_WITH_AES_128_GCM_SHA256 -> TLS_DH_anon_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 -> TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
    java.lang.String TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 -> TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
    java.lang.String TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 -> TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
    java.lang.String TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 -> TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
    java.lang.String TLS_ECDHE_ECDSA_WITH_CAMELLIA256_SHA384 -> TLS_ECDHE_ECDSA_WITH_CAMELLIA256_SHA384
    java.lang.String TLS_ECDHE_RSA_WITH_CAMELLIA256_SHA384 -> TLS_ECDHE_RSA_WITH_CAMELLIA256_SHA384
    java.lang.String TLS_DHE_RSA_WITH_CAMELLIA256_SHA256 -> TLS_DHE_RSA_WITH_CAMELLIA256_SHA256
    java.lang.String TLS_DHE_DSS_WITH_CAMELLIA256_SHA256 -> TLS_DHE_DSS_WITH_CAMELLIA256_SHA256
    java.lang.String TLS_DH_anon_WITH_AES_256_CBC_SHA256 -> TLS_DH_anon_WITH_AES_256_CBC_SHA256
    java.lang.String TLS_DH_anon_WITH_CAMELLIA256_SHA256 -> TLS_DH_anon_WITH_CAMELLIA256_SHA256
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 -> TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 -> TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 -> TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 -> TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_ECDHE_ECDSA_WITH_CAMELLIA128_SHA256 -> TLS_ECDHE_ECDSA_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_ECDHE_RSA_WITH_CAMELLIA128_SHA256 -> TLS_ECDHE_RSA_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_DHE_RSA_WITH_CAMELLIA128_SHA256 -> TLS_DHE_RSA_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_DHE_DSS_WITH_CAMELLIA128_SHA256 -> TLS_DHE_DSS_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_DH_anon_WITH_AES_128_CBC_SHA256 -> TLS_DH_anon_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_DH_anon_WITH_CAMELLIA128_SHA256 -> TLS_DH_anon_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA -> TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
    java.lang.String TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA -> TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
    java.lang.String TLS_DHE_RSA_WITH_AES_256_CBC_SHA -> TLS_DHE_RSA_WITH_AES_256_CBC_SHA
    java.lang.String TLS_DHE_DSS_WITH_AES_256_CBC_SHA -> TLS_DHE_DSS_WITH_AES_256_CBC_SHA
    java.lang.String TLS_DHE_RSA_WITH_CAMELLIA256_SHA -> TLS_DHE_RSA_WITH_CAMELLIA256_SHA
    java.lang.String TLS_DHE_DSS_WITH_CAMELLIA256_SHA -> TLS_DHE_DSS_WITH_CAMELLIA256_SHA
    java.lang.String TLS_ECDH_anon_WITH_AES_256_CBC_SHA -> TLS_ECDH_anon_WITH_AES_256_CBC_SHA
    java.lang.String TLS_DH_anon_WITH_AES_256_CBC_SHA -> TLS_DH_anon_WITH_AES_256_CBC_SHA
    java.lang.String TLS_DH_anon_WITH_CAMELLIA256_SHA -> TLS_DH_anon_WITH_CAMELLIA256_SHA
    java.lang.String TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA -> TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
    java.lang.String TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA -> TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
    java.lang.String TLS_DHE_RSA_WITH_AES_128_CBC_SHA -> TLS_DHE_RSA_WITH_AES_128_CBC_SHA
    java.lang.String TLS_DHE_DSS_WITH_AES_128_CBC_SHA -> TLS_DHE_DSS_WITH_AES_128_CBC_SHA
    java.lang.String TLS_DHE_RSA_WITH_SEED_SHA -> TLS_DHE_RSA_WITH_SEED_SHA
    java.lang.String TLS_DHE_DSS_WITH_SEED_SHA -> TLS_DHE_DSS_WITH_SEED_SHA
    java.lang.String TLS_DHE_RSA_WITH_CAMELLIA128_SHA -> TLS_DHE_RSA_WITH_CAMELLIA128_SHA
    java.lang.String TLS_DHE_DSS_WITH_CAMELLIA128_SHA -> TLS_DHE_DSS_WITH_CAMELLIA128_SHA
    java.lang.String TLS_ECDH_anon_WITH_AES_128_CBC_SHA -> TLS_ECDH_anon_WITH_AES_128_CBC_SHA
    java.lang.String TLS_DH_anon_WITH_AES_128_CBC_SHA -> TLS_DH_anon_WITH_AES_128_CBC_SHA
    java.lang.String TLS_DH_anon_WITH_SEED_SHA -> TLS_DH_anon_WITH_SEED_SHA
    java.lang.String TLS_DH_anon_WITH_CAMELLIA128_SHA -> TLS_DH_anon_WITH_CAMELLIA128_SHA
    java.lang.String TLS_RSA_PSK_WITH_AES_256_GCM_SHA384 -> TLS_RSA_PSK_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_DHE_PSK_WITH_AES_256_GCM_SHA384 -> TLS_DHE_PSK_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 -> TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256
    java.lang.String TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 -> TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256
    java.lang.String TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 -> TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256
    java.lang.String TLS_DHE_PSK_WITH_AES_256_CBC_CCM8 -> TLS_DHE_PSK_WITH_AES_256_CBC_CCM8
    java.lang.String TLS_DHE_PSK_WITH_AES_256_CBC_CCM -> TLS_DHE_PSK_WITH_AES_256_CBC_CCM
    java.lang.String TLS_RSA_PSK_WITH_ARIA256_GCM_SHA384 -> TLS_RSA_PSK_WITH_ARIA256_GCM_SHA384
    java.lang.String TLS_DHE_PSK_WITH_ARIA256_GCM_SHA384 -> TLS_DHE_PSK_WITH_ARIA256_GCM_SHA384
    java.lang.String TLS_RSA_WITH_AES_256_GCM_SHA384 -> TLS_RSA_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_RSA_WITH_AES_256_CBC_CCM8 -> TLS_RSA_WITH_AES_256_CBC_CCM8
    java.lang.String TLS_RSA_WITH_AES_256_CBC_CCM -> TLS_RSA_WITH_AES_256_CBC_CCM
    java.lang.String TLS_RSA_WITH_ARIA256_GCM_SHA384 -> TLS_RSA_WITH_ARIA256_GCM_SHA384
    java.lang.String TLS_PSK_WITH_AES_256_GCM_SHA384 -> TLS_PSK_WITH_AES_256_GCM_SHA384
    java.lang.String TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 -> TLS_PSK_WITH_CHACHA20_POLY1305_SHA256
    java.lang.String TLS_PSK_WITH_AES_256_CBC_CCM8 -> TLS_PSK_WITH_AES_256_CBC_CCM8
    java.lang.String TLS_PSK_WITH_AES_256_CBC_CCM -> TLS_PSK_WITH_AES_256_CBC_CCM
    java.lang.String TLS_PSK_WITH_ARIA256_GCM_SHA384 -> TLS_PSK_WITH_ARIA256_GCM_SHA384
    java.lang.String TLS_RSA_PSK_WITH_AES_128_GCM_SHA256 -> TLS_RSA_PSK_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_DHE_PSK_WITH_AES_128_GCM_SHA256 -> TLS_DHE_PSK_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_DHE_PSK_WITH_AES_128_CBC_CCM8 -> TLS_DHE_PSK_WITH_AES_128_CBC_CCM8
    java.lang.String TLS_DHE_PSK_WITH_AES_128_CBC_CCM -> TLS_DHE_PSK_WITH_AES_128_CBC_CCM
    java.lang.String TLS_RSA_PSK_WITH_ARIA128_GCM_SHA256 -> TLS_RSA_PSK_WITH_ARIA128_GCM_SHA256
    java.lang.String TLS_DHE_PSK_WITH_ARIA128_GCM_SHA256 -> TLS_DHE_PSK_WITH_ARIA128_GCM_SHA256
    java.lang.String TLS_RSA_WITH_AES_128_GCM_SHA256 -> TLS_RSA_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_RSA_WITH_AES_128_CBC_CCM8 -> TLS_RSA_WITH_AES_128_CBC_CCM8
    java.lang.String TLS_RSA_WITH_AES_128_CBC_CCM -> TLS_RSA_WITH_AES_128_CBC_CCM
    java.lang.String TLS_RSA_WITH_ARIA128_GCM_SHA256 -> TLS_RSA_WITH_ARIA128_GCM_SHA256
    java.lang.String TLS_PSK_WITH_AES_128_GCM_SHA256 -> TLS_PSK_WITH_AES_128_GCM_SHA256
    java.lang.String TLS_PSK_WITH_AES_128_CBC_CCM8 -> TLS_PSK_WITH_AES_128_CBC_CCM8
    java.lang.String TLS_PSK_WITH_AES_128_CBC_CCM -> TLS_PSK_WITH_AES_128_CBC_CCM
    java.lang.String TLS_PSK_WITH_ARIA128_GCM_SHA256 -> TLS_PSK_WITH_ARIA128_GCM_SHA256
    java.lang.String TLS_RSA_WITH_AES_256_CBC_SHA256 -> TLS_RSA_WITH_AES_256_CBC_SHA256
    java.lang.String TLS_RSA_WITH_CAMELLIA256_SHA256 -> TLS_RSA_WITH_CAMELLIA256_SHA256
    java.lang.String TLS_RSA_WITH_AES_128_CBC_SHA256 -> TLS_RSA_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_RSA_WITH_CAMELLIA128_SHA256 -> TLS_RSA_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 -> TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384
    java.lang.String TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA -> TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
    java.lang.String TLS_SRP_DSS_WITH_AES_256_CBC_SHA -> TLS_SRP_DSS_WITH_AES_256_CBC_SHA
    java.lang.String TLS_SRP_RSA_WITH_AES_256_CBC_SHA -> TLS_SRP_RSA_WITH_AES_256_CBC_SHA
    java.lang.String TLS_SRP_WITH_AES_256_CBC_SHA -> TLS_SRP_WITH_AES_256_CBC_SHA
    java.lang.String TLS_RSA_PSK_WITH_AES_256_CBC_SHA384 -> TLS_RSA_PSK_WITH_AES_256_CBC_SHA384
    java.lang.String TLS_DHE_PSK_WITH_AES_256_CBC_SHA384 -> TLS_DHE_PSK_WITH_AES_256_CBC_SHA384
    java.lang.String TLS_RSA_PSK_WITH_AES_256_CBC_SHA -> TLS_RSA_PSK_WITH_AES_256_CBC_SHA
    java.lang.String TLS_DHE_PSK_WITH_AES_256_CBC_SHA -> TLS_DHE_PSK_WITH_AES_256_CBC_SHA
    java.lang.String TLS_ECDHE_PSK_WITH_CAMELLIA256_SHA384 -> TLS_ECDHE_PSK_WITH_CAMELLIA256_SHA384
    java.lang.String TLS_RSA_PSK_WITH_CAMELLIA256_SHA384 -> TLS_RSA_PSK_WITH_CAMELLIA256_SHA384
    java.lang.String TLS_DHE_PSK_WITH_CAMELLIA256_SHA384 -> TLS_DHE_PSK_WITH_CAMELLIA256_SHA384
    java.lang.String TLS_RSA_WITH_AES_256_CBC_SHA -> TLS_RSA_WITH_AES_256_CBC_SHA
    java.lang.String TLS_RSA_WITH_CAMELLIA256_SHA -> TLS_RSA_WITH_CAMELLIA256_SHA
    java.lang.String TLS_PSK_WITH_AES_256_CBC_SHA384 -> TLS_PSK_WITH_AES_256_CBC_SHA384
    java.lang.String TLS_PSK_WITH_AES_256_CBC_SHA -> TLS_PSK_WITH_AES_256_CBC_SHA
    java.lang.String TLS_PSK_WITH_CAMELLIA256_SHA384 -> TLS_PSK_WITH_CAMELLIA256_SHA384
    java.lang.String TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 -> TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA -> TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
    java.lang.String TLS_SRP_DSS_WITH_AES_128_CBC_SHA -> TLS_SRP_DSS_WITH_AES_128_CBC_SHA
    java.lang.String TLS_SRP_RSA_WITH_AES_128_CBC_SHA -> TLS_SRP_RSA_WITH_AES_128_CBC_SHA
    java.lang.String TLS_SRP_WITH_AES_128_CBC_SHA -> TLS_SRP_WITH_AES_128_CBC_SHA
    java.lang.String TLS_RSA_PSK_WITH_AES_128_CBC_SHA256 -> TLS_RSA_PSK_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_DHE_PSK_WITH_AES_128_CBC_SHA256 -> TLS_DHE_PSK_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_RSA_PSK_WITH_AES_128_CBC_SHA -> TLS_RSA_PSK_WITH_AES_128_CBC_SHA
    java.lang.String TLS_DHE_PSK_WITH_AES_128_CBC_SHA -> TLS_DHE_PSK_WITH_AES_128_CBC_SHA
    java.lang.String TLS_ECDHE_PSK_WITH_CAMELLIA128_SHA256 -> TLS_ECDHE_PSK_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_RSA_PSK_WITH_CAMELLIA128_SHA256 -> TLS_RSA_PSK_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_DHE_PSK_WITH_CAMELLIA128_SHA256 -> TLS_DHE_PSK_WITH_CAMELLIA128_SHA256
    java.lang.String TLS_RSA_WITH_AES_128_CBC_SHA -> TLS_RSA_WITH_AES_128_CBC_SHA
    java.lang.String TLS_RSA_WITH_SEED_SHA -> TLS_RSA_WITH_SEED_SHA
    java.lang.String TLS_RSA_WITH_CAMELLIA128_SHA -> TLS_RSA_WITH_CAMELLIA128_SHA
    java.lang.String TLS_RSA_WITH_IDEA_CBC_SHA -> TLS_RSA_WITH_IDEA_CBC_SHA
    java.lang.String TLS_PSK_WITH_AES_128_CBC_SHA256 -> TLS_PSK_WITH_AES_128_CBC_SHA256
    java.lang.String TLS_PSK_WITH_AES_128_CBC_SHA -> TLS_PSK_WITH_AES_128_CBC_SHA
    java.lang.String TLS_PSK_WITH_CAMELLIA128_SHA256 -> TLS_PSK_WITH_CAMELLIA128_SHA256
    751:753:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ClientAuth -> pro.gravit.repackage.io.netty.handler.ssl.ClientAuth:
# {"fileName":"ClientAuth.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ClientAuth NONE -> NONE
    pro.gravit.repackage.io.netty.handler.ssl.ClientAuth OPTIONAL -> OPTIONAL
    pro.gravit.repackage.io.netty.handler.ssl.ClientAuth REQUIRE -> REQUIRE
    pro.gravit.repackage.io.netty.handler.ssl.ClientAuth[] $VALUES -> $VALUES
    23:23:pro.gravit.repackage.io.netty.handler.ssl.ClientAuth[] values() -> values
    23:23:pro.gravit.repackage.io.netty.handler.ssl.ClientAuth valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    23:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.Conscrypt -> pro.gravit.repackage.io.netty.handler.ssl.Conscrypt:
# {"fileName":"Conscrypt.java","id":"sourceFile"}
    java.lang.reflect.Method IS_CONSCRYPT_SSLENGINE -> IS_CONSCRYPT_SSLENGINE
    58:58:boolean isAvailable() -> isAvailable
    66:70:boolean isEngineSupported(javax.net.ssl.SSLEngine) -> isEngineSupported
    74:74:void <init>() -> <init>
    33:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine -> pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine:
# {"fileName":"ConscryptAlpnSslEngine.java","id":"sourceFile"}
    boolean USE_BUFFER_ALLOCATOR -> USE_BUFFER_ALLOCATOR
    49:49:pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine newClientEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> newClientEngine
    54:54:pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine newServerEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> newServerEngine
    58:75:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.util.List) -> <init>
    87:89:int calculateOutNetBufSize(int,int) -> calculateOutNetBufSize
    93:93:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> unwrap
    43:43:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.util.List,pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$1) -> <init>
    44:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$1:
# {"fileName":"ConscryptAlpnSslEngine.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$BufferAdapter -> pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$BufferAdapter:
# {"fileName":"ConscryptAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf nettyBuffer -> nettyBuffer
    java.nio.ByteBuffer buffer -> buffer
    174:177:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    181:181:java.nio.ByteBuffer nioBuffer() -> nioBuffer
    186:187:org.conscrypt.AllocatedBuffer retain() -> retain
    192:193:org.conscrypt.AllocatedBuffer release() -> release
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$BufferAllocatorAdapter -> pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$BufferAllocatorAdapter:
# {"fileName":"ConscryptAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc -> alloc
    160:162:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> <init>
    166:166:org.conscrypt.AllocatedBuffer allocateDirectBuffer(int) -> allocateDirectBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine -> pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine:
# {"fileName":"ConscryptAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener protocolListener -> protocolListener
    101:113:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    116:122:void selectProtocol() -> selectProtocol
    96:96:void access$100(pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1:
# {"fileName":"ConscryptAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine this$0 -> this$0
    103:103:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine) -> <init>
    106:107:void onHandshakeFinished() -> onHandshakeFinished
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine -> pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine:
# {"fileName":"ConscryptAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector protocolSelector -> protocolSelector
    130:144:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    148:154:void selectProtocol() -> selectProtocol
    125:125:void access$200(pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine) -> access$200
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine$1:
# {"fileName":"ConscryptAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine this$0 -> this$0
    133:133:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine) -> <init>
    136:137:void onHandshakeFinished() -> onHandshakeFinished
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.DefaultOpenSslKeyMaterial -> pro.gravit.repackage.io.netty.handler.ssl.DefaultOpenSslKeyMaterial:
# {"fileName":"DefaultOpenSslKeyMaterial.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    pro.gravit.repackage.io.netty.util.ResourceLeakTracker leak -> leak
    java.security.cert.X509Certificate[] x509CertificateChain -> x509CertificateChain
    long chain -> chain
    long privateKey -> privateKey
    boolean $assertionsDisabled -> $assertionsDisabled
    36:41:void <init>(long,long,java.security.cert.X509Certificate[]) -> <init>
    45:45:java.security.cert.X509Certificate[] certificateChain() -> certificateChain
    50:53:long certificateChainAddress() -> certificateChainAddress
    58:61:long privateKeyAddress() -> privateKeyAddress
    66:74:void deallocate() -> deallocate
    78:82:pro.gravit.repackage.io.netty.handler.ssl.DefaultOpenSslKeyMaterial retain() -> retain
    87:91:pro.gravit.repackage.io.netty.handler.ssl.DefaultOpenSslKeyMaterial retain(int) -> retain
    96:100:pro.gravit.repackage.io.netty.handler.ssl.DefaultOpenSslKeyMaterial touch() -> touch
    105:108:pro.gravit.repackage.io.netty.handler.ssl.DefaultOpenSslKeyMaterial touch(java.lang.Object) -> touch
    113:116:boolean release() -> release
    121:124:boolean release(int) -> release
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial touch(java.lang.Object) -> touch
    27:27:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial touch() -> touch
    27:27:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial retain() -> retain
    27:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.DelegatingSslContext -> pro.gravit.repackage.io.netty.handler.ssl.DelegatingSslContext:
# {"fileName":"DelegatingSslContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslContext ctx -> ctx
    33:35:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslContext) -> <init>
    39:39:boolean isClient() -> isClient
    44:44:java.util.List cipherSuites() -> cipherSuites
    49:49:long sessionCacheSize() -> sessionCacheSize
    54:54:long sessionTimeout() -> sessionTimeout
    59:59:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNegotiator applicationProtocolNegotiator() -> applicationProtocolNegotiator
    64:66:javax.net.ssl.SSLEngine newEngine(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> newEngine
    71:73:javax.net.ssl.SSLEngine newEngine(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    78:80:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean) -> newHandler
    85:87:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> newHandler
    92:94:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,java.util.concurrent.Executor) -> newHandler
    100:102:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,java.util.concurrent.Executor) -> newHandler
    107:107:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    void initEngine(javax.net.ssl.SSLEngine) -> initEngine
    120:121:void initHandler(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> initHandler
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ExtendedOpenSslSession -> pro.gravit.repackage.io.netty.handler.ssl.ExtendedOpenSslSession:
# {"fileName":"ExtendedOpenSslSession.java","id":"sourceFile"}
    java.lang.String[] LOCAL_SUPPORTED_SIGNATURE_ALGORITHMS -> LOCAL_SUPPORTED_SIGNATURE_ALGORITHMS
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession wrapped -> wrapped
    50:52:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession) -> <init>
    java.util.List getRequestedServerNames() -> getRequestedServerNames
    63:63:java.util.List getStatusResponses() -> getStatusResponses
    68:68:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId sessionId() -> sessionId
    73:74:void setSessionId(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> setSessionId
    78:79:void setLocalCertificate(java.security.cert.Certificate[]) -> setLocalCertificate
    83:83:java.lang.String[] getPeerSupportedSignatureAlgorithms() -> getPeerSupportedSignatureAlgorithms
    88:89:void tryExpandApplicationBufferSize(int) -> tryExpandApplicationBufferSize
    93:93:java.lang.String[] getLocalSupportedSignatureAlgorithms() -> getLocalSupportedSignatureAlgorithms
    98:98:byte[] getId() -> getId
    103:103:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext getSessionContext() -> getSessionContext
    108:108:long getCreationTime() -> getCreationTime
    113:113:long getLastAccessedTime() -> getLastAccessedTime
    118:119:void invalidate() -> invalidate
    123:123:boolean isValid() -> isValid
    128:133:void putValue(java.lang.String,java.lang.Object) -> putValue
    137:142:java.lang.Object getValue(java.lang.String) -> getValue
    147:148:void removeValue(java.lang.String) -> removeValue
    152:152:java.lang.String[] getValueNames() -> getValueNames
    157:157:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    162:162:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    167:167:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    172:172:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    177:177:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    182:182:java.lang.String getCipherSuite() -> getCipherSuite
    187:187:java.lang.String getProtocol() -> getProtocol
    192:192:java.lang.String getPeerHost() -> getPeerHost
    197:197:int getPeerPort() -> getPeerPort
    202:202:int getPacketBufferSize() -> getPacketBufferSize
    207:207:int getApplicationBufferSize() -> getApplicationBufferSize
    232:233:void handshakeFinished(byte[],java.lang.String,java.lang.String,byte[],byte[][],long,long) -> handshakeFinished
    237:237:java.lang.String toString() -> toString
    36:36:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    42:42:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ExtendedOpenSslSession$SSLSessionBindingListenerDecorator -> pro.gravit.repackage.io.netty.handler.ssl.ExtendedOpenSslSession$SSLSessionBindingListenerDecorator:
# {"fileName":"ExtendedOpenSslSession.java","id":"sourceFile"}
    javax.net.ssl.SSLSessionBindingListener delegate -> delegate
    pro.gravit.repackage.io.netty.handler.ssl.ExtendedOpenSslSession this$0 -> this$0
    214:216:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ExtendedOpenSslSession,javax.net.ssl.SSLSessionBindingListener) -> <init>
    220:221:void valueBound(javax.net.ssl.SSLSessionBindingEvent) -> valueBound
    225:226:void valueUnbound(javax.net.ssl.SSLSessionBindingEvent) -> valueUnbound
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.GroupsConverter -> pro.gravit.repackage.io.netty.handler.ssl.GroupsConverter:
# {"fileName":"GroupsConverter.java","id":"sourceFile"}
    java.util.Map mappings -> mappings
    42:46:java.lang.String toOpenSsl(java.lang.String) -> toOpenSsl
    49:49:void <init>() -> <init>
    31:39:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.IdentityCipherSuiteFilter -> pro.gravit.repackage.io.netty.handler.ssl.IdentityCipherSuiteFilter:
# {"fileName":"IdentityCipherSuiteFilter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE -> INSTANCE
    pro.gravit.repackage.io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE_DEFAULTING_TO_SUPPORTED_CIPHERS -> INSTANCE_DEFAULTING_TO_SUPPORTED_CIPHERS
    boolean defaultToDefaultCiphers -> defaultToDefaultCiphers
    40:42:void <init>(boolean) -> <init>
    47:59:java.lang.String[] filterCipherSuites(java.lang.Iterable,java.util.List,java.util.Set) -> filterCipherSuites
    30:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.Java7SslParametersUtils -> pro.gravit.repackage.io.netty.handler.ssl.Java7SslParametersUtils:
# {"fileName":"Java7SslParametersUtils.java","id":"sourceFile"}
    25:27:void <init>() -> <init>
    36:37:void setAlgorithmConstraints(javax.net.ssl.SSLParameters,java.lang.Object) -> setAlgorithmConstraints
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.Java8SslUtils -> pro.gravit.repackage.io.netty.handler.ssl.Java8SslUtils:
# {"fileName":"Java8SslUtils.java","id":"sourceFile"}
    34:34:void <init>() -> <init>
    37:51:java.util.List getSniHostNames(javax.net.ssl.SSLParameters) -> getSniHostNames
    55:56:void setSniHostNames(javax.net.ssl.SSLParameters,java.util.List) -> setSniHostNames
    60:63:boolean isValidHostNameForSNI(java.lang.String) -> isValidHostNameForSNI
    68:75:java.util.List getSniHostNames(java.util.List) -> getSniHostNames
    79:82:java.util.List getSniHostName(byte[]) -> getSniHostName
    86:86:boolean getUseCipherSuitesOrder(javax.net.ssl.SSLParameters) -> getUseCipherSuitesOrder
    90:91:void setUseCipherSuitesOrder(javax.net.ssl.SSLParameters,boolean) -> setUseCipherSuitesOrder
    95:96:void setSNIMatchers(javax.net.ssl.SSLParameters,java.util.Collection) -> setSNIMatchers
    100:112:boolean checkSniHostnameMatch(java.util.Collection,byte[]) -> checkSniHostnameMatch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator:
# {"fileName":"JdkAlpnApplicationProtocolNegotiator.java","id":"sourceFile"}
    boolean AVAILABLE -> AVAILABLE
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory ALPN_WRAPPER -> ALPN_WRAPPER
    41:42:void <init>(java.lang.Iterable) -> <init>
    49:50:void <init>(java.lang.String[]) -> <init>
    58:59:void <init>(boolean,java.lang.Iterable) -> <init>
    67:68:void <init>(boolean,java.lang.String[]) -> <init>
    78:81:void <init>(boolean,boolean,java.lang.Iterable) -> <init>
    91:94:void <init>(boolean,boolean,java.lang.String[]) -> <init>
    104:105:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    115:116:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.String[]) -> <init>
    157:157:boolean isAlpnSupported() -> isAlpnSupported
    27:27:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    27:27:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    27:27:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    27:27:java.util.List protocols() -> protocols
    29:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1:
# {"fileName":"JdkAlpnApplicationProtocolNegotiator.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$AlpnWrapper:
# {"fileName":"JdkAlpnApplicationProtocolNegotiator.java","id":"sourceFile"}
    129:129:void <init>() -> <init>
    133:152:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    129:129:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$FailureWrapper -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$FailureWrapper:
# {"fileName":"JdkAlpnApplicationProtocolNegotiator.java","id":"sourceFile"}
    118:118:void <init>() -> <init>
    122:122:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    118:118:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine:
# {"fileName":"JdkAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener selectionListener -> selectionListener
    pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector alpnSelector -> alpnSelector
    boolean $assertionsDisabled -> $assertionsDisabled
    87:99:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean,java.util.function.BiConsumer,java.util.function.BiConsumer) -> <init>
    104:117:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> <init>
    120:143:javax.net.ssl.SSLEngineResult verifyProtocolSelection(javax.net.ssl.SSLEngineResult) -> verifyProtocolSelection
    148:148:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    153:153:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> wrap
    158:158:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    163:163:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    168:168:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    173:173:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    179:179:void setNegotiatedApplicationProtocol(java.lang.String) -> setNegotiatedApplicationProtocol
    183:187:java.lang.String getNegotiatedApplicationProtocol() -> getNegotiatedApplicationProtocol
    193:193:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    197:197:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    201:202:void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    205:205:java.util.function.BiFunction getHandshakeApplicationProtocolSelector() -> getHandshakeApplicationProtocolSelector
    35:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$1:
# {"fileName":"JdkAlpnSslEngine.java","id":"sourceFile"}
    105:105:void <init>() -> <init>
    108:109:void accept(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector) -> accept
    105:105:void accept(java.lang.Object,java.lang.Object) -> accept
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$2 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$2:
# {"fileName":"JdkAlpnSslEngine.java","id":"sourceFile"}
    111:111:void <init>() -> <init>
    114:115:void accept(javax.net.ssl.SSLEngine,java.util.List) -> accept
    111:111:void accept(java.lang.Object,java.lang.Object) -> accept
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector:
# {"fileName":"JdkAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector selector -> selector
    boolean called -> called
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine this$0 -> this$0
    44:46:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
    50:61:java.lang.String apply(javax.net.ssl.SSLEngine,java.util.List) -> apply
    66:80:void checkUnsupported() -> checkUnsupported
    40:40:java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
    40:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils:
# {"fileName":"JdkAlpnSslUtils.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.reflect.Method SET_APPLICATION_PROTOCOLS -> SET_APPLICATION_PROTOCOLS
    java.lang.reflect.Method GET_APPLICATION_PROTOCOL -> GET_APPLICATION_PROTOCOL
    java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL -> GET_HANDSHAKE_APPLICATION_PROTOCOL
    java.lang.reflect.Method SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR -> SET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR
    java.lang.reflect.Method GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR -> GET_HANDSHAKE_APPLICATION_PROTOCOL_SELECTOR
    118:119:void <init>() -> <init>
    122:122:boolean supportsAlpn() -> supportsAlpn
    127:131:java.lang.String getApplicationProtocol(javax.net.ssl.SSLEngine) -> getApplicationProtocol
    137:141:java.lang.String getHandshakeApplicationProtocol(javax.net.ssl.SSLEngine) -> getHandshakeApplicationProtocol
    146:157:void setApplicationProtocols(javax.net.ssl.SSLEngine,java.util.List) -> setApplicationProtocols
    162:168:void setHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine,java.util.function.BiFunction) -> setHandshakeApplicationProtocolSelector
    173:178:java.util.function.BiFunction getHandshakeApplicationProtocolSelector(javax.net.ssl.SSLEngine) -> getHandshakeApplicationProtocolSelector
    36:116:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$1 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$1:
# {"fileName":"JdkAlpnSslUtils.java","id":"sourceFile"}
    54:54:void <init>() -> <init>
    57:57:java.lang.reflect.Method run() -> run
    54:54:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$2 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$2:
# {"fileName":"JdkAlpnSslUtils.java","id":"sourceFile"}
    61:61:void <init>() -> <init>
    64:64:java.lang.reflect.Method run() -> run
    61:61:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$3 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$3:
# {"fileName":"JdkAlpnSslUtils.java","id":"sourceFile"}
    69:69:void <init>() -> <init>
    72:72:java.lang.reflect.Method run() -> run
    69:69:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$4 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$4:
# {"fileName":"JdkAlpnSslUtils.java","id":"sourceFile"}
    78:78:void <init>() -> <init>
    81:81:java.lang.reflect.Method run() -> run
    78:78:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$5 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$5:
# {"fileName":"JdkAlpnSslUtils.java","id":"sourceFile"}
    84:84:void <init>() -> <init>
    87:87:java.lang.String apply(javax.net.ssl.SSLEngine,java.util.List) -> apply
    84:84:java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$6 -> pro.gravit.repackage.io.netty.handler.ssl.JdkAlpnSslUtils$6:
# {"fileName":"JdkAlpnSslUtils.java","id":"sourceFile"}
    92:92:void <init>() -> <init>
    95:95:java.lang.reflect.Method run() -> run
    92:92:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator:
# {"fileName":"JdkApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory -> pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory:
# {"fileName":"JdkApplicationProtocolNegotiator.java","id":"sourceFile"}
    49:49:void <init>() -> <init>
    54:54:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener -> pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener:
# {"fileName":"JdkApplicationProtocolNegotiator.java","id":"sourceFile"}
    void unsupported() -> unsupported
    void selected(java.lang.String) -> selected
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory -> pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory:
# {"fileName":"JdkApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> newListener
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector -> pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector:
# {"fileName":"JdkApplicationProtocolNegotiator.java","id":"sourceFile"}
    void unsupported() -> unsupported
    java.lang.String select(java.util.List) -> select
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory -> pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory:
# {"fileName":"JdkApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> newSelector
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory -> pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory:
# {"fileName":"JdkApplicationProtocolNegotiator.java","id":"sourceFile"}
    javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    java.util.List protocols -> protocols
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory selectorFactory -> selectorFactory
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory listenerFactory -> listenerFactory
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory -> wrapperFactory
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory FAIL_SELECTOR_FACTORY -> FAIL_SELECTOR_FACTORY
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory NO_FAIL_SELECTOR_FACTORY -> NO_FAIL_SELECTOR_FACTORY
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory FAIL_SELECTION_LISTENER_FACTORY -> FAIL_SELECTION_LISTENER_FACTORY
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory NO_FAIL_SELECTION_LISTENER_FACTORY -> NO_FAIL_SELECTION_LISTENER_FACTORY
    47:48:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    60:61:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.String[]) -> <init>
    72:77:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.util.List) -> <init>
    81:81:java.util.List protocols() -> protocols
    86:86:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    91:91:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    96:96:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    99:121:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$1 -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$1:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    99:99:void <init>() -> <init>
    102:102:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> newSelector
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$2 -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$2:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    106:106:void <init>() -> <init>
    109:109:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector newSelector(javax.net.ssl.SSLEngine,java.util.Set) -> newSelector
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$3 -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$3:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    114:114:void <init>() -> <init>
    117:117:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> newListener
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$4 -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$4:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    122:122:void <init>() -> <init>
    125:125:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener newListener(javax.net.ssl.SSLEngine,java.util.List) -> newListener
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelectionListener -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelectionListener:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    201:202:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkSslEngine,java.util.List) -> <init>
    206:206:void noSelectedMatchFound(java.lang.String) -> noSelectedMatchFound
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelector -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$FailProtocolSelector:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    162:163:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkSslEngine,java.util.Set) -> <init>
    167:167:java.lang.String noSelectMatchFound() -> noSelectMatchFound
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelectionListener -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelectionListener:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkSslEngine engineWrapper -> engineWrapper
    java.util.List supportedProtocols -> supportedProtocols
    175:178:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkSslEngine,java.util.List) -> <init>
    182:183:void unsupported() -> unsupported
    187:192:void selected(java.lang.String) -> selected
    196:196:void noSelectedMatchFound(java.lang.String) -> noSelectedMatchFound
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector -> pro.gravit.repackage.io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector:
# {"fileName":"JdkBaseApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkSslEngine engineWrapper -> engineWrapper
    java.util.Set supportedProtocols -> supportedProtocols
    133:136:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkSslEngine,java.util.Set) -> <init>
    140:141:void unsupported() -> unsupported
    145:151:java.lang.String select(java.util.List) -> select
    155:156:java.lang.String noSelectMatchFound() -> noSelectMatchFound
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator:
# {"fileName":"JdkDefaultApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator INSTANCE -> INSTANCE
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory DEFAULT_SSL_ENGINE_WRAPPER_FACTORY -> DEFAULT_SSL_ENGINE_WRAPPER_FACTORY
    38:39:void <init>() -> <init>
    43:43:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    48:48:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    53:53:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    58:58:java.util.List protocols() -> protocols
    28:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1 -> pro.gravit.repackage.io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator$1:
# {"fileName":"JdkDefaultApplicationProtocolNegotiator.java","id":"sourceFile"}
    30:30:void <init>() -> <init>
    34:34:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator:
# {"fileName":"JdkNpnApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory NPN_WRAPPER -> NPN_WRAPPER
    47:48:void <init>(java.lang.Iterable) -> <init>
    55:56:void <init>(java.lang.String[]) -> <init>
    64:65:void <init>(boolean,java.lang.Iterable) -> <init>
    73:74:void <init>(boolean,java.lang.String[]) -> <init>
    84:87:void <init>(boolean,boolean,java.lang.Iterable) -> <init>
    97:100:void <init>(boolean,boolean,java.lang.String[]) -> <init>
    110:111:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.Iterable) -> <init>
    121:122:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory,java.lang.String[]) -> <init>
    25:25:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory wrapperFactory() -> wrapperFactory
    25:25:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListenerFactory protocolListenerFactory() -> protocolListenerFactory
    25:25:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectorFactory protocolSelectorFactory() -> protocolSelectorFactory
    25:25:java.util.List protocols() -> protocols
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator$1 -> pro.gravit.repackage.io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator$1:
# {"fileName":"JdkNpnApplicationProtocolNegotiator.java","id":"sourceFile"}
    27:33:void <init>() -> <init>
    38:38:javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> wrapSslEngine
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkSslClientContext -> pro.gravit.repackage.io.netty.handler.ssl.JdkSslClientContext:
# {"fileName":"JdkSslClientContext.java","id":"sourceFile"}
    48:49:void <init>() -> <init>
    60:61:void <init>(java.io.File) -> <init>
    73:74:void <init>(javax.net.ssl.TrustManagerFactory) -> <init>
    88:90:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory) -> <init>
    115:117:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,java.lang.Iterable,long,long) -> <init>
    142:144:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    169:170:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    176:180:void <init>(java.security.Provider,java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    218:220:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    258:263:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    272:276:void <init>(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,java.lang.String) -> <init>
    285:310:javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String) -> newSSLContext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkSslContext -> pro.gravit.repackage.io.netty.handler.ssl.JdkSslContext:
# {"fileName":"JdkSslContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String PROTOCOL -> PROTOCOL
    java.lang.String[] DEFAULT_PROTOCOLS -> DEFAULT_PROTOCOLS
    java.util.List DEFAULT_CIPHERS -> DEFAULT_CIPHERS
    java.util.List DEFAULT_CIPHERS_NON_TLSV13 -> DEFAULT_CIPHERS_NON_TLSV13
    java.util.Set SUPPORTED_CIPHERS -> SUPPORTED_CIPHERS
    java.util.Set SUPPORTED_CIPHERS_NON_TLSV13 -> SUPPORTED_CIPHERS_NON_TLSV13
    java.security.Provider DEFAULT_PROVIDER -> DEFAULT_PROVIDER
    java.lang.String[] protocols -> protocols
    java.lang.String[] cipherSuites -> cipherSuites
    java.util.List unmodifiableCipherSuites -> unmodifiableCipherSuites
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator apn -> apn
    pro.gravit.repackage.io.netty.handler.ssl.ClientAuth clientAuth -> clientAuth
    javax.net.ssl.SSLContext sslContext -> sslContext
    boolean isClient -> isClient
    125:137:java.lang.String[] defaultProtocols(javax.net.ssl.SSLContext,javax.net.ssl.SSLEngine) -> defaultProtocols
    142:166:java.util.Set supportedCiphers(javax.net.ssl.SSLEngine) -> supportedCiphers
    170:173:java.util.List defaultCiphers(javax.net.ssl.SSLEngine,java.util.Set) -> defaultCiphers
    177:182:boolean isTlsV13Supported(java.lang.String[]) -> isTlsV13Supported
    206:208:void <init>(javax.net.ssl.SSLContext,boolean,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth) -> <init>
    226:227:void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth) -> <init>
    249:257:void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean) -> <init>
    262:309:void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean) -> <init>
    315:315:javax.net.ssl.SSLContext context() -> context
    320:320:boolean isClient() -> isClient
    328:331:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    337:337:java.util.List cipherSuites() -> cipherSuites
    342:342:javax.net.ssl.SSLEngine newEngine(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> newEngine
    347:347:javax.net.ssl.SSLEngine newEngine(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    352:374:javax.net.ssl.SSLEngine configureAndWrapEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> configureAndWrapEngine
    379:379:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator applicationProtocolNegotiator() -> applicationProtocolNegotiator
    390:443:pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,boolean) -> toNegotiator
    462:466:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String) -> buildKeyManagerFactory
    485:485:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory) -> buildKeyManagerFactory
    508:509:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.io.File,java.lang.String,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String) -> buildKeyManagerFactory
    533:534:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.io.File,java.lang.String,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory) -> buildKeyManagerFactory
    59:59:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNegotiator applicationProtocolNegotiator() -> applicationProtocolNegotiator
    59:59:java.lang.String[] access$100(javax.net.ssl.SSLContext,javax.net.ssl.SSLEngine) -> access$100
    59:59:java.util.Set access$200(javax.net.ssl.SSLEngine) -> access$200
    59:59:java.util.List access$300(javax.net.ssl.SSLEngine,java.util.Set) -> access$300
    61:86:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkSslContext$1 -> pro.gravit.repackage.io.netty.handler.ssl.JdkSslContext$1:
# {"fileName":"JdkSslContext.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$ssl$ClientAuth -> $SwitchMap$io$netty$handler$ssl$ClientAuth
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol
    356:409:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkSslContext$Defaults -> pro.gravit.repackage.io.netty.handler.ssl.JdkSslContext$Defaults:
# {"fileName":"JdkSslContext.java","id":"sourceFile"}
    java.lang.String[] defaultProtocols -> defaultProtocols
    java.util.List defaultCiphers -> defaultCiphers
    java.util.List defaultCiphersNonTLSv13 -> defaultCiphersNonTLSv13
    java.util.Set supportedCiphers -> supportedCiphers
    java.util.Set supportedCiphersNonTLSv13 -> supportedCiphersNonTLSv13
    java.security.Provider defaultProvider -> defaultProvider
    88:88:void <init>() -> <init>
    99:120:void init() -> init
    88:88:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JdkSslContext$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkSslEngine -> pro.gravit.repackage.io.netty.handler.ssl.JdkSslEngine:
# {"fileName":"JdkSslEngine.java","id":"sourceFile"}
    javax.net.ssl.SSLEngine engine -> engine
    java.lang.String applicationProtocol -> applicationProtocol
    33:35:void <init>(javax.net.ssl.SSLEngine) -> <init>
    39:39:java.lang.String getNegotiatedApplicationProtocol() -> getNegotiatedApplicationProtocol
    43:44:void setNegotiatedApplicationProtocol(java.lang.String) -> setNegotiatedApplicationProtocol
    48:48:javax.net.ssl.SSLSession getSession() -> getSession
    52:52:javax.net.ssl.SSLEngine getWrappedEngine() -> getWrappedEngine
    57:58:void closeInbound() -> closeInbound
    62:63:void closeOutbound() -> closeOutbound
    67:67:java.lang.String getPeerHost() -> getPeerHost
    72:72:int getPeerPort() -> getPeerPort
    77:77:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    82:82:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],java.nio.ByteBuffer) -> wrap
    87:87:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    92:92:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    97:97:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    102:102:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    107:107:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    112:112:boolean isInboundDone() -> isInboundDone
    117:117:boolean isOutboundDone() -> isOutboundDone
    122:122:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    127:127:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    132:133:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    137:137:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    142:142:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    147:148:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    153:153:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    158:159:void beginHandshake() -> beginHandshake
    163:163:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    168:169:void setUseClientMode(boolean) -> setUseClientMode
    173:173:boolean getUseClientMode() -> getUseClientMode
    178:179:void setNeedClientAuth(boolean) -> setNeedClientAuth
    183:183:boolean getNeedClientAuth() -> getNeedClientAuth
    188:189:void setWantClientAuth(boolean) -> setWantClientAuth
    193:193:boolean getWantClientAuth() -> getWantClientAuth
    198:199:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    203:203:boolean getEnableSessionCreation() -> getEnableSessionCreation
    208:208:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    213:214:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JdkSslServerContext -> pro.gravit.repackage.io.netty.handler.ssl.JdkSslServerContext:
# {"fileName":"JdkSslServerContext.java","id":"sourceFile"}
    51:53:void <init>(java.io.File,java.io.File) -> <init>
    66:68:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
    92:95:void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,long,long) -> <init>
    119:121:void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    145:147:void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    153:157:void <init>(java.security.Provider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long,java.lang.String) -> <init>
    193:197:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    234:238:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long) -> <init>
    247:250:void <init>(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,java.lang.String) -> <init>
    257:289:javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String) -> newSSLContext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine -> pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine:
# {"fileName":"JettyAlpnSslEngine.java","id":"sourceFile"}
    boolean available -> available
    37:37:boolean isAvailable() -> isAvailable
    41:50:boolean initAvailable() -> initAvailable
    55:55:pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine newClientEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> newClientEngine
    60:60:pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine newServerEngine(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> newServerEngine
    64:65:void <init>(javax.net.ssl.SSLEngine) -> <init>
    33:33:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$1) -> <init>
    34:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$1:
# {"fileName":"JettyAlpnSslEngine.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine -> pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine:
# {"fileName":"JettyAlpnSslEngine.java","id":"sourceFile"}
    69:94:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    99:103:void closeInbound() -> closeInbound
    108:112:void closeOutbound() -> closeOutbound
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine$1:
# {"fileName":"JettyAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator -> val$applicationNegotiator
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener -> val$protocolListener
    pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine this$0 -> this$0
    74:74:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ClientEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener) -> <init>
    77:77:java.util.List protocols() -> protocols
    83:87:void selected(java.lang.String) -> selected
    91:92:void unsupported() -> unsupported
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine -> pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine:
# {"fileName":"JettyAlpnSslEngine.java","id":"sourceFile"}
    117:137:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    142:146:void closeInbound() -> closeInbound
    151:155:void closeOutbound() -> closeOutbound
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine$1:
# {"fileName":"JettyAlpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector -> val$protocolSelector
    pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine this$0 -> this$0
    122:122:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JettyAlpnSslEngine$ServerEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
    126:128:java.lang.String select(java.util.List) -> select
    134:135:void unsupported() -> unsupported
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine -> pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine:
# {"fileName":"JettyNpnSslEngine.java","id":"sourceFile"}
    boolean available -> available
    38:39:boolean isAvailable() -> isAvailable
    43:53:void updateAvailability() -> updateAvailability
    56:109:void <init>(javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean) -> <init>
    113:115:void closeInbound() -> closeInbound
    119:121:void closeOutbound() -> closeOutbound
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine$1:
# {"fileName":"JettyNpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener val$protocolListener -> val$protocolListener
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator val$applicationNegotiator -> val$applicationNegotiator
    pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine this$0 -> this$0
    63:63:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelectionListener,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator) -> <init>
    66:67:void unsupported() -> unsupported
    71:71:java.util.List protocols() -> protocols
    77:81:void protocolSelected(java.lang.String) -> protocolSelected
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine$2 -> pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine$2:
# {"fileName":"JettyNpnSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector -> val$protocolSelector
    pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine this$0 -> this$0
    87:87:void <init>(pro.gravit.repackage.io.netty.handler.ssl.JettyNpnSslEngine,pro.gravit.repackage.io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector) -> <init>
    90:90:boolean supports() -> supports
    95:96:void unsupported() -> unsupported
    101:104:java.lang.String selectProtocol(java.util.List) -> selectProtocol
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.NotSslRecordException -> pro.gravit.repackage.io.netty.handler.ssl.NotSslRecordException:
# {"fileName":"NotSslRecordException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    33:34:void <init>() -> <init>
    37:38:void <init>(java.lang.String) -> <init>
    41:42:void <init>(java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSsl -> pro.gravit.repackage.io.netty.handler.ssl.OpenSsl:
# {"fileName":"OpenSsl.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.Throwable UNAVAILABILITY_CAUSE -> UNAVAILABILITY_CAUSE
    java.util.List DEFAULT_CIPHERS -> DEFAULT_CIPHERS
    java.util.Set AVAILABLE_CIPHER_SUITES -> AVAILABLE_CIPHER_SUITES
    java.util.Set AVAILABLE_OPENSSL_CIPHER_SUITES -> AVAILABLE_OPENSSL_CIPHER_SUITES
    java.util.Set AVAILABLE_JAVA_CIPHER_SUITES -> AVAILABLE_JAVA_CIPHER_SUITES
    boolean SUPPORTS_KEYMANAGER_FACTORY -> SUPPORTS_KEYMANAGER_FACTORY
    boolean USE_KEYMANAGER_FACTORY -> USE_KEYMANAGER_FACTORY
    boolean SUPPORTS_OCSP -> SUPPORTS_OCSP
    boolean TLSV13_SUPPORTED -> TLSV13_SUPPORTED
    boolean IS_BORINGSSL -> IS_BORINGSSL
    java.util.Set CLIENT_DEFAULT_PROTOCOLS -> CLIENT_DEFAULT_PROTOCOLS
    java.util.Set SERVER_DEFAULT_PROTOCOLS -> SERVER_DEFAULT_PROTOCOLS
    java.util.Set SUPPORTED_PROTOCOLS_SET -> SUPPORTED_PROTOCOLS_SET
    java.lang.String[] EXTRA_SUPPORTED_TLS_1_3_CIPHERS -> EXTRA_SUPPORTED_TLS_1_3_CIPHERS
    java.lang.String EXTRA_SUPPORTED_TLS_1_3_CIPHERS_STRING -> EXTRA_SUPPORTED_TLS_1_3_CIPHERS_STRING
    java.lang.String[] NAMED_GROUPS -> NAMED_GROUPS
    java.lang.String[] DEFAULT_NAMED_GROUPS -> DEFAULT_NAMED_GROUPS
    java.lang.String CERT -> CERT
    java.lang.String KEY -> KEY
    boolean $assertionsDisabled -> $assertionsDisabled
    463:498:java.lang.String checkTls13Ciphers(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger,java.lang.String) -> checkTls13Ciphers
    502:502:boolean isSessionCacheSupported() -> isSessionCacheSupported
    509:510:java.security.cert.X509Certificate selfSignedCertificate() -> selfSignedCertificate
    515:530:boolean doesSupportOcsp() -> doesSupportOcsp
    533:547:boolean doesSupportProtocol(int,int) -> doesSupportProtocol
    556:556:boolean isAvailable() -> isAvailable
    567:567:boolean isAlpnSupported() -> isAlpnSupported
    574:574:boolean isOcspSupported() -> isOcspSupported
    582:582:int version() -> version
    590:590:java.lang.String versionString() -> versionString
    600:604:void ensureAvailability() -> ensureAvailability
    613:613:java.lang.Throwable unavailabilityCause() -> unavailabilityCause
    621:621:java.util.Set availableCipherSuites() -> availableCipherSuites
    629:629:java.util.Set availableOpenSslCipherSuites() -> availableOpenSslCipherSuites
    637:637:java.util.Set availableJavaCipherSuites() -> availableJavaCipherSuites
    645:649:boolean isCipherSuiteAvailable(java.lang.String) -> isCipherSuiteAvailable
    656:656:boolean supportsKeyManagerFactory() -> supportsKeyManagerFactory
    667:667:boolean supportsHostnameValidation() -> supportsHostnameValidation
    671:671:boolean useKeyManagerFactory() -> useKeyManagerFactory
    675:678:long memoryAddress(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> memoryAddress
    681:681:void <init>() -> <init>
    684:712:void loadTcNative() -> loadTcNative
    715:715:boolean initializeTcNative(java.lang.String) -> initializeTcNative
    719:722:void releaseIfNeeded(pro.gravit.repackage.io.netty.util.ReferenceCounted) -> releaseIfNeeded
    725:725:boolean isTlsv13Supported() -> isTlsv13Supported
    729:738:java.util.Set protocols(java.lang.String) -> protocols
    742:752:java.lang.String[] defaultProtocols(boolean) -> defaultProtocols
    756:756:boolean isBoringSSL() -> isBoringSSL
    55:460:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator:
# {"fileName":"OpenSslApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslAsyncPrivateKeyMethod -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslAsyncPrivateKeyMethod:
# {"fileName":"OpenSslAsyncPrivateKeyMethod.java","id":"sourceFile"}
    int SSL_SIGN_RSA_PKCS1_SHA1 -> SSL_SIGN_RSA_PKCS1_SHA1
    int SSL_SIGN_RSA_PKCS1_SHA256 -> SSL_SIGN_RSA_PKCS1_SHA256
    int SSL_SIGN_RSA_PKCS1_SHA384 -> SSL_SIGN_RSA_PKCS1_SHA384
    int SSL_SIGN_RSA_PKCS1_SHA512 -> SSL_SIGN_RSA_PKCS1_SHA512
    int SSL_SIGN_ECDSA_SHA1 -> SSL_SIGN_ECDSA_SHA1
    int SSL_SIGN_ECDSA_SECP256R1_SHA256 -> SSL_SIGN_ECDSA_SECP256R1_SHA256
    int SSL_SIGN_ECDSA_SECP384R1_SHA384 -> SSL_SIGN_ECDSA_SECP384R1_SHA384
    int SSL_SIGN_ECDSA_SECP521R1_SHA512 -> SSL_SIGN_ECDSA_SECP521R1_SHA512
    int SSL_SIGN_RSA_PSS_RSAE_SHA256 -> SSL_SIGN_RSA_PSS_RSAE_SHA256
    int SSL_SIGN_RSA_PSS_RSAE_SHA384 -> SSL_SIGN_RSA_PSS_RSAE_SHA384
    int SSL_SIGN_RSA_PSS_RSAE_SHA512 -> SSL_SIGN_RSA_PSS_RSAE_SHA512
    int SSL_SIGN_ED25519 -> SSL_SIGN_ED25519
    int SSL_SIGN_RSA_PKCS1_MD5_SHA1 -> SSL_SIGN_RSA_PKCS1_MD5_SHA1
    pro.gravit.repackage.io.netty.util.concurrent.Future sign(javax.net.ssl.SSLEngine,int,byte[]) -> sign
    pro.gravit.repackage.io.netty.util.concurrent.Future decrypt(javax.net.ssl.SSLEngine,byte[]) -> decrypt
    24:36:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCachingKeyMaterialProvider:
# {"fileName":"OpenSslCachingKeyMaterialProvider.java","id":"sourceFile"}
    int maxCachedEntries -> maxCachedEntries
    boolean full -> full
    java.util.concurrent.ConcurrentMap cache -> cache
    33:38:void <init>(javax.net.ssl.X509KeyManager,java.lang.String,int) -> <init>
    42:65:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial chooseKeyMaterial(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String) -> chooseKeyMaterial
    72:78:void destroy() -> destroy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory:
# {"fileName":"OpenSslCachingX509KeyManagerFactory.java","id":"sourceFile"}
    int maxCachedEntries -> maxCachedEntries
    45:46:void <init>(javax.net.ssl.KeyManagerFactory) -> <init>
    49:68:void <init>(javax.net.ssl.KeyManagerFactory,int) -> <init>
    71:78:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider newProvider(java.lang.String) -> newProvider
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory$1 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory$1:
# {"fileName":"OpenSslCachingX509KeyManagerFactory.java","id":"sourceFile"}
    javax.net.ssl.KeyManagerFactory val$factory -> val$factory
    49:49:void <init>(javax.net.ssl.KeyManagerFactory) -> <init>
    53:54:void engineInit(java.security.KeyStore,char[]) -> engineInit
    59:60:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    64:64:javax.net.ssl.KeyManager[] engineGetKeyManagers() -> engineGetKeyManagers
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm:
# {"fileName":"OpenSslCertificateCompressionAlgorithm.java","id":"sourceFile"}
    byte[] compress(javax.net.ssl.SSLEngine,byte[]) -> compress
    byte[] decompress(javax.net.ssl.SSLEngine,int,byte[]) -> decompress
    int algorithmId() -> algorithmId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig:
# {"fileName":"OpenSslCertificateCompressionConfig.java","id":"sourceFile"}
    java.util.List pairList -> pairList
    33:35:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmConfig[]) -> <init>
    39:39:java.util.Iterator iterator() -> iterator
    48:48:pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$Builder newBuilder() -> newBuilder
    29:29:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmConfig[],pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$1 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$1:
# {"fileName":"OpenSslCertificateCompressionConfig.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmConfig -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmConfig:
# {"fileName":"OpenSslCertificateCompressionConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm algorithm -> algorithm
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode mode -> mode
    94:97:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm,pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode) -> <init>
    105:105:pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode mode() -> mode
    114:114:pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm algorithm() -> algorithm
    90:90:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm,pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode,pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode:
# {"fileName":"OpenSslCertificateCompressionConfig.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode Compress -> Compress
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode Decompress -> Decompress
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode Both -> Both
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode[] $VALUES -> $VALUES
    121:121:pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode[] values() -> values
    121:121:pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode valueOf(java.lang.String) -> valueOf
    121:121:void <init>(java.lang.String,int) -> <init>
    121:135:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$Builder -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$Builder:
# {"fileName":"OpenSslCertificateCompressionConfig.java","id":"sourceFile"}
    java.util.List algorithmList -> algorithmList
    55:57:void <init>() -> <init>
    72:73:pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$Builder addAlgorithm(pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm,pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$AlgorithmMode) -> addAlgorithm
    83:83:pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig build() -> build
    54:54:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionConfig$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateException -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateException:
# {"fileName":"OpenSslCertificateException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    int errorCode -> errorCode
    36:37:void <init>(int) -> <init>
    44:46:void <init>(java.lang.String,int) -> <init>
    53:55:void <init>(java.lang.String,java.lang.Throwable,int) -> <init>
    62:63:void <init>(java.lang.Throwable,int) -> <init>
    69:69:int errorCode() -> errorCode
    75:79:int checkErrorCode(int) -> checkErrorCode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslClientContext -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslClientContext:
# {"fileName":"OpenSslClientContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext sessionContext -> sessionContext
    47:48:void <init>() -> <init>
    59:60:void <init>(java.io.File) -> <init>
    72:73:void <init>(javax.net.ssl.TrustManagerFactory) -> <init>
    87:89:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory) -> <init>
    111:113:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    136:138:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    178:182:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    191:205:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean,java.lang.String,java.util.Map$Entry[]) -> <init>
    209:209:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    38:38:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslClientSessionCache -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslClientSessionCache:
# {"fileName":"OpenSslClientSessionCache.java","id":"sourceFile"}
    java.util.Map sessions -> sessions
    boolean $assertionsDisabled -> $assertionsDisabled
    30:34:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap) -> <init>
    38:44:boolean sessionCreated(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession) -> sessionCreated
    49:55:void sessionRemoved(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession) -> sessionRemoved
    59:86:void setSession(long,java.lang.String,int) -> setSession
    89:92:pro.gravit.repackage.io.netty.handler.ssl.OpenSslClientSessionCache$HostPort keyFor(java.lang.String,int) -> keyFor
    97:99:void clear() -> clear
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslClientSessionCache$HostPort -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslClientSessionCache$HostPort:
# {"fileName":"OpenSslClientSessionCache.java","id":"sourceFile"}
    int hash -> hash
    java.lang.String host -> host
    int port -> port
    109:114:void <init>(java.lang.String,int) -> <init>
    118:118:int hashCode() -> hashCode
    123:127:boolean equals(java.lang.Object) -> equals
    132:132:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslContext -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslContext:
# {"fileName":"OpenSslContext.java","id":"sourceFile"}
    36:38:void <init>(java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,int,java.security.cert.Certificate[],pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.util.Map$Entry[]) -> <init>
    45:47:void <init>(java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,int,java.security.cert.Certificate[],pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.util.Map$Entry[]) -> <init>
    51:51:javax.net.ssl.SSLEngine newEngine0(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> newEngine0
    57:59:void finalize() -> finalize
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslContextOption -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslContextOption:
# {"fileName":"OpenSslContextOption.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslContextOption USE_TASKS -> USE_TASKS
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslContextOption TLS_FALSE_START -> TLS_FALSE_START
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslContextOption PRIVATE_KEY_METHOD -> PRIVATE_KEY_METHOD
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslContextOption ASYNC_PRIVATE_KEY_METHOD -> ASYNC_PRIVATE_KEY_METHOD
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslContextOption CERTIFICATE_COMPRESSION_ALGORITHMS -> CERTIFICATE_COMPRESSION_ALGORITHMS
    26:27:void <init>(java.lang.String) -> <init>
    32:69:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslDefaultApplicationProtocolNegotiator:
# {"fileName":"OpenSslDefaultApplicationProtocolNegotiator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig config -> config
    30:32:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig) -> <init>
    36:36:java.util.List protocols() -> protocols
    41:41:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    46:46:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    51:51:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngine -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngine:
# {"fileName":"OpenSslEngine.java","id":"sourceFile"}
    32:33:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslContext,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> <init>
    38:40:void finalize() -> finalize
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap:
# {"fileName":"OpenSslEngineMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine remove(long) -> remove
    void add(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> add
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine get(long) -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial:
# {"fileName":"OpenSslKeyMaterial.java","id":"sourceFile"}
    java.security.cert.X509Certificate[] certificateChain() -> certificateChain
    long certificateChainAddress() -> certificateChainAddress
    long privateKeyAddress() -> privateKeyAddress
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial retain() -> retain
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial touch() -> touch
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial touch(java.lang.Object) -> touch
    boolean release() -> release
    boolean release(int) -> release
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialManager -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialManager:
# {"fileName":"OpenSslKeyMaterialManager.java","id":"sourceFile"}
    java.lang.String KEY_TYPE_RSA -> KEY_TYPE_RSA
    java.lang.String KEY_TYPE_DH_RSA -> KEY_TYPE_DH_RSA
    java.lang.String KEY_TYPE_EC -> KEY_TYPE_EC
    java.lang.String KEY_TYPE_EC_EC -> KEY_TYPE_EC_EC
    java.lang.String KEY_TYPE_EC_RSA -> KEY_TYPE_EC_RSA
    java.util.Map KEY_TYPES -> KEY_TYPES
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider provider -> provider
    64:66:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider) -> <init>
    69:90:void setKeyMaterialServerSide(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> setKeyMaterialServerSide
    95:102:void setKeyMaterialClientSide(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String[],javax.security.auth.x500.X500Principal[]) -> setKeyMaterialClientSide
    105:121:void setKeyMaterial(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> setKeyMaterial
    124:128:java.lang.String chooseClientAlias(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String[],javax.security.auth.x500.X500Principal[]) -> chooseClientAlias
    132:136:java.lang.String chooseServerAlias(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> chooseServerAlias
    51:60:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider:
# {"fileName":"OpenSslKeyMaterialProvider.java","id":"sourceFile"}
    javax.net.ssl.X509KeyManager keyManager -> keyManager
    java.lang.String password -> password
    37:40:void <init>(javax.net.ssl.X509KeyManager,java.lang.String) -> <init>
    44:46:void validateKeyMaterialSupported(java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String) -> validateKeyMaterialSupported
    49:67:void validateSupported(java.security.PrivateKey,java.lang.String) -> validateSupported
    70:92:void validateSupported(java.security.cert.X509Certificate[]) -> validateSupported
    98:98:javax.net.ssl.X509KeyManager keyManager() -> keyManager
    106:145:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial chooseKeyMaterial(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String) -> chooseKeyMaterial
    153:153:void destroy() -> destroy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslNpnApplicationProtocolNegotiator:
# {"fileName":"OpenSslNpnApplicationProtocolNegotiator.java","id":"sourceFile"}
    java.util.List protocols -> protocols
    32:34:void <init>(java.lang.Iterable) -> <init>
    36:38:void <init>(java.lang.String[]) -> <init>
    42:42:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    47:47:java.util.List protocols() -> protocols
    52:52:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    57:57:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey:
# {"fileName":"OpenSslPrivateKey.java","id":"sourceFile"}
    long privateKeyAddress -> privateKeyAddress
    31:33:void <init>(long) -> <init>
    37:37:java.lang.String getAlgorithm() -> getAlgorithm
    43:43:java.lang.String getFormat() -> getFormat
    48:48:byte[] getEncoded() -> getEncoded
    52:55:long privateKeyAddress() -> privateKeyAddress
    60:62:void deallocate() -> deallocate
    66:67:pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey retain() -> retain
    72:73:pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey retain(int) -> retain
    78:79:pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey touch() -> touch
    84:84:pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey touch(java.lang.Object) -> touch
    96:97:void destroy() -> destroy
    108:108:boolean isDestroyed() -> isDestroyed
    118:118:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial newKeyMaterial(long,java.security.cert.X509Certificate[]) -> newKeyMaterial
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    27:27:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    27:27:long access$000(pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial:
# {"fileName":"OpenSslPrivateKey.java","id":"sourceFile"}
    long certificateChain -> certificateChain
    java.security.cert.X509Certificate[] x509CertificateChain -> x509CertificateChain
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey this$0 -> this$0
    128:133:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKey,long,java.security.cert.X509Certificate[]) -> <init>
    137:137:java.security.cert.X509Certificate[] certificateChain() -> certificateChain
    142:145:long certificateChainAddress() -> certificateChainAddress
    150:153:long privateKeyAddress() -> privateKeyAddress
    158:159:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial touch(java.lang.Object) -> touch
    164:165:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial retain() -> retain
    170:171:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial retain(int) -> retain
    176:177:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial touch() -> touch
    182:184:void deallocate() -> deallocate
    187:189:void releaseChain() -> releaseChain
    122:122:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    122:122:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    122:122:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    122:122:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKeyMethod -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKeyMethod:
# {"fileName":"OpenSslPrivateKeyMethod.java","id":"sourceFile"}
    int SSL_SIGN_RSA_PKCS1_SHA1 -> SSL_SIGN_RSA_PKCS1_SHA1
    int SSL_SIGN_RSA_PKCS1_SHA256 -> SSL_SIGN_RSA_PKCS1_SHA256
    int SSL_SIGN_RSA_PKCS1_SHA384 -> SSL_SIGN_RSA_PKCS1_SHA384
    int SSL_SIGN_RSA_PKCS1_SHA512 -> SSL_SIGN_RSA_PKCS1_SHA512
    int SSL_SIGN_ECDSA_SHA1 -> SSL_SIGN_ECDSA_SHA1
    int SSL_SIGN_ECDSA_SECP256R1_SHA256 -> SSL_SIGN_ECDSA_SECP256R1_SHA256
    int SSL_SIGN_ECDSA_SECP384R1_SHA384 -> SSL_SIGN_ECDSA_SECP384R1_SHA384
    int SSL_SIGN_ECDSA_SECP521R1_SHA512 -> SSL_SIGN_ECDSA_SECP521R1_SHA512
    int SSL_SIGN_RSA_PSS_RSAE_SHA256 -> SSL_SIGN_RSA_PSS_RSAE_SHA256
    int SSL_SIGN_RSA_PSS_RSAE_SHA384 -> SSL_SIGN_RSA_PSS_RSAE_SHA384
    int SSL_SIGN_RSA_PSS_RSAE_SHA512 -> SSL_SIGN_RSA_PSS_RSAE_SHA512
    int SSL_SIGN_ED25519 -> SSL_SIGN_ED25519
    int SSL_SIGN_RSA_PKCS1_MD5_SHA1 -> SSL_SIGN_RSA_PKCS1_MD5_SHA1
    byte[] sign(javax.net.ssl.SSLEngine,int,byte[]) -> sign
    byte[] decrypt(javax.net.ssl.SSLEngine,byte[]) -> decrypt
    28:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerContext -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerContext:
# {"fileName":"OpenSslServerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerSessionContext sessionContext -> sessionContext
    51:52:void <init>(java.io.File,java.io.File) -> <init>
    65:67:void <init>(java.io.File,java.io.File,java.lang.String) -> <init>
    90:92:void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    116:118:void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,long,long) -> <init>
    141:143:void <init>(java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    166:168:void <init>(java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long) -> <init>
    192:194:void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    231:233:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    257:259:void <init>(java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> <init>
    283:285:void <init>(java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long) -> <init>
    323:327:void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long) -> <init>
    336:339:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.lang.String,java.util.Map$Entry[]) -> <init>
    349:365:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.lang.String,java.util.Map$Entry[]) -> <init>
    369:369:pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerSessionContext sessionContext() -> sessionContext
    39:39:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    39:39:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerSessionContext -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerSessionContext:
# {"fileName":"OpenSslServerSessionContext.java","id":"sourceFile"}
    29:30:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext,pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider) -> <init>
    42:48:boolean setSessionIdContext(byte[]) -> setSessionIdContext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession:
# {"fileName":"OpenSslSession.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId sessionId() -> sessionId
    void setLocalCertificate(java.security.cert.Certificate[]) -> setLocalCertificate
    void setSessionId(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> setSessionId
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext getSessionContext() -> getSessionContext
    void tryExpandApplicationBufferSize(int) -> tryExpandApplicationBufferSize
    void handshakeFinished(byte[],java.lang.String,java.lang.String,byte[],byte[][],long,long) -> handshakeFinished
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache:
# {"fileName":"OpenSslSessionCache.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession[] EMPTY_SESSIONS -> EMPTY_SESSIONS
    int DEFAULT_CACHE_SIZE -> DEFAULT_CACHE_SIZE
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    java.util.Map sessions -> sessions
    java.util.concurrent.atomic.AtomicInteger maximumCacheSize -> maximumCacheSize
    java.util.concurrent.atomic.AtomicInteger sessionTimeout -> sessionTimeout
    int sessionCounter -> sessionCounter
    54:79:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap) -> <init>
    82:88:void setSessionTimeout(int) -> setSessionTimeout
    91:91:int getSessionTimeout() -> getSessionTimeout
    101:101:boolean sessionCreated(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession) -> sessionCreated
    109:109:void sessionRemoved(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession) -> sessionRemoved
    112:117:void setSessionCacheSize(int) -> setSessionCacheSize
    120:120:int getSessionCacheSize() -> getSessionCacheSize
    124:141:void expungeInvalidSessions() -> expungeInvalidSessions
    145:173:boolean sessionCreated(long,long) -> sessionCreated
    178:207:long getSession(long,byte[]) -> getSession
    212:212:void setSession(long,java.lang.String,int) -> setSession
    218:222:void removeSessionWithId(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> removeSessionWithId
    228:228:boolean containsSessionWithId(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> containsSessionWithId
    232:234:void notifyRemovalAndFree(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession) -> notifyRemovalAndFree
    240:247:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession getSession(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> getSession
    255:264:java.util.List getIds() -> getIds
    271:279:void clear() -> clear
    39:39:java.util.concurrent.atomic.AtomicInteger access$000(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache) -> access$000
    40:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$1 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$1:
# {"fileName":"OpenSslSessionCache.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache this$0 -> this$0
    55:55:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache) -> <init>
    61:66:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache$NativeSslSession:
# {"fileName":"OpenSslSessionCache.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector LEAK_DETECTOR -> LEAK_DETECTOR
    pro.gravit.repackage.io.netty.util.ResourceLeakTracker leakTracker -> leakTracker
    long session -> session
    java.lang.String peerHost -> peerHost
    int peerPort -> peerPort
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId id -> id
    long timeout -> timeout
    long creationTime -> creationTime
    long lastAccessedTime -> lastAccessedTime
    boolean valid -> valid
    boolean freed -> freed
    boolean $assertionsDisabled -> $assertionsDisabled
    293:305:void <init>(long,java.lang.String,int,long) -> <init>
    309:309:void setSessionId(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> setSessionId
    313:314:boolean shouldBeSingleUse() -> shouldBeSingleUse
    318:319:long session() -> session
    323:324:boolean upRef() -> upRef
    328:330:void free() -> free
    333:339:void close() -> close
    343:343:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId sessionId() -> sessionId
    347:347:boolean isValid(long) -> isValid
    352:352:void setLocalCertificate(java.security.cert.Certificate[]) -> setLocalCertificate
    357:357:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext getSessionContext() -> getSessionContext
    362:362:void tryExpandApplicationBufferSize(int) -> tryExpandApplicationBufferSize
    368:368:void handshakeFinished(byte[],java.lang.String,java.lang.String,byte[],byte[][],long,long) -> handshakeFinished
    373:373:byte[] getId() -> getId
    378:378:long getCreationTime() -> getCreationTime
    382:383:void updateLastAccessedTime() -> updateLastAccessedTime
    387:387:long getLastAccessedTime() -> getLastAccessedTime
    392:393:void invalidate() -> invalidate
    397:397:boolean isValid() -> isValid
    402:402:void putValue(java.lang.String,java.lang.Object) -> putValue
    407:407:java.lang.Object getValue(java.lang.String) -> getValue
    413:413:void removeValue(java.lang.String) -> removeValue
    417:417:java.lang.String[] getValueNames() -> getValueNames
    422:422:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    427:427:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    432:432:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    437:437:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    442:442:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    447:447:java.lang.String getCipherSuite() -> getCipherSuite
    452:452:java.lang.String getProtocol() -> getProtocol
    457:457:java.lang.String getPeerHost() -> getPeerHost
    462:462:int getPeerPort() -> getPeerPort
    467:467:int getPacketBufferSize() -> getPacketBufferSize
    472:472:int getApplicationBufferSize() -> getApplicationBufferSize
    477:477:int hashCode() -> hashCode
    482:489:boolean equals(java.lang.Object) -> equals
    284:284:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    284:286:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext:
# {"fileName":"OpenSslSessionContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionStats stats -> stats
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider provider -> provider
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext context -> context
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache sessionCache -> sessionCache
    long mask -> mask
    52:59:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext,pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider,long,pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache) -> <init>
    62:62:boolean useKeyManager() -> useKeyManager
    67:69:void setSessionCacheSize(int) -> setSessionCacheSize
    73:73:int getSessionCacheSize() -> getSessionCacheSize
    78:88:void setSessionTimeout(int) -> setSessionTimeout
    92:92:int getSessionTimeout() -> getSessionTimeout
    97:97:javax.net.ssl.SSLSession getSession(byte[]) -> getSession
    102:102:java.util.Enumeration getIds() -> getIds
    122:143:void setTicketKeys(byte[]) -> setTicketKeys
    153:168:void setTicketKeys(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionTicketKey[]) -> setTicketKeys
    174:186:void setSessionCacheEnabled(boolean) -> setSessionCacheEnabled
    192:198:boolean isSessionCacheEnabled() -> isSessionCacheEnabled
    205:205:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionStats stats() -> stats
    212:213:void removeFromCache(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> removeFromCache
    216:216:boolean isInCache(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> isInCache
    220:221:void setSessionFromCache(java.lang.String,int,long) -> setSessionFromCache
    224:228:void destroy() -> destroy
    33:33:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionCache access$000(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext$1 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext$1:
# {"fileName":"OpenSslSessionContext.java","id":"sourceFile"}
    java.util.Iterator ids -> ids
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext this$0 -> this$0
    102:103:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext) -> <init>
    106:106:boolean hasMoreElements() -> hasMoreElements
    111:111:byte[] nextElement() -> nextElement
    102:102:java.lang.Object nextElement() -> nextElement
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId:
# {"fileName":"OpenSslSessionId.java","id":"sourceFile"}
    byte[] id -> id
    int hashCode -> hashCode
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId NULL_ID -> NULL_ID
    32:37:void <init>(byte[]) -> <init>
    41:48:boolean equals(java.lang.Object) -> equals
    53:54:java.lang.String toString() -> toString
    60:60:int hashCode() -> hashCode
    64:64:byte[] cloneBytes() -> cloneBytes
    30:30:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionStats -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionStats:
# {"fileName":"OpenSslSessionStats.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext context -> context
    36:38:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    44:50:long number() -> number
    57:63:long connect() -> connect
    70:76:long connectGood() -> connectGood
    83:89:long connectRenegotiate() -> connectRenegotiate
    96:102:long accept() -> accept
    109:115:long acceptGood() -> acceptGood
    122:128:long acceptRenegotiate() -> acceptRenegotiate
    137:143:long hits() -> hits
    150:156:long cbHits() -> cbHits
    164:170:long misses() -> misses
    179:185:long timeouts() -> timeouts
    192:198:long cacheFull() -> cacheFull
    205:211:long ticketKeyFail() -> ticketKeyFail
    218:224:long ticketKeyNew() -> ticketKeyNew
    232:238:long ticketKeyRenew() -> ticketKeyRenew
    245:251:long ticketKeyResume() -> ticketKeyResume
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionTicketKey -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionTicketKey:
# {"fileName":"OpenSslSessionTicketKey.java","id":"sourceFile"}
    int NAME_SIZE -> NAME_SIZE
    int HMAC_KEY_SIZE -> HMAC_KEY_SIZE
    int AES_KEY_SIZE -> AES_KEY_SIZE
    int TICKET_KEY_SIZE -> TICKET_KEY_SIZE
    pro.gravit.repackage.io.netty.internal.tcnative.SessionTicketKey key -> key
    51:53:void <init>(byte[],byte[],byte[]) -> <init>
    60:60:byte[] name() -> name
    68:68:byte[] hmacKey() -> hmacKey
    76:76:byte[] aesKey() -> aesKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory:
# {"fileName":"OpenSslX509KeyManagerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi spi -> spi
    71:72:void <init>() -> <init>
    75:76:void <init>(java.security.Provider) -> <init>
    79:80:void <init>(java.lang.String,java.security.Provider) -> <init>
    83:85:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi) -> <init>
    89:92:pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.security.Provider) -> newOpenSslKeyManagerFactorySpi
    98:103:pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider) -> newOpenSslKeyManagerFactorySpi
    107:107:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider newProvider() -> newProvider
    246:246:pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory newEngineBased(java.io.File,java.lang.String) -> newEngineBased
    258:263:pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory newEngineBased(java.security.cert.X509Certificate[],java.lang.String) -> newEngineBased
    272:272:pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory newKeyless(java.io.File) -> newKeyless
    281:281:pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory newKeyless(java.io.InputStream) -> newKeyless
    291:296:pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory newKeyless(java.security.cert.X509Certificate[]) -> newKeyless
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$1 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$1:
# {"fileName":"OpenSslX509KeyManagerFactory.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi:
# {"fileName":"OpenSslX509KeyManagerFactory.java","id":"sourceFile"}
    javax.net.ssl.KeyManagerFactory kmf -> kmf
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory providerFactory -> providerFactory
    114:116:void <init>(javax.net.ssl.KeyManagerFactory) -> <init>
    121:131:void engineInit(java.security.KeyStore,char[]) -> engineInit
    134:137:java.lang.String password(char[]) -> password
    143:143:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    148:152:javax.net.ssl.KeyManager[] engineGetKeyManagers() -> engineGetKeyManagers
    156:160:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider newProvider() -> newProvider
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory:
# {"fileName":"OpenSslX509KeyManagerFactory.java","id":"sourceFile"}
    javax.net.ssl.X509KeyManager keyManager -> keyManager
    java.lang.String password -> password
    java.lang.Iterable aliases -> aliases
    168:172:void <init>(javax.net.ssl.X509KeyManager,java.lang.String,java.lang.Iterable) -> <init>
    175:175:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider newProvider() -> newProvider
    163:163:javax.net.ssl.X509KeyManager access$000(pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory$OpenSslPopulatedKeyMaterialProvider -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory$OpenSslPopulatedKeyMaterialProvider:
# {"fileName":"OpenSslX509KeyManagerFactory.java","id":"sourceFile"}
    java.util.Map materialMap -> materialMap
    188:211:void <init>(javax.net.ssl.X509KeyManager,java.lang.String,java.lang.Iterable) -> <init>
    215:223:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial chooseKeyMaterial(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String) -> chooseKeyMaterial
    228:232:void destroy() -> destroy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyStore -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyStore:
# {"fileName":"OpenSslX509KeyManagerFactory.java","id":"sourceFile"}
    301:414:void <init>(java.security.cert.X509Certificate[],boolean) -> <init>
    299:299:void <init>(java.security.cert.X509Certificate[],boolean,pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyStore$1 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyStore$1:
# {"fileName":"OpenSslX509KeyManagerFactory.java","id":"sourceFile"}
    java.util.Date creationDate -> creationDate
    boolean val$keyless -> val$keyless
    java.security.cert.X509Certificate[] val$certificateChain -> val$certificateChain
    301:303:void <init>(boolean,java.security.cert.X509Certificate[]) -> <init>
    307:324:java.security.Key engineGetKey(java.lang.String,char[]) -> engineGetKey
    329:329:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String) -> engineGetCertificateChain
    334:334:java.security.cert.Certificate engineGetCertificate(java.lang.String) -> engineGetCertificate
    339:339:java.util.Date engineGetCreationDate(java.lang.String) -> engineGetCreationDate
    345:345:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[]) -> engineSetKeyEntry
    350:350:void engineSetKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[]) -> engineSetKeyEntry
    355:355:void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate) -> engineSetCertificateEntry
    360:360:void engineDeleteEntry(java.lang.String) -> engineDeleteEntry
    365:365:java.util.Enumeration engineAliases() -> engineAliases
    370:370:boolean engineContainsAlias(java.lang.String) -> engineContainsAlias
    375:375:int engineSize() -> engineSize
    380:380:boolean engineIsKeyEntry(java.lang.String) -> engineIsKeyEntry
    385:385:boolean engineIsCertificateEntry(java.lang.String) -> engineIsCertificateEntry
    390:397:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate) -> engineGetCertificateAlias
    402:402:void engineStore(java.io.OutputStream,char[]) -> engineStore
    407:410:void engineLoad(java.io.InputStream,char[]) -> engineLoad
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper:
# {"fileName":"OpenSslX509TrustManagerWrapper.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger LOGGER -> LOGGER
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$TrustManagerWrapper WRAPPER -> WRAPPER
    146:146:void <init>() -> <init>
    149:149:javax.net.ssl.X509TrustManager wrapIfNeeded(javax.net.ssl.X509TrustManager) -> wrapIfNeeded
    159:159:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    45:45:javax.net.ssl.SSLContext access$000() -> access$000
    46:144:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$1 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$1:
# {"fileName":"OpenSslX509TrustManagerWrapper.java","id":"sourceFile"}
    52:52:void <init>() -> <init>
    55:55:javax.net.ssl.X509TrustManager wrapIfNeeded(javax.net.ssl.X509TrustManager) -> wrapIfNeeded
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$2:
# {"fileName":"OpenSslX509TrustManagerWrapper.java","id":"sourceFile"}
    73:73:void <init>() -> <init>
    77:77:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    83:83:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    88:88:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$3 -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$3:
# {"fileName":"OpenSslX509TrustManagerWrapper.java","id":"sourceFile"}
    javax.net.ssl.SSLContext val$finalContext -> val$finalContext
    100:100:void <init>(javax.net.ssl.SSLContext) -> <init>
    104:130:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$TrustManagerWrapper -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$TrustManagerWrapper:
# {"fileName":"OpenSslX509TrustManagerWrapper.java","id":"sourceFile"}
    javax.net.ssl.X509TrustManager wrapIfNeeded(javax.net.ssl.X509TrustManager) -> wrapIfNeeded
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$UnsafeTrustManagerWrapper -> pro.gravit.repackage.io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$UnsafeTrustManagerWrapper:
# {"fileName":"OpenSslX509TrustManagerWrapper.java","id":"sourceFile"}
    long spiOffset -> spiOffset
    long tmOffset -> tmOffset
    166:169:void <init>(long,long) -> <init>
    174:199:javax.net.ssl.X509TrustManager wrapIfNeeded(javax.net.ssl.X509TrustManager) -> wrapIfNeeded
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.OptionalSslHandler -> pro.gravit.repackage.io.netty.handler.ssl.OptionalSslHandler:
# {"fileName":"OptionalSslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslContext sslContext -> sslContext
    38:40:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslContext) -> <init>
    44:52:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    55:67:void handleSsl(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handleSsl
    70:76:void handleNonSsl(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handleNonSsl
    83:83:java.lang.String newSslHandlerName() -> newSslHandlerName
    97:97:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newSslHandler(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.ssl.SslContext) -> newSslHandler
    105:105:java.lang.String newNonSslHandlerName() -> newNonSslHandlerName
    115:115:pro.gravit.repackage.io.netty.channel.ChannelHandler newNonSslHandler(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> newNonSslHandler
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.PemEncoded -> pro.gravit.repackage.io.netty.handler.ssl.PemEncoded:
# {"fileName":"PemEncoded.java","id":"sourceFile"}
    boolean isSensitive() -> isSensitive
    pro.gravit.repackage.io.netty.handler.ssl.PemEncoded copy() -> copy
    pro.gravit.repackage.io.netty.handler.ssl.PemEncoded duplicate() -> duplicate
    pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retainedDuplicate() -> retainedDuplicate
    pro.gravit.repackage.io.netty.handler.ssl.PemEncoded replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retain() -> retain
    pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retain(int) -> retain
    pro.gravit.repackage.io.netty.handler.ssl.PemEncoded touch() -> touch
    pro.gravit.repackage.io.netty.handler.ssl.PemEncoded touch(java.lang.Object) -> touch
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey -> pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey:
# {"fileName":"PemPrivateKey.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    byte[] BEGIN_PRIVATE_KEY -> BEGIN_PRIVATE_KEY
    byte[] END_PRIVATE_KEY -> END_PRIVATE_KEY
    java.lang.String PKCS8_FORMAT -> PKCS8_FORMAT
    pro.gravit.repackage.io.netty.buffer.ByteBuf content -> content
    59:68:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded toPEM(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,java.security.PrivateKey) -> toPEM
    72:99:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded toPEM(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,byte[]) -> toPEM
    109:109:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey valueOf(byte[]) -> valueOf
    119:119:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey valueOf(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> valueOf
    124:126:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    130:130:boolean isSensitive() -> isSensitive
    135:140:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    145:145:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey copy() -> copy
    150:150:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey duplicate() -> duplicate
    155:155:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey retainedDuplicate() -> retainedDuplicate
    160:160:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    165:166:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey touch() -> touch
    171:172:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey touch(java.lang.Object) -> touch
    177:177:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey retain() -> retain
    182:182:pro.gravit.repackage.io.netty.handler.ssl.PemPrivateKey retain(int) -> retain
    189:190:void deallocate() -> deallocate
    194:194:byte[] getEncoded() -> getEncoded
    199:199:java.lang.String getAlgorithm() -> getAlgorithm
    204:204:java.lang.String getFormat() -> getFormat
    216:217:void destroy() -> destroy
    228:228:boolean isDestroyed() -> isDestroyed
    43:43:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    43:43:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    43:43:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    43:43:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    43:43:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded touch(java.lang.Object) -> touch
    43:43:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded touch() -> touch
    43:43:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retain(int) -> retain
    43:43:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retain() -> retain
    43:43:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    43:43:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retainedDuplicate() -> retainedDuplicate
    43:43:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded duplicate() -> duplicate
    43:43:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded copy() -> copy
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    43:43:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    46:47:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.PemReader -> pro.gravit.repackage.io.netty.handler.ssl.PemReader:
# {"fileName":"PemReader.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern CERT_HEADER -> CERT_HEADER
    java.util.regex.Pattern CERT_FOOTER -> CERT_FOOTER
    java.util.regex.Pattern KEY_HEADER -> KEY_HEADER
    java.util.regex.Pattern KEY_FOOTER -> KEY_FOOTER
    java.util.regex.Pattern BODY -> BODY
    60:68:pro.gravit.repackage.io.netty.buffer.ByteBuf[] readCertificates(java.io.File) -> readCertificates
    75:110:pro.gravit.repackage.io.netty.buffer.ByteBuf[] readCertificates(java.io.InputStream) -> readCertificates
    115:123:pro.gravit.repackage.io.netty.buffer.ByteBuf readPrivateKey(java.io.File) -> readPrivateKey
    130:152:pro.gravit.repackage.io.netty.buffer.ByteBuf readPrivateKey(java.io.InputStream) -> readPrivateKey
    156:156:java.security.KeyException keyNotFoundException() -> keyNotFoundException
    161:174:java.lang.String readContent(java.io.InputStream) -> readContent
    179:183:void safeClose(java.io.InputStream) -> safeClose
    187:191:void safeClose(java.io.OutputStream) -> safeClose
    193:193:void <init>() -> <init>
    46:56:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.PemValue -> pro.gravit.repackage.io.netty.handler.ssl.PemValue:
# {"fileName":"PemValue.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf content -> content
    boolean sensitive -> sensitive
    37:40:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf,boolean) -> <init>
    44:44:boolean isSensitive() -> isSensitive
    49:54:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    59:59:pro.gravit.repackage.io.netty.handler.ssl.PemValue copy() -> copy
    64:64:pro.gravit.repackage.io.netty.handler.ssl.PemValue duplicate() -> duplicate
    69:69:pro.gravit.repackage.io.netty.handler.ssl.PemValue retainedDuplicate() -> retainedDuplicate
    74:74:pro.gravit.repackage.io.netty.handler.ssl.PemValue replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    79:79:pro.gravit.repackage.io.netty.handler.ssl.PemValue touch() -> touch
    84:85:pro.gravit.repackage.io.netty.handler.ssl.PemValue touch(java.lang.Object) -> touch
    90:90:pro.gravit.repackage.io.netty.handler.ssl.PemValue retain() -> retain
    95:95:pro.gravit.repackage.io.netty.handler.ssl.PemValue retain(int) -> retain
    100:104:void deallocate() -> deallocate
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    31:31:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded touch() -> touch
    31:31:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retain() -> retain
    31:31:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    31:31:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retainedDuplicate() -> retainedDuplicate
    31:31:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded duplicate() -> duplicate
    31:31:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded copy() -> copy
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    31:31:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate -> pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate:
# {"fileName":"PemX509Certificate.java","id":"sourceFile"}
    byte[] BEGIN_CERT -> BEGIN_CERT
    byte[] END_CERT -> END_CERT
    pro.gravit.repackage.io.netty.buffer.ByteBuf content -> content
    60:98:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded toPEM(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,java.security.cert.X509Certificate[]) -> toPEM
    108:116:pro.gravit.repackage.io.netty.buffer.ByteBuf append(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,pro.gravit.repackage.io.netty.handler.ssl.PemEncoded,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> append
    126:148:pro.gravit.repackage.io.netty.buffer.ByteBuf append(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,java.security.cert.X509Certificate,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> append
    152:152:pro.gravit.repackage.io.netty.buffer.ByteBuf newBuffer(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,int) -> newBuffer
    162:162:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate valueOf(byte[]) -> valueOf
    172:172:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate valueOf(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> valueOf
    177:179:void <init>(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    184:184:boolean isSensitive() -> isSensitive
    189:189:int refCnt() -> refCnt
    194:199:pro.gravit.repackage.io.netty.buffer.ByteBuf content() -> content
    204:204:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate copy() -> copy
    209:209:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate duplicate() -> duplicate
    214:214:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate retainedDuplicate() -> retainedDuplicate
    219:219:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    224:225:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate retain() -> retain
    230:231:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate retain(int) -> retain
    236:237:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate touch() -> touch
    242:243:pro.gravit.repackage.io.netty.handler.ssl.PemX509Certificate touch(java.lang.Object) -> touch
    248:248:boolean release() -> release
    253:253:boolean release(int) -> release
    258:258:byte[] getEncoded() -> getEncoded
    263:263:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    268:268:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    273:273:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    278:278:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    283:283:void checkValidity() -> checkValidity
    288:288:void checkValidity(java.util.Date) -> checkValidity
    293:293:int getVersion() -> getVersion
    298:298:java.math.BigInteger getSerialNumber() -> getSerialNumber
    303:303:java.security.Principal getIssuerDN() -> getIssuerDN
    308:308:java.security.Principal getSubjectDN() -> getSubjectDN
    313:313:java.util.Date getNotBefore() -> getNotBefore
    318:318:java.util.Date getNotAfter() -> getNotAfter
    323:323:byte[] getTBSCertificate() -> getTBSCertificate
    328:328:byte[] getSignature() -> getSignature
    333:333:java.lang.String getSigAlgName() -> getSigAlgName
    338:338:java.lang.String getSigAlgOID() -> getSigAlgOID
    343:343:byte[] getSigAlgParams() -> getSigAlgParams
    348:348:boolean[] getIssuerUniqueID() -> getIssuerUniqueID
    353:353:boolean[] getSubjectUniqueID() -> getSubjectUniqueID
    358:358:boolean[] getKeyUsage() -> getKeyUsage
    363:363:int getBasicConstraints() -> getBasicConstraints
    368:368:void verify(java.security.PublicKey) -> verify
    373:373:void verify(java.security.PublicKey,java.lang.String) -> verify
    378:378:java.security.PublicKey getPublicKey() -> getPublicKey
    383:391:boolean equals(java.lang.Object) -> equals
    396:396:int hashCode() -> hashCode
    401:401:java.lang.String toString() -> toString
    49:49:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded touch(java.lang.Object) -> touch
    49:49:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded touch() -> touch
    49:49:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retain(int) -> retain
    49:49:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retain() -> retain
    49:49:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    49:49:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded retainedDuplicate() -> retainedDuplicate
    49:49:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded duplicate() -> duplicate
    49:49:pro.gravit.repackage.io.netty.handler.ssl.PemEncoded copy() -> copy
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch(java.lang.Object) -> touch
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBufHolder touch() -> touch
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain(int) -> retain
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retain() -> retain
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBufHolder replace(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> replace
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBufHolder retainedDuplicate() -> retainedDuplicate
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBufHolder duplicate() -> duplicate
    49:49:pro.gravit.repackage.io.netty.buffer.ByteBufHolder copy() -> copy
    49:49:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    49:49:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    49:49:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    49:49:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    51:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.PseudoRandomFunction -> pro.gravit.repackage.io.netty.handler.ssl.PseudoRandomFunction:
# {"fileName":"PseudoRandomFunction.java","id":"sourceFile"}
    41:42:void <init>() -> <init>
    64:85:byte[] hash(byte[],byte[],byte[],int,java.lang.String) -> hash
    90:92:byte[] concat(byte[],byte[]) -> concat
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext:
# {"fileName":"ReferenceCountedOpenSslClientContext.java","id":"sourceFile"}
    java.util.Set SUPPORTED_KEY_TYPES -> SUPPORTED_KEY_TYPES
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext sessionContext -> sessionContext
    67:80:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean,java.lang.String,java.util.Map$Entry[]) -> <init>
    84:84:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    95:187:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String,long,long) -> newSessionContext
    193:199:void setVerifyCallback(long,pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509TrustManager) -> setVerifyCallback
    49:49:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    49:49:java.util.Set access$000() -> access$000
    51:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback:
# {"fileName":"ReferenceCountedOpenSslClientContext.java","id":"sourceFile"}
    javax.net.ssl.X509ExtendedTrustManager manager -> manager
    227:229:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509ExtendedTrustManager) -> <init>
    234:235:void verify(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.security.cert.X509Certificate[],java.lang.String) -> verify
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback:
# {"fileName":"ReferenceCountedOpenSslClientContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialManager keyManagerHolder -> keyManagerHolder
    242:245:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialManager) -> <init>
    249:274:void handle(long,byte[],byte[][]) -> handle
    285:298:java.util.Set supportedClientKeyTypes(byte[]) -> supportedClientKeyTypes
    303:315:java.lang.String clientKeyType(byte) -> clientKeyType
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext:
# {"fileName":"ReferenceCountedOpenSslClientContext.java","id":"sourceFile"}
    203:204:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext,pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$TrustManagerVerifyCallback -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$TrustManagerVerifyCallback:
# {"fileName":"ReferenceCountedOpenSslClientContext.java","id":"sourceFile"}
    javax.net.ssl.X509TrustManager manager -> manager
    211:213:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509TrustManager) -> <init>
    218:219:void verify(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.security.cert.X509Certificate[],java.lang.String) -> verify
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int DEFAULT_BIO_NON_APPLICATION_BUFFER_SIZE -> DEFAULT_BIO_NON_APPLICATION_BUFFER_SIZE
    boolean USE_TASKS -> USE_TASKS
    java.lang.Integer DH_KEY_LENGTH -> DH_KEY_LENGTH
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    int VERIFY_DEPTH -> VERIFY_DEPTH
    boolean CLIENT_ENABLE_SESSION_TICKET -> CLIENT_ENABLE_SESSION_TICKET
    boolean CLIENT_ENABLE_SESSION_TICKET_TLSV13 -> CLIENT_ENABLE_SESSION_TICKET_TLSV13
    boolean SERVER_ENABLE_SESSION_TICKET -> SERVER_ENABLE_SESSION_TICKET
    boolean SERVER_ENABLE_SESSION_TICKET_TLSV13 -> SERVER_ENABLE_SESSION_TICKET_TLSV13
    boolean SERVER_ENABLE_SESSION_CACHE -> SERVER_ENABLE_SESSION_CACHE
    boolean CLIENT_ENABLE_SESSION_CACHE -> CLIENT_ENABLE_SESSION_CACHE
    long ctx -> ctx
    java.util.List unmodifiableCiphers -> unmodifiableCiphers
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator apn -> apn
    int mode -> mode
    pro.gravit.repackage.io.netty.util.ResourceLeakTracker leak -> leak
    pro.gravit.repackage.io.netty.util.AbstractReferenceCounted refCnt -> refCnt
    java.security.cert.Certificate[] keyCertChain -> keyCertChain
    pro.gravit.repackage.io.netty.handler.ssl.ClientAuth clientAuth -> clientAuth
    java.lang.String[] protocols -> protocols
    boolean enableOcsp -> enableOcsp
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    java.util.concurrent.locks.ReadWriteLock ctxLock -> ctxLock
    int bioNonApplicationBufferSize -> bioNonApplicationBufferSize
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator NONE_PROTOCOL_NEGOTIATOR -> NONE_PROTOCOL_NEGOTIATOR
    boolean tlsFalseStart -> tlsFalseStart
    134:427:void <init>(java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,int,java.security.cert.Certificate[],pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,boolean,java.util.Map$Entry[]) -> <init>
    430:436:int opensslSelectorFailureBehavior(pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior) -> opensslSelectorFailureBehavior
    442:442:java.util.List cipherSuites() -> cipherSuites
    447:447:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNegotiator applicationProtocolNegotiator() -> applicationProtocolNegotiator
    452:452:boolean isClient() -> isClient
    457:457:javax.net.ssl.SSLEngine newEngine(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    462:462:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean) -> newHandler
    467:467:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> newHandler
    472:472:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,java.util.concurrent.Executor) -> newHandler
    478:478:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,java.util.concurrent.Executor) -> newHandler
    482:482:javax.net.ssl.SSLEngine newEngine0(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> newEngine0
    490:490:javax.net.ssl.SSLEngine newEngine(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> newEngine
    502:502:long context() -> context
    512:512:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionStats stats() -> stats
    522:525:void setRejectRemoteInitiatedRenegotiation(boolean) -> setRejectRemoteInitiatedRenegotiation
    533:533:boolean getRejectRemoteInitiatedRenegotiation() -> getRejectRemoteInitiatedRenegotiation
    541:543:void setBioNonApplicationBufferSize(int) -> setBioNonApplicationBufferSize
    549:549:int getBioNonApplicationBufferSize() -> getBioNonApplicationBufferSize
    559:560:void setTicketKeys(byte[]) -> setTicketKeys
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    574:580:long sslCtxPointer() -> sslCtxPointer
    596:604:void setPrivateKeyMethod(pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKeyMethod) -> setPrivateKeyMethod
    612:619:void setUseTasks(boolean) -> setUseTasks
    625:644:void destroy() -> destroy
    647:651:java.security.cert.X509Certificate[] certificates(byte[][]) -> certificates
    655:663:javax.net.ssl.X509TrustManager chooseTrustManager(javax.net.ssl.TrustManager[]) -> chooseTrustManager
    667:672:javax.net.ssl.X509KeyManager chooseX509KeyManager(javax.net.ssl.KeyManager[]) -> chooseX509KeyManager
    684:715:pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator toNegotiator(pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig) -> toNegotiator
    721:721:boolean useExtendedTrustManager(javax.net.ssl.X509TrustManager) -> useExtendedTrustManager
    726:726:int refCnt() -> refCnt
    731:732:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    737:738:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    743:744:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    749:750:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    755:755:boolean release() -> release
    760:760:boolean release(int) -> release
    861:892:void setKeyMaterial(long,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String) -> setKeyMaterial
    895:898:void freeBio(long) -> freeBio
    905:914:long toBIO(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.security.PrivateKey) -> toBIO
    922:933:long toBIO(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.security.cert.X509Certificate[]) -> toBIO
    940:963:long toBIO(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.handler.ssl.PemEncoded) -> toBIO
    968:977:long newBIO(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> newBIO
    986:995:pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialProvider providerFor(javax.net.ssl.KeyManagerFactory,java.lang.String) -> providerFor
    1000:1005:pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine retrieveEngine(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,long) -> retrieveEngine
    1103:1106:byte[] verifyResult(byte[]) -> verifyResult
    86:86:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    86:86:pro.gravit.repackage.io.netty.util.ResourceLeakTracker access$000(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> access$000
    86:86:void access$100(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> access$100
    86:86:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    86:86:pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine access$400(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,long) -> access$400
    86:86:byte[] access$500(byte[]) -> access$500
    87:204:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$1 -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$1:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext this$0 -> this$0
    134:134:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext) -> <init>
    137:141:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    146:151:void deallocate() -> deallocate
    134:134:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$2:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    165:165:void <init>() -> <init>
    168:168:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol() -> protocol
    173:173:java.util.List protocols() -> protocols
    178:178:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior() -> selectorFailureBehavior
    183:183:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior() -> selectedListenerFailureBehavior
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$3 -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$3:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol
    int[] $SwitchMap$io$netty$handler$ssl$OpenSslCertificateCompressionConfig$AlgorithmMode -> $SwitchMap$io$netty$handler$ssl$OpenSslCertificateCompressionConfig$AlgorithmMode
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectorFailureBehavior
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$SelectedListenerFailureBehavior
    371:694:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    766:768:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap) -> <init>
    772:802:int verify(long,byte[][],java.lang.String) -> verify
    808:832:int translateToError(java.lang.Throwable) -> translateToError
    void verify(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.security.cert.X509Certificate[],java.lang.String) -> verify
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslAsyncPrivateKeyMethod keyMethod -> keyMethod
    1045:1048:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,pro.gravit.repackage.io.netty.handler.ssl.OpenSslAsyncPrivateKeyMethod) -> <init>
    1053:1059:void sign(long,int,byte[],pro.gravit.repackage.io.netty.internal.tcnative.ResultCallback) -> sign
    1064:1070:void decrypt(long,byte[],pro.gravit.repackage.io.netty.internal.tcnative.ResultCallback) -> decrypt
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine engine -> engine
    long ssl -> ssl
    pro.gravit.repackage.io.netty.internal.tcnative.ResultCallback resultCallback -> resultCallback
    1078:1082:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,long,pro.gravit.repackage.io.netty.internal.tcnative.ResultCallback) -> <init>
    1086:1098:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$CompressionAlgorithm -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$CompressionAlgorithm:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm compressionAlgorithm -> compressionAlgorithm
    1113:1116:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,pro.gravit.repackage.io.netty.handler.ssl.OpenSslCertificateCompressionAlgorithm) -> <init>
    1120:1121:byte[] compress(long,byte[]) -> compress
    1126:1127:byte[] decompress(long,int,byte[]) -> decompress
    1132:1132:int algorithmId() -> algorithmId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$DefaultOpenSslEngineMap -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$DefaultOpenSslEngineMap:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    java.util.Map engines -> engines
    839:840:void <init>() -> <init>
    844:844:pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine remove(long) -> remove
    849:850:void add(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> add
    854:854:pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine get(long) -> get
    839:839:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$PrivateKeyMethod -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext$PrivateKeyMethod:
# {"fileName":"ReferenceCountedOpenSslContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKeyMethod keyMethod -> keyMethod
    1012:1015:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,pro.gravit.repackage.io.netty.handler.ssl.OpenSslPrivateKeyMethod) -> <init>
    1019:1024:byte[] sign(long,int,byte[]) -> sign
    1030:1035:byte[] decrypt(long,byte[]) -> decrypt
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine:
# {"fileName":"ReferenceCountedOpenSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    int OPENSSL_OP_NO_PROTOCOL_INDEX_SSLV2 -> OPENSSL_OP_NO_PROTOCOL_INDEX_SSLV2
    int OPENSSL_OP_NO_PROTOCOL_INDEX_SSLV3 -> OPENSSL_OP_NO_PROTOCOL_INDEX_SSLV3
    int OPENSSL_OP_NO_PROTOCOL_INDEX_TLSv1 -> OPENSSL_OP_NO_PROTOCOL_INDEX_TLSv1
    int OPENSSL_OP_NO_PROTOCOL_INDEX_TLSv1_1 -> OPENSSL_OP_NO_PROTOCOL_INDEX_TLSv1_1
    int OPENSSL_OP_NO_PROTOCOL_INDEX_TLSv1_2 -> OPENSSL_OP_NO_PROTOCOL_INDEX_TLSv1_2
    int OPENSSL_OP_NO_PROTOCOL_INDEX_TLSv1_3 -> OPENSSL_OP_NO_PROTOCOL_INDEX_TLSv1_3
    int[] OPENSSL_OP_NO_PROTOCOLS -> OPENSSL_OP_NO_PROTOCOLS
    int MAX_PLAINTEXT_LENGTH -> MAX_PLAINTEXT_LENGTH
    int MAX_RECORD_SIZE -> MAX_RECORD_SIZE
    javax.net.ssl.SSLEngineResult NEED_UNWRAP_OK -> NEED_UNWRAP_OK
    javax.net.ssl.SSLEngineResult NEED_UNWRAP_CLOSED -> NEED_UNWRAP_CLOSED
    javax.net.ssl.SSLEngineResult NEED_WRAP_OK -> NEED_WRAP_OK
    javax.net.ssl.SSLEngineResult NEED_WRAP_CLOSED -> NEED_WRAP_CLOSED
    javax.net.ssl.SSLEngineResult CLOSED_NOT_HANDSHAKING -> CLOSED_NOT_HANDSHAKING
    long ssl -> ssl
    long networkBIO -> networkBIO
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState handshakeState -> handshakeState
    boolean receivedShutdown -> receivedShutdown
    boolean destroyed -> destroyed
    java.lang.String applicationProtocol -> applicationProtocol
    boolean needTask -> needTask
    java.lang.String[] explicitlyEnabledProtocols -> explicitlyEnabledProtocols
    boolean sessionSet -> sessionSet
    pro.gravit.repackage.io.netty.util.ResourceLeakTracker leak -> leak
    pro.gravit.repackage.io.netty.util.AbstractReferenceCounted refCnt -> refCnt
    pro.gravit.repackage.io.netty.handler.ssl.ClientAuth clientAuth -> clientAuth
    long lastAccessed -> lastAccessed
    java.lang.String endPointIdentificationAlgorithm -> endPointIdentificationAlgorithm
    java.lang.Object algorithmConstraints -> algorithmConstraints
    java.util.List sniHostNames -> sniHostNames
    java.util.Collection matchers -> matchers
    boolean isInboundDone -> isInboundDone
    boolean outboundClosed -> outboundClosed
    boolean jdkCompatibilityMode -> jdkCompatibilityMode
    boolean clientMode -> clientMode
    pro.gravit.repackage.io.netty.buffer.ByteBufAllocator alloc -> alloc
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator apn -> apn
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext parentContext -> parentContext
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession session -> session
    java.nio.ByteBuffer[] singleSrcBuffer -> singleSrcBuffer
    java.nio.ByteBuffer[] singleDstBuffer -> singleDstBuffer
    boolean enableOcsp -> enableOcsp
    int maxWrapOverhead -> maxWrapOverhead
    int maxWrapBufferSize -> maxWrapBufferSize
    java.lang.Throwable pendingException -> pendingException
    boolean $assertionsDisabled -> $assertionsDisabled
    153:409:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean) -> <init>
    412:415:java.lang.String[] authMethods() -> authMethods
    419:426:boolean setKeyMaterial(pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterial) -> setKeyMaterial
    430:433:javax.crypto.spec.SecretKeySpec masterKey() -> masterKey
    437:440:boolean isSessionReused() -> isSessionReused
    448:461:void setOcspResponse(byte[]) -> setOcspResponse
    468:481:byte[] getOcspResponse() -> getOcspResponse
    486:486:int refCnt() -> refCnt
    491:492:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    497:498:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    503:504:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    509:510:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    515:515:boolean release() -> release
    520:520:boolean release(int) -> release
    526:526:java.lang.String getApplicationProtocol() -> getApplicationProtocol
    532:532:java.lang.String getHandshakeApplicationProtocol() -> getHandshakeApplicationProtocol
    541:546:javax.net.ssl.SSLSession getHandshakeSession() -> getHandshakeSession
    556:556:long sslPointer() -> sslPointer
    563:579:void shutdown() -> shutdown
    587:614:int writePlaintextData(java.nio.ByteBuffer,int) -> writePlaintextData
    618:621:void bioSetFd(int) -> bioSetFd
    627:647:pro.gravit.repackage.io.netty.buffer.ByteBuf writeEncryptedData(java.nio.ByteBuffer,int) -> writeEncryptedData
    655:677:int readPlaintextData(java.nio.ByteBuffer) -> readPlaintextData
    684:684:int maxWrapOverhead() -> maxWrapOverhead
    691:691:int maxEncryptedPacketLength() -> maxEncryptedPacketLength
    699:699:int maxEncryptedPacketLength0() -> maxEncryptedPacketLength0
    708:708:int calculateMaxLengthForWrap(int,int) -> calculateMaxLengthForWrap
    712:712:int sslPending() -> sslPending
    719:725:void calculateMaxWrapOverhead() -> calculateMaxWrapOverhead
    732:732:int sslPending0() -> sslPending0
    736:736:boolean isBytesAvailableEnoughForWrap(int,int,int) -> isBytesAvailableEnoughForWrap
    743:1026:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer) -> wrap
    1030:1030:javax.net.ssl.SSLEngineResult newResult(javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> newResult
    1038:1052:javax.net.ssl.SSLEngineResult newResult(javax.net.ssl.SSLEngineResult$Status,javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> newResult
    1057:1057:javax.net.ssl.SSLEngineResult newResultMayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> newResultMayFinishHandshake
    1063:1063:javax.net.ssl.SSLEngineResult newResultMayFinishHandshake(javax.net.ssl.SSLEngineResult$Status,javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> newResultMayFinishHandshake
    1070:1070:javax.net.ssl.SSLException shutdownWithError(java.lang.String,int) -> shutdownWithError
    1074:1092:javax.net.ssl.SSLException shutdownWithError(java.lang.String,int,int) -> shutdownWithError
    1097:1102:javax.net.ssl.SSLEngineResult handleUnwrapException(int,int,javax.net.ssl.SSLException) -> handleUnwrapException
    1110:1343:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int) -> unwrap
    1351:1367:boolean needWrapAgain(int) -> needWrapAgain
    1372:1377:javax.net.ssl.SSLEngineResult sslReadErrorResult(int,int,int,int) -> sslReadErrorResult
    1381:1384:void closeAll() -> closeAll
    1390:1401:void rejectRemoteInitiatedRenegotiation() -> rejectRemoteInitiatedRenegotiation
    1404:1404:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[],java.nio.ByteBuffer[]) -> unwrap
    1408:1409:java.nio.ByteBuffer[] singleSrcBuffer(java.nio.ByteBuffer) -> singleSrcBuffer
    1413:1414:void resetSingleSrcBuffer() -> resetSingleSrcBuffer
    1417:1418:java.nio.ByteBuffer[] singleDstBuffer(java.nio.ByteBuffer) -> singleDstBuffer
    1422:1423:void resetSingleDstBuffer() -> resetSingleDstBuffer
    1429:1432:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int) -> unwrap
    1438:1441:javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> wrap
    1447:1451:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer) -> unwrap
    1457:1460:javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer,java.nio.ByteBuffer[]) -> unwrap
    1492:1501:void runAndResetNeedTask(java.lang.Runnable) -> runAndResetNeedTask
    1505:1515:java.lang.Runnable getDelegatedTask() -> getDelegatedTask
    1520:1536:void closeInbound() -> closeInbound
    1540:1540:boolean isInboundDone() -> isInboundDone
    1545:1560:void closeOutbound() -> closeOutbound
    1567:1588:boolean doSSLShutdown() -> doSSLShutdown
    1595:1595:boolean isOutboundDone() -> isOutboundDone
    1600:1600:java.lang.String[] getSupportedCipherSuites() -> getSupportedCipherSuites
    1608:1638:java.lang.String[] getEnabledCipherSuites() -> getEnabledCipherSuites
    1644:1695:void setEnabledCipherSuites(java.lang.String[]) -> setEnabledCipherSuites
    1699:1699:java.lang.String[] getSupportedProtocols() -> getSupportedProtocols
    1704:1734:java.lang.String[] getEnabledProtocols() -> getEnabledProtocols
    1740:1740:boolean isProtocolEnabled(int,int,java.lang.String) -> isProtocolEnabled
    1754:1755:void setEnabledProtocols(java.lang.String[]) -> setEnabledProtocols
    1759:1834:void setEnabledProtocols0(java.lang.String[],boolean) -> setEnabledProtocols0
    1838:1838:javax.net.ssl.SSLSession getSession() -> getSession
    1843:1873:void beginHandshake() -> beginHandshake
    1876:1879:void checkEngineClosed() -> checkEngineClosed
    1883:1883:javax.net.ssl.SSLEngineResult$HandshakeStatus pendingStatus(int) -> pendingStatus
    1887:1887:boolean isEmpty(java.lang.Object[]) -> isEmpty
    1891:1891:boolean isEmpty(byte[]) -> isEmpty
    1895:1909:javax.net.ssl.SSLEngineResult$HandshakeStatus handshakeException() -> handshakeException
    1917:1922:void initHandshakeException(java.lang.Throwable) -> initHandshakeException
    1925:1992:javax.net.ssl.SSLEngineResult$HandshakeStatus handshake() -> handshake
    1997:1998:javax.net.ssl.SSLEngineResult$HandshakeStatus mayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus,int,int) -> mayFinishHandshake
    2003:2014:javax.net.ssl.SSLEngineResult$HandshakeStatus mayFinishHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus) -> mayFinishHandshake
    2020:2027:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus() -> getHandshakeStatus
    2032:2039:javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus(int) -> getHandshakeStatus
    2043:2044:boolean needPendingStatus() -> needPendingStatus
    2051:2057:java.lang.String toJavaCipherSuite(java.lang.String) -> toJavaCipherSuite
    2065:2077:java.lang.String toJavaCipherSuitePrefix(java.lang.String) -> toJavaCipherSuitePrefix
    2083:2086:void setUseClientMode(boolean) -> setUseClientMode
    2090:2090:boolean getUseClientMode() -> getUseClientMode
    2095:2096:void setNeedClientAuth(boolean) -> setNeedClientAuth
    2100:2100:boolean getNeedClientAuth() -> getNeedClientAuth
    2105:2106:void setWantClientAuth(boolean) -> setWantClientAuth
    2110:2110:boolean getWantClientAuth() -> getWantClientAuth
    2119:2122:void setVerify(int,int) -> setVerify
    2125:2150:void setClientAuth(pro.gravit.repackage.io.netty.handler.ssl.ClientAuth) -> setClientAuth
    2154:2157:void setEnableSessionCreation(boolean) -> setEnableSessionCreation
    2161:2161:boolean getEnableSessionCreation() -> getEnableSessionCreation
    2167:2185:javax.net.ssl.SSLParameters getSSLParameters() -> getSSLParameters
    2191:2228:void setSSLParameters(javax.net.ssl.SSLParameters) -> setSSLParameters
    2231:2231:boolean isEndPointVerificationEnabled(java.lang.String) -> isEndPointVerificationEnabled
    2235:2235:boolean isDestroyed() -> isDestroyed
    2239:2239:boolean checkSniHostnameMatch(byte[]) -> checkSniHostnameMatch
    2244:2244:java.lang.String getNegotiatedApplicationProtocol() -> getNegotiatedApplicationProtocol
    2248:2252:long bufferAddress(java.nio.ByteBuffer) -> bufferAddress
    2259:2294:void selectApplicationProtocol() -> selectApplicationProtocol
    2299:2310:java.lang.String selectApplicationProtocol(java.util.List,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.lang.String) -> selectApplicationProtocol
    2317:2318:void setSessionId(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> setSessionId
    94:94:pro.gravit.repackage.io.netty.util.ResourceLeakTracker access$000(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$000
    94:94:pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext access$100(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$100
    94:94:boolean access$200(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$200
    94:94:java.util.List access$300(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$300
    94:94:boolean access$400(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$400
    94:94:long access$500(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$500
    94:94:boolean access$600(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$600
    94:94:void access$700(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.Runnable) -> access$700
    94:94:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession access$800(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$800
    94:94:long access$900(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$900
    94:94:java.lang.String access$1000(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String) -> access$1000
    94:94:boolean access$1100(java.lang.Object[]) -> access$1100
    94:94:boolean access$1200(byte[]) -> access$1200
    94:94:void access$1300(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> access$1300
    94:94:pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState access$1402(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState) -> access$1402
    94:128:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$1 -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$1:
# {"fileName":"ReferenceCountedOpenSslEngine.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> this$0
    163:163:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> <init>
    166:170:pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    175:181:void deallocate() -> deallocate
    163:163:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2 -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$2:
# {"fileName":"ReferenceCountedOpenSslEngine.java","id":"sourceFile"}
    java.lang.String[] peerSupportedSignatureAlgorithms -> peerSupportedSignatureAlgorithms
    java.util.List requestedServerNames -> requestedServerNames
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> this$0
    240:240:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,pro.gravit.repackage.io.netty.handler.ssl.OpenSslSession) -> <init>
    246:267:java.util.List getRequestedServerNames() -> getRequestedServerNames
    273:295:java.lang.String[] getPeerSupportedSignatureAlgorithms() -> getPeerSupportedSignatureAlgorithms
    300:309:java.util.List getStatusResponses() -> getStatusResponses
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$3 -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$3:
# {"fileName":"ReferenceCountedOpenSslEngine.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$ssl$ReferenceCountedOpenSslEngine$HandshakeState -> $SwitchMap$io$netty$handler$ssl$ReferenceCountedOpenSslEngine$HandshakeState
    int[] $SwitchMap$io$netty$handler$ssl$ClientAuth -> $SwitchMap$io$netty$handler$ssl$ClientAuth
    int[] $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol -> $SwitchMap$io$netty$handler$ssl$ApplicationProtocolConfig$Protocol
    541:2262:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$AsyncTaskDecorator -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$AsyncTaskDecorator:
# {"fileName":"ReferenceCountedOpenSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> this$0
    1476:1478:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,pro.gravit.repackage.io.netty.internal.tcnative.AsyncTask) -> <init>
    1482:1487:void run(java.lang.Runnable) -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$DefaultOpenSslSession -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$DefaultOpenSslSession:
# {"fileName":"ReferenceCountedOpenSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext sessionContext -> sessionContext
    javax.security.cert.X509Certificate[] x509PeerCerts -> x509PeerCerts
    java.security.cert.Certificate[] peerCerts -> peerCerts
    boolean valid -> valid
    java.lang.String protocol -> protocol
    java.lang.String cipher -> cipher
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId id -> id
    long creationTime -> creationTime
    int applicationBufferSize -> applicationBufferSize
    java.security.cert.Certificate[] localCertificateChain -> localCertificateChain
    java.util.Map values -> values
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> this$0
    2328:2340:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext) -> <init>
    2343:2343:javax.net.ssl.SSLSessionBindingEvent newSSLSessionBindingEvent(java.lang.String) -> newSSLSessionBindingEvent
    2348:2354:void setSessionId(pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId) -> setSessionId
    2358:2367:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionId sessionId() -> sessionId
    2372:2373:void setLocalCertificate(java.security.cert.Certificate[]) -> setLocalCertificate
    2377:2377:byte[] getId() -> getId
    2382:2382:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext getSessionContext() -> getSessionContext
    2387:2389:long getCreationTime() -> getCreationTime
    2394:2396:long getLastAccessedTime() -> getLastAccessedTime
    2401:2405:void invalidate() -> invalidate
    2409:2411:boolean isValid() -> isValid
    2416:2434:void putValue(java.lang.String,java.lang.Object) -> putValue
    2438:2444:java.lang.Object getValue(java.lang.String) -> getValue
    2449:2461:void removeValue(java.lang.String) -> removeValue
    2465:2471:java.lang.String[] getValueNames() -> getValueNames
    2475:2479:void notifyUnbound(java.lang.Object,java.lang.String) -> notifyUnbound
    2489:2537:void handshakeFinished(byte[],java.lang.String,java.lang.String,byte[],byte[][],long,long) -> handshakeFinished
    2540:2545:void initCerts(byte[][],int) -> initCerts
    2549:2554:java.security.cert.Certificate[] getPeerCertificates() -> getPeerCertificates
    2559:2563:java.security.cert.Certificate[] getLocalCertificates() -> getLocalCertificates
    2568:2573:javax.security.cert.X509Certificate[] getPeerCertificateChain() -> getPeerCertificateChain
    2578:2581:java.security.Principal getPeerPrincipal() -> getPeerPrincipal
    2586:2590:java.security.Principal getLocalPrincipal() -> getLocalPrincipal
    2595:2600:java.lang.String getCipherSuite() -> getCipherSuite
    2605:2615:java.lang.String getProtocol() -> getProtocol
    2620:2620:java.lang.String getPeerHost() -> getPeerHost
    2625:2625:int getPeerPort() -> getPeerPort
    2630:2630:int getPacketBufferSize() -> getPacketBufferSize
    2635:2635:int getApplicationBufferSize() -> getApplicationBufferSize
    2640:2643:void tryExpandApplicationBufferSize(int) -> tryExpandApplicationBufferSize
    2647:2647:java.lang.String toString() -> toString
    2320:2320:javax.net.ssl.SSLSessionContext getSessionContext() -> getSessionContext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState:
# {"fileName":"ReferenceCountedOpenSslEngine.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState NOT_STARTED -> NOT_STARTED
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState STARTED_IMPLICITLY -> STARTED_IMPLICITLY
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState STARTED_EXPLICITLY -> STARTED_EXPLICITLY
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState FINISHED -> FINISHED
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState[] $VALUES -> $VALUES
    134:134:pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState[] values() -> values
    134:134:pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$HandshakeState valueOf(java.lang.String) -> valueOf
    134:134:void <init>(java.lang.String,int) -> <init>
    134:150:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$TaskDecorator -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine$TaskDecorator:
# {"fileName":"ReferenceCountedOpenSslEngine.java","id":"sourceFile"}
    java.lang.Runnable task -> task
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine this$0 -> this$0
    1465:1467:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.Runnable) -> <init>
    1471:1472:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext:
# {"fileName":"ReferenceCountedOpenSslServerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    byte[] ID -> ID
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerSessionContext sessionContext -> sessionContext
    62:65:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.lang.String,java.util.Map$Entry[]) -> <init>
    74:91:void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.lang.String,java.util.Map$Entry[]) -> <init>
    95:95:pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerSessionContext sessionContext() -> sessionContext
    106:204:pro.gravit.repackage.io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String,long,long) -> newSessionContext
    210:216:void setVerifyCallback(long,pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509TrustManager) -> setVerifyCallback
    49:49:pro.gravit.repackage.io.netty.handler.ssl.OpenSslSessionContext sessionContext() -> sessionContext
    49:49:javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    49:49:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    50:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ExtendedTrustManagerVerifyCallback -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ExtendedTrustManagerVerifyCallback:
# {"fileName":"ReferenceCountedOpenSslServerContext.java","id":"sourceFile"}
    javax.net.ssl.X509ExtendedTrustManager manager -> manager
    269:271:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509ExtendedTrustManager) -> <init>
    276:277:void verify(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.security.cert.X509Certificate[],java.lang.String) -> verify
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslServerCertificateCallback -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslServerCertificateCallback:
# {"fileName":"ReferenceCountedOpenSslServerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialManager keyManagerHolder -> keyManagerHolder
    222:225:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,pro.gravit.repackage.io.netty.handler.ssl.OpenSslKeyMaterialManager) -> <init>
    229:246:void handle(long,byte[],byte[][]) -> handle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslSniHostnameMatcher -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslSniHostnameMatcher:
# {"fileName":"ReferenceCountedOpenSslServerContext.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap engineMap -> engineMap
    283:285:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap) -> <init>
    289:295:boolean match(long,java.lang.String) -> match
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$TrustManagerVerifyCallback -> pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$TrustManagerVerifyCallback:
# {"fileName":"ReferenceCountedOpenSslServerContext.java","id":"sourceFile"}
    javax.net.ssl.X509TrustManager manager -> manager
    253:255:void <init>(pro.gravit.repackage.io.netty.handler.ssl.OpenSslEngineMap,javax.net.ssl.X509TrustManager) -> <init>
    260:261:void verify(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.security.cert.X509Certificate[],java.lang.String) -> verify
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SignatureAlgorithmConverter -> pro.gravit.repackage.io.netty.handler.ssl.SignatureAlgorithmConverter:
# {"fileName":"SignatureAlgorithmConverter.java","id":"sourceFile"}
    java.util.regex.Pattern PATTERN -> PATTERN
    29:29:void <init>() -> <init>
    55:72:java.lang.String toJavaName(java.lang.String) -> toJavaName
    42:42:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SniCompletionEvent -> pro.gravit.repackage.io.netty.handler.ssl.SniCompletionEvent:
# {"fileName":"SniCompletionEvent.java","id":"sourceFile"}
    java.lang.String hostname -> hostname
    28:30:void <init>(java.lang.String) -> <init>
    33:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:39:void <init>(java.lang.Throwable) -> <init>
    45:45:java.lang.String hostname() -> hostname
    50:52:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SniHandler -> pro.gravit.repackage.io.netty.handler.ssl.SniHandler:
# {"fileName":"SniHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SniHandler$Selection EMPTY_SELECTION -> EMPTY_SELECTION
    pro.gravit.repackage.io.netty.util.AsyncMapping mapping -> mapping
    pro.gravit.repackage.io.netty.handler.ssl.SniHandler$Selection selection -> selection
    51:52:void <init>(pro.gravit.repackage.io.netty.util.Mapping) -> <init>
    62:63:void <init>(pro.gravit.repackage.io.netty.util.Mapping,long) -> <init>
    72:73:void <init>(pro.gravit.repackage.io.netty.util.DomainNameMapping) -> <init>
    83:84:void <init>(pro.gravit.repackage.io.netty.util.AsyncMapping) -> <init>
    42:97:void <init>(pro.gravit.repackage.io.netty.util.AsyncMapping,long) -> <init>
    103:103:java.lang.String hostname() -> hostname
    110:110:pro.gravit.repackage.io.netty.handler.ssl.SslContext sslContext() -> sslContext
    121:121:pro.gravit.repackage.io.netty.util.concurrent.Future lookup(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String) -> lookup
    127:143:void onLookupComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Future) -> onLookupComplete
    155:168:void replaceHandler(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.String,pro.gravit.repackage.io.netty.handler.ssl.SslContext) -> replaceHandler
    175:177:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newSslHandler(pro.gravit.repackage.io.netty.handler.ssl.SslContext,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> newSslHandler
    38:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SniHandler$1 -> pro.gravit.repackage.io.netty.handler.ssl.SniHandler$1:
# {"fileName":"SniHandler.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SniHandler$AsyncMappingAdapter -> pro.gravit.repackage.io.netty.handler.ssl.SniHandler$AsyncMappingAdapter:
# {"fileName":"SniHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Mapping mapping -> mapping
    183:185:void <init>(pro.gravit.repackage.io.netty.util.Mapping) -> <init>
    191:195:pro.gravit.repackage.io.netty.util.concurrent.Future map(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> map
    180:180:pro.gravit.repackage.io.netty.util.concurrent.Future map(java.lang.Object,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> map
    180:180:void <init>(pro.gravit.repackage.io.netty.util.Mapping,pro.gravit.repackage.io.netty.handler.ssl.SniHandler$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SniHandler$Selection -> pro.gravit.repackage.io.netty.handler.ssl.SniHandler$Selection:
# {"fileName":"SniHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslContext context -> context
    java.lang.String hostname -> hostname
    203:206:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslContext,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler -> pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler:
# {"fileName":"SslClientHelloHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean handshakeFailed -> handshakeFailed
    boolean suppressRead -> suppressRead
    boolean readPending -> readPending
    pro.gravit.repackage.io.netty.buffer.ByteBuf handshakeBuffer -> handshakeBuffer
    37:37:void <init>() -> <init>
    49:172:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    175:177:void releaseHandshakeBuffer() -> releaseHandshakeBuffer
    180:183:void releaseIfNotNull(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> releaseIfNotNull
    188:226:void select(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> select
    230:233:void handlerRemoved0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    pro.gravit.repackage.io.netty.util.concurrent.Future lookup(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> lookup
    void onLookupComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.util.concurrent.Future) -> onLookupComplete
    270:275:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    279:280:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    285:286:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    290:291:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    295:296:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    300:301:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    305:306:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    310:311:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    37:37:void access$000(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> access$000
    37:37:boolean access$102(pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler,boolean) -> access$102
    37:37:boolean access$200(pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler) -> access$200
    37:37:boolean access$202(pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler,boolean) -> access$202
    39:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler$1:
# {"fileName":"SslClientHelloHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.buffer.ByteBuf val$finalClientHello -> val$finalClientHello
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler this$0 -> this$0
    194:194:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslClientHelloHandler,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    197:215:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslCloseCompletionEvent -> pro.gravit.repackage.io.netty.handler.ssl.SslCloseCompletionEvent:
# {"fileName":"SslCloseCompletionEvent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslCloseCompletionEvent SUCCESS -> SUCCESS
    28:28:void <init>() -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
    23:23:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslClosedEngineException -> pro.gravit.repackage.io.netty.handler.ssl.SslClosedEngineException:
# {"fileName":"SslClosedEngineException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    29:30:void <init>(java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslCompletionEvent -> pro.gravit.repackage.io.netty.handler.ssl.SslCompletionEvent:
# {"fileName":"SslCompletionEvent.java","id":"sourceFile"}
    java.lang.Throwable cause -> cause
    24:26:void <init>() -> <init>
    28:30:void <init>(java.lang.Throwable) -> <init>
    36:36:boolean isSuccess() -> isSuccess
    44:44:java.lang.Throwable cause() -> cause
    49:51:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslContext -> pro.gravit.repackage.io.netty.handler.ssl.SslContext:
# {"fileName":"SslContext.java","id":"sourceFile"}
    java.lang.String ALIAS -> ALIAS
    java.security.cert.CertificateFactory X509_CERT_FACTORY -> X509_CERT_FACTORY
    boolean startTls -> startTls
    pro.gravit.repackage.io.netty.util.AttributeMap attributes -> attributes
    112:112:pro.gravit.repackage.io.netty.handler.ssl.SslProvider defaultServerProvider() -> defaultServerProvider
    121:121:pro.gravit.repackage.io.netty.handler.ssl.SslProvider defaultClientProvider() -> defaultClientProvider
    125:128:pro.gravit.repackage.io.netty.handler.ssl.SslProvider defaultProvider() -> defaultProvider
    142:142:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File) -> newServerContext
    158:158:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File,java.lang.String) -> newServerContext
    185:185:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,long,long) -> newServerContext
    213:213:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> newServerContext
    231:231:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,java.io.File) -> newServerContext
    249:249:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,java.io.File,java.lang.String) -> newServerContext
    279:281:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,java.lang.Iterable,long,long) -> newServerContext
    314:317:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,java.lang.Iterable,long,long) -> newServerContext
    346:347:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> newServerContext
    390:392:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> newServerContext
    435:445:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long,java.lang.String) -> newServerContext
    459:485:pro.gravit.repackage.io.netty.handler.ssl.SslContext newServerContextInternal(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long,pro.gravit.repackage.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.lang.String,java.util.Map$Entry[]) -> newServerContextInternal
    490:493:void verifyNullSslContextProvider(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.security.Provider) -> verifyNullSslContextProvider
    503:503:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext() -> newClientContext
    516:516:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(java.io.File) -> newClientContext
    531:531:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(javax.net.ssl.TrustManagerFactory) -> newClientContext
    549:549:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(java.io.File,javax.net.ssl.TrustManagerFactory) -> newClientContext
    577:577:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,java.lang.Iterable,long,long) -> newClientContext
    607:607:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> newClientContext
    623:623:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider) -> newClientContext
    639:639:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File) -> newClientContext
    657:657:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,javax.net.ssl.TrustManagerFactory) -> newClientContext
    677:677:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory) -> newClientContext
    709:712:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,java.lang.Iterable,long,long) -> newClientContext
    744:744:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> newClientContext
    795:805:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContext(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,long,long) -> newClientContext
    817:844:pro.gravit.repackage.io.netty.handler.ssl.SslContext newClientContextInternal(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter,pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean,java.lang.String,java.util.Map$Entry[]) -> newClientContextInternal
    850:857:pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig toApplicationProtocolConfig(java.lang.Iterable) -> toApplicationProtocolConfig
    864:865:void <init>() -> <init>
    104:872:void <init>(boolean) -> <init>
    878:878:pro.gravit.repackage.io.netty.util.AttributeMap attributes() -> attributes
    885:885:boolean isServer() -> isServer
    boolean isClient() -> isClient
    java.util.List cipherSuites() -> cipherSuites
    902:902:long sessionCacheSize() -> sessionCacheSize
    909:909:long sessionTimeout() -> sessionTimeout
    917:917:java.util.List nextProtocols() -> nextProtocols
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolNegotiator applicationProtocolNegotiator() -> applicationProtocolNegotiator
    javax.net.ssl.SSLEngine newEngine(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> newEngine
    javax.net.ssl.SSLEngine newEngine(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newEngine
    javax.net.ssl.SSLSessionContext sessionContext() -> sessionContext
    955:955:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> newHandler
    963:963:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean) -> newHandler
    992:992:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.util.concurrent.Executor) -> newHandler
    1000:1000:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,boolean,java.util.concurrent.Executor) -> newHandler
    1009:1009:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int) -> newHandler
    1017:1017:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean) -> newHandler
    1050:1050:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,java.util.concurrent.Executor) -> newHandler
    1055:1055:pro.gravit.repackage.io.netty.handler.ssl.SslHandler newHandler(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,java.util.concurrent.Executor) -> newHandler
    1079:1091:java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[]) -> generateKeySpec
    1108:1114:java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[],java.lang.String) -> buildKeyStore
    1121:1133:java.security.PrivateKey toPrivateKey(java.io.File,java.lang.String) -> toPrivateKey
    1141:1160:java.security.PrivateKey toPrivateKey(java.io.InputStream,java.lang.String) -> toPrivateKey
    1167:1181:java.security.PrivateKey getPrivateKeyFromByteBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf,java.lang.String) -> getPrivateKeyFromByteBuffer
    1197:1197:javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.io.File,javax.net.ssl.TrustManagerFactory) -> buildTrustManagerFactory
    1210:1212:javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.String) -> buildTrustManagerFactory
    1216:1219:java.security.cert.X509Certificate[] toX509Certificates(java.io.File) -> toX509Certificates
    1223:1226:java.security.cert.X509Certificate[] toX509Certificates(java.io.InputStream) -> toX509Certificates
    1230:1252:java.security.cert.X509Certificate[] getCertificatesFromBuffers(pro.gravit.repackage.io.netty.buffer.ByteBuf[]) -> getCertificatesFromBuffers
    1258:1277:javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String) -> buildTrustManagerFactory
    1282:1284:java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String) -> toPrivateKeyInternal
    1290:1292:java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File) -> toX509CertificatesInternal
    1302:1307:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String) -> buildKeyManagerFactory
    1315:1323:javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.KeyStore,java.lang.String,char[],javax.net.ssl.KeyManagerFactory) -> buildKeyManagerFactory
    1327:1327:char[] keyStorePassword(java.lang.String) -> keyStorePassword
    97:101:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslContext$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslContext$1:
# {"fileName":"SslContext.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$ssl$SslProvider -> $SwitchMap$io$netty$handler$ssl$SslProvider
    463:463:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder -> pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder:
# {"fileName":"SslContextBuilder.java","id":"sourceFile"}
    java.util.Map$Entry[] EMPTY_ENTRIES -> EMPTY_ENTRIES
    boolean forServer -> forServer
    pro.gravit.repackage.io.netty.handler.ssl.SslProvider provider -> provider
    java.security.Provider sslContextProvider -> sslContextProvider
    java.security.cert.X509Certificate[] trustCertCollection -> trustCertCollection
    javax.net.ssl.TrustManagerFactory trustManagerFactory -> trustManagerFactory
    java.security.cert.X509Certificate[] keyCertChain -> keyCertChain
    java.security.PrivateKey key -> key
    java.lang.String keyPassword -> keyPassword
    javax.net.ssl.KeyManagerFactory keyManagerFactory -> keyManagerFactory
    java.lang.Iterable ciphers -> ciphers
    pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter cipherFilter -> cipherFilter
    pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig apn -> apn
    long sessionCacheSize -> sessionCacheSize
    long sessionTimeout -> sessionTimeout
    pro.gravit.repackage.io.netty.handler.ssl.ClientAuth clientAuth -> clientAuth
    java.lang.String[] protocols -> protocols
    boolean startTls -> startTls
    boolean enableOcsp -> enableOcsp
    java.lang.String keyStoreType -> keyStoreType
    java.util.Map options -> options
    57:57:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forClient() -> forClient
    68:68:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(java.io.File,java.io.File) -> forServer
    84:84:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(java.io.InputStream,java.io.InputStream) -> forServer
    95:95:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(java.security.PrivateKey,java.security.cert.X509Certificate[]) -> forServer
    106:106:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(java.security.PrivateKey,java.lang.Iterable) -> forServer
    120:120:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(java.io.File,java.io.File,java.lang.String) -> forServer
    138:138:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(java.io.InputStream,java.io.InputStream,java.lang.String) -> forServer
    152:152:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(java.security.PrivateKey,java.lang.String,java.security.cert.X509Certificate[]) -> forServer
    166:166:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(java.security.PrivateKey,java.lang.String,java.lang.Iterable) -> forServer
    179:179:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(javax.net.ssl.KeyManagerFactory) -> forServer
    188:188:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder forServer(javax.net.ssl.KeyManager) -> forServer
    201:214:void <init>(boolean) -> <init>
    220:225:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder option(pro.gravit.repackage.io.netty.handler.ssl.SslContextOption,java.lang.Object) -> option
    232:233:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder sslProvider(pro.gravit.repackage.io.netty.handler.ssl.SslProvider) -> sslProvider
    240:241:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyStoreType(java.lang.String) -> keyStoreType
    249:250:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder sslContextProvider(java.security.Provider) -> sslContextProvider
    259:261:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder trustManager(java.io.File) -> trustManager
    274:276:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder trustManager(java.io.InputStream) -> trustManager
    284:286:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder trustManager(java.security.cert.X509Certificate[]) -> trustManager
    293:293:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder trustManager(java.lang.Iterable) -> trustManager
    300:302:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder trustManager(javax.net.ssl.TrustManagerFactory) -> trustManager
    313:315:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder trustManager(javax.net.ssl.TrustManager) -> trustManager
    326:326:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(java.io.File,java.io.File) -> keyManager
    341:341:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(java.io.InputStream,java.io.InputStream) -> keyManager
    352:352:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(java.security.PrivateKey,java.security.cert.X509Certificate[]) -> keyManager
    363:363:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(java.security.PrivateKey,java.lang.Iterable) -> keyManager
    379:388:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(java.io.File,java.io.File,java.lang.String) -> keyManager
    409:418:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(java.io.InputStream,java.io.InputStream,java.lang.String) -> keyManager
    431:446:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(java.security.PrivateKey,java.lang.String,java.security.cert.X509Certificate[]) -> keyManager
    460:460:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(java.security.PrivateKey,java.lang.String,java.lang.Iterable) -> keyManager
    475:482:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(javax.net.ssl.KeyManagerFactory) -> keyManager
    493:504:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder keyManager(javax.net.ssl.KeyManager) -> keyManager
    512:512:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder ciphers(java.lang.Iterable) -> ciphers
    521:523:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder ciphers(java.lang.Iterable,pro.gravit.repackage.io.netty.handler.ssl.CipherSuiteFilter) -> ciphers
    530:531:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder applicationProtocolConfig(pro.gravit.repackage.io.netty.handler.ssl.ApplicationProtocolConfig) -> applicationProtocolConfig
    539:540:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder sessionCacheSize(long) -> sessionCacheSize
    548:549:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder sessionTimeout(long) -> sessionTimeout
    556:557:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder clientAuth(pro.gravit.repackage.io.netty.handler.ssl.ClientAuth) -> clientAuth
    566:567:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder protocols(java.lang.String[]) -> protocols
    576:576:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder protocols(java.lang.Iterable) -> protocols
    583:584:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder startTls(boolean) -> startTls
    595:596:pro.gravit.repackage.io.netty.handler.ssl.SslContextBuilder enableOcsp(boolean) -> enableOcsp
    605:614:pro.gravit.repackage.io.netty.handler.ssl.SslContext build() -> build
    619:626:java.lang.Object[] toArray(java.lang.Iterable,java.lang.Object[]) -> toArray
    51:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslContextOption -> pro.gravit.repackage.io.netty.handler.ssl.SslContextOption:
# {"fileName":"SslContextOption.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ConstantPool pool -> pool
    45:45:pro.gravit.repackage.io.netty.handler.ssl.SslContextOption valueOf(java.lang.String) -> valueOf
    53:53:pro.gravit.repackage.io.netty.handler.ssl.SslContextOption valueOf(java.lang.Class,java.lang.String) -> valueOf
    60:60:boolean exists(java.lang.String) -> exists
    67:68:void <init>(int,java.lang.String) -> <init>
    76:77:void <init>(java.lang.String) -> <init>
    84:85:void validate(java.lang.Object) -> validate
    31:31:void <init>(int,java.lang.String,pro.gravit.repackage.io.netty.handler.ssl.SslContextOption$1) -> <init>
    33:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslContextOption$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslContextOption$1:
# {"fileName":"SslContextOption.java","id":"sourceFile"}
    33:33:void <init>() -> <init>
    36:36:pro.gravit.repackage.io.netty.handler.ssl.SslContextOption newConstant(int,java.lang.String) -> newConstant
    33:33:pro.gravit.repackage.io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern IGNORABLE_CLASS_IN_STACK -> IGNORABLE_CLASS_IN_STACK
    java.util.regex.Pattern IGNORABLE_ERROR_MESSAGE -> IGNORABLE_ERROR_MESSAGE
    int STATE_SENT_FIRST_MESSAGE -> STATE_SENT_FIRST_MESSAGE
    int STATE_FLUSHED_BEFORE_HANDSHAKE -> STATE_FLUSHED_BEFORE_HANDSHAKE
    int STATE_READ_DURING_HANDSHAKE -> STATE_READ_DURING_HANDSHAKE
    int STATE_HANDSHAKE_STARTED -> STATE_HANDSHAKE_STARTED
    int STATE_NEEDS_FLUSH -> STATE_NEEDS_FLUSH
    int STATE_OUTBOUND_CLOSED -> STATE_OUTBOUND_CLOSED
    int STATE_CLOSE_NOTIFY -> STATE_CLOSE_NOTIFY
    int STATE_PROCESS_TASK -> STATE_PROCESS_TASK
    int STATE_FIRE_CHANNEL_READ -> STATE_FIRE_CHANNEL_READ
    int STATE_UNWRAP_REENTRY -> STATE_UNWRAP_REENTRY
    int MAX_PLAINTEXT_LENGTH -> MAX_PLAINTEXT_LENGTH
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    javax.net.ssl.SSLEngine engine -> engine
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType engineType -> engineType
    java.util.concurrent.Executor delegatedTaskExecutor -> delegatedTaskExecutor
    boolean jdkCompatibilityMode -> jdkCompatibilityMode
    java.nio.ByteBuffer[] singleBuffer -> singleBuffer
    boolean startTls -> startTls
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner sslTaskRunnerForUnwrap -> sslTaskRunnerForUnwrap
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner sslTaskRunner -> sslTaskRunner
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue pendingUnencryptedWrites -> pendingUnencryptedWrites
    pro.gravit.repackage.io.netty.util.concurrent.Promise handshakePromise -> handshakePromise
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$LazyChannelPromise sslClosePromise -> sslClosePromise
    int packetLength -> packetLength
    short state -> state
    long handshakeTimeoutMillis -> handshakeTimeoutMillis
    long closeNotifyFlushTimeoutMillis -> closeNotifyFlushTimeoutMillis
    long closeNotifyReadTimeoutMillis -> closeNotifyReadTimeoutMillis
    int wrapDataSize -> wrapDataSize
    boolean $assertionsDisabled -> $assertionsDisabled
    416:417:void <init>(javax.net.ssl.SSLEngine) -> <init>
    427:428:void <init>(javax.net.ssl.SSLEngine,boolean) -> <init>
    438:439:void <init>(javax.net.ssl.SSLEngine,java.util.concurrent.Executor) -> <init>
    391:457:void <init>(javax.net.ssl.SSLEngine,boolean,java.util.concurrent.Executor) -> <init>
    460:460:long getHandshakeTimeoutMillis() -> getHandshakeTimeoutMillis
    464:466:void setHandshakeTimeout(long,java.util.concurrent.TimeUnit) -> setHandshakeTimeout
    469:470:void setHandshakeTimeoutMillis(long) -> setHandshakeTimeoutMillis
    494:495:void setWrapDataSize(int) -> setWrapDataSize
    502:502:long getCloseNotifyTimeoutMillis() -> getCloseNotifyTimeoutMillis
    510:511:void setCloseNotifyTimeout(long,java.util.concurrent.TimeUnit) -> setCloseNotifyTimeout
    518:519:void setCloseNotifyTimeoutMillis(long) -> setCloseNotifyTimeoutMillis
    527:527:long getCloseNotifyFlushTimeoutMillis() -> getCloseNotifyFlushTimeoutMillis
    536:537:void setCloseNotifyFlushTimeout(long,java.util.concurrent.TimeUnit) -> setCloseNotifyFlushTimeout
    543:545:void setCloseNotifyFlushTimeoutMillis(long) -> setCloseNotifyFlushTimeoutMillis
    553:553:long getCloseNotifyReadTimeoutMillis() -> getCloseNotifyReadTimeoutMillis
    562:563:void setCloseNotifyReadTimeout(long,java.util.concurrent.TimeUnit) -> setCloseNotifyReadTimeout
    569:571:void setCloseNotifyReadTimeoutMillis(long) -> setCloseNotifyReadTimeoutMillis
    577:577:javax.net.ssl.SSLEngine engine() -> engine
    586:591:java.lang.String applicationProtocol() -> applicationProtocol
    601:601:pro.gravit.repackage.io.netty.util.concurrent.Future handshakeFuture() -> handshakeFuture
    609:609:pro.gravit.repackage.io.netty.channel.ChannelFuture close() -> close
    617:617:pro.gravit.repackage.io.netty.channel.ChannelFuture close(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    627:627:pro.gravit.repackage.io.netty.channel.ChannelFuture closeOutbound() -> closeOutbound
    637:648:pro.gravit.repackage.io.netty.channel.ChannelFuture closeOutbound(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> closeOutbound
    652:661:void closeOutbound0(pro.gravit.repackage.io.netty.channel.ChannelPromise) -> closeOutbound0
    671:671:pro.gravit.repackage.io.netty.util.concurrent.Future sslCloseFuture() -> sslCloseFuture
    677:704:void handlerRemoved0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved0
    708:709:void bind(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> bind
    714:715:void connect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> connect
    719:720:void deregister(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> deregister
    725:726:void disconnect(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> disconnect
    731:732:void close(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> close
    736:741:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    744:744:java.lang.IllegalStateException newPendingWritesNullException() -> newPendingWritesNullException
    749:759:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    765:785:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    788:805:void wrapAndFlush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> wrapAndFlush
    809:906:void wrap(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,boolean) -> wrap
    915:1003:boolean wrapNonAppData(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,boolean) -> wrapNonAppData
    1008:1058:javax.net.ssl.SSLEngineResult wrap(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,javax.net.ssl.SSLEngine,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> wrap
    1063:1086:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    1090:1107:void exceptionCaught(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> exceptionCaught
    1119:1175:boolean ignoreException(java.lang.Throwable) -> ignoreException
    1191:1195:boolean isEncrypted(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> isEncrypted
    1199:1243:void decodeJdkCompatible(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decodeJdkCompatible
    1247:1251:void decodeNonJdkCompatible(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> decodeNonJdkCompatible
    1259:1277:void handleUnwrapThrowable(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> handleUnwrapThrowable
    1281:1289:void decode(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,java.util.List) -> decode
    1293:1294:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    1298:1305:void channelReadComplete0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete0
    1309:1315:void readIfNeeded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readIfNeeded
    1318:1321:void flushIfNeeded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flushIfNeeded
    1327:1327:int unwrapNonAppData(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> unwrapNonAppData
    1334:1455:int unwrap(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> unwrap
    1461:1473:boolean setHandshakeSuccessUnwrapMarkReentry() -> setHandshakeSuccessUnwrapMarkReentry
    1478:1487:void executeNotifyClosePromise(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> executeNotifyClosePromise
    1491:1501:void executeChannelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> executeChannelRead
    1504:1505:java.nio.ByteBuffer toByteBuffer(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> toByteBuffer
    1509:1509:boolean inEventLoop(java.util.concurrent.Executor) -> inEventLoop
    1520:1557:boolean runDelegatedTasks(boolean) -> runDelegatedTasks
    1562:1562:pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner getTaskRunner(boolean) -> getTaskRunner
    1566:1567:void executeDelegatedTask(boolean) -> executeDelegatedTask
    1570:1577:void executeDelegatedTask(pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner) -> executeDelegatedTask
    1829:1846:boolean setHandshakeSuccess() -> setHandshakeSuccess
    1853:1854:void setHandshakeFailure(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> setHandshakeFailure
    1863:1890:void setHandshakeFailure(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable,boolean,boolean,boolean) -> setHandshakeFailure
    1897:1905:void setHandshakeFailureTransportFailure(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> setHandshakeFailureTransportFailure
    1908:1911:void releaseAndFailAll(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> releaseAndFailAll
    1914:1923:void notifyClosePromise(java.lang.Throwable) -> notifyClosePromise
    1927:1964:void closeOutboundAndChannel(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise,boolean) -> closeOutboundAndChannel
    1967:1973:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> flush
    1977:1997:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    2000:2012:void startHandshakeProcessing(boolean) -> startHandshakeProcessing
    2018:2023:pro.gravit.repackage.io.netty.util.concurrent.Future renegotiate() -> renegotiate
    2030:2049:pro.gravit.repackage.io.netty.util.concurrent.Future renegotiate(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> renegotiate
    2053:2063:void renegotiateOnEventLoop(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> renegotiateOnEventLoop
    2072:2098:void handshake(boolean) -> handshake
    2101:2134:void applyHandshakeTimeout() -> applyHandshakeTimeout
    2137:2139:void forceFlush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> forceFlush
    2142:2145:void setOpensslEngineSocketFd(pro.gravit.repackage.io.netty.channel.Channel) -> setOpensslEngineSocketFd
    2152:2157:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    2162:2236:void safeClose(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> safeClose
    2245:2246:void addCloseListener(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> addCloseListener
    2253:2257:pro.gravit.repackage.io.netty.buffer.ByteBuf allocate(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,int) -> allocate
    2266:2266:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateOutNetBuf(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,int,int) -> allocateOutNetBuf
    2270:2270:boolean isStateSet(int) -> isStateSet
    2274:2275:void setState(int) -> setState
    2278:2279:void clearState(int) -> clearState
    2335:2348:boolean attemptCopyToCumulation(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> attemptCopyToCumulation
    169:169:javax.net.ssl.SSLEngine access$100(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> access$100
    169:169:java.nio.ByteBuffer[] access$200(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> access$200
    169:169:java.nio.ByteBuffer access$300(pro.gravit.repackage.io.netty.buffer.ByteBuf,int,int) -> access$300
    169:169:void access$500(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$500
    169:169:void access$600(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> access$600
    169:169:void access$700(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,java.lang.Throwable) -> access$700
    169:169:pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner access$800(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,boolean) -> access$800
    169:169:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$900(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> access$900
    169:169:void access$1000(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> access$1000
    169:169:void access$1100(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> access$1100
    169:169:void access$1200(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> access$1200
    169:169:void access$1300(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> access$1300
    169:169:void access$1400(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,int) -> access$1400
    169:169:void access$1500(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner) -> access$1500
    169:169:boolean access$1600(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> access$1600
    169:169:void access$1700(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,boolean) -> access$1700
    169:169:int access$1800(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> access$1800
    169:169:boolean access$1900(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,boolean) -> access$1900
    169:169:void access$2200(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> access$2200
    169:169:void access$2300(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable) -> access$2300
    169:169:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$2400() -> access$2400
    169:169:void access$2500(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> access$2500
    169:169:long access$2600(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> access$2600
    169:169:pro.gravit.repackage.io.netty.handler.ssl.SslHandler$LazyChannelPromise access$2700(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> access$2700
    169:169:boolean access$2800(pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> access$2800
    169:169:pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType access$2900(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> access$2900
    169:174:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$1:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    641:641:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    644:645:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$timeoutFuture -> val$timeoutFuture
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    2191:2191:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    2194:2234:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    2191:2191:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10$1:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    long val$closeNotifyReadTimeout -> val$closeNotifyReadTimeout
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10 this$1 -> this$1
    2206:2206:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10,long) -> <init>
    2209:2217:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10$2 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10$2:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$closeNotifyReadTimeoutFuture -> val$closeNotifyReadTimeoutFuture
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10 this$1 -> this$1
    2224:2224:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler$10,pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    2227:2231:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$11 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$11:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    int[] $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus -> $SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus
    866:866:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$2 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$2:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    929:929:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    932:936:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    929:929:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$3 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$3:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    1478:1478:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> <init>
    1481:1482:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$4 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$4:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.buffer.ByteBuf val$decodedOut -> val$decodedOut
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    1491:1491:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> <init>
    1494:1495:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$5 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$5:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    1956:1956:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    1959:1960:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$6 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$6:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    2039:2039:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    2042:2043:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$7 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$7:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$localHandshakePromise -> val$localHandshakePromise
    long val$handshakeTimeoutMillis -> val$handshakeTimeoutMillis
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    2109:2109:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.util.concurrent.Promise,long) -> <init>
    2112:2124:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$8 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$8:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$timeoutFuture -> val$timeoutFuture
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    2128:2128:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    2131:2132:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$9 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$9:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelFuture val$flushFuture -> val$flushFuture
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise val$promise -> val$promise
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    2172:2172:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    2176:2181:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$AsyncTaskCompletionHandler -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$AsyncTaskCompletionHandler:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    boolean inUnwrap -> inUnwrap
    boolean didRun -> didRun
    boolean resumeLater -> resumeLater
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    1584:1586:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,boolean) -> <init>
    1590:1594:void run() -> run
    1597:1601:boolean resumeLater() -> resumeLater
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$LazyChannelPromise -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$LazyChannelPromise:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    2351:2351:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler) -> <init>
    2355:2358:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    2363:2373:void checkDeadLock() -> checkDeadLock
    2351:2351:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.handler.ssl.SslHandler$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType TCNATIVE -> TCNATIVE
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType CONSCRYPT -> CONSCRYPT
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType JDK -> JDK
    boolean wantsDirectBuffer -> wantsDirectBuffer
    pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator cumulator -> cumulator
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType[] $VALUES -> $VALUES
    201:201:pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType[] values() -> values
    201:201:pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType valueOf(java.lang.String) -> valueOf
    341:341:pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType forEngine(javax.net.ssl.SSLEngine) -> forEngine
    345:348:void <init>(java.lang.String,int,boolean,pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    javax.net.ssl.SSLEngineResult unwrap(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unwrap
    int calculatePendingData(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,int) -> calculatePendingData
    boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> jdkCompatibilityMode
    pro.gravit.repackage.io.netty.buffer.ByteBuf allocateWrapBuffer(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> allocateWrapBuffer
    201:201:void <init>(java.lang.String,int,boolean,pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator,pro.gravit.repackage.io.netty.handler.ssl.SslHandler$1) -> <init>
    201:290:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType$1:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    202:202:void <init>(java.lang.String,int,boolean,pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    205:226:javax.net.ssl.SSLEngineResult unwrap(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unwrap
    232:233:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateWrapBuffer(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> allocateWrapBuffer
    238:239:int calculatePendingData(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,int) -> calculatePendingData
    244:244:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> jdkCompatibilityMode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType$2 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType$2:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    247:247:void <init>(java.lang.String,int,boolean,pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    250:270:javax.net.ssl.SSLEngineResult unwrap(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unwrap
    276:277:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateWrapBuffer(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> allocateWrapBuffer
    282:282:int calculatePendingData(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,int) -> calculatePendingData
    287:287:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> jdkCompatibilityMode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType$3 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslEngineType$3:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    290:290:void <init>(java.lang.String,int,boolean,pro.gravit.repackage.io.netty.handler.codec.ByteToMessageDecoder$Cumulator) -> <init>
    293:314:javax.net.ssl.SSLEngineResult unwrap(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.buffer.ByteBuf,int,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> unwrap
    326:326:pro.gravit.repackage.io.netty.buffer.ByteBuf allocateWrapBuffer(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,int,int) -> allocateWrapBuffer
    331:331:int calculatePendingData(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,int) -> calculatePendingData
    336:336:boolean jdkCompatibilityMode(javax.net.ssl.SSLEngine) -> jdkCompatibilityMode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    2288:2290:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,pro.gravit.repackage.io.netty.channel.Channel,int) -> <init>
    2294:2305:pro.gravit.repackage.io.netty.buffer.ByteBuf compose(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> compose
    2310:2325:pro.gravit.repackage.io.netty.buffer.ByteBuf composeFirst(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> composeFirst
    2330:2330:pro.gravit.repackage.io.netty.buffer.ByteBuf removeEmptyValue() -> removeEmptyValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    boolean inUnwrap -> inUnwrap
    java.lang.Runnable runCompleteTask -> runCompleteTask
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler this$0 -> this$0
    1611:1620:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler,boolean) -> <init>
    1624:1638:void taskError(java.lang.Throwable) -> taskError
    1643:1647:void safeExceptionCaught(java.lang.Throwable) -> safeExceptionCaught
    1650:1656:java.lang.Throwable wrapIfNeeded(java.lang.Throwable) -> wrapIfNeeded
    1661:1670:void tryDecodeAgain() -> tryDecodeAgain
    1677:1756:void resumeOnEventExecutor() -> resumeOnEventExecutor
    1759:1773:void runComplete() -> runComplete
    1778:1793:void run() -> run
    1796:1816:void handleException(java.lang.Throwable) -> handleException
    1609:1609:void access$2000(pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner) -> access$2000
    1609:1609:void access$2100(pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner,java.lang.Throwable) -> access$2100
    1609:1609:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner$1:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner this$1 -> this$1
    1611:1611:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner) -> <init>
    1614:1615:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner$2 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner$2:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner this$1 -> this$1
    1767:1767:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner) -> <init>
    1770:1771:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner$3 -> pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner$3:
# {"fileName":"SslHandler.java","id":"sourceFile"}
    java.lang.Throwable val$cause -> val$cause
    pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner this$1 -> this$1
    1802:1802:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslHandler$SslTasksRunner,java.lang.Throwable) -> <init>
    1805:1807:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandshakeCompletionEvent -> pro.gravit.repackage.io.netty.handler.ssl.SslHandshakeCompletionEvent:
# {"fileName":"SslHandshakeCompletionEvent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslHandshakeCompletionEvent SUCCESS -> SUCCESS
    30:30:void <init>() -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
    25:25:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslHandshakeTimeoutException -> pro.gravit.repackage.io.netty.handler.ssl.SslHandshakeTimeoutException:
# {"fileName":"SslHandshakeTimeoutException.java","id":"sourceFile"}
    26:27:void <init>(java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslMasterKeyHandler -> pro.gravit.repackage.io.netty.handler.ssl.SslMasterKeyHandler:
# {"fileName":"SslMasterKeyHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.Class SSL_SESSIONIMPL_CLASS -> SSL_SESSIONIMPL_CLASS
    java.lang.reflect.Field SSL_SESSIONIMPL_MASTER_SECRET_FIELD -> SSL_SESSIONIMPL_MASTER_SECRET_FIELD
    java.lang.String SYSTEM_PROP_KEY -> SYSTEM_PROP_KEY
    java.lang.Throwable UNAVAILABILITY_CAUSE -> UNAVAILABILITY_CAUSE
    88:89:void <init>() -> <init>
    96:100:void ensureSunSslEngineAvailability() -> ensureSunSslEngineAvailability
    108:108:java.lang.Throwable sunSslEngineUnavailabilityCause() -> sunSslEngineUnavailabilityCause
    114:114:boolean isSunSslEngineAvailable() -> isSunSslEngineAvailable
    void accept(javax.crypto.SecretKey,javax.net.ssl.SSLSession) -> accept
    127:149:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    159:159:boolean masterKeyHandlerEnabled() -> masterKeyHandlerEnabled
    170:170:pro.gravit.repackage.io.netty.handler.ssl.SslMasterKeyHandler newWireSharkSslMasterKeyHandler() -> newWireSharkSslMasterKeyHandler
    40:83:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslMasterKeyHandler$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslMasterKeyHandler$1:
# {"fileName":"SslMasterKeyHandler.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslMasterKeyHandler$WiresharkSslMasterKeyHandler -> pro.gravit.repackage.io.netty.handler.ssl.SslMasterKeyHandler$WiresharkSslMasterKeyHandler:
# {"fileName":"SslMasterKeyHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger wireshark_logger -> wireshark_logger
    180:180:void <init>() -> <init>
    187:194:void accept(javax.crypto.SecretKey,javax.net.ssl.SSLSession) -> accept
    180:180:void <init>(pro.gravit.repackage.io.netty.handler.ssl.SslMasterKeyHandler$1) -> <init>
    182:183:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslProtocols -> pro.gravit.repackage.io.netty.handler.ssl.SslProtocols:
# {"fileName":"SslProtocols.java","id":"sourceFile"}
    java.lang.String SSL_v2_HELLO -> SSL_v2_HELLO
    java.lang.String SSL_v2 -> SSL_v2
    java.lang.String SSL_v3 -> SSL_v3
    java.lang.String TLS_v1 -> TLS_v1
    java.lang.String TLS_v1_1 -> TLS_v1_1
    java.lang.String TLS_v1_2 -> TLS_v1_2
    java.lang.String TLS_v1_3 -> TLS_v1_3
    73:75:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslProvider -> pro.gravit.repackage.io.netty.handler.ssl.SslProvider:
# {"fileName":"SslProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SslProvider JDK -> JDK
    pro.gravit.repackage.io.netty.handler.ssl.SslProvider OPENSSL -> OPENSSL
    pro.gravit.repackage.io.netty.handler.ssl.SslProvider OPENSSL_REFCNT -> OPENSSL_REFCNT
    pro.gravit.repackage.io.netty.handler.ssl.SslProvider[] $VALUES -> $VALUES
    27:27:pro.gravit.repackage.io.netty.handler.ssl.SslProvider[] values() -> values
    27:27:pro.gravit.repackage.io.netty.handler.ssl.SslProvider valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    48:55:boolean isAlpnSupported(pro.gravit.repackage.io.netty.handler.ssl.SslProvider) -> isAlpnSupported
    64:64:boolean isTlsv13Supported(pro.gravit.repackage.io.netty.handler.ssl.SslProvider) -> isTlsv13Supported
    72:79:boolean isTlsv13Supported(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.security.Provider) -> isTlsv13Supported
    88:95:boolean isTlsv13EnabledByDefault(pro.gravit.repackage.io.netty.handler.ssl.SslProvider,java.security.Provider) -> isTlsv13EnabledByDefault
    27:39:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslProvider$1 -> pro.gravit.repackage.io.netty.handler.ssl.SslProvider$1:
# {"fileName":"SslProvider.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$ssl$SslProvider -> $SwitchMap$io$netty$handler$ssl$SslProvider
    48:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SslUtils -> pro.gravit.repackage.io.netty.handler.ssl.SslUtils:
# {"fileName":"SslUtils.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Set TLSV13_CIPHERS -> TLSV13_CIPHERS
    int GMSSL_PROTOCOL_VERSION -> GMSSL_PROTOCOL_VERSION
    java.lang.String INVALID_CIPHER -> INVALID_CIPHER
    int SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC -> SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC
    int SSL_CONTENT_TYPE_ALERT -> SSL_CONTENT_TYPE_ALERT
    int SSL_CONTENT_TYPE_HANDSHAKE -> SSL_CONTENT_TYPE_HANDSHAKE
    int SSL_CONTENT_TYPE_APPLICATION_DATA -> SSL_CONTENT_TYPE_APPLICATION_DATA
    int SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT -> SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT
    int SSL_RECORD_HEADER_LENGTH -> SSL_RECORD_HEADER_LENGTH
    int NOT_ENOUGH_DATA -> NOT_ENOUGH_DATA
    int NOT_ENCRYPTED -> NOT_ENCRYPTED
    java.lang.String[] DEFAULT_CIPHER_SUITES -> DEFAULT_CIPHER_SUITES
    java.lang.String[] DEFAULT_TLSV13_CIPHER_SUITES -> DEFAULT_TLSV13_CIPHER_SUITES
    java.lang.String[] TLSV13_CIPHER_SUITES -> TLSV13_CIPHER_SUITES
    boolean TLSV1_3_JDK_SUPPORTED -> TLSV1_3_JDK_SUPPORTED
    boolean TLSV1_3_JDK_DEFAULT_ENABLED -> TLSV1_3_JDK_DEFAULT_ENABLED
    146:149:boolean isTLSv13SupportedByJDK(java.security.Provider) -> isTLSv13SupportedByJDK
    154:159:boolean isTLSv13SupportedByJDK0(java.security.Provider) -> isTLSv13SupportedByJDK0
    167:170:boolean isTLSv13EnabledByJDK(java.security.Provider) -> isTLSv13EnabledByJDK
    175:180:boolean isTLSv13EnabledByJDK0(java.security.Provider) -> isTLSv13EnabledByJDK0
    187:193:javax.net.ssl.SSLContext newInitContext(java.security.Provider) -> newInitContext
    199:205:javax.net.ssl.SSLContext getSSLContext(java.lang.String) -> getSSLContext
    209:209:java.lang.String getTlsVersion() -> getTlsVersion
    213:218:boolean arrayContains(java.lang.String[],java.lang.String) -> arrayContains
    225:230:void addIfSupported(java.util.Set,java.util.List,java.lang.String[]) -> addIfSupported
    233:241:void useFallbackCiphersIfDefaultIsEmpty(java.util.List,java.lang.Iterable) -> useFallbackCiphersIfDefaultIsEmpty
    244:245:void useFallbackCiphersIfDefaultIsEmpty(java.util.List,java.lang.String[]) -> useFallbackCiphersIfDefaultIsEmpty
    251:255:javax.net.ssl.SSLHandshakeException toSSLHandshakeException(java.lang.Throwable) -> toSSLHandshakeException
    276:324:int getEncryptedPacketLength(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> getEncryptedPacketLength
    330:334:int unsignedShortBE(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> unsignedShortBE
    340:344:short shortBE(pro.gravit.repackage.io.netty.buffer.ByteBuf,int) -> shortBE
    348:348:short unsignedByte(byte) -> unsignedByte
    353:353:int unsignedShortBE(java.nio.ByteBuffer,int) -> unsignedShortBE
    358:359:short shortBE(java.nio.ByteBuffer,int) -> shortBE
    363:383:int getEncryptedPacketLength(java.nio.ByteBuffer[],int) -> getEncryptedPacketLength
    387:435:int getEncryptedPacketLength(java.nio.ByteBuffer) -> getEncryptedPacketLength
    441:446:void handleHandshakeFailure(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Throwable,boolean) -> handleHandshakeFailure
    452:455:void zeroout(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> zeroout
    461:463:void zerooutAndRelease(pro.gravit.repackage.io.netty.buffer.ByteBuf) -> zerooutAndRelease
    471:474:pro.gravit.repackage.io.netty.buffer.ByteBuf toBase64(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator,pro.gravit.repackage.io.netty.buffer.ByteBuf) -> toBase64
    482:488:boolean isValidHostNameForSNI(java.lang.String) -> isValidHostNameForSNI
    496:496:boolean isTLSv13Cipher(java.lang.String) -> isTLSv13Cipher
    499:500:void <init>() -> <init>
    51:140:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.SupportedCipherSuiteFilter -> pro.gravit.repackage.io.netty.handler.ssl.SupportedCipherSuiteFilter:
# {"fileName":"SupportedCipherSuiteFilter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.SupportedCipherSuiteFilter INSTANCE -> INSTANCE
    31:31:void <init>() -> <init>
    36:54:java.lang.String[] filterCipherSuites(java.lang.Iterable,java.util.List,java.util.Set) -> filterCipherSuites
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.ocsp.OcspClientHandler -> pro.gravit.repackage.io.netty.handler.ssl.ocsp.OcspClientHandler:
# {"fileName":"OcspClientHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine engine -> engine
    39:41:void <init>(pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> <init>
    boolean verify(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.ssl.ReferenceCountedOpenSslEngine) -> verify
    50:60:void userEventTriggered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> userEventTriggered
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator -> pro.gravit.repackage.io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator:
# {"fileName":"BouncyCastleSelfSignedCertGenerator.java","id":"sourceFile"}
    java.security.Provider PROVIDER -> PROVIDER
    47:60:java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date,java.lang.String) -> generate
    63:63:void <init>() -> <init>
    43:43:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory -> pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory:
# {"fileName":"FingerprintTrustManagerFactory.java","id":"sourceFile"}
    java.util.regex.Pattern FINGERPRINT_PATTERN -> FINGERPRINT_PATTERN
    java.util.regex.Pattern FINGERPRINT_STRIP_PATTERN -> FINGERPRINT_STRIP_PATTERN
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal tlmd -> tlmd
    javax.net.ssl.TrustManager tm -> tm
    byte[][] fingerprints -> fingerprints
    94:94:pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder builder(java.lang.String) -> builder
    153:154:void <init>(java.lang.Iterable) -> <init>
    167:168:void <init>(java.lang.String[]) -> <init>
    181:182:void <init>(byte[][]) -> <init>
    99:235:void <init>(java.lang.String,byte[][]) -> <init>
    238:254:byte[][] toFingerprintArray(java.lang.Iterable) -> toFingerprintArray
    258:258:void engineInit(java.security.KeyStore) -> engineInit
    261:261:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    265:265:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    82:82:byte[][] access$000(pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory) -> access$000
    82:82:pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal access$100(pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory) -> access$100
    84:85:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1 -> pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1:
# {"fileName":"FingerprintTrustManagerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory this$0 -> this$0
    99:99:void <init>(pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory) -> <init>
    103:104:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    108:109:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    112:126:void checkTrusted(java.lang.String,java.security.cert.X509Certificate[]) -> checkTrusted
    129:131:byte[] fingerprint(java.security.cert.X509Certificate) -> fingerprint
    136:136:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$2 -> pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$2:
# {"fileName":"FingerprintTrustManagerFactory.java","id":"sourceFile"}
    java.lang.String val$algorithm -> val$algorithm
    pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory this$0 -> this$0
    221:221:void <init>(pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory,java.lang.String) -> <init>
    226:229:java.security.MessageDigest initialValue() -> initialValue
    221:221:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder -> pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder:
# {"fileName":"FingerprintTrustManagerFactoryBuilder.java","id":"sourceFile"}
    java.lang.String algorithm -> algorithm
    java.util.List fingerprints -> fingerprints
    39:48:void <init>(java.lang.String) -> <init>
    57:57:pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder fingerprints(java.lang.CharSequence[]) -> fingerprints
    67:72:pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder fingerprints(java.lang.Iterable) -> fingerprints
    81:85:pro.gravit.repackage.io.netty.handler.ssl.util.FingerprintTrustManagerFactory build() -> build
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.InsecureTrustManagerFactory -> pro.gravit.repackage.io.netty.handler.ssl.util.InsecureTrustManagerFactory:
# {"fileName":"InsecureTrustManagerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    javax.net.ssl.TrustManagerFactory INSTANCE -> INSTANCE
    javax.net.ssl.TrustManager tm -> tm
    65:65:void <init>() -> <init>
    68:68:void engineInit(java.security.KeyStore) -> engineInit
    71:71:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    75:75:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    38:38:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    40:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.InsecureTrustManagerFactory$1 -> pro.gravit.repackage.io.netty.handler.ssl.util.InsecureTrustManagerFactory$1:
# {"fileName":"InsecureTrustManagerFactory.java","id":"sourceFile"}
    44:44:void <init>() -> <init>
    47:50:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    54:57:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    61:61:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.KeyManagerFactoryWrapper -> pro.gravit.repackage.io.netty.handler.ssl.util.KeyManagerFactoryWrapper:
# {"fileName":"KeyManagerFactoryWrapper.java","id":"sourceFile"}
    javax.net.ssl.KeyManager km -> km
    28:30:void <init>(javax.net.ssl.KeyManager) -> <init>
    33:33:void engineInit(java.security.KeyStore,char[]) -> engineInit
    37:37:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    41:41:javax.net.ssl.KeyManager[] engineGetKeyManagers() -> engineGetKeyManagers
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.LazyJavaxX509Certificate -> pro.gravit.repackage.io.netty.handler.ssl.util.LazyJavaxX509Certificate:
# {"fileName":"LazyJavaxX509Certificate.java","id":"sourceFile"}
    byte[] bytes -> bytes
    javax.security.cert.X509Certificate wrapped -> wrapped
    40:42:void <init>(byte[]) -> <init>
    46:47:void checkValidity() -> checkValidity
    51:52:void checkValidity(java.util.Date) -> checkValidity
    56:56:int getVersion() -> getVersion
    61:61:java.math.BigInteger getSerialNumber() -> getSerialNumber
    66:66:java.security.Principal getIssuerDN() -> getIssuerDN
    71:71:java.security.Principal getSubjectDN() -> getSubjectDN
    76:76:java.util.Date getNotBefore() -> getNotBefore
    81:81:java.util.Date getNotAfter() -> getNotAfter
    86:86:java.lang.String getSigAlgName() -> getSigAlgName
    91:91:java.lang.String getSigAlgOID() -> getSigAlgOID
    96:96:byte[] getSigAlgParams() -> getSigAlgParams
    101:101:byte[] getEncoded() -> getEncoded
    109:109:byte[] getBytes() -> getBytes
    116:117:void verify(java.security.PublicKey) -> verify
    123:124:void verify(java.security.PublicKey,java.lang.String) -> verify
    128:128:java.lang.String toString() -> toString
    133:133:java.security.PublicKey getPublicKey() -> getPublicKey
    137:145:javax.security.cert.X509Certificate unwrap() -> unwrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.LazyX509Certificate -> pro.gravit.repackage.io.netty.handler.ssl.util.LazyX509Certificate:
# {"fileName":"LazyX509Certificate.java","id":"sourceFile"}
    java.security.cert.CertificateFactory X509_CERT_FACTORY -> X509_CERT_FACTORY
    byte[] bytes -> bytes
    java.security.cert.X509Certificate wrapped -> wrapped
    60:62:void <init>(byte[]) -> <init>
    66:67:void checkValidity() -> checkValidity
    71:72:void checkValidity(java.util.Date) -> checkValidity
    76:76:javax.security.auth.x500.X500Principal getIssuerX500Principal() -> getIssuerX500Principal
    81:81:javax.security.auth.x500.X500Principal getSubjectX500Principal() -> getSubjectX500Principal
    86:86:java.util.List getExtendedKeyUsage() -> getExtendedKeyUsage
    91:91:java.util.Collection getSubjectAlternativeNames() -> getSubjectAlternativeNames
    96:96:java.util.Collection getIssuerAlternativeNames() -> getIssuerAlternativeNames
    103:104:void verify(java.security.PublicKey,java.security.Provider) -> verify
    108:108:int getVersion() -> getVersion
    113:113:java.math.BigInteger getSerialNumber() -> getSerialNumber
    118:118:java.security.Principal getIssuerDN() -> getIssuerDN
    123:123:java.security.Principal getSubjectDN() -> getSubjectDN
    128:128:java.util.Date getNotBefore() -> getNotBefore
    133:133:java.util.Date getNotAfter() -> getNotAfter
    138:138:byte[] getTBSCertificate() -> getTBSCertificate
    143:143:byte[] getSignature() -> getSignature
    148:148:java.lang.String getSigAlgName() -> getSigAlgName
    153:153:java.lang.String getSigAlgOID() -> getSigAlgOID
    158:158:byte[] getSigAlgParams() -> getSigAlgParams
    163:163:boolean[] getIssuerUniqueID() -> getIssuerUniqueID
    168:168:boolean[] getSubjectUniqueID() -> getSubjectUniqueID
    173:173:boolean[] getKeyUsage() -> getKeyUsage
    178:178:int getBasicConstraints() -> getBasicConstraints
    183:183:byte[] getEncoded() -> getEncoded
    190:191:void verify(java.security.PublicKey) -> verify
    197:198:void verify(java.security.PublicKey,java.lang.String) -> verify
    202:202:java.lang.String toString() -> toString
    207:207:java.security.PublicKey getPublicKey() -> getPublicKey
    212:212:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    217:217:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    222:222:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    227:227:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    231:240:java.security.cert.X509Certificate unwrap() -> unwrap
    48:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator -> pro.gravit.repackage.io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator:
# {"fileName":"OpenJdkSelfSignedCertGenerator.java","id":"sourceFile"}
    49:82:java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date,java.lang.String) -> generate
    85:85:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SelfSignedCertificate -> pro.gravit.repackage.io.netty.handler.ssl.util.SelfSignedCertificate:
# {"fileName":"SelfSignedCertificate.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Date DEFAULT_NOT_BEFORE -> DEFAULT_NOT_BEFORE
    java.util.Date DEFAULT_NOT_AFTER -> DEFAULT_NOT_AFTER
    int DEFAULT_KEY_LENGTH_BITS -> DEFAULT_KEY_LENGTH_BITS
    java.io.File certificate -> certificate
    java.io.File privateKey -> privateKey
    java.security.cert.X509Certificate cert -> cert
    java.security.PrivateKey key -> key
    90:91:void <init>() -> <init>
    102:103:void <init>(java.util.Date,java.util.Date) -> <init>
    115:116:void <init>(java.util.Date,java.util.Date,java.lang.String,int) -> <init>
    125:126:void <init>(java.lang.String) -> <init>
    136:137:void <init>(java.lang.String,java.lang.String,int) -> <init>
    150:151:void <init>(java.lang.String,java.util.Date,java.util.Date) -> <init>
    166:167:void <init>(java.lang.String,java.util.Date,java.util.Date,java.lang.String,int) -> <init>
    179:180:void <init>(java.lang.String,java.security.SecureRandom,int) -> <init>
    192:193:void <init>(java.lang.String,java.security.SecureRandom,java.lang.String,int) -> <init>
    207:208:void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date) -> <init>
    221:277:void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date,java.lang.String) -> <init>
    283:283:java.io.File certificate() -> certificate
    290:290:java.io.File privateKey() -> privateKey
    297:297:java.security.cert.X509Certificate cert() -> cert
    304:304:java.security.PrivateKey key() -> key
    311:313:void delete() -> delete
    318:384:java.lang.String[] newSelfSignedCertificate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate) -> newSelfSignedCertificate
    388:393:void safeDelete(java.io.File) -> safeDelete
    397:403:void safeClose(java.io.File,java.io.OutputStream) -> safeClose
    63:78:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory -> pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory:
# {"fileName":"SimpleKeyManagerFactory.java","id":"sourceFile"}
    java.security.Provider PROVIDER -> PROVIDER
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal CURRENT_SPI -> CURRENT_SPI
    64:65:void <init>() -> <init>
    73:76:void <init>(java.lang.String) -> <init>
    void engineInit(java.security.KeyStore,char[]) -> engineInit
    void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    javax.net.ssl.KeyManager[] engineGetKeyManagers() -> engineGetKeyManagers
    40:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory$1 -> pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory$1:
# {"fileName":"SimpleKeyManagerFactory.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    40:40:void <init>(java.lang.String,double,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory$2 -> pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory$2:
# {"fileName":"SimpleKeyManagerFactory.java","id":"sourceFile"}
    53:53:void <init>() -> <init>
    56:56:pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi initialValue() -> initialValue
    53:53:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi -> pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi:
# {"fileName":"SimpleKeyManagerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory parent -> parent
    javax.net.ssl.KeyManager[] keyManagers -> keyManagers
    99:99:void <init>() -> <init>
    105:106:void init(pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory) -> init
    111:117:void engineInit(java.security.KeyStore,char[]) -> engineInit
    123:129:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    133:141:javax.net.ssl.KeyManager[] engineGetKeyManagers() -> engineGetKeyManagers
    146:152:void wrapIfNeeded(javax.net.ssl.KeyManager[]) -> wrapIfNeeded
    99:99:void <init>(pro.gravit.repackage.io.netty.handler.ssl.util.SimpleKeyManagerFactory$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory -> pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory:
# {"fileName":"SimpleTrustManagerFactory.java","id":"sourceFile"}
    java.security.Provider PROVIDER -> PROVIDER
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal CURRENT_SPI -> CURRENT_SPI
    64:65:void <init>() -> <init>
    73:78:void <init>(java.lang.String) -> <init>
    void engineInit(java.security.KeyStore) -> engineInit
    void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    40:52:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory$1 -> pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory$1:
# {"fileName":"SimpleTrustManagerFactory.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    40:40:void <init>(java.lang.String,double,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory$2 -> pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory$2:
# {"fileName":"SimpleTrustManagerFactory.java","id":"sourceFile"}
    53:53:void <init>() -> <init>
    56:56:pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi initialValue() -> initialValue
    53:53:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi -> pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi:
# {"fileName":"SimpleTrustManagerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory parent -> parent
    javax.net.ssl.TrustManager[] trustManagers -> trustManagers
    101:101:void <init>() -> <init>
    107:108:void init(pro.gravit.repackage.io.netty.handler.ssl.util.SimpleTrustManagerFactory) -> init
    113:119:void engineInit(java.security.KeyStore) -> engineInit
    125:131:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    135:143:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    148:154:void wrapIfNeeded(javax.net.ssl.TrustManager[]) -> wrapIfNeeded
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.ThreadLocalInsecureRandom -> pro.gravit.repackage.io.netty.handler.ssl.util.ThreadLocalInsecureRandom:
# {"fileName":"ThreadLocalInsecureRandom.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.security.SecureRandom INSTANCE -> INSTANCE
    35:35:java.security.SecureRandom current() -> current
    38:38:void <init>() -> <init>
    42:42:java.lang.String getAlgorithm() -> getAlgorithm
    46:46:void setSeed(byte[]) -> setSeed
    49:49:void setSeed(long) -> setSeed
    53:54:void nextBytes(byte[]) -> nextBytes
    58:60:byte[] generateSeed(int) -> generateSeed
    65:65:int nextInt() -> nextInt
    70:70:int nextInt(int) -> nextInt
    75:75:boolean nextBoolean() -> nextBoolean
    80:80:long nextLong() -> nextLong
    85:85:float nextFloat() -> nextFloat
    90:90:double nextDouble() -> nextDouble
    95:95:double nextGaussian() -> nextGaussian
    99:99:java.util.Random random() -> random
    32:32:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.TrustManagerFactoryWrapper -> pro.gravit.repackage.io.netty.handler.ssl.util.TrustManagerFactoryWrapper:
# {"fileName":"TrustManagerFactoryWrapper.java","id":"sourceFile"}
    javax.net.ssl.TrustManager tm -> tm
    28:30:void <init>(javax.net.ssl.TrustManager) -> <init>
    33:33:void engineInit(java.security.KeyStore) -> engineInit
    37:37:void engineInit(javax.net.ssl.ManagerFactoryParameters) -> engineInit
    41:41:javax.net.ssl.TrustManager[] engineGetTrustManagers() -> engineGetTrustManagers
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.X509KeyManagerWrapper -> pro.gravit.repackage.io.netty.handler.ssl.util.X509KeyManagerWrapper:
# {"fileName":"X509KeyManagerWrapper.java","id":"sourceFile"}
    javax.net.ssl.X509KeyManager delegate -> delegate
    35:37:void <init>(javax.net.ssl.X509KeyManager) -> <init>
    41:41:java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    46:46:java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    51:51:java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
    56:56:java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    61:61:java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    66:66:java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
    71:71:java.lang.String chooseEngineClientAlias(java.lang.String[],java.security.Principal[],javax.net.ssl.SSLEngine) -> chooseEngineClientAlias
    76:76:java.lang.String chooseEngineServerAlias(java.lang.String,java.security.Principal[],javax.net.ssl.SSLEngine) -> chooseEngineServerAlias
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.ssl.util.X509TrustManagerWrapper -> pro.gravit.repackage.io.netty.handler.ssl.util.X509TrustManagerWrapper:
# {"fileName":"X509TrustManagerWrapper.java","id":"sourceFile"}
    javax.net.ssl.X509TrustManager delegate -> delegate
    34:36:void <init>(javax.net.ssl.X509TrustManager) -> <init>
    40:41:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    46:47:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket) -> checkClientTrusted
    52:53:void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine) -> checkClientTrusted
    57:58:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    63:64:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.net.Socket) -> checkServerTrusted
    69:70:void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,javax.net.ssl.SSLEngine) -> checkServerTrusted
    74:74:java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedFile -> pro.gravit.repackage.io.netty.handler.stream.ChunkedFile:
# {"fileName":"ChunkedFile.java","id":"sourceFile"}
    java.io.RandomAccessFile file -> file
    long startOffset -> startOffset
    long endOffset -> endOffset
    int chunkSize -> chunkSize
    long offset -> offset
    47:48:void <init>(java.io.File) -> <init>
    57:58:void <init>(java.io.File,int) -> <init>
    64:65:void <init>(java.io.RandomAccessFile) -> <init>
    74:75:void <init>(java.io.RandomAccessFile,int) -> <init>
    85:97:void <init>(java.io.RandomAccessFile,long,long,int) -> <init>
    103:103:long startOffset() -> startOffset
    110:110:long endOffset() -> endOffset
    117:117:long currentOffset() -> currentOffset
    122:122:boolean isEndOfInput() -> isEndOfInput
    127:128:void close() -> close
    133:133:pro.gravit.repackage.io.netty.buffer.ByteBuf readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    138:158:pro.gravit.repackage.io.netty.buffer.ByteBuf readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    163:163:long length() -> length
    168:168:long progress() -> progress
    35:35:java.lang.Object readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    35:35:java.lang.Object readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedInput -> pro.gravit.repackage.io.netty.handler.stream.ChunkedInput:
# {"fileName":"ChunkedInput.java","id":"sourceFile"}
    boolean isEndOfInput() -> isEndOfInput
    void close() -> close
    java.lang.Object readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    java.lang.Object readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    long length() -> length
    long progress() -> progress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedNioFile -> pro.gravit.repackage.io.netty.handler.stream.ChunkedNioFile:
# {"fileName":"ChunkedNioFile.java","id":"sourceFile"}
    java.nio.channels.FileChannel in -> in
    long startOffset -> startOffset
    long endOffset -> endOffset
    int chunkSize -> chunkSize
    long offset -> offset
    50:51:void <init>(java.io.File) -> <init>
    60:61:void <init>(java.io.File,int) -> <init>
    67:68:void <init>(java.nio.channels.FileChannel) -> <init>
    77:78:void <init>(java.nio.channels.FileChannel,int) -> <init>
    89:101:void <init>(java.nio.channels.FileChannel,long,long,int) -> <init>
    107:107:long startOffset() -> startOffset
    114:114:long endOffset() -> endOffset
    121:121:long currentOffset() -> currentOffset
    126:126:boolean isEndOfInput() -> isEndOfInput
    131:132:void close() -> close
    137:137:pro.gravit.repackage.io.netty.buffer.ByteBuf readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    142:169:pro.gravit.repackage.io.netty.buffer.ByteBuf readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    174:174:long length() -> length
    179:179:long progress() -> progress
    38:38:java.lang.Object readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    38:38:java.lang.Object readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedNioStream -> pro.gravit.repackage.io.netty.handler.stream.ChunkedNioStream:
# {"fileName":"ChunkedNioStream.java","id":"sourceFile"}
    java.nio.channels.ReadableByteChannel in -> in
    int chunkSize -> chunkSize
    long offset -> offset
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    49:50:void <init>(java.nio.channels.ReadableByteChannel) -> <init>
    58:62:void <init>(java.nio.channels.ReadableByteChannel,int) -> <init>
    68:68:long transferredBytes() -> transferredBytes
    73:87:boolean isEndOfInput() -> isEndOfInput
    92:93:void close() -> close
    98:98:pro.gravit.repackage.io.netty.buffer.ByteBuf readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    103:131:pro.gravit.repackage.io.netty.buffer.ByteBuf readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    136:136:long length() -> length
    141:141:long progress() -> progress
    33:33:java.lang.Object readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    33:33:java.lang.Object readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedStream -> pro.gravit.repackage.io.netty.handler.stream.ChunkedStream:
# {"fileName":"ChunkedStream.java","id":"sourceFile"}
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    java.io.PushbackInputStream in -> in
    int chunkSize -> chunkSize
    long offset -> offset
    boolean closed -> closed
    49:50:void <init>(java.io.InputStream) -> <init>
    58:68:void <init>(java.io.InputStream,int) -> <init>
    74:74:long transferredBytes() -> transferredBytes
    79:91:boolean isEndOfInput() -> isEndOfInput
    97:99:void close() -> close
    104:104:pro.gravit.repackage.io.netty.buffer.ByteBuf readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    109:136:pro.gravit.repackage.io.netty.buffer.ByteBuf readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    141:141:long length() -> length
    146:146:long progress() -> progress
    36:36:java.lang.Object readChunk(pro.gravit.repackage.io.netty.buffer.ByteBufAllocator) -> readChunk
    36:36:java.lang.Object readChunk(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readChunk
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler -> pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler:
# {"fileName":"ChunkedWriteHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Queue queue -> queue
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    75:79:void <init>() -> <init>
    75:87:void <init>(int) -> <init>
    91:92:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    98:114:void resumeTransfer() -> resumeTransfer
    118:122:void resumeTransfer0(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> resumeTransfer0
    126:127:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    131:132:void flush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> flush
    136:138:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    142:147:void channelWritabilityChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelWritabilityChanged
    151:189:void discard(java.lang.Throwable) -> discard
    192:315:void doFlush(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> doFlush
    318:330:void handleEndOfInputFuture(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite) -> handleEndOfInputFuture
    333:343:void handleFuture(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,boolean) -> handleFuture
    347:353:void closeInput(pro.gravit.repackage.io.netty.handler.stream.ChunkedInput) -> closeInput
    70:70:void access$000(pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> access$000
    70:70:void access$100(pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite) -> access$100
    70:70:void access$200(pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler,pro.gravit.repackage.io.netty.channel.ChannelFuture,pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,boolean) -> access$200
    72:73:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$1 -> pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$1:
# {"fileName":"ChunkedWriteHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    106:106:void <init>(pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    110:111:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$2 -> pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$2:
# {"fileName":"ChunkedWriteHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> val$currentWrite
    pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    279:279:void <init>(pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler,pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite) -> <init>
    282:283:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    279:279:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$3 -> pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$3:
# {"fileName":"ChunkedWriteHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite val$currentWrite -> val$currentWrite
    boolean val$resume -> val$resume
    pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler this$0 -> this$0
    291:291:void <init>(pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler,pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite,boolean) -> <init>
    294:295:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    291:291:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite -> pro.gravit.repackage.io.netty.handler.stream.ChunkedWriteHandler$PendingWrite:
# {"fileName":"ChunkedWriteHandler.java","id":"sourceFile"}
    java.lang.Object msg -> msg
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    359:362:void <init>(java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    365:367:void fail(java.lang.Throwable) -> fail
    370:376:void success(long) -> success
    379:382:void progress(long,long) -> progress
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleState -> pro.gravit.repackage.io.netty.handler.timeout.IdleState:
# {"fileName":"IdleState.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.timeout.IdleState READER_IDLE -> READER_IDLE
    pro.gravit.repackage.io.netty.handler.timeout.IdleState WRITER_IDLE -> WRITER_IDLE
    pro.gravit.repackage.io.netty.handler.timeout.IdleState ALL_IDLE -> ALL_IDLE
    pro.gravit.repackage.io.netty.handler.timeout.IdleState[] $VALUES -> $VALUES
    24:24:pro.gravit.repackage.io.netty.handler.timeout.IdleState[] values() -> values
    24:24:pro.gravit.repackage.io.netty.handler.timeout.IdleState valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:36:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent:
# {"fileName":"IdleStateEvent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent FIRST_READER_IDLE_STATE_EVENT -> FIRST_READER_IDLE_STATE_EVENT
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent READER_IDLE_STATE_EVENT -> READER_IDLE_STATE_EVENT
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent FIRST_WRITER_IDLE_STATE_EVENT -> FIRST_WRITER_IDLE_STATE_EVENT
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent WRITER_IDLE_STATE_EVENT -> WRITER_IDLE_STATE_EVENT
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent FIRST_ALL_IDLE_STATE_EVENT -> FIRST_ALL_IDLE_STATE_EVENT
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent ALL_IDLE_STATE_EVENT -> ALL_IDLE_STATE_EVENT
    pro.gravit.repackage.io.netty.handler.timeout.IdleState state -> state
    boolean first -> first
    48:51:void <init>(pro.gravit.repackage.io.netty.handler.timeout.IdleState,boolean) -> <init>
    57:57:pro.gravit.repackage.io.netty.handler.timeout.IdleState state() -> state
    64:64:boolean isFirst() -> isFirst
    69:69:java.lang.String toString() -> toString
    26:36:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent$DefaultIdleStateEvent -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent$DefaultIdleStateEvent:
# {"fileName":"IdleStateEvent.java","id":"sourceFile"}
    java.lang.String representation -> representation
    76:78:void <init>(pro.gravit.repackage.io.netty.handler.timeout.IdleState,boolean) -> <init>
    82:82:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler:
# {"fileName":"IdleStateHandler.java","id":"sourceFile"}
    long MIN_TIMEOUT_NANOS -> MIN_TIMEOUT_NANOS
    pro.gravit.repackage.io.netty.channel.ChannelFutureListener writeListener -> writeListener
    boolean observeOutput -> observeOutput
    long readerIdleTimeNanos -> readerIdleTimeNanos
    long writerIdleTimeNanos -> writerIdleTimeNanos
    long allIdleTimeNanos -> allIdleTimeNanos
    pro.gravit.repackage.io.netty.util.concurrent.Future readerIdleTimeout -> readerIdleTimeout
    long lastReadTime -> lastReadTime
    boolean firstReaderIdleEvent -> firstReaderIdleEvent
    pro.gravit.repackage.io.netty.util.concurrent.Future writerIdleTimeout -> writerIdleTimeout
    long lastWriteTime -> lastWriteTime
    boolean firstWriterIdleEvent -> firstWriterIdleEvent
    pro.gravit.repackage.io.netty.util.concurrent.Future allIdleTimeout -> allIdleTimeout
    boolean firstAllIdleEvent -> firstAllIdleEvent
    byte state -> state
    boolean reading -> reading
    long lastChangeCheckTimeStamp -> lastChangeCheckTimeStamp
    int lastMessageHashCode -> lastMessageHashCode
    long lastPendingWriteBytes -> lastPendingWriteBytes
    long lastFlushProgress -> lastFlushProgress
    156:158:void <init>(int,int,int) -> <init>
    166:167:void <init>(long,long,long,java.util.concurrent.TimeUnit) -> <init>
    103:213:void <init>(boolean,long,long,long,java.util.concurrent.TimeUnit) -> <init>
    220:220:long getReaderIdleTimeInMillis() -> getReaderIdleTimeInMillis
    228:228:long getWriterIdleTimeInMillis() -> getWriterIdleTimeInMillis
    236:236:long getAllIdleTimeInMillis() -> getAllIdleTimeInMillis
    241:249:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    253:254:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    259:263:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    270:272:void channelActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelActive
    276:278:void channelInactive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelInactive
    282:287:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    291:296:void channelReadComplete(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelReadComplete
    301:306:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    311:335:void initialize(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> initialize
    341:341:long ticksInNanos() -> ticksInNanos
    348:348:pro.gravit.repackage.io.netty.util.concurrent.Future schedule(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    352:366:void destroy() -> destroy
    373:374:void channelIdle(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent) -> channelIdle
    380:388:pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent newIdleStateEvent(pro.gravit.repackage.io.netty.handler.timeout.IdleState,boolean) -> newIdleStateEvent
    396:407:void initOutputChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> initOutputChanged
    417:458:boolean hasOutputChanged(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,boolean) -> hasOutputChanged
    99:99:long access$002(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,long) -> access$002
    99:99:boolean access$102(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,boolean) -> access$102
    99:99:boolean access$202(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,boolean) -> access$202
    99:99:long access$300(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$300
    99:99:boolean access$400(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$400
    99:99:long access$500(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$500
    99:99:pro.gravit.repackage.io.netty.util.concurrent.Future access$602(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,pro.gravit.repackage.io.netty.util.concurrent.Future) -> access$602
    99:99:boolean access$700(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$700
    99:99:boolean access$702(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,boolean) -> access$702
    99:99:long access$000(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$000
    99:99:long access$800(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$800
    99:99:pro.gravit.repackage.io.netty.util.concurrent.Future access$902(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,pro.gravit.repackage.io.netty.util.concurrent.Future) -> access$902
    99:99:boolean access$100(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$100
    99:99:boolean access$1000(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,boolean) -> access$1000
    99:99:long access$1100(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$1100
    99:99:pro.gravit.repackage.io.netty.util.concurrent.Future access$1202(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,pro.gravit.repackage.io.netty.util.concurrent.Future) -> access$1202
    99:99:boolean access$200(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> access$200
    100:100:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$1 -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$1:
# {"fileName":"IdleStateHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    103:103:void <init>(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler) -> <init>
    106:108:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    103:103:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$2 -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$2:
# {"fileName":"IdleStateHandler.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$handler$timeout$IdleState -> $SwitchMap$io$netty$handler$timeout$IdleState
    380:380:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask:
# {"fileName":"IdleStateHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    465:467:void <init>(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    471:476:void run() -> run
    void run(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask:
# {"fileName":"IdleStateHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    551:553:void <init>(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    558:585:void run(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask:
# {"fileName":"IdleStateHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    483:485:void <init>(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    489:511:void run(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask -> pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask:
# {"fileName":"IdleStateHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler this$0 -> this$0
    516:518:void <init>(pro.gravit.repackage.io.netty.handler.timeout.IdleStateHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    523:546:void run(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.ReadTimeoutException -> pro.gravit.repackage.io.netty.handler.timeout.ReadTimeoutException:
# {"fileName":"ReadTimeoutException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.handler.timeout.ReadTimeoutException INSTANCE -> INSTANCE
    31:31:void <init>() -> <init>
    34:35:void <init>(java.lang.String) -> <init>
    38:39:void <init>(boolean) -> <init>
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.ReadTimeoutHandler -> pro.gravit.repackage.io.netty.handler.timeout.ReadTimeoutHandler:
# {"fileName":"ReadTimeoutHandler.java","id":"sourceFile"}
    boolean closed -> closed
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>(int) -> <init>
    84:85:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    89:91:void channelIdle(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.timeout.IdleStateEvent) -> channelIdle
    97:102:void readTimedOut(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> readTimedOut
    62:62:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.TimeoutException -> pro.gravit.repackage.io.netty.handler.timeout.TimeoutException:
# {"fileName":"TimeoutException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    32:33:void <init>(java.lang.String,boolean) -> <init>
    38:38:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutException -> pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutException:
# {"fileName":"WriteTimeoutException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutException INSTANCE -> INSTANCE
    31:31:void <init>() -> <init>
    34:35:void <init>(java.lang.String) -> <init>
    38:39:void <init>(boolean) -> <init>
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler -> pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler:
# {"fileName":"WriteTimeoutHandler.java","id":"sourceFile"}
    long MIN_TIMEOUT_NANOS -> MIN_TIMEOUT_NANOS
    long timeoutNanos -> timeoutNanos
    pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask lastTask -> lastTask
    boolean closed -> closed
    boolean $assertionsDisabled -> $assertionsDisabled
    85:86:void <init>(int) -> <init>
    96:104:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    108:113:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    117:128:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    132:141:void scheduleTimeout(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> scheduleTimeout
    144:150:void addWriteTimeoutTask(pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask) -> addWriteTimeoutTask
    153:173:void removeWriteTimeoutTask(pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask) -> removeWriteTimeoutTask
    179:184:void writeTimedOut(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> writeTimedOut
    66:66:void access$100(pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler,pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask) -> access$100
    66:67:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask -> pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask:
# {"fileName":"WriteTimeoutHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask prev -> prev
    pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask next -> next
    pro.gravit.repackage.io.netty.util.concurrent.Future scheduledFuture -> scheduledFuture
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler this$0 -> this$0
    197:200:void <init>(pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    207:215:void run() -> run
    220:234:void operationComplete(pro.gravit.repackage.io.netty.channel.ChannelFuture) -> operationComplete
    186:186:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    186:186:pro.gravit.repackage.io.netty.channel.ChannelHandlerContext access$000(pro.gravit.repackage.io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask) -> access$000
    186:186:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.AbstractTrafficShapingHandler -> pro.gravit.repackage.io.netty.handler.traffic.AbstractTrafficShapingHandler:
# {"fileName":"AbstractTrafficShapingHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    long DEFAULT_CHECK_INTERVAL -> DEFAULT_CHECK_INTERVAL
    long DEFAULT_MAX_TIME -> DEFAULT_MAX_TIME
    long DEFAULT_MAX_SIZE -> DEFAULT_MAX_SIZE
    long MINIMAL_WAIT -> MINIMAL_WAIT
    pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter trafficCounter -> trafficCounter
    long writeLimit -> writeLimit
    long readLimit -> readLimit
    long maxTime -> maxTime
    long checkInterval -> checkInterval
    pro.gravit.repackage.io.netty.util.AttributeKey READ_SUSPENDED -> READ_SUSPENDED
    pro.gravit.repackage.io.netty.util.AttributeKey REOPEN_TASK -> REOPEN_TASK
    long maxWriteDelay -> maxWriteDelay
    long maxWriteSize -> maxWriteSize
    int userDefinedWritabilityIndex -> userDefinedWritabilityIndex
    int CHANNEL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX -> CHANNEL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX
    int GLOBAL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX -> GLOBAL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX
    int GLOBALCHANNEL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX -> GLOBALCHANNEL_DEFAULT_USER_DEFINED_WRITABILITY_INDEX
    142:143:void setTrafficCounter(pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter) -> setTrafficCounter
    153:153:int userDefinedWritabilityIndex() -> userDefinedWritabilityIndex
    95:175:void <init>(long,long,long,long) -> <init>
    188:189:void <init>(long,long,long) -> <init>
    201:202:void <init>(long,long) -> <init>
    209:210:void <init>() -> <init>
    221:222:void <init>(long) -> <init>
    238:240:void configure(long,long,long) -> configure
    254:259:void configure(long,long) -> configure
    267:271:void configure(long) -> configure
    277:277:long getWriteLimit() -> getWriteLimit
    290:294:void setWriteLimit(long) -> setWriteLimit
    300:300:long getReadLimit() -> getReadLimit
    313:317:void setReadLimit(long) -> setReadLimit
    323:323:long getCheckInterval() -> getCheckInterval
    330:334:void setCheckInterval(long) -> setCheckInterval
    348:349:void setMaxTimeWait(long) -> setMaxTimeWait
    355:355:long getMaxTimeWait() -> getMaxTimeWait
    362:362:long getMaxWriteDelay() -> getMaxWriteDelay
    376:377:void setMaxWriteDelay(long) -> setMaxWriteDelay
    383:383:long getMaxWriteSize() -> getMaxWriteSize
    399:400:void setMaxWriteSize(long) -> setMaxWriteSize
    411:411:void doAccounting(pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter) -> doAccounting
    464:467:void releaseReadSuspended(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> releaseReadSuspended
    471:507:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    511:517:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    527:527:long checkWaitReadTime(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long,long) -> checkWaitReadTime
    536:536:void informReadOperation(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long) -> informReadOperation
    539:540:boolean isHandlerActive(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> isHandlerActive
    545:549:void read(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> read
    554:570:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    575:577:void submitWrite(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> submitWrite
    void submitWrite(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,long,long,long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> submitWrite
    584:586:void channelRegistered(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> channelRegistered
    589:593:void setUserDefinedWritability(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,boolean) -> setUserDefinedWritability
    602:605:void checkWriteSuspend(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long,long) -> checkWriteSuspend
    610:611:void releaseWriteSuspended(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> releaseWriteSuspended
    618:618:pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter trafficCounter() -> trafficCounter
    623:635:java.lang.String toString() -> toString
    647:656:long calculateSize(java.lang.Object) -> calculateSize
    52:52:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    53:105:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.AbstractTrafficShapingHandler$ReopenReadTimerTask -> pro.gravit.repackage.io.netty.handler.traffic.AbstractTrafficShapingHandler$ReopenReadTimerTask:
# {"fileName":"AbstractTrafficShapingHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext ctx -> ctx
    418:420:void <init>(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> <init>
    424:457:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler -> pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler:
# {"fileName":"ChannelTrafficShapingHandler.java","id":"sourceFile"}
    java.util.ArrayDeque messagesQueue -> messagesQueue
    long queueSize -> queueSize
    66:85:void <init>(long,long,long,long) -> <init>
    66:102:void <init>(long,long,long) -> <init>
    66:116:void <init>(long,long) -> <init>
    66:128:void <init>(long) -> <init>
    132:137:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    141:163:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    183:201:void submitWrite(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,long,long,long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> submitWrite
    205:223:void sendAllValid(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long) -> sendAllValid
    229:229:long queueSize() -> queueSize
    65:65:void access$100(pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler$1 -> pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler$1:
# {"fileName":"ChannelTrafficShapingHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    long val$futureNow -> val$futureNow
    pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler this$0 -> this$0
    195:195:void <init>(pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long) -> <init>
    198:199:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler$ToSend -> pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler$ToSend:
# {"fileName":"ChannelTrafficShapingHandler.java","id":"sourceFile"}
    long relativeTimeAction -> relativeTimeAction
    java.lang.Object toSend -> toSend
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    170:174:void <init>(long,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    165:165:void <init>(long,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.handler.traffic.ChannelTrafficShapingHandler$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficCounter -> pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficCounter:
# {"fileName":"GlobalChannelTrafficCounter.java","id":"sourceFile"}
    40:42:void <init>(pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler,java.util.concurrent.ScheduledExecutorService,java.lang.String,long) -> <init>
    89:100:void start() -> start
    107:116:void stop() -> stop
    121:125:void resetCumulativeTime() -> resetCumulativeTime
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficCounter$MixedTrafficMonitoringTask -> pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficCounter$MixedTrafficMonitoringTask:
# {"fileName":"GlobalChannelTrafficCounter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler trafficShapingHandler1 -> trafficShapingHandler1
    pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter counter -> counter
    65:68:void <init>(pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler,pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter) -> <init>
    72:81:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler -> pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler:
# {"fileName":"GlobalChannelTrafficShapingHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.ConcurrentMap channelQueues -> channelQueues
    java.util.concurrent.atomic.AtomicLong queuesSize -> queuesSize
    java.util.concurrent.atomic.AtomicLong cumulativeWrittenBytes -> cumulativeWrittenBytes
    java.util.concurrent.atomic.AtomicLong cumulativeReadBytes -> cumulativeReadBytes
    long maxGlobalWriteSize -> maxGlobalWriteSize
    long writeChannelLimit -> writeChannelLimit
    long readChannelLimit -> readChannelLimit
    float DEFAULT_DEVIATION -> DEFAULT_DEVIATION
    float MAX_DEVIATION -> MAX_DEVIATION
    float DEFAULT_SLOWDOWN -> DEFAULT_SLOWDOWN
    float DEFAULT_ACCELERATION -> DEFAULT_ACCELERATION
    float maxDeviation -> maxDeviation
    float accelerationFactor -> accelerationFactor
    float slowDownFactor -> slowDownFactor
    boolean readDeviationActive -> readDeviationActive
    boolean writeDeviationActive -> writeDeviationActive
    153:158:void createGlobalTrafficCounter(java.util.concurrent.ScheduledExecutorService) -> createGlobalTrafficCounter
    162:162:int userDefinedWritabilityIndex() -> userDefinedWritabilityIndex
    97:192:void <init>(java.util.concurrent.ScheduledExecutorService,long,long,long,long,long,long) -> <init>
    97:219:void <init>(java.util.concurrent.ScheduledExecutorService,long,long,long,long,long) -> <init>
    97:242:void <init>(java.util.concurrent.ScheduledExecutorService,long,long,long,long) -> <init>
    97:256:void <init>(java.util.concurrent.ScheduledExecutorService,long) -> <init>
    97:266:void <init>(java.util.concurrent.ScheduledExecutorService) -> <init>
    272:272:float maxDeviation() -> maxDeviation
    279:279:float accelerationFactor() -> accelerationFactor
    286:286:float slowDownFactor() -> slowDownFactor
    301:311:void setMaxDeviation(float,float,float) -> setMaxDeviation
    315:340:void computeDeviationCumulativeBytes() -> computeDeviationCumulativeBytes
    344:346:void doAccounting(pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter) -> doAccounting
    349:367:long computeBalancedWait(float,float,long) -> computeBalancedWait
    374:374:long getMaxGlobalWriteSize() -> getMaxGlobalWriteSize
    388:389:void setMaxGlobalWriteSize(long) -> setMaxGlobalWriteSize
    395:395:long queuesSize() -> queuesSize
    403:409:void configureChannel(long,long) -> configureChannel
    415:415:long getWriteChannelLimit() -> getWriteChannelLimit
    422:427:void setWriteChannelLimit(long) -> setWriteChannelLimit
    433:433:long getReadChannelLimit() -> getReadChannelLimit
    440:445:void setReadChannelLimit(long) -> setReadChannelLimit
    451:452:void release() -> release
    456:470:pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel getOrSetPerChannel(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getOrSetPerChannel
    475:478:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    482:512:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    516:574:void channelRead(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    578:585:long checkWaitReadTime(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long,long) -> checkWaitReadTime
    590:595:void informReadOperation(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long) -> informReadOperation
    612:612:long maximumCumulativeWrittenBytes() -> maximumCumulativeWrittenBytes
    616:616:long maximumCumulativeReadBytes() -> maximumCumulativeReadBytes
    624:624:java.util.Collection channelTrafficCounters() -> channelTrafficCounters
    653:691:void write(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> write
    697:740:void submitWrite(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,long,long,long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> submitWrite
    744:765:void sendAllValid(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel,long) -> sendAllValid
    769:771:java.lang.String toString() -> toString
    91:91:void access$100(pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel,long) -> access$100
    92:93:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1 -> pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1:
# {"fileName":"GlobalChannelTrafficShapingHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler this$0 -> this$0
    624:624:void <init>(pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler) -> <init>
    627:627:java.util.Iterator iterator() -> iterator
    645:645:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1$1 -> pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1$1:
# {"fileName":"GlobalChannelTrafficShapingHandler.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1 this$1 -> this$1
    627:628:void <init>(pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1) -> <init>
    631:631:boolean hasNext() -> hasNext
    635:635:pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter next() -> next
    639:639:void remove() -> remove
    627:627:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$2 -> pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$2:
# {"fileName":"GlobalChannelTrafficShapingHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel val$forSchedule -> val$forSchedule
    long val$futureNow -> val$futureNow
    pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler this$0 -> this$0
    734:734:void <init>(pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel,long) -> <init>
    737:738:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel -> pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$PerChannel:
# {"fileName":"GlobalChannelTrafficShapingHandler.java","id":"sourceFile"}
    java.util.ArrayDeque messagesQueue -> messagesQueue
    pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter channelTrafficCounter -> channelTrafficCounter
    long queueSize -> queueSize
    long lastWriteTimestamp -> lastWriteTimestamp
    long lastReadTimestamp -> lastReadTimestamp
    140:140:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$ToSend -> pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$ToSend:
# {"fileName":"GlobalChannelTrafficShapingHandler.java","id":"sourceFile"}
    long relativeTimeAction -> relativeTimeAction
    java.lang.Object toSend -> toSend
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    long size -> size
    603:608:void <init>(long,java.lang.Object,long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    597:597:void <init>(long,java.lang.Object,long,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler -> pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler:
# {"fileName":"GlobalTrafficShapingHandler.java","id":"sourceFile"}
    java.util.concurrent.ConcurrentMap channelQueues -> channelQueues
    java.util.concurrent.atomic.AtomicLong queuesSize -> queuesSize
    long maxGlobalWriteSize -> maxGlobalWriteSize
    107:114:void createGlobalTrafficCounter(java.util.concurrent.ScheduledExecutorService) -> createGlobalTrafficCounter
    118:118:int userDefinedWritabilityIndex() -> userDefinedWritabilityIndex
    83:140:void <init>(java.util.concurrent.ScheduledExecutorService,long,long,long,long) -> <init>
    83:160:void <init>(java.util.concurrent.ScheduledExecutorService,long,long,long) -> <init>
    83:177:void <init>(java.util.concurrent.ScheduledExecutorService,long,long) -> <init>
    83:192:void <init>(java.util.concurrent.ScheduledExecutorService,long) -> <init>
    83:203:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    209:209:long getMaxGlobalWriteSize() -> getMaxGlobalWriteSize
    224:225:void setMaxGlobalWriteSize(long) -> setMaxGlobalWriteSize
    231:231:long queuesSize() -> queuesSize
    238:239:void release() -> release
    243:254:pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel getOrSetPerChannel(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> getOrSetPerChannel
    259:261:void handlerAdded(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerAdded
    265:293:void handlerRemoved(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext) -> handlerRemoved
    297:304:long checkWaitReadTime(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long,long) -> checkWaitReadTime
    309:314:void informReadOperation(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,long) -> informReadOperation
    334:376:void submitWrite(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,java.lang.Object,long,long,long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> submitWrite
    380:400:void sendAllValid(pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel,long) -> sendAllValid
    79:79:void access$200(pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel,long) -> access$200
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$1 -> pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$1:
# {"fileName":"GlobalTrafficShapingHandler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.channel.ChannelHandlerContext val$ctx -> val$ctx
    pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel val$forSchedule -> val$forSchedule
    long val$futureNow -> val$futureNow
    pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler this$0 -> this$0
    370:370:void <init>(pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler,pro.gravit.repackage.io.netty.channel.ChannelHandlerContext,pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel,long) -> <init>
    373:374:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel -> pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$PerChannel:
# {"fileName":"GlobalTrafficShapingHandler.java","id":"sourceFile"}
    java.util.ArrayDeque messagesQueue -> messagesQueue
    long queueSize -> queueSize
    long lastWriteTimestamp -> lastWriteTimestamp
    long lastReadTimestamp -> lastReadTimestamp
    96:96:void <init>() -> <init>
    96:96:void <init>(pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$ToSend -> pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$ToSend:
# {"fileName":"GlobalTrafficShapingHandler.java","id":"sourceFile"}
    long relativeTimeAction -> relativeTimeAction
    java.lang.Object toSend -> toSend
    long size -> size
    pro.gravit.repackage.io.netty.channel.ChannelPromise promise -> promise
    322:327:void <init>(long,java.lang.Object,long,pro.gravit.repackage.io.netty.channel.ChannelPromise) -> <init>
    316:316:void <init>(long,java.lang.Object,long,pro.gravit.repackage.io.netty.channel.ChannelPromise,pro.gravit.repackage.io.netty.handler.traffic.GlobalTrafficShapingHandler$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter -> pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter:
# {"fileName":"TrafficCounter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicLong currentWrittenBytes -> currentWrittenBytes
    java.util.concurrent.atomic.AtomicLong currentReadBytes -> currentReadBytes
    long writingTime -> writingTime
    long readingTime -> readingTime
    java.util.concurrent.atomic.AtomicLong cumulativeWrittenBytes -> cumulativeWrittenBytes
    java.util.concurrent.atomic.AtomicLong cumulativeReadBytes -> cumulativeReadBytes
    long lastCumulativeTime -> lastCumulativeTime
    long lastWriteThroughput -> lastWriteThroughput
    long lastReadThroughput -> lastReadThroughput
    java.util.concurrent.atomic.AtomicLong lastTime -> lastTime
    long lastWrittenBytes -> lastWrittenBytes
    long lastReadBytes -> lastReadBytes
    long lastWritingTime -> lastWritingTime
    long lastReadingTime -> lastReadingTime
    java.util.concurrent.atomic.AtomicLong realWrittenBytes -> realWrittenBytes
    long realWriteThroughput -> realWriteThroughput
    java.util.concurrent.atomic.AtomicLong checkInterval -> checkInterval
    java.lang.String name -> name
    pro.gravit.repackage.io.netty.handler.traffic.AbstractTrafficShapingHandler trafficShapingHandler -> trafficShapingHandler
    java.util.concurrent.ScheduledExecutorService executor -> executor
    java.lang.Runnable monitor -> monitor
    java.util.concurrent.ScheduledFuture scheduledFuture -> scheduledFuture
    boolean monitorActive -> monitorActive
    46:46:long milliSecondFromNano() -> milliSecondFromNano
    186:198:void start() -> start
    204:215:void stop() -> stop
    223:240:void resetAccounting(long) -> resetAccounting
    52:261:void <init>(java.util.concurrent.ScheduledExecutorService,java.lang.String,long) -> <init>
    52:285:void <init>(pro.gravit.repackage.io.netty.handler.traffic.AbstractTrafficShapingHandler,java.util.concurrent.ScheduledExecutorService,java.lang.String,long) -> <init>
    289:295:void init(long) -> init
    303:315:void configure(long) -> configure
    324:326:void bytesRecvFlowControl(long) -> bytesRecvFlowControl
    335:337:void bytesWriteFlowControl(long) -> bytesWriteFlowControl
    346:347:void bytesRealWriteFlowControl(long) -> bytesRealWriteFlowControl
    354:354:long checkInterval() -> checkInterval
    361:361:long lastReadThroughput() -> lastReadThroughput
    368:368:long lastWriteThroughput() -> lastWriteThroughput
    375:375:long lastReadBytes() -> lastReadBytes
    382:382:long lastWrittenBytes() -> lastWrittenBytes
    389:389:long currentReadBytes() -> currentReadBytes
    396:396:long currentWrittenBytes() -> currentWrittenBytes
    403:403:long lastTime() -> lastTime
    410:410:long cumulativeWrittenBytes() -> cumulativeWrittenBytes
    417:417:long cumulativeReadBytes() -> cumulativeReadBytes
    425:425:long lastCumulativeTime() -> lastCumulativeTime
    432:432:java.util.concurrent.atomic.AtomicLong getRealWrittenBytes() -> getRealWrittenBytes
    439:439:long getRealWriteThroughput() -> getRealWriteThroughput
    447:450:void resetCumulativeTime() -> resetCumulativeTime
    456:456:java.lang.String name() -> name
    473:473:long readTimeToWait(long,long,long) -> readTimeToWait
    490:531:long readTimeToWait(long,long,long,long) -> readTimeToWait
    548:548:long writeTimeToWait(long,long,long) -> writeTimeToWait
    565:606:long writeTimeToWait(long,long,long,long) -> writeTimeToWait
    611:617:java.lang.String toString() -> toString
    40:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter$1 -> pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter$1:
# {"fileName":"TrafficCounter.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask -> pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter$TrafficMonitoringTask:
# {"fileName":"TrafficCounter.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter this$0 -> this$0
    169:169:void <init>(pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter) -> <init>
    172:179:void run() -> run
    169:169:void <init>(pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter,pro.gravit.repackage.io.netty.handler.traffic.TrafficCounter$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.AbstractAddressResolver -> pro.gravit.repackage.io.netty.resolver.AbstractAddressResolver:
# {"fileName":"AbstractAddressResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher matcher -> matcher
    43:46:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    53:56:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Class) -> <init>
    63:63:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    68:68:boolean isSupported(java.net.SocketAddress) -> isSupported
    73:79:boolean isResolved(java.net.SocketAddress) -> isResolved
    boolean doIsResolved(java.net.SocketAddress) -> doIsResolved
    90:109:pro.gravit.repackage.io.netty.util.concurrent.Future resolve(java.net.SocketAddress) -> resolve
    115:136:pro.gravit.repackage.io.netty.util.concurrent.Future resolve(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> resolve
    142:161:pro.gravit.repackage.io.netty.util.concurrent.Future resolveAll(java.net.SocketAddress) -> resolveAll
    167:188:pro.gravit.repackage.io.netty.util.concurrent.Future resolveAll(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> resolveAll
    void doResolve(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolve
    void doResolveAll(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolveAll
    205:205:void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.AddressResolver -> pro.gravit.repackage.io.netty.resolver.AddressResolver:
# {"fileName":"AddressResolver.java","id":"sourceFile"}
    boolean isSupported(java.net.SocketAddress) -> isSupported
    boolean isResolved(java.net.SocketAddress) -> isResolved
    pro.gravit.repackage.io.netty.util.concurrent.Future resolve(java.net.SocketAddress) -> resolve
    pro.gravit.repackage.io.netty.util.concurrent.Future resolve(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> resolve
    pro.gravit.repackage.io.netty.util.concurrent.Future resolveAll(java.net.SocketAddress) -> resolveAll
    pro.gravit.repackage.io.netty.util.concurrent.Future resolveAll(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> resolveAll
    void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.AddressResolverGroup -> pro.gravit.repackage.io.netty.resolver.AddressResolverGroup:
# {"fileName":"AddressResolverGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Map resolvers -> resolvers
    java.util.Map executorTerminationListeners -> executorTerminationListeners
    43:49:void <init>() -> <init>
    58:95:pro.gravit.repackage.io.netty.resolver.AddressResolver getResolver(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> getResolver
    pro.gravit.repackage.io.netty.resolver.AddressResolver newResolver(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> newResolver
    112:130:void close() -> close
    36:36:java.util.Map access$000(pro.gravit.repackage.io.netty.resolver.AddressResolverGroup) -> access$000
    36:36:java.util.Map access$100(pro.gravit.repackage.io.netty.resolver.AddressResolverGroup) -> access$100
    38:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.AddressResolverGroup$1 -> pro.gravit.repackage.io.netty.resolver.AddressResolverGroup$1:
# {"fileName":"AddressResolverGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor val$executor -> val$executor
    pro.gravit.repackage.io.netty.resolver.AddressResolver val$newResolver -> val$newResolver
    pro.gravit.repackage.io.netty.resolver.AddressResolverGroup this$0 -> this$0
    77:77:void <init>(pro.gravit.repackage.io.netty.resolver.AddressResolverGroup,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,pro.gravit.repackage.io.netty.resolver.AddressResolver) -> <init>
    80:85:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.CompositeNameResolver -> pro.gravit.repackage.io.netty.resolver.CompositeNameResolver:
# {"fileName":"CompositeNameResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.NameResolver[] resolvers -> resolvers
    44:54:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,pro.gravit.repackage.io.netty.resolver.NameResolver[]) -> <init>
    58:59:void doResolve(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolve
    65:80:void doResolveRec(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise,int,java.lang.Throwable) -> doResolveRec
    84:85:void doResolveAll(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolveAll
    91:106:void doResolveAllRec(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise,int,java.lang.Throwable) -> doResolveAllRec
    34:34:void access$000(pro.gravit.repackage.io.netty.resolver.CompositeNameResolver,java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise,int,java.lang.Throwable) -> access$000
    34:34:void access$100(pro.gravit.repackage.io.netty.resolver.CompositeNameResolver,java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise,int,java.lang.Throwable) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.CompositeNameResolver$1 -> pro.gravit.repackage.io.netty.resolver.CompositeNameResolver$1:
# {"fileName":"CompositeNameResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    java.lang.String val$inetHost -> val$inetHost
    int val$resolverIndex -> val$resolverIndex
    pro.gravit.repackage.io.netty.resolver.CompositeNameResolver this$0 -> this$0
    69:69:void <init>(pro.gravit.repackage.io.netty.resolver.CompositeNameResolver,pro.gravit.repackage.io.netty.util.concurrent.Promise,java.lang.String,int) -> <init>
    72:77:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.CompositeNameResolver$2 -> pro.gravit.repackage.io.netty.resolver.CompositeNameResolver$2:
# {"fileName":"CompositeNameResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    java.lang.String val$inetHost -> val$inetHost
    int val$resolverIndex -> val$resolverIndex
    pro.gravit.repackage.io.netty.resolver.CompositeNameResolver this$0 -> this$0
    95:95:void <init>(pro.gravit.repackage.io.netty.resolver.CompositeNameResolver,pro.gravit.repackage.io.netty.util.concurrent.Promise,java.lang.String,int) -> <init>
    98:103:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.DefaultAddressResolverGroup -> pro.gravit.repackage.io.netty.resolver.DefaultAddressResolverGroup:
# {"fileName":"DefaultAddressResolverGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.DefaultAddressResolverGroup INSTANCE -> INSTANCE
    30:30:void <init>() -> <init>
    34:34:pro.gravit.repackage.io.netty.resolver.AddressResolver newResolver(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> newResolver
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.DefaultHostsFileEntriesResolver -> pro.gravit.repackage.io.netty.resolver.DefaultHostsFileEntriesResolver:
# {"fileName":"DefaultHostsFileEntriesResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    long DEFAULT_REFRESH_INTERVAL -> DEFAULT_REFRESH_INTERVAL
    long refreshInterval -> refreshInterval
    java.util.concurrent.atomic.AtomicLong lastRefresh -> lastRefresh
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$Parser hostsFileParser -> hostsFileParser
    java.util.Map inet4Entries -> inet4Entries
    java.util.Map inet6Entries -> inet6Entries
    58:59:void <init>() -> <init>
    43:68:void <init>(pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$Parser,long) -> <init>
    72:72:java.net.InetAddress address(java.lang.String,pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes) -> address
    84:101:java.util.List addresses(java.lang.String,pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes) -> addresses
    106:119:void ensureHostsFileEntriesAreFresh() -> ensureHostsFileEntriesAreFresh
    123:123:java.lang.String normalize(java.lang.String) -> normalize
    127:132:java.util.List allAddresses(java.util.List,java.util.List) -> allAddresses
    136:136:java.net.InetAddress firstAddress(java.util.List) -> firstAddress
    140:146:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parseEntries(pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$Parser) -> parseEntries
    38:55:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.DefaultHostsFileEntriesResolver$1 -> pro.gravit.repackage.io.netty.resolver.DefaultHostsFileEntriesResolver$1:
# {"fileName":"DefaultHostsFileEntriesResolver.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$resolver$ResolvedAddressTypes -> $SwitchMap$io$netty$resolver$ResolvedAddressTypes
    87:87:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.DefaultNameResolver -> pro.gravit.repackage.io.netty.resolver.DefaultNameResolver:
# {"fileName":"DefaultNameResolver.java","id":"sourceFile"}
    35:36:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    41:45:void doResolve(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolve
    50:54:void doResolveAll(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolveAll
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.HostsFileEntries -> pro.gravit.repackage.io.netty.resolver.HostsFileEntries:
# {"fileName":"HostsFileEntries.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.HostsFileEntries EMPTY -> EMPTY
    java.util.Map inet4Entries -> inet4Entries
    java.util.Map inet6Entries -> inet6Entries
    42:45:void <init>(java.util.Map,java.util.Map) -> <init>
    52:52:java.util.Map inet4Entries() -> inet4Entries
    60:60:java.util.Map inet6Entries() -> inet6Entries
    34:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider -> pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider:
# {"fileName":"HostsFileEntriesProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider EMPTY -> EMPTY
    java.util.Map ipv4Entries -> ipv4Entries
    java.util.Map ipv6Entries -> ipv6Entries
    123:123:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$Parser parser() -> parser
    134:137:void <init>(java.util.Map,java.util.Map) -> <init>
    145:145:java.util.Map ipv4Entries() -> ipv4Entries
    154:154:java.util.Map ipv6Entries() -> ipv6Entries
    126:129:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$Parser -> pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$Parser:
# {"fileName":"HostsFileEntriesProvider.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parse() -> parse
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parse(java.nio.charset.Charset[]) -> parse
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parse(java.io.File,java.nio.charset.Charset[]) -> parse
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parse(java.io.Reader) -> parse
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parseSilently() -> parseSilently
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parseSilently(java.nio.charset.Charset[]) -> parseSilently
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parseSilently(java.io.File,java.nio.charset.Charset[]) -> parseSilently
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$ParserImpl -> pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$ParserImpl:
# {"fileName":"HostsFileEntriesProvider.java","id":"sourceFile"}
    java.lang.String WINDOWS_DEFAULT_SYSTEM_ROOT -> WINDOWS_DEFAULT_SYSTEM_ROOT
    java.lang.String WINDOWS_HOSTS_FILE_RELATIVE_PATH -> WINDOWS_HOSTS_FILE_RELATIVE_PATH
    java.lang.String X_PLATFORMS_HOSTS_FILE_PATH -> X_PLATFORMS_HOSTS_FILE_PATH
    java.util.regex.Pattern WHITESPACES -> WHITESPACES
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider$ParserImpl INSTANCE -> INSTANCE
    169:171:void <init>() -> <init>
    175:175:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parse() -> parse
    180:180:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parse(java.nio.charset.Charset[]) -> parse
    185:204:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parse(java.io.File,java.nio.charset.Charset[]) -> parse
    209:279:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parse(java.io.Reader) -> parse
    284:284:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parseSilently() -> parseSilently
    289:289:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parseSilently(java.nio.charset.Charset[]) -> parseSilently
    295:300:pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider parseSilently(java.io.File,java.nio.charset.Charset[]) -> parseSilently
    306:314:java.io.File locateHostsFile() -> locateHostsFile
    163:167:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.HostsFileEntriesResolver -> pro.gravit.repackage.io.netty.resolver.HostsFileEntriesResolver:
# {"fileName":"HostsFileEntriesResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.HostsFileEntriesResolver DEFAULT -> DEFAULT
    java.net.InetAddress address(java.lang.String,pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes) -> address
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.HostsFileParser -> pro.gravit.repackage.io.netty.resolver.HostsFileParser:
# {"fileName":"HostsFileParser.java","id":"sourceFile"}
    42:42:pro.gravit.repackage.io.netty.resolver.HostsFileEntries parseSilently() -> parseSilently
    53:53:pro.gravit.repackage.io.netty.resolver.HostsFileEntries parseSilently(java.nio.charset.Charset[]) -> parseSilently
    63:63:pro.gravit.repackage.io.netty.resolver.HostsFileEntries parse() -> parse
    74:74:pro.gravit.repackage.io.netty.resolver.HostsFileEntries parse(java.io.File) -> parse
    86:86:pro.gravit.repackage.io.netty.resolver.HostsFileEntries parse(java.io.File,java.nio.charset.Charset[]) -> parse
    97:97:pro.gravit.repackage.io.netty.resolver.HostsFileEntries parse(java.io.Reader) -> parse
    103:104:void <init>() -> <init>
    108:110:pro.gravit.repackage.io.netty.resolver.HostsFileEntries hostsFileEntries(pro.gravit.repackage.io.netty.resolver.HostsFileEntriesProvider) -> hostsFileEntries
    114:121:java.util.Map toMapWithSingleValue(java.util.Map) -> toMapWithSingleValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.InetNameResolver -> pro.gravit.repackage.io.netty.resolver.InetNameResolver:
# {"fileName":"InetNameResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.AddressResolver addressResolver -> addressResolver
    35:36:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    43:52:pro.gravit.repackage.io.netty.resolver.AddressResolver asAddressResolver() -> asAddressResolver
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver -> pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver:
# {"fileName":"InetSocketAddressResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.NameResolver nameResolver -> nameResolver
    41:43:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,pro.gravit.repackage.io.netty.resolver.NameResolver) -> <init>
    47:47:boolean doIsResolved(java.net.InetSocketAddress) -> doIsResolved
    55:66:void doResolve(java.net.InetSocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolve
    73:90:void doResolveAll(java.net.InetSocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolveAll
    94:95:void close() -> close
    31:31:void doResolveAll(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolveAll
    31:31:void doResolve(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolve
    31:31:boolean doIsResolved(java.net.SocketAddress) -> doIsResolved
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver$1 -> pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver$1:
# {"fileName":"InetSocketAddressResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    java.net.InetSocketAddress val$unresolvedAddress -> val$unresolvedAddress
    pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver this$0 -> this$0
    56:56:void <init>(pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver,pro.gravit.repackage.io.netty.util.concurrent.Promise,java.net.InetSocketAddress) -> <init>
    59:64:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver$2 -> pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver$2:
# {"fileName":"InetSocketAddressResolver.java","id":"sourceFile"}
    java.net.InetSocketAddress val$unresolvedAddress -> val$unresolvedAddress
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver this$0 -> this$0
    74:74:void <init>(pro.gravit.repackage.io.netty.resolver.InetSocketAddressResolver,java.net.InetSocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    77:88:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.NameResolver -> pro.gravit.repackage.io.netty.resolver.NameResolver:
# {"fileName":"NameResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future resolve(java.lang.String) -> resolve
    pro.gravit.repackage.io.netty.util.concurrent.Future resolve(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> resolve
    pro.gravit.repackage.io.netty.util.concurrent.Future resolveAll(java.lang.String) -> resolveAll
    pro.gravit.repackage.io.netty.util.concurrent.Future resolveAll(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> resolveAll
    void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.NoopAddressResolver -> pro.gravit.repackage.io.netty.resolver.NoopAddressResolver:
# {"fileName":"NoopAddressResolver.java","id":"sourceFile"}
    33:34:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    38:38:boolean doIsResolved(java.net.SocketAddress) -> doIsResolved
    43:44:void doResolve(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolve
    49:50:void doResolveAll(java.net.SocketAddress,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolveAll
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.NoopAddressResolverGroup -> pro.gravit.repackage.io.netty.resolver.NoopAddressResolverGroup:
# {"fileName":"NoopAddressResolverGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.NoopAddressResolverGroup INSTANCE -> INSTANCE
    30:30:void <init>() -> <init>
    34:34:pro.gravit.repackage.io.netty.resolver.AddressResolver newResolver(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> newResolver
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes -> pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes:
# {"fileName":"ResolvedAddressTypes.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes IPV4_ONLY -> IPV4_ONLY
    pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes IPV6_ONLY -> IPV6_ONLY
    pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes IPV4_PREFERRED -> IPV4_PREFERRED
    pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes IPV6_PREFERRED -> IPV6_PREFERRED
    pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes[] $VALUES -> $VALUES
    21:21:pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes[] values() -> values
    21:21:pro.gravit.repackage.io.netty.resolver.ResolvedAddressTypes valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:37:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver -> pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver:
# {"fileName":"RoundRobinInetAddressResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.resolver.NameResolver nameResolver -> nameResolver
    46:48:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,pro.gravit.repackage.io.netty.resolver.NameResolver) -> <init>
    55:73:void doResolve(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolve
    77:96:void doResolveAll(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolveAll
    99:99:int randomIndex(int) -> randomIndex
    104:105:void close() -> close
    37:37:int access$000(int) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver$1 -> pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver$1:
# {"fileName":"RoundRobinInetAddressResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    java.lang.String val$inetHost -> val$inetHost
    pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver this$0 -> this$0
    55:55:void <init>(pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver,pro.gravit.repackage.io.netty.util.concurrent.Promise,java.lang.String) -> <init>
    58:71:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver$2 -> pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver$2:
# {"fileName":"RoundRobinInetAddressResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver this$0 -> this$0
    77:77:void <init>(pro.gravit.repackage.io.netty.resolver.RoundRobinInetAddressResolver,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    80:94:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.resolver.SimpleNameResolver -> pro.gravit.repackage.io.netty.resolver.SimpleNameResolver:
# {"fileName":"SimpleNameResolver.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    38:40:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    47:47:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    52:53:pro.gravit.repackage.io.netty.util.concurrent.Future resolve(java.lang.String) -> resolve
    58:64:pro.gravit.repackage.io.netty.util.concurrent.Future resolve(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> resolve
    70:71:pro.gravit.repackage.io.netty.util.concurrent.Future resolveAll(java.lang.String) -> resolveAll
    76:82:pro.gravit.repackage.io.netty.util.concurrent.Future resolveAll(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> resolveAll
    void doResolve(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolve
    void doResolveAll(java.lang.String,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> doResolveAll
    97:97:void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AbstractConstant -> pro.gravit.repackage.io.netty.util.AbstractConstant:
# {"fileName":"AbstractConstant.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicLong uniqueIdGenerator -> uniqueIdGenerator
    int id -> id
    java.lang.String name -> name
    long uniquifier -> uniquifier
    33:37:void <init>(int,java.lang.String) -> <init>
    41:41:java.lang.String name() -> name
    46:46:int id() -> id
    51:51:java.lang.String toString() -> toString
    56:56:int hashCode() -> hashCode
    61:61:boolean equals(java.lang.Object) -> equals
    66:86:int compareTo(pro.gravit.repackage.io.netty.util.AbstractConstant) -> compareTo
    23:23:int compareTo(java.lang.Object) -> compareTo
    25:25:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AbstractReferenceCounted -> pro.gravit.repackage.io.netty.util.AbstractReferenceCounted:
# {"fileName":"AbstractReferenceCounted.java","id":"sourceFile"}
    long REFCNT_FIELD_OFFSET -> REFCNT_FIELD_OFFSET
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater AIF_UPDATER -> AIF_UPDATER
    pro.gravit.repackage.io.netty.util.internal.ReferenceCountUpdater updater -> updater
    int refCnt -> refCnt
    25:45:void <init>() -> <init>
    49:49:int refCnt() -> refCnt
    56:57:void setRefCnt(int) -> setRefCnt
    61:61:pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    66:66:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    71:71:pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    76:76:boolean release() -> release
    81:81:boolean release(int) -> release
    85:88:boolean handleRelease(boolean) -> handleRelease
    void deallocate() -> deallocate
    25:25:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$000() -> access$000
    25:25:long access$100() -> access$100
    26:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AbstractReferenceCounted$1 -> pro.gravit.repackage.io.netty.util.AbstractReferenceCounted$1:
# {"fileName":"AbstractReferenceCounted.java","id":"sourceFile"}
    32:32:void <init>() -> <init>
    35:35:java.util.concurrent.atomic.AtomicIntegerFieldUpdater updater() -> updater
    39:39:long unsafeOffset() -> unsafeOffset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AsciiString -> pro.gravit.repackage.io.netty.util.AsciiString:
# {"fileName":"AsciiString.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString EMPTY_STRING -> EMPTY_STRING
    char MAX_CHAR_VALUE -> MAX_CHAR_VALUE
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    byte[] value -> value
    int offset -> offset
    int length -> length
    int hash -> hash
    java.lang.String string -> string
    pro.gravit.repackage.io.netty.util.HashingStrategy CASE_INSENSITIVE_HASHER -> CASE_INSENSITIVE_HASHER
    pro.gravit.repackage.io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER -> CASE_SENSITIVE_HASHER
    79:80:void <init>(byte[]) -> <init>
    87:88:void <init>(byte[],boolean) -> <init>
    95:108:void <init>(byte[],int,int,boolean) -> <init>
    115:116:void <init>(java.nio.ByteBuffer) -> <init>
    125:126:void <init>(java.nio.ByteBuffer,boolean) -> <init>
    134:157:void <init>(java.nio.ByteBuffer,int,int,boolean) -> <init>
    163:164:void <init>(char[]) -> <init>
    170:182:void <init>(char[],int,int) -> <init>
    188:189:void <init>(char[],java.nio.charset.Charset) -> <init>
    195:204:void <init>(char[],java.nio.charset.Charset,int,int) -> <init>
    210:211:void <init>(java.lang.CharSequence) -> <init>
    217:229:void <init>(java.lang.CharSequence,int,int) -> <init>
    235:236:void <init>(java.lang.CharSequence,java.nio.charset.Charset) -> <init>
    242:251:void <init>(java.lang.CharSequence,java.nio.charset.Charset,int,int) -> <init>
    260:260:int forEachByte(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    271:275:int forEachByte(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte
    279:285:int forEachByte0(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByte0
    295:295:int forEachByteDesc(pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    306:310:int forEachByteDesc(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc
    314:320:int forEachByteDesc0(int,int,pro.gravit.repackage.io.netty.util.ByteProcessor) -> forEachByteDesc0
    326:333:byte byteAt(int) -> byteAt
    340:340:boolean isEmpty() -> isEmpty
    348:348:int length() -> length
    356:358:void arrayChanged() -> arrayChanged
    368:368:byte[] array() -> array
    377:377:int arrayOffset() -> arrayOffset
    385:385:boolean isEntireArrayUsed() -> isEntireArrayUsed
    392:392:byte[] toByteArray() -> toByteArray
    400:400:byte[] toByteArray(int,int) -> toByteArray
    412:418:void copy(int,byte[],int,int) -> copy
    422:422:char charAt(int) -> charAt
    432:432:boolean contains(java.lang.CharSequence) -> contains
    450:465:int compareTo(java.lang.CharSequence) -> compareTo
    475:503:pro.gravit.repackage.io.netty.util.AsciiString concat(java.lang.CharSequence) -> concat
    514:515:boolean endsWith(java.lang.CharSequence) -> endsWith
    526:549:boolean contentEqualsIgnoreCase(java.lang.CharSequence) -> contentEqualsIgnoreCase
    558:558:char[] toCharArray() -> toCharArray
    567:581:char[] toCharArray(int,int) -> toCharArray
    593:604:void copy(int,char[],int,int) -> copy
    613:613:pro.gravit.repackage.io.netty.util.AsciiString subSequence(int) -> subSequence
    625:625:pro.gravit.repackage.io.netty.util.AsciiString subSequence(int,int) -> subSequence
    638:651:pro.gravit.repackage.io.netty.util.AsciiString subSequence(int,int,boolean) -> subSequence
    664:664:int indexOf(java.lang.CharSequence) -> indexOf
    678:706:int indexOf(java.lang.CharSequence,int) -> indexOf
    719:734:int indexOf(char,int) -> indexOf
    748:748:int lastIndexOf(java.lang.CharSequence) -> lastIndexOf
    762:787:int lastIndexOf(java.lang.CharSequence,int) -> lastIndexOf
    802:823:boolean regionMatches(int,java.lang.CharSequence,int,int) -> regionMatches
    839:860:boolean regionMatches(boolean,int,java.lang.CharSequence,int,int) -> regionMatches
    871:891:pro.gravit.repackage.io.netty.util.AsciiString replace(char,char) -> replace
    902:902:boolean startsWith(java.lang.CharSequence) -> startsWith
    916:916:boolean startsWith(java.lang.CharSequence,int) -> startsWith
    925:946:pro.gravit.repackage.io.netty.util.AsciiString toLowerCase() -> toLowerCase
    955:976:pro.gravit.repackage.io.netty.util.AsciiString toUpperCase() -> toUpperCase
    987:1004:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    1014:1025:pro.gravit.repackage.io.netty.util.AsciiString trim() -> trim
    1035:1051:boolean contentEquals(java.lang.CharSequence) -> contentEquals
    1063:1063:boolean matches(java.lang.String) -> matches
    1078:1078:pro.gravit.repackage.io.netty.util.AsciiString[] split(java.lang.String,int) -> split
    1085:1118:pro.gravit.repackage.io.netty.util.AsciiString[] split(char) -> split
    1128:1133:int hashCode() -> hashCode
    1138:1148:boolean equals(java.lang.Object) -> equals
    1157:1162:java.lang.String toString() -> toString
    1170:1170:java.lang.String toString(int) -> toString
    1177:1189:java.lang.String toString(int,int) -> toString
    1193:1193:boolean parseBoolean() -> parseBoolean
    1197:1197:char parseChar() -> parseChar
    1201:1206:char parseChar(int) -> parseChar
    1210:1210:short parseShort() -> parseShort
    1214:1214:short parseShort(int) -> parseShort
    1218:1218:short parseShort(int,int) -> parseShort
    1222:1227:short parseShort(int,int,int) -> parseShort
    1231:1231:int parseInt() -> parseInt
    1235:1235:int parseInt(int) -> parseInt
    1239:1239:int parseInt(int,int) -> parseInt
    1243:1257:int parseInt(int,int,int) -> parseInt
    1261:1284:int parseInt(int,int,int,boolean) -> parseInt
    1288:1288:long parseLong() -> parseLong
    1292:1292:long parseLong(int) -> parseLong
    1296:1296:long parseLong(int,int) -> parseLong
    1300:1314:long parseLong(int,int,int) -> parseLong
    1318:1341:long parseLong(int,int,int,boolean) -> parseLong
    1345:1345:float parseFloat() -> parseFloat
    1349:1349:float parseFloat(int,int) -> parseFloat
    1353:1353:double parseDouble() -> parseDouble
    1357:1357:double parseDouble(int,int) -> parseDouble
    1391:1391:pro.gravit.repackage.io.netty.util.AsciiString of(java.lang.CharSequence) -> of
    1401:1403:pro.gravit.repackage.io.netty.util.AsciiString cached(java.lang.String) -> cached
    1412:1419:int hashCode(java.lang.CharSequence) -> hashCode
    1426:1426:boolean contains(java.lang.CharSequence,java.lang.CharSequence) -> contains
    1433:1433:boolean containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> containsIgnoreCase
    1441:1460:boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> contentEqualsIgnoreCase
    1473:1478:boolean containsContentEqualsIgnoreCase(java.util.Collection,java.lang.CharSequence) -> containsContentEqualsIgnoreCase
    1491:1496:boolean containsAllContentEqualsIgnoreCase(java.util.Collection,java.util.Collection) -> containsAllContentEqualsIgnoreCase
    1503:1523:boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence) -> contentEquals
    1527:1531:pro.gravit.repackage.io.netty.util.AsciiString[] toAsciiStringArray(java.lang.String[]) -> toAsciiStringArray
    1573:1593:boolean contains(java.lang.CharSequence,java.lang.CharSequence,pro.gravit.repackage.io.netty.util.AsciiString$CharEqualityComparator) -> contains
    1600:1619:boolean regionMatchesCharSequences(java.lang.CharSequence,int,java.lang.CharSequence,int,int,pro.gravit.repackage.io.netty.util.AsciiString$CharEqualityComparator) -> regionMatchesCharSequences
    1634:1646:boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int) -> regionMatches
    1663:1678:boolean regionMatchesAscii(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int) -> regionMatchesAscii
    1714:1733:int indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOfIgnoreCase
    1767:1786:int indexOfIgnoreCaseAscii(java.lang.CharSequence,java.lang.CharSequence,int) -> indexOfIgnoreCaseAscii
    1801:1815:int indexOf(java.lang.CharSequence,char,int) -> indexOf
    1819:1819:boolean equalsIgnoreCase(byte,byte) -> equalsIgnoreCase
    1823:1823:boolean equalsIgnoreCase(char,char) -> equalsIgnoreCase
    1827:1827:byte toLowerCase(byte) -> toLowerCase
    1837:1837:char toLowerCase(char) -> toLowerCase
    1841:1841:byte toUpperCase(byte) -> toUpperCase
    1845:1845:boolean isLowerCase(byte) -> isLowerCase
    1849:1849:boolean isUpperCase(byte) -> isUpperCase
    1853:1853:boolean isUpperCase(char) -> isUpperCase
    1857:1857:byte c2b(char) -> c2b
    1861:1861:byte c2b0(char) -> c2b0
    1865:1865:char b2c(byte) -> b2c
    47:47:java.lang.CharSequence subSequence(int,int) -> subSequence
    47:47:int compareTo(java.lang.Object) -> compareTo
    47:47:boolean access$000(char,char) -> access$000
    48:1373:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AsciiString$1 -> pro.gravit.repackage.io.netty.util.AsciiString$1:
# {"fileName":"AsciiString.java","id":"sourceFile"}
    1361:1361:void <init>() -> <init>
    1364:1364:int hashCode(java.lang.CharSequence) -> hashCode
    1369:1369:boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    1361:1361:boolean equals(java.lang.Object,java.lang.Object) -> equals
    1361:1361:int hashCode(java.lang.Object) -> hashCode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AsciiString$2 -> pro.gravit.repackage.io.netty.util.AsciiString$2:
# {"fileName":"AsciiString.java","id":"sourceFile"}
    1374:1374:void <init>() -> <init>
    1377:1377:int hashCode(java.lang.CharSequence) -> hashCode
    1382:1382:boolean equals(java.lang.CharSequence,java.lang.CharSequence) -> equals
    1374:1374:boolean equals(java.lang.Object,java.lang.Object) -> equals
    1374:1374:int hashCode(java.lang.Object) -> hashCode
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AsciiString$AsciiCaseInsensitiveCharEqualityComparator -> pro.gravit.repackage.io.netty.util.AsciiString$AsciiCaseInsensitiveCharEqualityComparator:
# {"fileName":"AsciiString.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString$AsciiCaseInsensitiveCharEqualityComparator INSTANCE -> INSTANCE
    1551:1551:void <init>() -> <init>
    1555:1555:boolean equals(char,char) -> equals
    1550:1550:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AsciiString$CharEqualityComparator -> pro.gravit.repackage.io.netty.util.AsciiString$CharEqualityComparator:
# {"fileName":"AsciiString.java","id":"sourceFile"}
    boolean equals(char,char) -> equals
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AsciiString$DefaultCharEqualityComparator -> pro.gravit.repackage.io.netty.util.AsciiString$DefaultCharEqualityComparator:
# {"fileName":"AsciiString.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString$DefaultCharEqualityComparator INSTANCE -> INSTANCE
    1540:1540:void <init>() -> <init>
    1544:1544:boolean equals(char,char) -> equals
    1539:1539:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AsciiString$GeneralCaseInsensitiveCharEqualityComparator -> pro.gravit.repackage.io.netty.util.AsciiString$GeneralCaseInsensitiveCharEqualityComparator:
# {"fileName":"AsciiString.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AsciiString$GeneralCaseInsensitiveCharEqualityComparator INSTANCE -> INSTANCE
    1562:1562:void <init>() -> <init>
    1567:1568:boolean equals(char,char) -> equals
    1561:1561:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AsyncMapping -> pro.gravit.repackage.io.netty.util.AsyncMapping:
# {"fileName":"AsyncMapping.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future map(java.lang.Object,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> map
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Attribute -> pro.gravit.repackage.io.netty.util.Attribute:
# {"fileName":"Attribute.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.AttributeKey key() -> key
    java.lang.Object get() -> get
    void set(java.lang.Object) -> set
    java.lang.Object getAndSet(java.lang.Object) -> getAndSet
    java.lang.Object setIfAbsent(java.lang.Object) -> setIfAbsent
    java.lang.Object getAndRemove() -> getAndRemove
    boolean compareAndSet(java.lang.Object,java.lang.Object) -> compareAndSet
    void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AttributeKey -> pro.gravit.repackage.io.netty.util.AttributeKey:
# {"fileName":"AttributeKey.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ConstantPool pool -> pool
    39:39:pro.gravit.repackage.io.netty.util.AttributeKey valueOf(java.lang.String) -> valueOf
    46:46:boolean exists(java.lang.String) -> exists
    55:55:pro.gravit.repackage.io.netty.util.AttributeKey newInstance(java.lang.String) -> newInstance
    60:60:pro.gravit.repackage.io.netty.util.AttributeKey valueOf(java.lang.Class,java.lang.String) -> valueOf
    64:65:void <init>(int,java.lang.String) -> <init>
    25:25:void <init>(int,java.lang.String,pro.gravit.repackage.io.netty.util.AttributeKey$1) -> <init>
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AttributeKey$1 -> pro.gravit.repackage.io.netty.util.AttributeKey$1:
# {"fileName":"AttributeKey.java","id":"sourceFile"}
    27:27:void <init>() -> <init>
    30:30:pro.gravit.repackage.io.netty.util.AttributeKey newConstant(int,java.lang.String) -> newConstant
    27:27:pro.gravit.repackage.io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.AttributeMap -> pro.gravit.repackage.io.netty.util.AttributeMap:
# {"fileName":"AttributeMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Attribute attr(pro.gravit.repackage.io.netty.util.AttributeKey) -> attr
    boolean hasAttr(pro.gravit.repackage.io.netty.util.AttributeKey) -> hasAttr
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.BooleanSupplier -> pro.gravit.repackage.io.netty.util.BooleanSupplier:
# {"fileName":"BooleanSupplier.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.BooleanSupplier FALSE_SUPPLIER -> FALSE_SUPPLIER
    pro.gravit.repackage.io.netty.util.BooleanSupplier TRUE_SUPPLIER -> TRUE_SUPPLIER
    boolean get() -> get
    32:42:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.BooleanSupplier$1 -> pro.gravit.repackage.io.netty.util.BooleanSupplier$1:
# {"fileName":"BooleanSupplier.java","id":"sourceFile"}
    32:32:void <init>() -> <init>
    35:35:boolean get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.BooleanSupplier$2 -> pro.gravit.repackage.io.netty.util.BooleanSupplier$2:
# {"fileName":"BooleanSupplier.java","id":"sourceFile"}
    42:42:void <init>() -> <init>
    45:45:boolean get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ByteProcessor -> pro.gravit.repackage.io.netty.util.ByteProcessor:
# {"fileName":"ByteProcessor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_NUL -> FIND_NUL
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_NON_NUL -> FIND_NON_NUL
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_CR -> FIND_CR
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_NON_CR -> FIND_NON_CR
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_LF -> FIND_LF
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_NON_LF -> FIND_NON_LF
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_SEMI_COLON -> FIND_SEMI_COLON
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_COMMA -> FIND_COMMA
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_ASCII_SPACE -> FIND_ASCII_SPACE
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_CRLF -> FIND_CRLF
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_NON_CRLF -> FIND_NON_CRLF
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_LINEAR_WHITESPACE -> FIND_LINEAR_WHITESPACE
    pro.gravit.repackage.io.netty.util.ByteProcessor FIND_NON_LINEAR_WHITESPACE -> FIND_NON_LINEAR_WHITESPACE
    boolean process(byte) -> process
    61:136:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ByteProcessor$1 -> pro.gravit.repackage.io.netty.util.ByteProcessor$1:
# {"fileName":"ByteProcessor.java","id":"sourceFile"}
    106:106:void <init>() -> <init>
    109:109:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ByteProcessor$2 -> pro.gravit.repackage.io.netty.util.ByteProcessor$2:
# {"fileName":"ByteProcessor.java","id":"sourceFile"}
    116:116:void <init>() -> <init>
    119:119:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ByteProcessor$3 -> pro.gravit.repackage.io.netty.util.ByteProcessor$3:
# {"fileName":"ByteProcessor.java","id":"sourceFile"}
    126:126:void <init>() -> <init>
    129:129:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ByteProcessor$4 -> pro.gravit.repackage.io.netty.util.ByteProcessor$4:
# {"fileName":"ByteProcessor.java","id":"sourceFile"}
    136:136:void <init>() -> <init>
    139:139:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ByteProcessor$IndexNotOfProcessor -> pro.gravit.repackage.io.netty.util.ByteProcessor$IndexNotOfProcessor:
# {"fileName":"ByteProcessor.java","id":"sourceFile"}
    byte byteToNotFind -> byteToNotFind
    48:50:void <init>(byte) -> <init>
    54:54:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ByteProcessor$IndexOfProcessor -> pro.gravit.repackage.io.netty.util.ByteProcessor$IndexOfProcessor:
# {"fileName":"ByteProcessor.java","id":"sourceFile"}
    byte byteToFind -> byteToFind
    32:34:void <init>(byte) -> <init>
    38:38:boolean process(byte) -> process
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ByteProcessorUtils -> pro.gravit.repackage.io.netty.util.ByteProcessorUtils:
# {"fileName":"ByteProcessorUtils.java","id":"sourceFile"}
    byte SPACE -> SPACE
    byte HTAB -> HTAB
    byte CARRIAGE_RETURN -> CARRIAGE_RETURN
    byte LINE_FEED -> LINE_FEED
    23:24:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.CharsetUtil -> pro.gravit.repackage.io.netty.util.CharsetUtil:
# {"fileName":"CharsetUtil.java","id":"sourceFile"}
    java.nio.charset.Charset UTF_16 -> UTF_16
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset[] CHARSETS -> CHARSETS
    69:69:java.nio.charset.Charset[] values() -> values
    77:77:java.nio.charset.CharsetEncoder getEncoder(java.nio.charset.Charset) -> getEncoder
    90:93:java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction) -> encoder
    104:104:java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction) -> encoder
    114:125:java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset) -> encoder
    133:133:java.nio.charset.CharsetDecoder getDecoder(java.nio.charset.Charset) -> getDecoder
    146:149:java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction) -> decoder
    160:160:java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction) -> decoder
    170:181:java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset) -> decoder
    184:184:void <init>() -> <init>
    37:65:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Constant -> pro.gravit.repackage.io.netty.util.Constant:
# {"fileName":"Constant.java","id":"sourceFile"}
    int id() -> id
    java.lang.String name() -> name
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ConstantPool -> pro.gravit.repackage.io.netty.util.ConstantPool:
# {"fileName":"ConstantPool.java","id":"sourceFile"}
    java.util.concurrent.ConcurrentMap constants -> constants
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    32:36:void <init>() -> <init>
    42:45:pro.gravit.repackage.io.netty.util.Constant valueOf(java.lang.Class,java.lang.String) -> valueOf
    57:57:pro.gravit.repackage.io.netty.util.Constant valueOf(java.lang.String) -> valueOf
    66:75:pro.gravit.repackage.io.netty.util.Constant getOrCreate(java.lang.String) -> getOrCreate
    82:82:boolean exists(java.lang.String) -> exists
    90:90:pro.gravit.repackage.io.netty.util.Constant newInstance(java.lang.String) -> newInstance
    99:108:pro.gravit.repackage.io.netty.util.Constant createOrThrow(java.lang.String) -> createOrThrow
    pro.gravit.repackage.io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
    115:115:int nextId() -> nextId
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DefaultAttributeMap -> pro.gravit.repackage.io.netty.util.DefaultAttributeMap:
# {"fileName":"DefaultAttributeMap.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater ATTRIBUTES_UPDATER -> ATTRIBUTES_UPDATER
    pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute[] EMPTY_ATTRIBUTES -> EMPTY_ATTRIBUTES
    pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute[] attributes -> attributes
    boolean $assertionsDisabled -> $assertionsDisabled
    29:84:void <init>() -> <init>
    40:61:int searchAttributeByKey(pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute[],pro.gravit.repackage.io.netty.util.AttributeKey) -> searchAttributeByKey
    67:82:void orderedCopyOnInsert(pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute[],int,pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute[],pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute) -> orderedCopyOnInsert
    89:119:pro.gravit.repackage.io.netty.util.Attribute attr(pro.gravit.repackage.io.netty.util.AttributeKey) -> attr
    124:125:boolean hasAttr(pro.gravit.repackage.io.netty.util.AttributeKey) -> hasAttr
    130:153:void removeAttributeIfMatch(pro.gravit.repackage.io.netty.util.AttributeKey,pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute) -> removeAttributeIfMatch
    29:29:void access$200(pro.gravit.repackage.io.netty.util.DefaultAttributeMap,pro.gravit.repackage.io.netty.util.AttributeKey,pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$200
    29:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute -> pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute:
# {"fileName":"DefaultAttributeMap.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater MAP_UPDATER -> MAP_UPDATER
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.util.DefaultAttributeMap attributeMap -> attributeMap
    pro.gravit.repackage.io.netty.util.AttributeKey key -> key
    167:170:void <init>(pro.gravit.repackage.io.netty.util.DefaultAttributeMap,pro.gravit.repackage.io.netty.util.AttributeKey) -> <init>
    174:174:pro.gravit.repackage.io.netty.util.AttributeKey key() -> key
    178:178:boolean isRemoved() -> isRemoved
    183:189:java.lang.Object setIfAbsent(java.lang.Object) -> setIfAbsent
    194:200:java.lang.Object getAndRemove() -> getAndRemove
    205:211:void remove() -> remove
    157:157:pro.gravit.repackage.io.netty.util.AttributeKey access$000(pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$000
    157:157:boolean access$100(pro.gravit.repackage.io.netty.util.DefaultAttributeMap$DefaultAttribute) -> access$100
    159:160:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DomainMappingBuilder -> pro.gravit.repackage.io.netty.util.DomainMappingBuilder:
# {"fileName":"DomainMappingBuilder.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder builder -> builder
    36:38:void <init>(java.lang.Object) -> <init>
    47:49:void <init>(int,java.lang.Object) -> <init>
    64:65:pro.gravit.repackage.io.netty.util.DomainMappingBuilder add(java.lang.String,java.lang.Object) -> add
    75:75:pro.gravit.repackage.io.netty.util.DomainNameMapping build() -> build
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DomainNameMapping -> pro.gravit.repackage.io.netty.util.DomainNameMapping:
# {"fileName":"DomainNameMapping.java","id":"sourceFile"}
    java.lang.Object defaultValue -> defaultValue
    java.util.Map map -> map
    java.util.Map unmodifiableMap -> unmodifiableMap
    54:55:void <init>(java.lang.Object) -> <init>
    67:68:void <init>(int,java.lang.Object) -> <init>
    70:75:void <init>(java.util.Map,java.lang.Object) -> <init>
    91:92:pro.gravit.repackage.io.netty.util.DomainNameMapping add(java.lang.String,java.lang.Object) -> add
    99:103:boolean matches(java.lang.String,java.lang.String) -> matches
    110:113:java.lang.String normalizeHostname(java.lang.String) -> normalizeHostname
    117:124:boolean needsNormalization(java.lang.String) -> needsNormalization
    129:138:java.lang.Object map(java.lang.String) -> map
    145:145:java.util.Map asMap() -> asMap
    150:150:java.lang.String toString() -> toString
    38:38:java.lang.Object map(java.lang.Object) -> map
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder -> pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder:
# {"fileName":"DomainNameMappingBuilder.java","id":"sourceFile"}
    java.lang.Object defaultValue -> defaultValue
    java.util.Map map -> map
    45:46:void <init>(java.lang.Object) -> <init>
    55:58:void <init>(int,java.lang.Object) -> <init>
    73:74:pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder add(java.lang.String,java.lang.Object) -> add
    84:84:pro.gravit.repackage.io.netty.util.DomainNameMapping build() -> build
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder$1 -> pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder$1:
# {"fileName":"DomainNameMappingBuilder.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping -> pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping:
# {"fileName":"DomainNameMappingBuilder.java","id":"sourceFile"}
    java.lang.String REPR_HEADER -> REPR_HEADER
    java.lang.String REPR_MAP_OPENING -> REPR_MAP_OPENING
    java.lang.String REPR_MAP_CLOSING -> REPR_MAP_CLOSING
    int REPR_CONST_PART_LENGTH -> REPR_CONST_PART_LENGTH
    java.lang.String[] domainNamePatterns -> domainNamePatterns
    java.lang.Object[] values -> values
    java.util.Map map -> map
    106:125:void <init>(java.lang.Object,java.util.Map) -> <init>
    130:130:pro.gravit.repackage.io.netty.util.DomainNameMapping add(java.lang.String,java.lang.Object) -> add
    136:147:java.lang.Object map(java.lang.String) -> map
    152:152:java.util.Map asMap() -> asMap
    157:178:java.lang.String toString() -> toString
    194:194:int estimateBufferSize(int,int,int) -> estimateBufferSize
    199:199:java.lang.StringBuilder appendMapping(java.lang.StringBuilder,int) -> appendMapping
    203:203:java.lang.StringBuilder appendMapping(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendMapping
    93:93:java.lang.Object map(java.lang.Object) -> map
    93:93:void <init>(java.lang.Object,java.util.Map,pro.gravit.repackage.io.netty.util.DomainNameMappingBuilder$1) -> <init>
    97:98:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DomainWildcardMappingBuilder -> pro.gravit.repackage.io.netty.util.DomainWildcardMappingBuilder:
# {"fileName":"DomainWildcardMappingBuilder.java","id":"sourceFile"}
    java.lang.Object defaultValue -> defaultValue
    java.util.Map map -> map
    40:41:void <init>(java.lang.Object) -> <init>
    50:53:void <init>(int,java.lang.Object) -> <init>
    73:75:pro.gravit.repackage.io.netty.util.DomainWildcardMappingBuilder add(java.lang.String,java.lang.Object) -> add
    79:90:java.lang.String normalizeHostName(java.lang.String) -> normalizeHostName
    98:98:pro.gravit.repackage.io.netty.util.Mapping build() -> build
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping -> pro.gravit.repackage.io.netty.util.DomainWildcardMappingBuilder$ImmutableDomainWildcardMapping:
# {"fileName":"DomainWildcardMappingBuilder.java","id":"sourceFile"}
    java.lang.String REPR_HEADER -> REPR_HEADER
    java.lang.String REPR_MAP_OPENING -> REPR_MAP_OPENING
    java.lang.String REPR_MAP_CLOSING -> REPR_MAP_CLOSING
    java.lang.Object defaultValue -> defaultValue
    java.util.Map map -> map
    109:112:void <init>(java.lang.Object,java.util.Map) -> <init>
    116:135:java.lang.Object map(java.lang.String) -> map
    140:140:java.lang.String normalize(java.lang.String) -> normalize
    145:156:java.lang.String toString() -> toString
    101:101:java.lang.Object map(java.lang.Object) -> map
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.HashedWheelTimer -> pro.gravit.repackage.io.netty.util.HashedWheelTimer:
# {"fileName":"HashedWheelTimer.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicInteger INSTANCE_COUNTER -> INSTANCE_COUNTER
    java.util.concurrent.atomic.AtomicBoolean WARNED_TOO_MANY_INSTANCES -> WARNED_TOO_MANY_INSTANCES
    int INSTANCE_COUNT_LIMIT -> INSTANCE_COUNT_LIMIT
    long MILLISECOND_NANOS -> MILLISECOND_NANOS
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector leakDetector -> leakDetector
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater WORKER_STATE_UPDATER -> WORKER_STATE_UPDATER
    pro.gravit.repackage.io.netty.util.ResourceLeakTracker leak -> leak
    pro.gravit.repackage.io.netty.util.HashedWheelTimer$Worker worker -> worker
    java.lang.Thread workerThread -> workerThread
    int WORKER_STATE_INIT -> WORKER_STATE_INIT
    int WORKER_STATE_STARTED -> WORKER_STATE_STARTED
    int WORKER_STATE_SHUTDOWN -> WORKER_STATE_SHUTDOWN
    int workerState -> workerState
    long tickDuration -> tickDuration
    pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelBucket[] wheel -> wheel
    int mask -> mask
    java.util.concurrent.CountDownLatch startTimeInitialized -> startTimeInitialized
    java.util.Queue timeouts -> timeouts
    java.util.Queue cancelledTimeouts -> cancelledTimeouts
    java.util.concurrent.atomic.AtomicLong pendingTimeouts -> pendingTimeouts
    long maxPendingTimeouts -> maxPendingTimeouts
    java.util.concurrent.Executor taskExecutor -> taskExecutor
    long startTime -> startTime
    boolean $assertionsDisabled -> $assertionsDisabled
    128:129:void <init>() -> <init>
    142:143:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    156:157:void <init>(long,java.util.concurrent.TimeUnit,int) -> <init>
    169:170:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    185:186:void <init>(java.util.concurrent.ThreadFactory,long,java.util.concurrent.TimeUnit) -> <init>
    203:204:void <init>(java.util.concurrent.ThreadFactory,long,java.util.concurrent.TimeUnit,int) -> <init>
    224:225:void <init>(java.util.concurrent.ThreadFactory,long,java.util.concurrent.TimeUnit,int,boolean) -> <init>
    251:253:void <init>(java.util.concurrent.ThreadFactory,long,java.util.concurrent.TimeUnit,int,boolean,long) -> <init>
    101:320:void <init>(java.util.concurrent.ThreadFactory,long,java.util.concurrent.TimeUnit,int,boolean,long,java.util.concurrent.Executor) -> <init>
    325:333:void finalize() -> finalize
    337:344:pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelBucket[] createWheel(int) -> createWheel
    348:352:int normalizeTicksPerWheel(int) -> normalizeTicksPerWheel
    363:385:void start() -> start
    389:430:java.util.Set stop() -> stop
    435:459:pro.gravit.repackage.io.netty.util.Timeout newTimeout(pro.gravit.repackage.io.netty.util.TimerTask,long,java.util.concurrent.TimeUnit) -> newTimeout
    466:466:long pendingTimeouts() -> pendingTimeouts
    470:476:void reportTooManyInstances() -> reportTooManyInstances
    85:85:long access$202(pro.gravit.repackage.io.netty.util.HashedWheelTimer,long) -> access$202
    85:85:long access$200(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$200
    85:85:java.util.concurrent.CountDownLatch access$300(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$300
    85:85:int access$400(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$400
    85:85:pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelBucket[] access$500(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$500
    85:85:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$600() -> access$600
    85:85:java.util.Queue access$700(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$700
    85:85:long access$900(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$900
    85:85:java.util.Queue access$1000(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$1000
    85:85:java.util.concurrent.atomic.AtomicLong access$1100(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$1100
    85:85:java.util.concurrent.Executor access$1200(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> access$1200
    85:98:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.HashedWheelTimer$1 -> pro.gravit.repackage.io.netty.util.HashedWheelTimer$1:
# {"fileName":"HashedWheelTimer.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelBucket -> pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelBucket:
# {"fileName":"HashedWheelTimer.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout head -> head
    pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout tail -> tail
    boolean $assertionsDisabled -> $assertionsDisabled
    758:758:void <init>() -> <init>
    767:776:void addTimeout(pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout) -> addTimeout
    782:803:void expireTimeouts(long) -> expireTimeouts
    806:832:pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout remove(pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout) -> remove
    840:848:void clearTimeouts(java.util.Set) -> clearTimeouts
    852:868:pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout pollTimeout() -> pollTimeout
    758:758:void <init>(pro.gravit.repackage.io.netty.util.HashedWheelTimer$1) -> <init>
    758:758:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout -> pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout:
# {"fileName":"HashedWheelTimer.java","id":"sourceFile"}
    int ST_INIT -> ST_INIT
    int ST_CANCELLED -> ST_CANCELLED
    int ST_EXPIRED -> ST_EXPIRED
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE_UPDATER -> STATE_UPDATER
    pro.gravit.repackage.io.netty.util.HashedWheelTimer timer -> timer
    pro.gravit.repackage.io.netty.util.TimerTask task -> task
    long deadline -> deadline
    int state -> state
    long remainingRounds -> remainingRounds
    pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout next -> next
    pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout prev -> prev
    pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelBucket bucket -> bucket
    626:645:void <init>(pro.gravit.repackage.io.netty.util.HashedWheelTimer,pro.gravit.repackage.io.netty.util.TimerTask,long) -> <init>
    649:649:pro.gravit.repackage.io.netty.util.Timer timer() -> timer
    654:654:pro.gravit.repackage.io.netty.util.TimerTask task() -> task
    660:667:boolean cancel() -> cancel
    671:677:void remove() -> remove
    680:680:boolean compareAndSetState(int,int) -> compareAndSetState
    684:684:int state() -> state
    689:689:boolean isCancelled() -> isCancelled
    694:694:boolean isExpired() -> isExpired
    698:710:void expire() -> expire
    715:721:void run() -> run
    725:749:java.lang.String toString() -> toString
    614:614:long access$800(pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout) -> access$800
    614:614:pro.gravit.repackage.io.netty.util.HashedWheelTimer access$1300(pro.gravit.repackage.io.netty.util.HashedWheelTimer$HashedWheelTimeout) -> access$1300
    619:620:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.HashedWheelTimer$Worker -> pro.gravit.repackage.io.netty.util.HashedWheelTimer$Worker:
# {"fileName":"HashedWheelTimer.java","id":"sourceFile"}
    java.util.Set unprocessedTimeouts -> unprocessedTimeouts
    long tick -> tick
    pro.gravit.repackage.io.netty.util.HashedWheelTimer this$0 -> this$0
    478:479:void <init>(pro.gravit.repackage.io.netty.util.HashedWheelTimer) -> <init>
    486:522:void run() -> run
    527:547:void transferTimeoutsToBuckets() -> transferTimeoutsToBuckets
    551:564:void processCancelledTasks() -> processCancelledTasks
    573:606:long waitForNextTick() -> waitForNextTick
    610:610:java.util.Set unprocessedTimeouts() -> unprocessedTimeouts
    478:478:void <init>(pro.gravit.repackage.io.netty.util.HashedWheelTimer,pro.gravit.repackage.io.netty.util.HashedWheelTimer$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.HashingStrategy -> pro.gravit.repackage.io.netty.util.HashingStrategy:
# {"fileName":"HashingStrategy.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.HashingStrategy JAVA_HASHER -> JAVA_HASHER
    int hashCode(java.lang.Object) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    62:62:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.HashingStrategy$1 -> pro.gravit.repackage.io.netty.util.HashingStrategy$1:
# {"fileName":"HashingStrategy.java","id":"sourceFile"}
    62:62:void <init>() -> <init>
    65:65:int hashCode(java.lang.Object) -> hashCode
    70:70:boolean equals(java.lang.Object,java.lang.Object) -> equals
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.IllegalReferenceCountException -> pro.gravit.repackage.io.netty.util.IllegalReferenceCountException:
# {"fileName":"IllegalReferenceCountException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    27:27:void <init>() -> <init>
    30:31:void <init>(int) -> <init>
    34:35:void <init>(int,int) -> <init>
    38:39:void <init>(java.lang.String) -> <init>
    42:43:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    46:47:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.IntSupplier -> pro.gravit.repackage.io.netty.util.IntSupplier:
# {"fileName":"IntSupplier.java","id":"sourceFile"}
    int get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Mapping -> pro.gravit.repackage.io.netty.util.Mapping:
# {"fileName":"Mapping.java","id":"sourceFile"}
    java.lang.Object map(java.lang.Object) -> map
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtil -> pro.gravit.repackage.io.netty.util.NetUtil:
# {"fileName":"NetUtil.java","id":"sourceFile"}
    java.net.Inet4Address LOCALHOST4 -> LOCALHOST4
    java.net.Inet6Address LOCALHOST6 -> LOCALHOST6
    java.net.InetAddress LOCALHOST -> LOCALHOST
    java.net.NetworkInterface LOOPBACK_IF -> LOOPBACK_IF
    java.util.Collection NETWORK_INTERFACES -> NETWORK_INTERFACES
    int SOMAXCONN -> SOMAXCONN
    int IPV6_WORD_COUNT -> IPV6_WORD_COUNT
    int IPV6_MAX_CHAR_COUNT -> IPV6_MAX_CHAR_COUNT
    int IPV6_BYTE_COUNT -> IPV6_BYTE_COUNT
    int IPV6_MAX_CHAR_BETWEEN_SEPARATOR -> IPV6_MAX_CHAR_BETWEEN_SEPARATOR
    int IPV6_MIN_SEPARATORS -> IPV6_MIN_SEPARATORS
    int IPV6_MAX_SEPARATORS -> IPV6_MAX_SEPARATORS
    int IPV4_MAX_CHAR_BETWEEN_SEPARATOR -> IPV4_MAX_CHAR_BETWEEN_SEPARATOR
    int IPV4_SEPARATORS -> IPV4_SEPARATORS
    boolean IPV4_PREFERRED -> IPV4_PREFERRED
    boolean IPV6_ADDRESSES_PREFERRED -> IPV6_ADDRESSES_PREFERRED
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    228:252:java.lang.Integer sysctlGetInt(java.lang.String) -> sysctlGetInt
    263:263:boolean isIpV4StackPreferred() -> isIpV4StackPreferred
    274:274:boolean isIpV6AddressesPreferred() -> isIpV6AddressesPreferred
    282:298:byte[] createByteArrayFromIpAddressString(java.lang.String) -> createByteArrayFromIpAddressString
    306:351:java.net.InetAddress createInetAddressFromIpAddressString(java.lang.String) -> createInetAddressFromIpAddressString
    355:355:int decimalDigit(java.lang.String,int) -> decimalDigit
    359:369:byte ipv4WordToByte(java.lang.String,int,int) -> ipv4WordToByte
    375:379:byte[] validIpV4ToBytes(java.lang.String) -> validIpV4ToBytes
    387:389:int ipv4AddressToInt(java.net.Inet4Address) -> ipv4AddressToInt
    399:407:java.lang.String intToIpAddress(int) -> intToIpAddress
    417:417:java.lang.String bytesToIpAddress(byte[]) -> bytesToIpAddress
    427:441:java.lang.String bytesToIpAddress(byte[],int,int) -> bytesToIpAddress
    446:446:boolean isValidIpV6Address(java.lang.String) -> isValidIpV6Address
    450:564:boolean isValidIpV6Address(java.lang.CharSequence) -> isValidIpV6Address
    570:581:boolean isValidIpV4Word(java.lang.CharSequence,int,int) -> isValidIpV4Word
    585:585:boolean isValidHexChar(char) -> isValidHexChar
    589:589:boolean isValidNumericChar(char) -> isValidNumericChar
    593:593:boolean isValidIPv4MappedChar(char) -> isValidIPv4MappedChar
    600:600:boolean isValidIPv4MappedSeparators(byte,byte,boolean) -> isValidIPv4MappedSeparators
    604:607:boolean isValidIPv4Mapped(byte[],int,int,int) -> isValidIPv4Mapped
    617:617:boolean isValidIpV4Address(java.lang.CharSequence) -> isValidIpV4Address
    627:627:boolean isValidIpV4Address(java.lang.String) -> isValidIpV4Address
    631:633:boolean isValidIpV4Address(java.lang.CharSequence,int,int) -> isValidIpV4Address
    638:644:boolean isValidIpV4Address(java.lang.String,int,int) -> isValidIpV4Address
    649:655:boolean isValidIpV4Address(pro.gravit.repackage.io.netty.util.AsciiString,int,int) -> isValidIpV4Address
    660:666:boolean isValidIpV4Address0(java.lang.CharSequence,int,int) -> isValidIpV4Address0
    677:677:java.net.Inet6Address getByName(java.lang.CharSequence) -> getByName
    695:702:java.net.Inet6Address getByName(java.lang.CharSequence,boolean) -> getByName
    722:884:byte[] getIPv6ByName(java.lang.CharSequence,boolean) -> getIPv6ByName
    895:906:java.lang.String toSocketAddressString(java.net.InetSocketAddress) -> toSocketAddressString
    913:915:java.lang.String toSocketAddressString(java.lang.String,int) -> toSocketAddressString
    919:929:java.lang.StringBuilder newSocketAddressStringBuilder(java.lang.String,java.lang.String,boolean) -> newSocketAddressStringBuilder
    945:945:java.lang.String toAddressString(java.net.InetAddress) -> toAddressString
    973:980:java.lang.String toAddressString(java.net.InetAddress,boolean) -> toAddressString
    984:1067:java.lang.String toAddressString(byte[],int,boolean) -> toAddressString
    1077:1077:java.lang.String getHostname(java.net.InetSocketAddress) -> getHostname
    1092:1092:boolean inRangeEndExclusive(int,int,int) -> inRangeEndExclusive
    1098:1100:void <init>() -> <init>
    51:51:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$100() -> access$100
    51:51:java.lang.Integer access$200(java.lang.String) -> access$200
    128:162:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtil$1 -> pro.gravit.repackage.io.netty.util.NetUtil$1:
# {"fileName":"NetUtil.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtil$SoMaxConnAction -> pro.gravit.repackage.io.netty.util.NetUtil$SoMaxConnAction:
# {"fileName":"NetUtil.java","id":"sourceFile"}
    164:164:void <init>() -> <init>
    171:218:java.lang.Integer run() -> run
    164:164:java.lang.Object run() -> run
    164:164:void <init>(pro.gravit.repackage.io.netty.util.NetUtil$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilInitializations -> pro.gravit.repackage.io.netty.util.NetUtilInitializations:
# {"fileName":"NetUtilInitializations.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    40:41:void <init>() -> <init>
    44:54:java.net.Inet4Address createLocalhost4() -> createLocalhost4
    58:68:java.net.Inet6Address createLocalhost6() -> createLocalhost6
    72:83:java.util.Collection networkInterfaces() -> networkInterfaces
    89:162:pro.gravit.repackage.io.netty.util.NetUtilInitializations$NetworkIfaceAndInetAddress determineLoopback(java.util.Collection,java.net.Inet4Address,java.net.Inet6Address) -> determineLoopback
    38:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilInitializations$NetworkIfaceAndInetAddress -> pro.gravit.repackage.io.netty.util.NetUtilInitializations$NetworkIfaceAndInetAddress:
# {"fileName":"NetUtilInitializations.java","id":"sourceFile"}
    java.net.NetworkInterface iface -> iface
    java.net.InetAddress address -> address
    169:172:void <init>(java.net.NetworkInterface,java.net.InetAddress) -> <init>
    175:175:java.net.NetworkInterface iface() -> iface
    179:179:java.net.InetAddress address() -> address
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    java.net.Inet4Address LOCALHOST4 -> LOCALHOST4
    java.net.Inet6Address LOCALHOST6 -> LOCALHOST6
    java.net.InetAddress LOCALHOST -> LOCALHOST
    java.util.Collection NETWORK_INTERFACES -> NETWORK_INTERFACES
    30:31:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhost4Accessor -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhost4Accessor:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    49:49:void <init>() -> <init>
    52:52:java.net.Inet4Address get() -> get
    57:57:void set(java.net.Inet4Address) -> set
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhost4LazyHolder -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhost4LazyHolder:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    java.net.Inet4Address LOCALHOST4 -> LOCALHOST4
    60:60:void <init>() -> <init>
    60:60:java.net.Inet4Address access$000() -> access$000
    61:61:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhost6Accessor -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhost6Accessor:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    64:64:void <init>() -> <init>
    67:67:java.net.Inet6Address get() -> get
    72:72:void set(java.net.Inet6Address) -> set
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhost6LazyHolder -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhost6LazyHolder:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    java.net.Inet6Address LOCALHOST6 -> LOCALHOST6
    75:75:void <init>() -> <init>
    75:75:java.net.Inet6Address access$100() -> access$100
    76:76:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhostAccessor -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhostAccessor:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    79:79:void <init>() -> <init>
    82:82:java.net.InetAddress get() -> get
    87:87:void set(java.net.InetAddress) -> set
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhostLazyHolder -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilLocalhostLazyHolder:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    java.net.InetAddress LOCALHOST -> LOCALHOST
    90:90:void <init>() -> <init>
    90:90:java.net.InetAddress access$200() -> access$200
    91:94:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilNetworkInterfacesAccessor -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilNetworkInterfacesAccessor:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    97:97:void <init>() -> <init>
    100:100:java.util.Collection get() -> get
    105:105:void set(java.util.Collection) -> set
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilNetworkInterfacesLazyHolder -> pro.gravit.repackage.io.netty.util.NetUtilSubstitutions$NetUtilNetworkInterfacesLazyHolder:
# {"fileName":"NetUtilSubstitutions.java","id":"sourceFile"}
    java.util.Collection NETWORK_INTERFACES -> NETWORK_INTERFACES
    108:108:void <init>() -> <init>
    108:108:java.util.Collection access$300() -> access$300
    109:110:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NettyRuntime -> pro.gravit.repackage.io.netty.util.NettyRuntime:
# {"fileName":"NettyRuntime.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.NettyRuntime$AvailableProcessorsHolder holder -> holder
    87:88:void setAvailableProcessors(int) -> setAvailableProcessors
    98:98:int availableProcessors() -> availableProcessors
    104:105:void <init>() -> <init>
    76:76:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.NettyRuntime$AvailableProcessorsHolder -> pro.gravit.repackage.io.netty.util.NettyRuntime$AvailableProcessorsHolder:
# {"fileName":"NettyRuntime.java","id":"sourceFile"}
    int availableProcessors -> availableProcessors
    32:32:void <init>() -> <init>
    44:54:void setAvailableProcessors(int) -> setAvailableProcessors
    65:72:int availableProcessors() -> availableProcessors
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Recycler -> pro.gravit.repackage.io.netty.util.Recycler:
# {"fileName":"Recycler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.Recycler$Handle NOOP_HANDLE -> NOOP_HANDLE
    int DEFAULT_INITIAL_MAX_CAPACITY_PER_THREAD -> DEFAULT_INITIAL_MAX_CAPACITY_PER_THREAD
    int DEFAULT_MAX_CAPACITY_PER_THREAD -> DEFAULT_MAX_CAPACITY_PER_THREAD
    int RATIO -> RATIO
    int DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD -> DEFAULT_QUEUE_CHUNK_SIZE_PER_THREAD
    boolean BLOCKING_POOL -> BLOCKING_POOL
    int maxCapacityPerThread -> maxCapacityPerThread
    int interval -> interval
    int chunkSize -> chunkSize
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal threadLocal -> threadLocal
    112:113:void <init>() -> <init>
    116:117:void <init>(int) -> <init>
    126:127:void <init>(int,int) -> <init>
    137:138:void <init>(int,int,int,int) -> <init>
    148:149:void <init>(int,int,int,int,int) -> <init>
    96:160:void <init>(int,int,int) -> <init>
    164:182:java.lang.Object get() -> get
    190:195:boolean recycle(java.lang.Object,pro.gravit.repackage.io.netty.util.Recycler$Handle) -> recycle
    199:200:int threadLocalSize() -> threadLocalSize
    java.lang.Object newObject(pro.gravit.repackage.io.netty.util.Recycler$Handle) -> newObject
    39:39:int access$000(pro.gravit.repackage.io.netty.util.Recycler) -> access$000
    39:39:int access$100(pro.gravit.repackage.io.netty.util.Recycler) -> access$100
    39:39:int access$200(pro.gravit.repackage.io.netty.util.Recycler) -> access$200
    39:39:boolean access$400() -> access$400
    40:91:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Recycler$1 -> pro.gravit.repackage.io.netty.util.Recycler$1:
# {"fileName":"Recycler.java","id":"sourceFile"}
    41:41:void <init>() -> <init>
    45:45:void recycle(java.lang.Object) -> recycle
    49:49:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Recycler$2 -> pro.gravit.repackage.io.netty.util.Recycler$2:
# {"fileName":"Recycler.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Recycler this$0 -> this$0
    96:96:void <init>(pro.gravit.repackage.io.netty.util.Recycler) -> <init>
    99:99:pro.gravit.repackage.io.netty.util.Recycler$LocalPool initialValue() -> initialValue
    104:108:void onRemoval(pro.gravit.repackage.io.netty.util.Recycler$LocalPool) -> onRemoval
    96:96:void onRemoval(java.lang.Object) -> onRemoval
    96:96:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Recycler$BlockingMessageQueue -> pro.gravit.repackage.io.netty.util.Recycler$BlockingMessageQueue:
# {"fileName":"Recycler.java","id":"sourceFile"}
    java.util.Queue deque -> deque
    int maxCapacity -> maxCapacity
    313:325:void <init>(int) -> <init>
    329:332:boolean offer(java.lang.Object) -> offer
    337:337:java.lang.Object poll() -> poll
    342:342:java.lang.Object peek() -> peek
    347:347:int size() -> size
    352:353:void clear() -> clear
    357:357:boolean isEmpty() -> isEmpty
    362:362:int capacity() -> capacity
    367:367:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    372:372:java.lang.Object relaxedPoll() -> relaxedPoll
    377:377:java.lang.Object relaxedPeek() -> relaxedPeek
    382:382:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    387:387:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    392:392:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    397:397:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    402:402:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    407:407:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Recycler$DefaultHandle -> pro.gravit.repackage.io.netty.util.Recycler$DefaultHandle:
# {"fileName":"Recycler.java","id":"sourceFile"}
    int STATE_CLAIMED -> STATE_CLAIMED
    int STATE_AVAILABLE -> STATE_AVAILABLE
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE_UPDATER -> STATE_UPDATER
    int state -> state
    pro.gravit.repackage.io.netty.util.Recycler$LocalPool localPool -> localPool
    java.lang.Object value -> value
    boolean $assertionsDisabled -> $assertionsDisabled
    225:227:void <init>(pro.gravit.repackage.io.netty.util.Recycler$LocalPool) -> <init>
    231:235:void recycle(java.lang.Object) -> recycle
    238:238:java.lang.Object get() -> get
    242:243:void set(java.lang.Object) -> set
    246:248:void toClaimed() -> toClaimed
    251:255:void toAvailable() -> toAvailable
    211:219:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Recycler$Handle -> pro.gravit.repackage.io.netty.util.Recycler$Handle:
# {"fileName":"Recycler.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Recycler$LocalPool -> pro.gravit.repackage.io.netty.util.Recycler$LocalPool:
# {"fileName":"Recycler.java","id":"sourceFile"}
    int ratioInterval -> ratioInterval
    pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue pooledHandles -> pooledHandles
    int ratioCounter -> ratioCounter
    264:272:void <init>(int,int,int) -> <init>
    275:283:pro.gravit.repackage.io.netty.util.Recycler$DefaultHandle claim() -> claim
    287:292:void release(pro.gravit.repackage.io.netty.util.Recycler$DefaultHandle) -> release
    295:299:pro.gravit.repackage.io.netty.util.Recycler$DefaultHandle newHandle() -> newHandle
    258:258:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue access$300(pro.gravit.repackage.io.netty.util.Recycler$LocalPool) -> access$300
    258:258:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue access$302(pro.gravit.repackage.io.netty.util.Recycler$LocalPool,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue) -> access$302
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ReferenceCountUtil -> pro.gravit.repackage.io.netty.util.ReferenceCountUtil:
# {"fileName":"ReferenceCountUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    40:43:java.lang.Object retain(java.lang.Object) -> retain
    52:56:java.lang.Object retain(java.lang.Object,int) -> retain
    65:68:java.lang.Object touch(java.lang.Object) -> touch
    78:81:java.lang.Object touch(java.lang.Object,java.lang.Object) -> touch
    89:92:boolean release(java.lang.Object) -> release
    100:104:boolean release(java.lang.Object,int) -> release
    116:120:void safeRelease(java.lang.Object) -> safeRelease
    131:138:void safeRelease(java.lang.Object,int) -> safeRelease
    149:149:java.lang.Object releaseLater(java.lang.Object) -> releaseLater
    161:165:java.lang.Object releaseLater(java.lang.Object,int) -> releaseLater
    173:173:int refCnt(java.lang.Object) -> refCnt
    208:208:void <init>() -> <init>
    26:26:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    28:32:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ReferenceCountUtil$ReleasingTask -> pro.gravit.repackage.io.netty.util.ReferenceCountUtil$ReleasingTask:
# {"fileName":"ReferenceCountUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ReferenceCounted obj -> obj
    int decrement -> decrement
    184:187:void <init>(pro.gravit.repackage.io.netty.util.ReferenceCounted,int) -> <init>
    192:200:void run() -> run
    204:204:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ReferenceCounted -> pro.gravit.repackage.io.netty.util.ReferenceCounted:
# {"fileName":"ReferenceCounted.java","id":"sourceFile"}
    int refCnt() -> refCnt
    pro.gravit.repackage.io.netty.util.ReferenceCounted retain() -> retain
    pro.gravit.repackage.io.netty.util.ReferenceCounted retain(int) -> retain
    pro.gravit.repackage.io.netty.util.ReferenceCounted touch() -> touch
    pro.gravit.repackage.io.netty.util.ReferenceCounted touch(java.lang.Object) -> touch
    boolean release() -> release
    boolean release(int) -> release
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeak -> pro.gravit.repackage.io.netty.util.ResourceLeak:
# {"fileName":"ResourceLeak.java","id":"sourceFile"}
    void record() -> record
    void record(java.lang.Object) -> record
    boolean close() -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakDetector -> pro.gravit.repackage.io.netty.util.ResourceLeakDetector:
# {"fileName":"ResourceLeakDetector.java","id":"sourceFile"}
    java.lang.String PROP_LEVEL_OLD -> PROP_LEVEL_OLD
    java.lang.String PROP_LEVEL -> PROP_LEVEL
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.String PROP_TARGET_RECORDS -> PROP_TARGET_RECORDS
    int DEFAULT_TARGET_RECORDS -> DEFAULT_TARGET_RECORDS
    java.lang.String PROP_SAMPLING_INTERVAL -> PROP_SAMPLING_INTERVAL
    int DEFAULT_SAMPLING_INTERVAL -> DEFAULT_SAMPLING_INTERVAL
    int TARGET_RECORDS -> TARGET_RECORDS
    int SAMPLING_INTERVAL -> SAMPLING_INTERVAL
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level level -> level
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.Set allLeaks -> allLeaks
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    java.util.Set reportedLeaks -> reportedLeaks
    java.lang.String resourceType -> resourceType
    int samplingInterval -> samplingInterval
    java.util.concurrent.atomic.AtomicReference excludedMethods -> excludedMethods
    139:140:void setEnabled(boolean) -> setEnabled
    146:146:boolean isEnabled() -> isEnabled
    153:154:void setLevel(pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level) -> setLevel
    160:160:pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level getLevel() -> getLevel
    179:180:void <init>(java.lang.Class) -> <init>
    187:188:void <init>(java.lang.String) -> <init>
    201:202:void <init>(java.lang.Class,int,long) -> <init>
    211:212:void <init>(java.lang.Class,int) -> <init>
    164:223:void <init>(java.lang.String,int,long) -> <init>
    234:234:pro.gravit.repackage.io.netty.util.ResourceLeak open(java.lang.Object) -> open
    245:245:pro.gravit.repackage.io.netty.util.ResourceLeakTracker track(java.lang.Object) -> track
    250:263:pro.gravit.repackage.io.netty.util.ResourceLeakDetector$DefaultResourceLeak track0(java.lang.Object) -> track0
    268:274:void clearRefQueue() -> clearRefQueue
    283:283:boolean needReport() -> needReport
    287:312:void reportLeak() -> reportLeak
    319:323:void reportTracedLeak(java.lang.String,java.lang.String) -> reportTracedLeak
    330:336:void reportUntracedLeak(java.lang.String) -> reportUntracedLeak
    343:343:void reportInstancesLeak(java.lang.String) -> reportInstancesLeak
    351:351:java.lang.Object getInitialHint(java.lang.String) -> getInitialHint
    587:608:void addExclusions(java.lang.Class,java.lang.String[]) -> addExclusions
    42:42:pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level access$000() -> access$000
    42:42:int access$200() -> access$200
    42:42:java.util.concurrent.atomic.AtomicReference access$600() -> access$600
    46:583:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakDetector$1 -> pro.gravit.repackage.io.netty.util.ResourceLeakDetector$1:
# {"fileName":"ResourceLeakDetector.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakDetector$DefaultResourceLeak -> pro.gravit.repackage.io.netty.util.ResourceLeakDetector$DefaultResourceLeak:
# {"fileName":"ResourceLeakDetector.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater headUpdater -> headUpdater
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater droppedRecordsUpdater -> droppedRecordsUpdater
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord head -> head
    int droppedRecords -> droppedRecords
    java.util.Set allLeaks -> allLeaks
    int trackedHash -> trackedHash
    boolean $assertionsDisabled -> $assertionsDisabled
    381:394:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,java.util.Set,java.lang.Object) -> <init>
    398:399:void record() -> record
    403:404:void record(java.lang.Object) -> record
    434:459:void record0(java.lang.Object) -> record0
    462:463:boolean dispose() -> dispose
    468:474:boolean close() -> close
    480:490:boolean close(java.lang.Object) -> close
    513:518:void reachabilityFence0(java.lang.Object) -> reachabilityFence0
    522:523:java.lang.String toString() -> toString
    527:528:java.lang.String getReportAndClearRecords() -> getReportAndClearRecords
    532:579:java.lang.String generateReport(pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord) -> generateReport
    354:366:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level -> pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level:
# {"fileName":"ResourceLeakDetector.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level DISABLED -> DISABLED
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level SIMPLE -> SIMPLE
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level ADVANCED -> ADVANCED
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level PARANOID -> PARANOID
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level[] $VALUES -> $VALUES
    61:61:pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level[] values() -> values
    61:61:pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level valueOf(java.lang.String) -> valueOf
    61:61:void <init>(java.lang.String,int) -> <init>
    89:95:pro.gravit.repackage.io.netty.util.ResourceLeakDetector$Level parseLevel(java.lang.String) -> parseLevel
    61:80:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord -> pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord:
# {"fileName":"ResourceLeakDetector.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord BOTTOM -> BOTTOM
    java.lang.String hintString -> hintString
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord next -> next
    int pos -> pos
    629:634:void <init>(pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord,java.lang.Object) -> <init>
    636:640:void <init>(pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord) -> <init>
    643:647:void <init>() -> <init>
    651:676:java.lang.String toString() -> toString
    610:610:pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord access$100() -> access$100
    610:610:int access$300(pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord) -> access$300
    610:610:pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord access$400(pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord) -> access$400
    610:610:void <init>(pro.gravit.repackage.io.netty.util.ResourceLeakDetector$1) -> <init>
    613:613:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord$1 -> pro.gravit.repackage.io.netty.util.ResourceLeakDetector$TraceRecord$1:
# {"fileName":"ResourceLeakDetector.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    613:613:void <init>() -> <init>
    621:621:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakDetectorFactory -> pro.gravit.repackage.io.netty.util.ResourceLeakDetectorFactory:
# {"fileName":"ResourceLeakDetectorFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.ResourceLeakDetectorFactory factoryInstance -> factoryInstance
    30:30:void <init>() -> <init>
    41:41:pro.gravit.repackage.io.netty.util.ResourceLeakDetectorFactory instance() -> instance
    52:53:void setResourceLeakDetectorFactory(pro.gravit.repackage.io.netty.util.ResourceLeakDetectorFactory) -> setResourceLeakDetectorFactory
    63:63:pro.gravit.repackage.io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class) -> newResourceLeakDetector
    pro.gravit.repackage.io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int,long) -> newResourceLeakDetector
    91:92:pro.gravit.repackage.io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int) -> newResourceLeakDetector
    30:30:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    31:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory -> pro.gravit.repackage.io.netty.util.ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory:
# {"fileName":"ResourceLeakDetectorFactory.java","id":"sourceFile"}
    java.lang.reflect.Constructor obsoleteCustomClassConstructor -> obsoleteCustomClassConstructor
    java.lang.reflect.Constructor customClassConstructor -> customClassConstructor
    102:116:void <init>() -> <init>
    120:132:java.lang.reflect.Constructor obsoleteCustomClassConstructor(java.lang.String) -> obsoleteCustomClassConstructor
    137:149:java.lang.reflect.Constructor customClassConstructor(java.lang.String) -> customClassConstructor
    156:175:pro.gravit.repackage.io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int,long) -> newResourceLeakDetector
    180:197:pro.gravit.repackage.io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class,int) -> newResourceLeakDetector
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakException -> pro.gravit.repackage.io.netty.util.ResourceLeakException:
# {"fileName":"ResourceLeakException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.lang.StackTraceElement[] cachedStackTrace -> cachedStackTrace
    31:33:void <init>() -> <init>
    36:38:void <init>(java.lang.String) -> <init>
    41:43:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    46:48:void <init>(java.lang.Throwable) -> <init>
    52:56:int hashCode() -> hashCode
    61:68:boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakHint -> pro.gravit.repackage.io.netty.util.ResourceLeakHint:
# {"fileName":"ResourceLeakHint.java","id":"sourceFile"}
    java.lang.String toHintString() -> toHintString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ResourceLeakTracker -> pro.gravit.repackage.io.netty.util.ResourceLeakTracker:
# {"fileName":"ResourceLeakTracker.java","id":"sourceFile"}
    void record() -> record
    void record(java.lang.Object) -> record
    boolean close(java.lang.Object) -> close
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Signal -> pro.gravit.repackage.io.netty.util.Signal:
# {"fileName":"Signal.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    pro.gravit.repackage.io.netty.util.ConstantPool pool -> pool
    pro.gravit.repackage.io.netty.util.Signal$SignalConstant constant -> constant
    38:38:pro.gravit.repackage.io.netty.util.Signal valueOf(java.lang.String) -> valueOf
    45:45:pro.gravit.repackage.io.netty.util.Signal valueOf(java.lang.Class,java.lang.String) -> valueOf
    53:55:void <init>(int,java.lang.String) -> <init>
    62:65:void expect(pro.gravit.repackage.io.netty.util.Signal) -> expect
    70:70:java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    76:76:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    81:81:int id() -> id
    86:86:java.lang.String name() -> name
    91:91:boolean equals(java.lang.Object) -> equals
    96:96:int hashCode() -> hashCode
    101:105:int compareTo(pro.gravit.repackage.io.netty.util.Signal) -> compareTo
    110:110:java.lang.String toString() -> toString
    23:23:int compareTo(java.lang.Object) -> compareTo
    23:23:void <init>(int,java.lang.String,pro.gravit.repackage.io.netty.util.Signal$1) -> <init>
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Signal$1 -> pro.gravit.repackage.io.netty.util.Signal$1:
# {"fileName":"Signal.java","id":"sourceFile"}
    27:27:void <init>() -> <init>
    30:30:pro.gravit.repackage.io.netty.util.Signal newConstant(int,java.lang.String) -> newConstant
    27:27:pro.gravit.repackage.io.netty.util.Constant newConstant(int,java.lang.String) -> newConstant
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Signal$SignalConstant -> pro.gravit.repackage.io.netty.util.Signal$SignalConstant:
# {"fileName":"Signal.java","id":"sourceFile"}
    115:116:void <init>(int,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.SuppressForbidden -> pro.gravit.repackage.io.netty.util.SuppressForbidden:
# {"fileName":"SuppressForbidden.java","id":"sourceFile"}
    java.lang.String reason() -> reason
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ThreadDeathWatcher -> pro.gravit.repackage.io.netty.util.ThreadDeathWatcher:
# {"fileName":"ThreadDeathWatcher.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    java.util.Queue pendingEntries -> pendingEntries
    pro.gravit.repackage.io.netty.util.ThreadDeathWatcher$Watcher watcher -> watcher
    java.util.concurrent.atomic.AtomicBoolean started -> started
    java.lang.Thread watcherThread -> watcherThread
    81:89:void watch(java.lang.Thread,java.lang.Runnable) -> watch
    95:98:void unwatch(java.lang.Thread,java.lang.Runnable) -> unwatch
    101:121:void schedule(java.lang.Thread,java.lang.Runnable,boolean) -> schedule
    133:140:boolean awaitInactivity(long,java.util.concurrent.TimeUnit) -> awaitInactivity
    144:144:void <init>() -> <init>
    47:47:java.util.Queue access$100() -> access$100
    47:47:java.util.concurrent.atomic.AtomicBoolean access$200() -> access$200
    47:47:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    49:70:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ThreadDeathWatcher$1 -> pro.gravit.repackage.io.netty.util.ThreadDeathWatcher$1:
# {"fileName":"ThreadDeathWatcher.java","id":"sourceFile"}
    java.lang.Thread val$watcherThread -> val$watcherThread
    110:110:void <init>(java.lang.Thread) -> <init>
    113:114:java.lang.Void run() -> run
    110:110:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ThreadDeathWatcher$Entry -> pro.gravit.repackage.io.netty.util.ThreadDeathWatcher$Entry:
# {"fileName":"ThreadDeathWatcher.java","id":"sourceFile"}
    java.lang.Thread thread -> thread
    java.lang.Runnable task -> task
    boolean isWatch -> isWatch
    235:239:void <init>(java.lang.Thread,java.lang.Runnable,boolean) -> <init>
    243:243:int hashCode() -> hashCode
    248:257:boolean equals(java.lang.Object) -> equals
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.ThreadDeathWatcher$Watcher -> pro.gravit.repackage.io.netty.util.ThreadDeathWatcher$Watcher:
# {"fileName":"ThreadDeathWatcher.java","id":"sourceFile"}
    java.util.List watchees -> watchees
    boolean $assertionsDisabled -> $assertionsDisabled
    146:148:void <init>() -> <init>
    153:195:void run() -> run
    199:210:void fetchWatchees() -> fetchWatchees
    213:227:void notifyWatchees() -> notifyWatchees
    146:146:void <init>(pro.gravit.repackage.io.netty.util.ThreadDeathWatcher$1) -> <init>
    146:146:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Timeout -> pro.gravit.repackage.io.netty.util.Timeout:
# {"fileName":"Timeout.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Timer timer() -> timer
    pro.gravit.repackage.io.netty.util.TimerTask task() -> task
    boolean isExpired() -> isExpired
    boolean isCancelled() -> isCancelled
    boolean cancel() -> cancel
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Timer -> pro.gravit.repackage.io.netty.util.Timer:
# {"fileName":"Timer.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Timeout newTimeout(pro.gravit.repackage.io.netty.util.TimerTask,long,java.util.concurrent.TimeUnit) -> newTimeout
    java.util.Set stop() -> stop
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.TimerTask -> pro.gravit.repackage.io.netty.util.TimerTask:
# {"fileName":"TimerTask.java","id":"sourceFile"}
    void run(pro.gravit.repackage.io.netty.util.Timeout) -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier -> pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier:
# {"fileName":"UncheckedBooleanSupplier.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier FALSE_SUPPLIER -> FALSE_SUPPLIER
    pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier TRUE_SUPPLIER -> TRUE_SUPPLIER
    boolean get() -> get
    32:42:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier$1 -> pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier$1:
# {"fileName":"UncheckedBooleanSupplier.java","id":"sourceFile"}
    32:32:void <init>() -> <init>
    35:35:boolean get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier$2 -> pro.gravit.repackage.io.netty.util.UncheckedBooleanSupplier$2:
# {"fileName":"UncheckedBooleanSupplier.java","id":"sourceFile"}
    42:42:void <init>() -> <init>
    45:45:boolean get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.Version -> pro.gravit.repackage.io.netty.util.Version:
# {"fileName":"Version.java","id":"sourceFile"}
    java.lang.String PROP_VERSION -> PROP_VERSION
    java.lang.String PROP_BUILD_DATE -> PROP_BUILD_DATE
    java.lang.String PROP_COMMIT_DATE -> PROP_COMMIT_DATE
    java.lang.String PROP_SHORT_COMMIT_HASH -> PROP_SHORT_COMMIT_HASH
    java.lang.String PROP_LONG_COMMIT_HASH -> PROP_LONG_COMMIT_HASH
    java.lang.String PROP_REPO_STATUS -> PROP_REPO_STATUS
    java.lang.String artifactId -> artifactId
    java.lang.String artifactVersion -> artifactVersion
    long buildTimeMillis -> buildTimeMillis
    long commitTimeMillis -> commitTimeMillis
    java.lang.String shortCommitHash -> shortCommitHash
    java.lang.String longCommitHash -> longCommitHash
    java.lang.String repositoryStatus -> repositoryStatus
    56:56:java.util.Map identify() -> identify
    65:129:java.util.Map identify(java.lang.ClassLoader) -> identify
    134:136:long parseIso8601(java.lang.String) -> parseIso8601
    144:147:void main(java.lang.String[]) -> main
    160:168:void <init>(java.lang.String,java.lang.String,long,long,java.lang.String,java.lang.String,java.lang.String) -> <init>
    171:171:java.lang.String artifactId() -> artifactId
    175:175:java.lang.String artifactVersion() -> artifactVersion
    179:179:long buildTimeMillis() -> buildTimeMillis
    183:183:long commitTimeMillis() -> commitTimeMillis
    187:187:java.lang.String shortCommitHash() -> shortCommitHash
    191:191:java.lang.String longCommitHash() -> longCommitHash
    195:195:java.lang.String repositoryStatus() -> repositoryStatus
    200:201:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteCollections -> pro.gravit.repackage.io.netty.util.collection.ByteCollections:
# {"fileName":"ByteCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectMap EMPTY_MAP -> EMPTY_MAP
    31:32:void <init>() -> <init>
    39:39:pro.gravit.repackage.io.netty.util.collection.ByteObjectMap emptyMap() -> emptyMap
    46:46:pro.gravit.repackage.io.netty.util.collection.ByteObjectMap unmodifiableMap(pro.gravit.repackage.io.netty.util.collection.ByteObjectMap) -> unmodifiableMap
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteCollections$1 -> pro.gravit.repackage.io.netty.util.collection.ByteCollections$1:
# {"fileName":"ByteCollections.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteCollections$EmptyMap -> pro.gravit.repackage.io.netty.util.collection.ByteCollections$EmptyMap:
# {"fileName":"ByteCollections.java","id":"sourceFile"}
    52:52:void <init>() -> <init>
    55:55:java.lang.Object get(byte) -> get
    60:60:java.lang.Object put(byte,java.lang.Object) -> put
    65:65:java.lang.Object remove(byte) -> remove
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:boolean containsKey(java.lang.Object) -> containsKey
    86:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:boolean containsKey(byte) -> containsKey
    100:100:boolean containsValue(java.lang.Object) -> containsValue
    105:105:java.lang.Iterable entries() -> entries
    110:110:java.lang.Object get(java.lang.Object) -> get
    115:115:java.lang.Object put(java.lang.Byte,java.lang.Object) -> put
    120:120:java.lang.Object remove(java.lang.Object) -> remove
    125:125:void putAll(java.util.Map) -> putAll
    130:130:java.util.Collection values() -> values
    135:135:java.util.Set entrySet() -> entrySet
    52:52:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    52:52:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteCollections$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap -> pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap:
# {"fileName":"ByteCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectMap map -> map
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    java.lang.Iterable entries -> entries
    151:153:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectMap) -> <init>
    157:157:java.lang.Object get(byte) -> get
    162:162:java.lang.Object put(byte,java.lang.Object) -> put
    167:167:java.lang.Object remove(byte) -> remove
    172:172:int size() -> size
    177:177:boolean isEmpty() -> isEmpty
    182:182:void clear() -> clear
    187:187:boolean containsKey(byte) -> containsKey
    192:192:boolean containsValue(java.lang.Object) -> containsValue
    197:197:boolean containsKey(java.lang.Object) -> containsKey
    202:202:java.lang.Object get(java.lang.Object) -> get
    207:207:java.lang.Object put(java.lang.Byte,java.lang.Object) -> put
    212:212:java.lang.Object remove(java.lang.Object) -> remove
    217:217:void putAll(java.util.Map) -> putAll
    222:231:java.lang.Iterable entries() -> entries
    236:239:java.util.Set keySet() -> keySet
    244:247:java.util.Set entrySet() -> entrySet
    252:255:java.util.Collection values() -> values
    144:144:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    144:144:pro.gravit.repackage.io.netty.util.collection.ByteObjectMap access$100(pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap$1 -> pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap$1:
# {"fileName":"ByteCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap this$0 -> this$0
    223:223:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap) -> <init>
    226:226:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap$EntryImpl -> pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap$EntryImpl:
# {"fileName":"ByteCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectMap$PrimitiveEntry entry -> entry
    pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap this$0 -> this$0
    293:295:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap,pro.gravit.repackage.io.netty.util.collection.ByteObjectMap$PrimitiveEntry) -> <init>
    299:299:byte key() -> key
    304:304:java.lang.Object value() -> value
    309:309:void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap$IteratorImpl -> pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap$IteratorImpl:
# {"fileName":"ByteCollections.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap this$0 -> this$0
    264:266:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteCollections$UnmodifiableMap,java.util.Iterator) -> <init>
    270:270:boolean hasNext() -> hasNext
    275:278:pro.gravit.repackage.io.netty.util.collection.ByteObjectMap$PrimitiveEntry next() -> next
    283:283:void remove() -> remove
    261:261:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    java.lang.Object NULL_VALUE -> NULL_VALUE
    int maxSize -> maxSize
    float loadFactor -> loadFactor
    byte[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    int mask -> mask
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.lang.Iterable entries -> entries
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> toExternal
    109:109:java.lang.Object toInternal(java.lang.Object) -> toInternal
    114:115:java.lang.Object get(byte) -> get
    120:141:java.lang.Object put(byte,java.lang.Object) -> put
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(byte) -> remove
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(byte) -> containsKey
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> entries
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Byte,java.lang.Object) -> put
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:byte objectToKey(java.lang.Object) -> objectToKey
    341:355:int indexOf(byte) -> indexOf
    365:365:int hashIndex(byte) -> hashIndex
    372:372:int hashCode(byte) -> hashCode
    380:380:int probeNext(int) -> probeNext
    387:397:void growSize() -> growSize
    407:434:boolean removeAt(int) -> removeAt
    442:443:int calcMaxSize(int) -> calcMaxSize
    452:484:void rehash(int) -> rehash
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(byte) -> keyToString
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> access$300
    37:37:java.util.Set access$500(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> access$500
    37:37:java.lang.Object[] access$600(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> access$600
    37:37:boolean access$700(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap,int) -> access$700
    37:37:byte[] access$800(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> access$800
    37:37:java.lang.Object access$900(java.lang.Object) -> access$900
    37:37:java.lang.Object access$1000(java.lang.Object) -> access$1000
    37:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$1 -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$1:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap this$0 -> this$0
    64:64:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$2 -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$2:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap this$0 -> this$0
    221:221:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$2$1 -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$2$1:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$2 this$1 -> this$1
    224:225:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:240:void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$EntrySet -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$EntrySet:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap this$0 -> this$0
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap,pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$KeySet -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$KeySet:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap this$0 -> this$0
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap,pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$KeySet$1 -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$KeySet$1:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$KeySet this$1 -> this$1
    570:571:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Byte next() -> next
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$MapEntry -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$MapEntry:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap this$0 -> this$0
    693:695:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap,int) -> <init>
    699:700:java.lang.Byte getKey() -> getKey
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> verifyExists
    690:690:java.lang.Object getKey() -> getKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$MapIterator -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$MapIterator:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap this$0 -> this$0
    662:663:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> next
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap,pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$PrimitiveIterator -> pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$PrimitiveIterator:
# {"fileName":"ByteObjectHashMap.java","id":"sourceFile"}
    int prevIndex -> prevIndex
    int nextIndex -> nextIndex
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap this$0 -> this$0
    594:597:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap) -> <init>
    600:602:void scanNext() -> scanNext
    606:609:boolean hasNext() -> hasNext
    614:623:pro.gravit.repackage.io.netty.util.collection.ByteObjectMap$PrimitiveEntry next() -> next
    628:638:void remove() -> remove
    645:645:byte key() -> key
    650:650:java.lang.Object value() -> value
    655:656:void setValue(java.lang.Object) -> setValue
    594:594:java.lang.Object next() -> next
    594:594:void <init>(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap,pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$1) -> <init>
    594:594:int access$1100(pro.gravit.repackage.io.netty.util.collection.ByteObjectHashMap$PrimitiveIterator) -> access$1100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectMap -> pro.gravit.repackage.io.netty.util.collection.ByteObjectMap:
# {"fileName":"ByteObjectMap.java","id":"sourceFile"}
    java.lang.Object get(byte) -> get
    java.lang.Object put(byte,java.lang.Object) -> put
    java.lang.Object remove(byte) -> remove
    java.lang.Iterable entries() -> entries
    boolean containsKey(byte) -> containsKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ByteObjectMap$PrimitiveEntry -> pro.gravit.repackage.io.netty.util.collection.ByteObjectMap$PrimitiveEntry:
# {"fileName":"ByteObjectMap.java","id":"sourceFile"}
    byte key() -> key
    java.lang.Object value() -> value
    void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharCollections -> pro.gravit.repackage.io.netty.util.collection.CharCollections:
# {"fileName":"CharCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectMap EMPTY_MAP -> EMPTY_MAP
    31:32:void <init>() -> <init>
    39:39:pro.gravit.repackage.io.netty.util.collection.CharObjectMap emptyMap() -> emptyMap
    46:46:pro.gravit.repackage.io.netty.util.collection.CharObjectMap unmodifiableMap(pro.gravit.repackage.io.netty.util.collection.CharObjectMap) -> unmodifiableMap
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharCollections$1 -> pro.gravit.repackage.io.netty.util.collection.CharCollections$1:
# {"fileName":"CharCollections.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharCollections$EmptyMap -> pro.gravit.repackage.io.netty.util.collection.CharCollections$EmptyMap:
# {"fileName":"CharCollections.java","id":"sourceFile"}
    52:52:void <init>() -> <init>
    55:55:java.lang.Object get(char) -> get
    60:60:java.lang.Object put(char,java.lang.Object) -> put
    65:65:java.lang.Object remove(char) -> remove
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:boolean containsKey(java.lang.Object) -> containsKey
    86:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:boolean containsKey(char) -> containsKey
    100:100:boolean containsValue(java.lang.Object) -> containsValue
    105:105:java.lang.Iterable entries() -> entries
    110:110:java.lang.Object get(java.lang.Object) -> get
    115:115:java.lang.Object put(java.lang.Character,java.lang.Object) -> put
    120:120:java.lang.Object remove(java.lang.Object) -> remove
    125:125:void putAll(java.util.Map) -> putAll
    130:130:java.util.Collection values() -> values
    135:135:java.util.Set entrySet() -> entrySet
    52:52:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    52:52:void <init>(pro.gravit.repackage.io.netty.util.collection.CharCollections$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap -> pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap:
# {"fileName":"CharCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectMap map -> map
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    java.lang.Iterable entries -> entries
    151:153:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectMap) -> <init>
    157:157:java.lang.Object get(char) -> get
    162:162:java.lang.Object put(char,java.lang.Object) -> put
    167:167:java.lang.Object remove(char) -> remove
    172:172:int size() -> size
    177:177:boolean isEmpty() -> isEmpty
    182:182:void clear() -> clear
    187:187:boolean containsKey(char) -> containsKey
    192:192:boolean containsValue(java.lang.Object) -> containsValue
    197:197:boolean containsKey(java.lang.Object) -> containsKey
    202:202:java.lang.Object get(java.lang.Object) -> get
    207:207:java.lang.Object put(java.lang.Character,java.lang.Object) -> put
    212:212:java.lang.Object remove(java.lang.Object) -> remove
    217:217:void putAll(java.util.Map) -> putAll
    222:231:java.lang.Iterable entries() -> entries
    236:239:java.util.Set keySet() -> keySet
    244:247:java.util.Set entrySet() -> entrySet
    252:255:java.util.Collection values() -> values
    144:144:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    144:144:pro.gravit.repackage.io.netty.util.collection.CharObjectMap access$100(pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap$1 -> pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap$1:
# {"fileName":"CharCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap this$0 -> this$0
    223:223:void <init>(pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap) -> <init>
    226:226:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap$EntryImpl -> pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap$EntryImpl:
# {"fileName":"CharCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectMap$PrimitiveEntry entry -> entry
    pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap this$0 -> this$0
    293:295:void <init>(pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap,pro.gravit.repackage.io.netty.util.collection.CharObjectMap$PrimitiveEntry) -> <init>
    299:299:char key() -> key
    304:304:java.lang.Object value() -> value
    309:309:void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap$IteratorImpl -> pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap$IteratorImpl:
# {"fileName":"CharCollections.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap this$0 -> this$0
    264:266:void <init>(pro.gravit.repackage.io.netty.util.collection.CharCollections$UnmodifiableMap,java.util.Iterator) -> <init>
    270:270:boolean hasNext() -> hasNext
    275:278:pro.gravit.repackage.io.netty.util.collection.CharObjectMap$PrimitiveEntry next() -> next
    283:283:void remove() -> remove
    261:261:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    java.lang.Object NULL_VALUE -> NULL_VALUE
    int maxSize -> maxSize
    float loadFactor -> loadFactor
    char[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    int mask -> mask
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.lang.Iterable entries -> entries
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> toExternal
    109:109:java.lang.Object toInternal(java.lang.Object) -> toInternal
    114:115:java.lang.Object get(char) -> get
    120:141:java.lang.Object put(char,java.lang.Object) -> put
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(char) -> remove
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(char) -> containsKey
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> entries
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Character,java.lang.Object) -> put
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:char objectToKey(java.lang.Object) -> objectToKey
    341:355:int indexOf(char) -> indexOf
    365:365:int hashIndex(char) -> hashIndex
    372:372:int hashCode(char) -> hashCode
    380:380:int probeNext(int) -> probeNext
    387:397:void growSize() -> growSize
    407:434:boolean removeAt(int) -> removeAt
    442:443:int calcMaxSize(int) -> calcMaxSize
    452:484:void rehash(int) -> rehash
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(char) -> keyToString
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> access$300
    37:37:java.util.Set access$500(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> access$500
    37:37:java.lang.Object[] access$600(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> access$600
    37:37:boolean access$700(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap,int) -> access$700
    37:37:char[] access$800(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> access$800
    37:37:java.lang.Object access$900(java.lang.Object) -> access$900
    37:37:java.lang.Object access$1000(java.lang.Object) -> access$1000
    37:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$1 -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$1:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    64:64:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$2 -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$2:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    221:221:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$2$1 -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$2$1:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$2 this$1 -> this$1
    224:225:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:240:void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$EntrySet -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$EntrySet:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap,pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$KeySet -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$KeySet:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap,pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$KeySet$1 -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$KeySet$1:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$KeySet this$1 -> this$1
    570:571:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Character next() -> next
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$MapEntry -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$MapEntry:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    693:695:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap,int) -> <init>
    699:700:java.lang.Character getKey() -> getKey
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> verifyExists
    690:690:java.lang.Object getKey() -> getKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$MapIterator -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$MapIterator:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    662:663:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> next
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap,pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$PrimitiveIterator -> pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$PrimitiveIterator:
# {"fileName":"CharObjectHashMap.java","id":"sourceFile"}
    int prevIndex -> prevIndex
    int nextIndex -> nextIndex
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap this$0 -> this$0
    594:597:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap) -> <init>
    600:602:void scanNext() -> scanNext
    606:609:boolean hasNext() -> hasNext
    614:623:pro.gravit.repackage.io.netty.util.collection.CharObjectMap$PrimitiveEntry next() -> next
    628:638:void remove() -> remove
    645:645:char key() -> key
    650:650:java.lang.Object value() -> value
    655:656:void setValue(java.lang.Object) -> setValue
    594:594:java.lang.Object next() -> next
    594:594:void <init>(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap,pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$1) -> <init>
    594:594:int access$1100(pro.gravit.repackage.io.netty.util.collection.CharObjectHashMap$PrimitiveIterator) -> access$1100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectMap -> pro.gravit.repackage.io.netty.util.collection.CharObjectMap:
# {"fileName":"CharObjectMap.java","id":"sourceFile"}
    java.lang.Object get(char) -> get
    java.lang.Object put(char,java.lang.Object) -> put
    java.lang.Object remove(char) -> remove
    java.lang.Iterable entries() -> entries
    boolean containsKey(char) -> containsKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.CharObjectMap$PrimitiveEntry -> pro.gravit.repackage.io.netty.util.collection.CharObjectMap$PrimitiveEntry:
# {"fileName":"CharObjectMap.java","id":"sourceFile"}
    char key() -> key
    java.lang.Object value() -> value
    void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntCollections -> pro.gravit.repackage.io.netty.util.collection.IntCollections:
# {"fileName":"IntCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectMap EMPTY_MAP -> EMPTY_MAP
    31:32:void <init>() -> <init>
    39:39:pro.gravit.repackage.io.netty.util.collection.IntObjectMap emptyMap() -> emptyMap
    46:46:pro.gravit.repackage.io.netty.util.collection.IntObjectMap unmodifiableMap(pro.gravit.repackage.io.netty.util.collection.IntObjectMap) -> unmodifiableMap
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntCollections$1 -> pro.gravit.repackage.io.netty.util.collection.IntCollections$1:
# {"fileName":"IntCollections.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntCollections$EmptyMap -> pro.gravit.repackage.io.netty.util.collection.IntCollections$EmptyMap:
# {"fileName":"IntCollections.java","id":"sourceFile"}
    52:52:void <init>() -> <init>
    55:55:java.lang.Object get(int) -> get
    60:60:java.lang.Object put(int,java.lang.Object) -> put
    65:65:java.lang.Object remove(int) -> remove
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:boolean containsKey(java.lang.Object) -> containsKey
    86:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:boolean containsKey(int) -> containsKey
    100:100:boolean containsValue(java.lang.Object) -> containsValue
    105:105:java.lang.Iterable entries() -> entries
    110:110:java.lang.Object get(java.lang.Object) -> get
    115:115:java.lang.Object put(java.lang.Integer,java.lang.Object) -> put
    120:120:java.lang.Object remove(java.lang.Object) -> remove
    125:125:void putAll(java.util.Map) -> putAll
    130:130:java.util.Collection values() -> values
    135:135:java.util.Set entrySet() -> entrySet
    52:52:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    52:52:void <init>(pro.gravit.repackage.io.netty.util.collection.IntCollections$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap -> pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap:
# {"fileName":"IntCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectMap map -> map
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    java.lang.Iterable entries -> entries
    151:153:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectMap) -> <init>
    157:157:java.lang.Object get(int) -> get
    162:162:java.lang.Object put(int,java.lang.Object) -> put
    167:167:java.lang.Object remove(int) -> remove
    172:172:int size() -> size
    177:177:boolean isEmpty() -> isEmpty
    182:182:void clear() -> clear
    187:187:boolean containsKey(int) -> containsKey
    192:192:boolean containsValue(java.lang.Object) -> containsValue
    197:197:boolean containsKey(java.lang.Object) -> containsKey
    202:202:java.lang.Object get(java.lang.Object) -> get
    207:207:java.lang.Object put(java.lang.Integer,java.lang.Object) -> put
    212:212:java.lang.Object remove(java.lang.Object) -> remove
    217:217:void putAll(java.util.Map) -> putAll
    222:231:java.lang.Iterable entries() -> entries
    236:239:java.util.Set keySet() -> keySet
    244:247:java.util.Set entrySet() -> entrySet
    252:255:java.util.Collection values() -> values
    144:144:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    144:144:pro.gravit.repackage.io.netty.util.collection.IntObjectMap access$100(pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap$1 -> pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap$1:
# {"fileName":"IntCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap this$0 -> this$0
    223:223:void <init>(pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap) -> <init>
    226:226:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap$EntryImpl -> pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap$EntryImpl:
# {"fileName":"IntCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectMap$PrimitiveEntry entry -> entry
    pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap this$0 -> this$0
    293:295:void <init>(pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap,pro.gravit.repackage.io.netty.util.collection.IntObjectMap$PrimitiveEntry) -> <init>
    299:299:int key() -> key
    304:304:java.lang.Object value() -> value
    309:309:void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap$IteratorImpl -> pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap$IteratorImpl:
# {"fileName":"IntCollections.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap this$0 -> this$0
    264:266:void <init>(pro.gravit.repackage.io.netty.util.collection.IntCollections$UnmodifiableMap,java.util.Iterator) -> <init>
    270:270:boolean hasNext() -> hasNext
    275:278:pro.gravit.repackage.io.netty.util.collection.IntObjectMap$PrimitiveEntry next() -> next
    283:283:void remove() -> remove
    261:261:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    java.lang.Object NULL_VALUE -> NULL_VALUE
    int maxSize -> maxSize
    float loadFactor -> loadFactor
    int[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    int mask -> mask
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.lang.Iterable entries -> entries
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> toExternal
    109:109:java.lang.Object toInternal(java.lang.Object) -> toInternal
    114:115:java.lang.Object get(int) -> get
    120:141:java.lang.Object put(int,java.lang.Object) -> put
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(int) -> remove
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(int) -> containsKey
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> entries
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Integer,java.lang.Object) -> put
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:int objectToKey(java.lang.Object) -> objectToKey
    341:355:int indexOf(int) -> indexOf
    365:365:int hashIndex(int) -> hashIndex
    372:372:int hashCode(int) -> hashCode
    380:380:int probeNext(int) -> probeNext
    387:397:void growSize() -> growSize
    407:434:boolean removeAt(int) -> removeAt
    442:443:int calcMaxSize(int) -> calcMaxSize
    452:484:void rehash(int) -> rehash
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(int) -> keyToString
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> access$300
    37:37:java.util.Set access$500(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> access$500
    37:37:java.lang.Object[] access$600(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> access$600
    37:37:boolean access$700(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap,int) -> access$700
    37:37:int[] access$800(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> access$800
    37:37:java.lang.Object access$900(java.lang.Object) -> access$900
    37:37:java.lang.Object access$1000(java.lang.Object) -> access$1000
    37:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$1 -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$1:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    64:64:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$2 -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$2:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    221:221:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$2$1 -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$2$1:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$2 this$1 -> this$1
    224:225:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:240:void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$EntrySet -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$EntrySet:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap,pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$KeySet -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$KeySet:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap,pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$KeySet$1 -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$KeySet$1:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$KeySet this$1 -> this$1
    570:571:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Integer next() -> next
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$MapEntry -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$MapEntry:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    693:695:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap,int) -> <init>
    699:700:java.lang.Integer getKey() -> getKey
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> verifyExists
    690:690:java.lang.Object getKey() -> getKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$MapIterator -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$MapIterator:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    662:663:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> next
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap,pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$PrimitiveIterator -> pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:
# {"fileName":"IntObjectHashMap.java","id":"sourceFile"}
    int prevIndex -> prevIndex
    int nextIndex -> nextIndex
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap this$0 -> this$0
    594:597:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap) -> <init>
    600:602:void scanNext() -> scanNext
    606:609:boolean hasNext() -> hasNext
    614:623:pro.gravit.repackage.io.netty.util.collection.IntObjectMap$PrimitiveEntry next() -> next
    628:638:void remove() -> remove
    645:645:int key() -> key
    650:650:java.lang.Object value() -> value
    655:656:void setValue(java.lang.Object) -> setValue
    594:594:java.lang.Object next() -> next
    594:594:void <init>(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap,pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$1) -> <init>
    594:594:int access$1100(pro.gravit.repackage.io.netty.util.collection.IntObjectHashMap$PrimitiveIterator) -> access$1100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectMap -> pro.gravit.repackage.io.netty.util.collection.IntObjectMap:
# {"fileName":"IntObjectMap.java","id":"sourceFile"}
    java.lang.Object get(int) -> get
    java.lang.Object put(int,java.lang.Object) -> put
    java.lang.Object remove(int) -> remove
    java.lang.Iterable entries() -> entries
    boolean containsKey(int) -> containsKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.IntObjectMap$PrimitiveEntry -> pro.gravit.repackage.io.netty.util.collection.IntObjectMap$PrimitiveEntry:
# {"fileName":"IntObjectMap.java","id":"sourceFile"}
    int key() -> key
    java.lang.Object value() -> value
    void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongCollections -> pro.gravit.repackage.io.netty.util.collection.LongCollections:
# {"fileName":"LongCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectMap EMPTY_MAP -> EMPTY_MAP
    31:32:void <init>() -> <init>
    39:39:pro.gravit.repackage.io.netty.util.collection.LongObjectMap emptyMap() -> emptyMap
    46:46:pro.gravit.repackage.io.netty.util.collection.LongObjectMap unmodifiableMap(pro.gravit.repackage.io.netty.util.collection.LongObjectMap) -> unmodifiableMap
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongCollections$1 -> pro.gravit.repackage.io.netty.util.collection.LongCollections$1:
# {"fileName":"LongCollections.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongCollections$EmptyMap -> pro.gravit.repackage.io.netty.util.collection.LongCollections$EmptyMap:
# {"fileName":"LongCollections.java","id":"sourceFile"}
    52:52:void <init>() -> <init>
    55:55:java.lang.Object get(long) -> get
    60:60:java.lang.Object put(long,java.lang.Object) -> put
    65:65:java.lang.Object remove(long) -> remove
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:boolean containsKey(java.lang.Object) -> containsKey
    86:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:boolean containsKey(long) -> containsKey
    100:100:boolean containsValue(java.lang.Object) -> containsValue
    105:105:java.lang.Iterable entries() -> entries
    110:110:java.lang.Object get(java.lang.Object) -> get
    115:115:java.lang.Object put(java.lang.Long,java.lang.Object) -> put
    120:120:java.lang.Object remove(java.lang.Object) -> remove
    125:125:void putAll(java.util.Map) -> putAll
    130:130:java.util.Collection values() -> values
    135:135:java.util.Set entrySet() -> entrySet
    52:52:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    52:52:void <init>(pro.gravit.repackage.io.netty.util.collection.LongCollections$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap -> pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap:
# {"fileName":"LongCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectMap map -> map
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    java.lang.Iterable entries -> entries
    151:153:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectMap) -> <init>
    157:157:java.lang.Object get(long) -> get
    162:162:java.lang.Object put(long,java.lang.Object) -> put
    167:167:java.lang.Object remove(long) -> remove
    172:172:int size() -> size
    177:177:boolean isEmpty() -> isEmpty
    182:182:void clear() -> clear
    187:187:boolean containsKey(long) -> containsKey
    192:192:boolean containsValue(java.lang.Object) -> containsValue
    197:197:boolean containsKey(java.lang.Object) -> containsKey
    202:202:java.lang.Object get(java.lang.Object) -> get
    207:207:java.lang.Object put(java.lang.Long,java.lang.Object) -> put
    212:212:java.lang.Object remove(java.lang.Object) -> remove
    217:217:void putAll(java.util.Map) -> putAll
    222:231:java.lang.Iterable entries() -> entries
    236:239:java.util.Set keySet() -> keySet
    244:247:java.util.Set entrySet() -> entrySet
    252:255:java.util.Collection values() -> values
    144:144:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    144:144:pro.gravit.repackage.io.netty.util.collection.LongObjectMap access$100(pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap$1 -> pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap$1:
# {"fileName":"LongCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap this$0 -> this$0
    223:223:void <init>(pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap) -> <init>
    226:226:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap$EntryImpl -> pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap$EntryImpl:
# {"fileName":"LongCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectMap$PrimitiveEntry entry -> entry
    pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap this$0 -> this$0
    293:295:void <init>(pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap,pro.gravit.repackage.io.netty.util.collection.LongObjectMap$PrimitiveEntry) -> <init>
    299:299:long key() -> key
    304:304:java.lang.Object value() -> value
    309:309:void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap$IteratorImpl -> pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap$IteratorImpl:
# {"fileName":"LongCollections.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap this$0 -> this$0
    264:266:void <init>(pro.gravit.repackage.io.netty.util.collection.LongCollections$UnmodifiableMap,java.util.Iterator) -> <init>
    270:270:boolean hasNext() -> hasNext
    275:278:pro.gravit.repackage.io.netty.util.collection.LongObjectMap$PrimitiveEntry next() -> next
    283:283:void remove() -> remove
    261:261:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    java.lang.Object NULL_VALUE -> NULL_VALUE
    int maxSize -> maxSize
    float loadFactor -> loadFactor
    long[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    int mask -> mask
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.lang.Iterable entries -> entries
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> toExternal
    109:109:java.lang.Object toInternal(java.lang.Object) -> toInternal
    114:115:java.lang.Object get(long) -> get
    120:141:java.lang.Object put(long,java.lang.Object) -> put
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(long) -> remove
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(long) -> containsKey
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> entries
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Long,java.lang.Object) -> put
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:long objectToKey(java.lang.Object) -> objectToKey
    341:355:int indexOf(long) -> indexOf
    365:365:int hashIndex(long) -> hashIndex
    372:372:int hashCode(long) -> hashCode
    380:380:int probeNext(int) -> probeNext
    387:397:void growSize() -> growSize
    407:434:boolean removeAt(int) -> removeAt
    442:443:int calcMaxSize(int) -> calcMaxSize
    452:484:void rehash(int) -> rehash
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(long) -> keyToString
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> access$300
    37:37:java.util.Set access$500(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> access$500
    37:37:java.lang.Object[] access$600(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> access$600
    37:37:boolean access$700(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap,int) -> access$700
    37:37:long[] access$800(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> access$800
    37:37:java.lang.Object access$900(java.lang.Object) -> access$900
    37:37:java.lang.Object access$1000(java.lang.Object) -> access$1000
    37:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$1 -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$1:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap this$0 -> this$0
    64:64:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$2 -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$2:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap this$0 -> this$0
    221:221:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$2$1 -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$2$1:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$2 this$1 -> this$1
    224:225:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:240:void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$EntrySet -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$EntrySet:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap this$0 -> this$0
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap,pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$KeySet -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$KeySet:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap this$0 -> this$0
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap,pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$KeySet$1 -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$KeySet$1:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$KeySet this$1 -> this$1
    570:571:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Long next() -> next
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$MapEntry -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$MapEntry:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap this$0 -> this$0
    693:695:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap,int) -> <init>
    699:700:java.lang.Long getKey() -> getKey
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> verifyExists
    690:690:java.lang.Object getKey() -> getKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$MapIterator -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$MapIterator:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap this$0 -> this$0
    662:663:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> next
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap,pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$PrimitiveIterator -> pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$PrimitiveIterator:
# {"fileName":"LongObjectHashMap.java","id":"sourceFile"}
    int prevIndex -> prevIndex
    int nextIndex -> nextIndex
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap this$0 -> this$0
    594:597:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap) -> <init>
    600:602:void scanNext() -> scanNext
    606:609:boolean hasNext() -> hasNext
    614:623:pro.gravit.repackage.io.netty.util.collection.LongObjectMap$PrimitiveEntry next() -> next
    628:638:void remove() -> remove
    645:645:long key() -> key
    650:650:java.lang.Object value() -> value
    655:656:void setValue(java.lang.Object) -> setValue
    594:594:java.lang.Object next() -> next
    594:594:void <init>(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap,pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$1) -> <init>
    594:594:int access$1100(pro.gravit.repackage.io.netty.util.collection.LongObjectHashMap$PrimitiveIterator) -> access$1100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectMap -> pro.gravit.repackage.io.netty.util.collection.LongObjectMap:
# {"fileName":"LongObjectMap.java","id":"sourceFile"}
    java.lang.Object get(long) -> get
    java.lang.Object put(long,java.lang.Object) -> put
    java.lang.Object remove(long) -> remove
    java.lang.Iterable entries() -> entries
    boolean containsKey(long) -> containsKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.LongObjectMap$PrimitiveEntry -> pro.gravit.repackage.io.netty.util.collection.LongObjectMap$PrimitiveEntry:
# {"fileName":"LongObjectMap.java","id":"sourceFile"}
    long key() -> key
    java.lang.Object value() -> value
    void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortCollections -> pro.gravit.repackage.io.netty.util.collection.ShortCollections:
# {"fileName":"ShortCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectMap EMPTY_MAP -> EMPTY_MAP
    31:32:void <init>() -> <init>
    39:39:pro.gravit.repackage.io.netty.util.collection.ShortObjectMap emptyMap() -> emptyMap
    46:46:pro.gravit.repackage.io.netty.util.collection.ShortObjectMap unmodifiableMap(pro.gravit.repackage.io.netty.util.collection.ShortObjectMap) -> unmodifiableMap
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortCollections$1 -> pro.gravit.repackage.io.netty.util.collection.ShortCollections$1:
# {"fileName":"ShortCollections.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortCollections$EmptyMap -> pro.gravit.repackage.io.netty.util.collection.ShortCollections$EmptyMap:
# {"fileName":"ShortCollections.java","id":"sourceFile"}
    52:52:void <init>() -> <init>
    55:55:java.lang.Object get(short) -> get
    60:60:java.lang.Object put(short,java.lang.Object) -> put
    65:65:java.lang.Object remove(short) -> remove
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:boolean containsKey(java.lang.Object) -> containsKey
    86:86:void clear() -> clear
    90:90:java.util.Set keySet() -> keySet
    95:95:boolean containsKey(short) -> containsKey
    100:100:boolean containsValue(java.lang.Object) -> containsValue
    105:105:java.lang.Iterable entries() -> entries
    110:110:java.lang.Object get(java.lang.Object) -> get
    115:115:java.lang.Object put(java.lang.Short,java.lang.Object) -> put
    120:120:java.lang.Object remove(java.lang.Object) -> remove
    125:125:void putAll(java.util.Map) -> putAll
    130:130:java.util.Collection values() -> values
    135:135:java.util.Set entrySet() -> entrySet
    52:52:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    52:52:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortCollections$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap -> pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap:
# {"fileName":"ShortCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectMap map -> map
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    java.lang.Iterable entries -> entries
    151:153:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectMap) -> <init>
    157:157:java.lang.Object get(short) -> get
    162:162:java.lang.Object put(short,java.lang.Object) -> put
    167:167:java.lang.Object remove(short) -> remove
    172:172:int size() -> size
    177:177:boolean isEmpty() -> isEmpty
    182:182:void clear() -> clear
    187:187:boolean containsKey(short) -> containsKey
    192:192:boolean containsValue(java.lang.Object) -> containsValue
    197:197:boolean containsKey(java.lang.Object) -> containsKey
    202:202:java.lang.Object get(java.lang.Object) -> get
    207:207:java.lang.Object put(java.lang.Short,java.lang.Object) -> put
    212:212:java.lang.Object remove(java.lang.Object) -> remove
    217:217:void putAll(java.util.Map) -> putAll
    222:231:java.lang.Iterable entries() -> entries
    236:239:java.util.Set keySet() -> keySet
    244:247:java.util.Set entrySet() -> entrySet
    252:255:java.util.Collection values() -> values
    144:144:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    144:144:pro.gravit.repackage.io.netty.util.collection.ShortObjectMap access$100(pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap) -> access$100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap$1 -> pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap$1:
# {"fileName":"ShortCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap this$0 -> this$0
    223:223:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap) -> <init>
    226:226:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap$EntryImpl -> pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap$EntryImpl:
# {"fileName":"ShortCollections.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectMap$PrimitiveEntry entry -> entry
    pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap this$0 -> this$0
    293:295:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap,pro.gravit.repackage.io.netty.util.collection.ShortObjectMap$PrimitiveEntry) -> <init>
    299:299:short key() -> key
    304:304:java.lang.Object value() -> value
    309:309:void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap$IteratorImpl -> pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap$IteratorImpl:
# {"fileName":"ShortCollections.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap this$0 -> this$0
    264:266:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortCollections$UnmodifiableMap,java.util.Iterator) -> <init>
    270:270:boolean hasNext() -> hasNext
    275:278:pro.gravit.repackage.io.netty.util.collection.ShortObjectMap$PrimitiveEntry next() -> next
    283:283:void remove() -> remove
    261:261:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    java.lang.Object NULL_VALUE -> NULL_VALUE
    int maxSize -> maxSize
    float loadFactor -> loadFactor
    short[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    int mask -> mask
    java.util.Set keySet -> keySet
    java.util.Set entrySet -> entrySet
    java.lang.Iterable entries -> entries
    boolean $assertionsDisabled -> $assertionsDisabled
    72:73:void <init>() -> <init>
    76:77:void <init>(int) -> <init>
    62:100:void <init>(int,float) -> <init>
    103:104:java.lang.Object toExternal(java.lang.Object) -> toExternal
    109:109:java.lang.Object toInternal(java.lang.Object) -> toInternal
    114:115:java.lang.Object get(short) -> get
    120:141:java.lang.Object put(short,java.lang.Object) -> put
    148:165:void putAll(java.util.Map) -> putAll
    169:176:java.lang.Object remove(short) -> remove
    181:181:int size() -> size
    186:186:boolean isEmpty() -> isEmpty
    191:194:void clear() -> clear
    198:198:boolean containsKey(short) -> containsKey
    204:211:boolean containsValue(java.lang.Object) -> containsValue
    216:216:java.lang.Iterable entries() -> entries
    221:221:java.util.Collection values() -> values
    256:267:int hashCode() -> hashCode
    272:297:boolean equals(java.lang.Object) -> equals
    302:302:boolean containsKey(java.lang.Object) -> containsKey
    307:307:java.lang.Object get(java.lang.Object) -> get
    312:312:java.lang.Object put(java.lang.Short,java.lang.Object) -> put
    317:317:java.lang.Object remove(java.lang.Object) -> remove
    322:322:java.util.Set keySet() -> keySet
    327:327:java.util.Set entrySet() -> entrySet
    331:331:short objectToKey(java.lang.Object) -> objectToKey
    341:355:int indexOf(short) -> indexOf
    365:365:int hashIndex(short) -> hashIndex
    372:372:int hashCode(short) -> hashCode
    380:380:int probeNext(int) -> probeNext
    387:397:void growSize() -> growSize
    407:434:boolean removeAt(int) -> removeAt
    442:443:int calcMaxSize(int) -> calcMaxSize
    452:484:void rehash(int) -> rehash
    488:505:java.lang.String toString() -> toString
    513:513:java.lang.String keyToString(short) -> keyToString
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:int access$300(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> access$300
    37:37:java.util.Set access$500(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> access$500
    37:37:java.lang.Object[] access$600(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> access$600
    37:37:boolean access$700(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap,int) -> access$700
    37:37:short[] access$800(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> access$800
    37:37:java.lang.Object access$900(java.lang.Object) -> access$900
    37:37:java.lang.Object access$1000(java.lang.Object) -> access$1000
    37:49:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$1 -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$1:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap this$0 -> this$0
    64:64:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> <init>
    67:67:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$2 -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$2:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap this$0 -> this$0
    221:221:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> <init>
    224:224:java.util.Iterator iterator() -> iterator
    246:246:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$2$1 -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$2$1:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$2 this$1 -> this$1
    224:225:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$2) -> <init>
    229:229:boolean hasNext() -> hasNext
    234:234:java.lang.Object next() -> next
    239:240:void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$EntrySet -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$EntrySet:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap this$0 -> this$0
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> <init>
    522:522:java.util.Iterator iterator() -> iterator
    527:527:int size() -> size
    519:519:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap,pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$KeySet -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$KeySet:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap this$0 -> this$0
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> <init>
    537:537:int size() -> size
    542:542:boolean contains(java.lang.Object) -> contains
    547:547:boolean remove(java.lang.Object) -> remove
    552:560:boolean retainAll(java.util.Collection) -> retainAll
    565:566:void clear() -> clear
    570:570:java.util.Iterator iterator() -> iterator
    534:534:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap,pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$KeySet$1 -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$KeySet$1:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    java.util.Iterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$KeySet this$1 -> this$1
    570:571:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$KeySet) -> <init>
    575:575:boolean hasNext() -> hasNext
    580:580:java.lang.Short next() -> next
    585:586:void remove() -> remove
    570:570:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$MapEntry -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$MapEntry:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap this$0 -> this$0
    693:695:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap,int) -> <init>
    699:700:java.lang.Short getKey() -> getKey
    705:706:java.lang.Object getValue() -> getValue
    711:714:java.lang.Object setValue(java.lang.Object) -> setValue
    718:721:void verifyExists() -> verifyExists
    690:690:java.lang.Object getKey() -> getKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$MapIterator -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$MapIterator:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$PrimitiveIterator iter -> iter
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap this$0 -> this$0
    662:663:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> <init>
    667:667:boolean hasNext() -> hasNext
    672:678:java.util.Map$Entry next() -> next
    683:684:void remove() -> remove
    662:662:java.lang.Object next() -> next
    662:662:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap,pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$PrimitiveIterator -> pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$PrimitiveIterator:
# {"fileName":"ShortObjectHashMap.java","id":"sourceFile"}
    int prevIndex -> prevIndex
    int nextIndex -> nextIndex
    int entryIndex -> entryIndex
    pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap this$0 -> this$0
    594:597:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap) -> <init>
    600:602:void scanNext() -> scanNext
    606:609:boolean hasNext() -> hasNext
    614:623:pro.gravit.repackage.io.netty.util.collection.ShortObjectMap$PrimitiveEntry next() -> next
    628:638:void remove() -> remove
    645:645:short key() -> key
    650:650:java.lang.Object value() -> value
    655:656:void setValue(java.lang.Object) -> setValue
    594:594:java.lang.Object next() -> next
    594:594:void <init>(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap,pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$1) -> <init>
    594:594:int access$1100(pro.gravit.repackage.io.netty.util.collection.ShortObjectHashMap$PrimitiveIterator) -> access$1100
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectMap -> pro.gravit.repackage.io.netty.util.collection.ShortObjectMap:
# {"fileName":"ShortObjectMap.java","id":"sourceFile"}
    java.lang.Object get(short) -> get
    java.lang.Object put(short,java.lang.Object) -> put
    java.lang.Object remove(short) -> remove
    java.lang.Iterable entries() -> entries
    boolean containsKey(short) -> containsKey
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.collection.ShortObjectMap$PrimitiveEntry -> pro.gravit.repackage.io.netty.util.collection.ShortObjectMap$PrimitiveEntry:
# {"fileName":"ShortObjectMap.java","id":"sourceFile"}
    short key() -> key
    java.lang.Object value() -> value
    void setValue(java.lang.Object) -> setValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.AbstractEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.AbstractEventExecutor:
# {"fileName":"AbstractEventExecutor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    long DEFAULT_SHUTDOWN_QUIET_PERIOD -> DEFAULT_SHUTDOWN_QUIET_PERIOD
    long DEFAULT_SHUTDOWN_TIMEOUT -> DEFAULT_SHUTDOWN_TIMEOUT
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup parent -> parent
    java.util.Collection selfCollection -> selfCollection
    47:48:void <init>() -> <init>
    44:52:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup) -> <init>
    56:56:pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    61:61:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    66:66:boolean inEventLoop() -> inEventLoop
    71:71:java.util.Iterator iterator() -> iterator
    76:76:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    void shutdown() -> shutdown
    92:93:java.util.List shutdownNow() -> shutdownNow
    98:98:pro.gravit.repackage.io.netty.util.concurrent.Promise newPromise() -> newPromise
    103:103:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    108:108:pro.gravit.repackage.io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    113:113:pro.gravit.repackage.io.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
    118:118:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    123:123:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    128:128:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    133:133:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    138:138:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    144:144:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    149:149:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    154:154:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    159:159:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    167:171:void safeExecute(java.lang.Runnable) -> safeExecute
    174:175:void runTask(java.lang.Runnable) -> runTask
    188:189:void lazyExecute(java.lang.Runnable) -> lazyExecute
    192:193:void lazyExecute0(java.lang.Runnable) -> lazyExecute0
    37:37:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    37:37:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    37:37:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    37:37:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    37:37:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    37:37:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    37:37:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    38:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable -> pro.gravit.repackage.io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable:
# {"fileName":"AbstractEventExecutor.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.AbstractEventExecutorGroup -> pro.gravit.repackage.io.netty.util.concurrent.AbstractEventExecutorGroup:
# {"fileName":"AbstractEventExecutorGroup.java","id":"sourceFile"}
    32:32:void <init>() -> <init>
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    40:40:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    45:45:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    50:50:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    55:55:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    60:60:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    65:65:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    70:70:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    void shutdown() -> shutdown
    86:87:java.util.List shutdownNow() -> shutdownNow
    93:93:java.util.List invokeAll(java.util.Collection) -> invokeAll
    99:99:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    104:104:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    110:110:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    115:116:void execute(java.lang.Runnable) -> execute
    32:32:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    32:32:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    32:32:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    32:32:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    32:32:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    32:32:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    32:32:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.AbstractFuture -> pro.gravit.repackage.io.netty.util.concurrent.AbstractFuture:
# {"fileName":"AbstractFuture.java","id":"sourceFile"}
    28:28:void <init>() -> <init>
    32:41:java.lang.Object get() -> get
    46:56:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor:
# {"fileName":"AbstractScheduledEventExecutor.java","id":"sourceFile"}
    java.util.Comparator SCHEDULED_FUTURE_TASK_COMPARATOR -> SCHEDULED_FUTURE_TASK_COMPARATOR
    long START_TIME -> START_TIME
    java.lang.Runnable WAKEUP_TASK -> WAKEUP_TASK
    pro.gravit.repackage.io.netty.util.internal.PriorityQueue scheduledTaskQueue -> scheduledTaskQueue
    long nextTaskId -> nextTaskId
    boolean $assertionsDisabled -> $assertionsDisabled
    50:51:void <init>() -> <init>
    54:55:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup) -> <init>
    68:68:long getCurrentTimeNanos() -> getCurrentTimeNanos
    76:76:long nanoTime() -> nanoTime
    80:80:long defaultCurrentTimeNanos() -> defaultCurrentTimeNanos
    84:86:long deadlineNanos(long,long) -> deadlineNanos
    96:96:long deadlineToDelayNanos(long) -> deadlineToDelayNanos
    104:104:long initialNanoTime() -> initialNanoTime
    108:114:pro.gravit.repackage.io.netty.util.internal.PriorityQueue scheduledTaskQueue() -> scheduledTaskQueue
    118:118:boolean isNullOrEmpty(java.util.Queue) -> isNullOrEmpty
    127:141:void cancelScheduledTasks() -> cancelScheduledTasks
    147:147:java.lang.Runnable pollScheduledTask() -> pollScheduledTask
    155:163:java.lang.Runnable pollScheduledTask(long) -> pollScheduledTask
    170:171:long nextScheduledTaskNano() -> nextScheduledTaskNano
    179:180:long nextScheduledTaskDeadlineNanos() -> nextScheduledTaskDeadlineNanos
    184:185:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask peekScheduledTask() -> peekScheduledTask
    192:193:boolean hasScheduledTasks() -> hasScheduledTasks
    198:208:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    213:221:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    226:240:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    245:260:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    265:266:void validateScheduled0(long,java.util.concurrent.TimeUnit) -> validateScheduled0
    276:276:void validateScheduled(long,java.util.concurrent.TimeUnit) -> validateScheduled
    280:281:void scheduleFromEventLoop(pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask) -> scheduleFromEventLoop
    284:300:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask) -> schedule
    304:311:void removeScheduled(pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask) -> removeScheduled
    327:327:boolean beforeScheduledTaskSubmitted(long) -> beforeScheduledTaskSubmitted
    337:337:boolean afterScheduledTaskSubmitted(long) -> afterScheduledTaskSubmitted
    30:30:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    30:30:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    30:30:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    30:30:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    30:41:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor$1 -> pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor$1:
# {"fileName":"AbstractScheduledEventExecutor.java","id":"sourceFile"}
    32:32:void <init>() -> <init>
    35:35:int compare(pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask,pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask) -> compare
    32:32:int compare(java.lang.Object,java.lang.Object) -> compare
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor$2 -> pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor$2:
# {"fileName":"AbstractScheduledEventExecutor.java","id":"sourceFile"}
    41:41:void <init>() -> <init>
    43:43:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.BlockingOperationException -> pro.gravit.repackage.io.netty.util.concurrent.BlockingOperationException:
# {"fileName":"BlockingOperationException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    28:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
    35:36:void <init>(java.lang.Throwable) -> <init>
    39:40:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.CompleteFuture -> pro.gravit.repackage.io.netty.util.concurrent.CompleteFuture:
# {"fileName":"CompleteFuture.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    35:37:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    43:43:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    48:49:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    55:62:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    68:68:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    74:74:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    79:82:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    87:90:boolean await(long,java.util.concurrent.TimeUnit) -> await
    95:95:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    100:100:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    105:108:boolean await(long) -> await
    113:113:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    118:118:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    123:123:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    128:128:boolean isDone() -> isDone
    133:133:boolean isCancellable() -> isCancellable
    138:138:boolean isCancelled() -> isCancelled
    148:148:boolean cancel(boolean) -> cancel
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutor:
# {"fileName":"DefaultEventExecutor.java","id":"sourceFile"}
    28:29:void <init>() -> <init>
    32:33:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    36:37:void <init>(java.util.concurrent.Executor) -> <init>
    40:41:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup) -> <init>
    44:45:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory) -> <init>
    48:49:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor) -> <init>
    53:54:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,int,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    58:59:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,int,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    64:74:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorChooserFactory -> pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorChooserFactory:
# {"fileName":"DefaultEventExecutorChooserFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorChooserFactory INSTANCE -> INSTANCE
    31:31:void <init>() -> <init>
    35:38:pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser newChooser(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor[]) -> newChooser
    43:43:boolean isPowerOfTwo(int) -> isPowerOfTwo
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorChooserFactory$GenericEventExecutorChooser -> pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorChooserFactory$GenericEventExecutorChooser:
# {"fileName":"DefaultEventExecutorChooserFactory.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicLong idx -> idx
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor[] executors -> executors
    64:69:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor[]) -> <init>
    73:73:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorChooserFactory$PowerOfTwoEventExecutorChooser -> pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorChooserFactory$PowerOfTwoEventExecutorChooser:
# {"fileName":"DefaultEventExecutorChooserFactory.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicInteger idx -> idx
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor[] executors -> executors
    47:52:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor[]) -> <init>
    56:56:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorGroup -> pro.gravit.repackage.io.netty.util.concurrent.DefaultEventExecutorGroup:
# {"fileName":"DefaultEventExecutorGroup.java","id":"sourceFile"}
    30:31:void <init>(int) -> <init>
    40:42:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    54:55:void <init>(int,java.util.concurrent.ThreadFactory,int,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    59:59:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultFutureListeners -> pro.gravit.repackage.io.netty.util.concurrent.DefaultFutureListeners:
# {"fileName":"DefaultFutureListeners.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[] listeners -> listeners
    int size -> size
    int progressiveSize -> progressiveSize
    28:39:void <init>(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener,pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> <init>
    42:53:void add(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> add
    56:73:void remove(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> remove
    76:76:pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[] listeners() -> listeners
    80:80:int size() -> size
    84:84:int progressiveSize() -> progressiveSize
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultProgressivePromise -> pro.gravit.repackage.io.netty.util.concurrent.DefaultProgressivePromise:
# {"fileName":"DefaultProgressivePromise.java","id":"sourceFile"}
    32:33:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    35:35:void <init>() -> <init>
    39:53:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    58:68:boolean tryProgress(long,long) -> tryProgress
    73:74:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    79:80:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    85:86:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    91:92:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    97:98:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise sync() -> sync
    103:104:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    109:110:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise await() -> await
    115:116:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    121:122:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    127:128:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise sync() -> sync
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise await() -> await
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    21:21:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    21:21:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    21:21:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture await() -> await
    21:21:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    21:21:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture sync() -> sync
    21:21:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    21:21:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    21:21:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    21:21:pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise -> pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise:
# {"fileName":"DefaultPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger rejectedExecutionLogger -> rejectedExecutionLogger
    int MAX_LISTENER_STACK_DEPTH -> MAX_LISTENER_STACK_DEPTH
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater RESULT_UPDATER -> RESULT_UPDATER
    java.lang.Object SUCCESS -> SUCCESS
    java.lang.Object UNCANCELLABLE -> UNCANCELLABLE
    pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$CauseHolder CANCELLATION_CAUSE_HOLDER -> CANCELLATION_CAUSE_HOLDER
    java.lang.StackTraceElement[] CANCELLATION_STACK -> CANCELLATION_STACK
    java.lang.Object result -> result
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener listener -> listener
    pro.gravit.repackage.io.netty.util.concurrent.DefaultFutureListeners listeners -> listeners
    short waiters -> waiters
    boolean notifyingListeners -> notifyingListeners
    boolean $assertionsDisabled -> $assertionsDisabled
    83:85:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    90:93:void <init>() -> <init>
    97:100:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    105:105:boolean trySuccess(java.lang.Object) -> trySuccess
    110:113:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    118:118:boolean tryFailure(java.lang.Throwable) -> tryFailure
    123:127:boolean setUncancellable() -> setUncancellable
    132:133:boolean isSuccess() -> isSuccess
    138:138:boolean isCancellable() -> isCancellable
    159:159:java.lang.Throwable cause() -> cause
    163:173:java.lang.Throwable cause0(java.lang.Object) -> cause0
    178:188:pro.gravit.repackage.io.netty.util.concurrent.Promise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    193:208:pro.gravit.repackage.io.netty.util.concurrent.Promise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    213:219:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    224:235:pro.gravit.repackage.io.netty.util.concurrent.Promise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    240:260:pro.gravit.repackage.io.netty.util.concurrent.Promise await() -> await
    265:290:pro.gravit.repackage.io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    295:295:boolean await(long,java.util.concurrent.TimeUnit) -> await
    300:300:boolean await(long) -> await
    306:309:boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    316:319:boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    326:330:java.lang.Object getNow() -> getNow
    336:351:java.lang.Object get() -> get
    357:374:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    384:390:boolean cancel(boolean) -> cancel
    395:395:boolean isCancelled() -> isCancelled
    400:400:boolean isDone() -> isDone
    405:407:pro.gravit.repackage.io.netty.util.concurrent.Promise sync() -> sync
    412:414:pro.gravit.repackage.io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    419:419:java.lang.String toString() -> toString
    423:445:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    457:457:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    461:465:void checkDeadLock() -> checkDeadLock
    478:482:void notifyListener(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> notifyListener
    485:506:void notifyListeners() -> notifyListeners
    516:536:void notifyListenerWithStackOverFlowProtection(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> notifyListenerWithStackOverFlowProtection
    541:575:void notifyListenersNow() -> notifyListenersNow
    580:585:void notifyListeners0(pro.gravit.repackage.io.netty.util.concurrent.DefaultFutureListeners) -> notifyListeners0
    590:596:void notifyListener0(pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> notifyListener0
    599:610:void addListener0(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener0
    613:622:void removeListener0(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener0
    625:625:boolean setSuccess0(java.lang.Object) -> setSuccess0
    629:629:boolean setFailure0(java.lang.Throwable) -> setFailure0
    633:640:boolean setValue0(java.lang.Object) -> setValue0
    648:651:boolean checkNotifyWaiters() -> checkNotifyWaiters
    655:659:void incWaiters() -> incWaiters
    662:663:void decWaiters() -> decWaiters
    666:672:void rethrowIfFailed() -> rethrowIfFailed
    675:723:boolean await0(long,boolean) -> await0
    738:775:void notifyProgressiveListeners(long,long) -> notifyProgressiveListeners
    782:819:java.lang.Object progressiveListeners() -> progressiveListeners
    825:831:void notifyProgressiveListeners0(pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture,pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> notifyProgressiveListeners0
    837:843:void notifyProgressiveListener0(pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture,pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> notifyProgressiveListener0
    846:846:boolean isCancelled0(java.lang.Object) -> isCancelled0
    850:850:boolean isDone0(java.lang.Object) -> isDone0
    862:866:void safeExecute(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Runnable) -> safeExecute
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    35:35:java.lang.StackTraceElement[] access$000() -> access$000
    35:35:void access$200(pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise) -> access$200
    35:35:void access$300(pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> access$300
    35:35:void access$400(pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture,pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> access$400
    35:35:void access$500(pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture,pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> access$500
    35:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$1 -> pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$1:
# {"fileName":"DefaultPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise this$0 -> this$0
    500:500:void <init>(pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise) -> <init>
    503:504:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$2 -> pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$2:
# {"fileName":"DefaultPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$future -> val$future
    pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener val$listener -> val$listener
    530:530:void <init>(pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> <init>
    533:534:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$3 -> pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$3:
# {"fileName":"DefaultPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture val$self -> val$self
    pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener[] val$array -> val$array
    long val$progress -> val$progress
    long val$total -> val$total
    pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise this$0 -> this$0
    758:758:void <init>(pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise,pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture,pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener[],long,long) -> <init>
    761:762:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$4 -> pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$4:
# {"fileName":"DefaultPromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture val$self -> val$self
    pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener val$l -> val$l
    long val$progress -> val$progress
    long val$total -> val$total
    pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise this$0 -> this$0
    767:767:void <init>(pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise,pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture,pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener,long,long) -> <init>
    770:771:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$CauseHolder -> pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$CauseHolder:
# {"fileName":"DefaultPromise.java","id":"sourceFile"}
    java.lang.Throwable cause -> cause
    855:857:void <init>(java.lang.Throwable) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$LeanCancellationException -> pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$LeanCancellationException:
# {"fileName":"DefaultPromise.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    141:141:void <init>() -> <init>
    147:148:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    153:153:java.lang.String toString() -> toString
    141:141:void <init>(pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$StacklessCancellationException -> pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$StacklessCancellationException:
# {"fileName":"DefaultPromise.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    872:872:void <init>() -> <init>
    878:878:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    882:882:pro.gravit.repackage.io.netty.util.concurrent.DefaultPromise$StacklessCancellationException newInstance(java.lang.Class,java.lang.String) -> newInstance
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.DefaultThreadFactory -> pro.gravit.repackage.io.netty.util.concurrent.DefaultThreadFactory:
# {"fileName":"DefaultThreadFactory.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicInteger poolId -> poolId
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    java.lang.String prefix -> prefix
    boolean daemon -> daemon
    int priority -> priority
    java.lang.ThreadGroup threadGroup -> threadGroup
    40:41:void <init>(java.lang.Class) -> <init>
    44:45:void <init>(java.lang.String) -> <init>
    48:49:void <init>(java.lang.Class,boolean) -> <init>
    52:53:void <init>(java.lang.String,boolean) -> <init>
    56:57:void <init>(java.lang.Class,int) -> <init>
    60:61:void <init>(java.lang.String,int) -> <init>
    64:65:void <init>(java.lang.Class,boolean,int) -> <init>
    68:80:java.lang.String toPoolName(java.lang.Class) -> toPoolName
    33:97:void <init>(java.lang.String,boolean,int,java.lang.ThreadGroup) -> <init>
    100:101:void <init>(java.lang.String,boolean,int) -> <init>
    105:117:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    121:121:java.lang.Thread newThread(java.lang.Runnable,java.lang.String) -> newThread
    31:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.EventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.EventExecutor:
# {"fileName":"EventExecutor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    boolean inEventLoop() -> inEventLoop
    boolean inEventLoop(java.lang.Thread) -> inEventLoop
    pro.gravit.repackage.io.netty.util.concurrent.Promise newPromise() -> newPromise
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    pro.gravit.repackage.io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    pro.gravit.repackage.io.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory -> pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory:
# {"fileName":"EventExecutorChooserFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser newChooser(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor[]) -> newChooser
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser -> pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser:
# {"fileName":"EventExecutorChooserFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup -> pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup:
# {"fileName":"EventExecutorGroup.java","id":"sourceFile"}
    boolean isShuttingDown() -> isShuttingDown
    pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    java.util.Iterator iterator() -> iterator
    pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.FailedFuture -> pro.gravit.repackage.io.netty.util.concurrent.FailedFuture:
# {"fileName":"FailedFuture.java","id":"sourceFile"}
    java.lang.Throwable cause -> cause
    37:39:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Throwable) -> <init>
    43:43:java.lang.Throwable cause() -> cause
    48:48:boolean isSuccess() -> isSuccess
    53:54:pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    59:60:pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    65:65:java.lang.Object getNow() -> getNow
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal -> pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal:
# {"fileName":"FastThreadLocal.java","id":"sourceFile"}
    int index -> index
    54:73:void removeAll() -> removeAll
    79:83:int size() -> size
    94:95:void destroy() -> destroy
    99:109:void addToVariablesToRemove(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap,pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal) -> addToVariablesToRemove
    114:123:void removeFromVariablesToRemove(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap,pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal) -> removeFromVariablesToRemove
    127:129:void <init>() -> <init>
    136:142:java.lang.Object get() -> get
    150:157:java.lang.Object getIfExists() -> getIfExists
    166:171:java.lang.Object get(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap) -> get
    175:187:java.lang.Object initialize(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap) -> initialize
    194:200:void set(java.lang.Object) -> set
    206:211:void set(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap,java.lang.Object) -> set
    217:220:void setKnownNotUnset(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap,java.lang.Object) -> setKnownNotUnset
    226:226:boolean isSet() -> isSet
    234:234:boolean isSet(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap) -> isSet
    241:242:void remove() -> remove
    251:264:void remove(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap) -> remove
    270:270:java.lang.Object initialValue() -> initialValue
    278:278:void onRemoval(java.lang.Object) -> onRemoval
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocalRunnable -> pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocalRunnable:
# {"fileName":"FastThreadLocalRunnable.java","id":"sourceFile"}
    java.lang.Runnable runnable -> runnable
    23:25:void <init>(java.lang.Runnable) -> <init>
    30:34:void run() -> run
    37:37:java.lang.Runnable wrap(java.lang.Runnable) -> wrap
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocalThread -> pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocalThread:
# {"fileName":"FastThreadLocalThread.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    boolean cleanupFastThreadLocals -> cleanupFastThreadLocals
    pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap threadLocalMap -> threadLocalMap
    35:37:void <init>() -> <init>
    40:42:void <init>(java.lang.Runnable) -> <init>
    45:47:void <init>(java.lang.ThreadGroup,java.lang.Runnable) -> <init>
    50:52:void <init>(java.lang.String) -> <init>
    55:57:void <init>(java.lang.ThreadGroup,java.lang.String) -> <init>
    60:62:void <init>(java.lang.Runnable,java.lang.String) -> <init>
    65:67:void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String) -> <init>
    70:72:void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long) -> <init>
    79:83:pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap threadLocalMap() -> threadLocalMap
    91:96:void setThreadLocalMap(pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap) -> setThreadLocalMap
    103:103:boolean willCleanupFastThreadLocals() -> willCleanupFastThreadLocals
    111:112:boolean willCleanupFastThreadLocals(java.lang.Thread) -> willCleanupFastThreadLocals
    126:126:boolean permitBlockingCalls() -> permitBlockingCalls
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.Future -> pro.gravit.repackage.io.netty.util.concurrent.Future:
# {"fileName":"Future.java","id":"sourceFile"}
    boolean isSuccess() -> isSuccess
    boolean isCancellable() -> isCancellable
    java.lang.Throwable cause() -> cause
    pro.gravit.repackage.io.netty.util.concurrent.Future addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.util.concurrent.Future addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.util.concurrent.Future removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.util.concurrent.Future removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.util.concurrent.Future sync() -> sync
    pro.gravit.repackage.io.netty.util.concurrent.Future syncUninterruptibly() -> syncUninterruptibly
    pro.gravit.repackage.io.netty.util.concurrent.Future await() -> await
    pro.gravit.repackage.io.netty.util.concurrent.Future awaitUninterruptibly() -> awaitUninterruptibly
    boolean await(long,java.util.concurrent.TimeUnit) -> await
    boolean await(long) -> await
    boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    boolean awaitUninterruptibly(long) -> awaitUninterruptibly
    java.lang.Object getNow() -> getNow
    boolean cancel(boolean) -> cancel
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.FutureListener -> pro.gravit.repackage.io.netty.util.concurrent.FutureListener:
# {"fileName":"FutureListener.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener -> pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener:
# {"fileName":"GenericFutureListener.java","id":"sourceFile"}
    void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener -> pro.gravit.repackage.io.netty.util.concurrent.GenericProgressiveFutureListener:
# {"fileName":"GenericProgressiveFutureListener.java","id":"sourceFile"}
    void operationProgressed(pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture,long,long) -> operationProgressed
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor:
# {"fileName":"GlobalEventExecutor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    long SCHEDULE_QUIET_PERIOD_INTERVAL -> SCHEDULE_QUIET_PERIOD_INTERVAL
    pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor INSTANCE -> INSTANCE
    java.util.concurrent.BlockingQueue taskQueue -> taskQueue
    pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask quietPeriodTask -> quietPeriodTask
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor$TaskRunner taskRunner -> taskRunner
    java.util.concurrent.atomic.AtomicBoolean started -> started
    java.lang.Thread thread -> thread
    pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture -> terminationFuture
    49:78:void <init>() -> <init>
    86:121:java.lang.Runnable takeTask() -> takeTask
    125:131:void fetchFromScheduledTaskQueue() -> fetchFromScheduledTaskQueue
    137:137:int pendingTasks() -> pendingTasks
    145:146:void addTask(java.lang.Runnable) -> addTask
    150:150:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    155:155:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    160:160:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    166:166:void shutdown() -> shutdown
    171:171:boolean isShuttingDown() -> isShuttingDown
    176:176:boolean isShutdown() -> isShutdown
    181:181:boolean isTerminated() -> isTerminated
    186:186:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    198:205:boolean awaitInactivity(long,java.util.concurrent.TimeUnit) -> awaitInactivity
    210:211:void execute(java.lang.Runnable) -> execute
    214:218:void execute0(java.lang.Runnable) -> execute0
    221:242:void startThread() -> startThread
    41:41:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    41:41:java.util.concurrent.atomic.AtomicBoolean access$100(pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor) -> access$100
    43:47:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor$1 -> pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor$1:
# {"fileName":"GlobalEventExecutor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor this$0 -> this$0
    51:51:void <init>(pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor) -> <init>
    55:55:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor$2 -> pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor$2:
# {"fileName":"GlobalEventExecutor.java","id":"sourceFile"}
    java.lang.Thread val$t -> val$t
    pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor this$0 -> this$0
    228:228:void <init>(pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor,java.lang.Thread) -> <init>
    231:232:java.lang.Void run() -> run
    228:228:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor$TaskRunner -> pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:
# {"fileName":"GlobalEventExecutor.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor this$0 -> this$0
    244:244:void <init>(pro.gravit.repackage.io.netty.util.concurrent.GlobalEventExecutor) -> <init>
    248:293:void run() -> run
    244:244:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor:
# {"fileName":"ImmediateEventExecutor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor INSTANCE -> INSTANCE
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal DELAYED_RUNNABLES -> DELAYED_RUNNABLES
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal RUNNING -> RUNNING
    pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture -> terminationFuture
    55:58:void <init>() -> <init>
    62:62:boolean inEventLoop() -> inEventLoop
    67:67:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    72:72:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    77:77:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    82:82:void shutdown() -> shutdown
    86:86:boolean isShuttingDown() -> isShuttingDown
    91:91:boolean isShutdown() -> isShutdown
    96:96:boolean isTerminated() -> isTerminated
    101:101:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    106:128:void execute(java.lang.Runnable) -> execute
    132:132:pro.gravit.repackage.io.netty.util.concurrent.Promise newPromise() -> newPromise
    137:137:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    34:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor$1 -> pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor$1:
# {"fileName":"ImmediateEventExecutor.java","id":"sourceFile"}
    39:39:void <init>() -> <init>
    42:42:java.util.Queue initialValue() -> initialValue
    39:39:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor$2 -> pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor$2:
# {"fileName":"ImmediateEventExecutor.java","id":"sourceFile"}
    48:48:void <init>() -> <init>
    51:51:java.lang.Boolean initialValue() -> initialValue
    48:48:java.lang.Object initialValue() -> initialValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise -> pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor$ImmediateProgressivePromise:
# {"fileName":"ImmediateEventExecutor.java","id":"sourceFile"}
    153:154:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    159:159:void checkDeadLock() -> checkDeadLock
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise -> pro.gravit.repackage.io.netty.util.concurrent.ImmediateEventExecutor$ImmediatePromise:
# {"fileName":"ImmediateEventExecutor.java","id":"sourceFile"}
    142:143:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    148:148:void checkDeadLock() -> checkDeadLock
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ImmediateExecutor -> pro.gravit.repackage.io.netty.util.concurrent.ImmediateExecutor:
# {"fileName":"ImmediateExecutor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.ImmediateExecutor INSTANCE -> INSTANCE
    28:30:void <init>() -> <init>
    34:35:void execute(java.lang.Runnable) -> execute
    26:26:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup -> pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup:
# {"fileName":"MultithreadEventExecutorGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor[] children -> children
    java.util.Set readonlyChildren -> readonlyChildren
    java.util.concurrent.atomic.AtomicInteger terminatedChildren -> terminatedChildren
    pro.gravit.repackage.io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory$EventExecutorChooser chooser -> chooser
    49:50:void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[]) -> <init>
    60:61:void <init>(int,java.util.concurrent.Executor,java.lang.Object[]) -> <init>
    37:129:void <init>(int,java.util.concurrent.Executor,pro.gravit.repackage.io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[]) -> <init>
    132:132:java.util.concurrent.ThreadFactory newDefaultThreadFactory() -> newDefaultThreadFactory
    137:137:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    142:142:java.util.Iterator iterator() -> iterator
    150:150:int executorCount() -> executorCount
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor newChild(java.util.concurrent.Executor,java.lang.Object[]) -> newChild
    162:165:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    170:170:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    176:179:void shutdown() -> shutdown
    183:188:boolean isShuttingDown() -> isShuttingDown
    193:198:boolean isShutdown() -> isShutdown
    203:208:boolean isTerminated() -> isTerminated
    214:226:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    33:33:java.util.concurrent.atomic.AtomicInteger access$000(pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$000
    33:33:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor[] access$100(pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$100
    33:33:pro.gravit.repackage.io.netty.util.concurrent.Promise access$200(pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup) -> access$200
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup$1 -> pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup$1:
# {"fileName":"MultithreadEventExecutorGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup this$0 -> this$0
    113:113:void <init>(pro.gravit.repackage.io.netty.util.concurrent.MultithreadEventExecutorGroup) -> <init>
    116:119:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup -> pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup:
# {"fileName":"NonStickyEventExecutorGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup group -> group
    int maxTaskExecutePerRun -> maxTaskExecutePerRun
    50:51:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup) -> <init>
    57:60:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,int) -> <init>
    63:71:pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup verify(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup) -> verify
    75:75:pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor newExecutor(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> newExecutor
    80:80:boolean isShuttingDown() -> isShuttingDown
    85:85:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    90:90:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    95:95:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    101:102:void shutdown() -> shutdown
    107:107:java.util.List shutdownNow() -> shutdownNow
    112:112:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    117:118:java.util.Iterator iterator() -> iterator
    138:138:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    143:143:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    148:148:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    153:153:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    158:158:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    163:163:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    168:168:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    173:173:boolean isShutdown() -> isShutdown
    178:178:boolean isTerminated() -> isTerminated
    183:183:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    189:189:java.util.List invokeAll(java.util.Collection) -> invokeAll
    195:195:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    200:200:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    206:206:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    211:212:void execute(java.lang.Runnable) -> execute
    40:40:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    40:40:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    40:40:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    40:40:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    40:40:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    40:40:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    40:40:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    41:41:pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor access$000(pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup$1 -> pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup$1:
# {"fileName":"NonStickyEventExecutorGroup.java","id":"sourceFile"}
    java.util.Iterator val$itr -> val$itr
    pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup this$0 -> this$0
    118:118:void <init>(pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup,java.util.Iterator) -> <init>
    121:121:boolean hasNext() -> hasNext
    126:126:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    131:132:void remove() -> remove
    118:118:java.lang.Object next() -> next
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.NonStickyEventExecutorGroup$NonStickyOrderedEventExecutor:
# {"fileName":"NonStickyEventExecutorGroup.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    java.util.Queue tasks -> tasks
    int NONE -> NONE
    int SUBMITTED -> SUBMITTED
    int RUNNING -> RUNNING
    java.util.concurrent.atomic.AtomicInteger state -> state
    int maxTaskExecutePerRun -> maxTaskExecutePerRun
    217:230:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,int) -> <init>
    234:282:void run() -> run
    287:287:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    292:292:boolean inEventLoop() -> inEventLoop
    297:297:boolean isShuttingDown() -> isShuttingDown
    302:302:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    307:307:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    312:313:void shutdown() -> shutdown
    317:317:boolean isShutdown() -> isShutdown
    322:322:boolean isTerminated() -> isTerminated
    327:327:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    332:340:void execute(java.lang.Runnable) -> execute
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.OrderedEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.OrderedEventExecutor:
# {"fileName":"OrderedEventExecutor.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture -> pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture:
# {"fileName":"ProgressiveFuture.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture sync() -> sync
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture syncUninterruptibly() -> syncUninterruptibly
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture await() -> await
    pro.gravit.repackage.io.netty.util.concurrent.ProgressiveFuture awaitUninterruptibly() -> awaitUninterruptibly
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise -> pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise:
# {"fileName":"ProgressivePromise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setProgress(long,long) -> setProgress
    boolean tryProgress(long,long) -> tryProgress
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setSuccess(java.lang.Object) -> setSuccess
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise setFailure(java.lang.Throwable) -> setFailure
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise await() -> await
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise awaitUninterruptibly() -> awaitUninterruptibly
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise sync() -> sync
    pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise syncUninterruptibly() -> syncUninterruptibly
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.Promise -> pro.gravit.repackage.io.netty.util.concurrent.Promise:
# {"fileName":"Promise.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    boolean trySuccess(java.lang.Object) -> trySuccess
    pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    boolean tryFailure(java.lang.Throwable) -> tryFailure
    boolean setUncancellable() -> setUncancellable
    pro.gravit.repackage.io.netty.util.concurrent.Promise addListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> addListener
    pro.gravit.repackage.io.netty.util.concurrent.Promise addListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> addListeners
    pro.gravit.repackage.io.netty.util.concurrent.Promise removeListener(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener) -> removeListener
    pro.gravit.repackage.io.netty.util.concurrent.Promise removeListeners(pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener[]) -> removeListeners
    pro.gravit.repackage.io.netty.util.concurrent.Promise await() -> await
    pro.gravit.repackage.io.netty.util.concurrent.Promise awaitUninterruptibly() -> awaitUninterruptibly
    pro.gravit.repackage.io.netty.util.concurrent.Promise sync() -> sync
    pro.gravit.repackage.io.netty.util.concurrent.Promise syncUninterruptibly() -> syncUninterruptibly
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseAggregator -> pro.gravit.repackage.io.netty.util.concurrent.PromiseAggregator:
# {"fileName":"PromiseAggregator.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise aggregatePromise -> aggregatePromise
    boolean failPending -> failPending
    java.util.Set pendingPromises -> pendingPromises
    47:50:void <init>(pro.gravit.repackage.io.netty.util.concurrent.Promise,boolean) -> <init>
    57:58:void <init>(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    65:87:pro.gravit.repackage.io.netty.util.concurrent.PromiseAggregator add(pro.gravit.repackage.io.netty.util.concurrent.Promise[]) -> add
    92:110:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner -> pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner:
# {"fileName":"PromiseCombiner.java","id":"sourceFile"}
    int expectedCount -> expectedCount
    int doneCount -> doneCount
    pro.gravit.repackage.io.netty.util.concurrent.Promise aggregatePromise -> aggregatePromise
    java.lang.Throwable cause -> cause
    pro.gravit.repackage.io.netty.util.concurrent.GenericFutureListener listener -> listener
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor -> executor
    74:75:void <init>() -> <init>
    40:85:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    97:98:void add(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> add
    108:112:void add(pro.gravit.repackage.io.netty.util.concurrent.Future) -> add
    124:125:void addAll(pro.gravit.repackage.io.netty.util.concurrent.Promise[]) -> addAll
    135:138:void addAll(pro.gravit.repackage.io.netty.util.concurrent.Future[]) -> addAll
    152:161:void finish(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> finish
    164:167:void checkInEventLoop() -> checkInEventLoop
    170:170:boolean tryPromise() -> tryPromise
    174:177:void checkAddAllowed() -> checkAddAllowed
    35:35:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor access$000(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner) -> access$000
    35:35:int access$204(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner) -> access$204
    35:35:java.lang.Throwable access$300(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner) -> access$300
    35:35:java.lang.Throwable access$302(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner,java.lang.Throwable) -> access$302
    35:35:int access$200(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner) -> access$200
    35:35:int access$400(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner) -> access$400
    35:35:pro.gravit.repackage.io.netty.util.concurrent.Promise access$500(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner) -> access$500
    35:35:boolean access$600(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner) -> access$600
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner$1 -> pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner$1:
# {"fileName":"PromiseCombiner.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner this$0 -> this$0
    40:40:void <init>(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner) -> <init>
    43:53:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    56:64:void operationComplete0(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete0
    40:40:void access$100(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner$1,pro.gravit.repackage.io.netty.util.concurrent.Future) -> access$100
    40:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner$1$1 -> pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner$1$1:
# {"fileName":"PromiseCombiner.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$future -> val$future
    pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner$1 this$1 -> this$1
    46:46:void <init>(pro.gravit.repackage.io.netty.util.concurrent.PromiseCombiner$1,pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    49:50:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseNotifier -> pro.gravit.repackage.io.netty.util.concurrent.PromiseNotifier:
# {"fileName":"PromiseNotifier.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.concurrent.Promise[] promises -> promises
    boolean logNotifyFailure -> logNotifyFailure
    45:46:void <init>(pro.gravit.repackage.io.netty.util.concurrent.Promise[]) -> <init>
    55:62:void <init>(boolean,pro.gravit.repackage.io.netty.util.concurrent.Promise[]) -> <init>
    76:76:pro.gravit.repackage.io.netty.util.concurrent.Future cascade(pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> cascade
    94:112:pro.gravit.repackage.io.netty.util.concurrent.Future cascade(boolean,pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> cascade
    117:133:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    34:34:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseNotifier$1 -> pro.gravit.repackage.io.netty.util.concurrent.PromiseNotifier$1:
# {"fileName":"PromiseNotifier.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Future val$future -> val$future
    94:94:void <init>(pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    97:100:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseNotifier$2 -> pro.gravit.repackage.io.netty.util.concurrent.PromiseNotifier$2:
# {"fileName":"PromiseNotifier.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.Promise val$promise -> val$promise
    pro.gravit.repackage.io.netty.util.concurrent.Future val$future -> val$future
    102:102:void <init>(boolean,pro.gravit.repackage.io.netty.util.concurrent.Promise[],pro.gravit.repackage.io.netty.util.concurrent.Promise,pro.gravit.repackage.io.netty.util.concurrent.Future) -> <init>
    105:110:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseTask -> pro.gravit.repackage.io.netty.util.concurrent.PromiseTask:
# {"fileName":"PromiseTask.java","id":"sourceFile"}
    java.lang.Runnable COMPLETED -> COMPLETED
    java.lang.Runnable CANCELLED -> CANCELLED
    java.lang.Runnable FAILED -> FAILED
    java.lang.Object task -> task
    68:70:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Runnable,java.lang.Object) -> <init>
    73:75:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Runnable) -> <init>
    78:80:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.util.concurrent.Callable) -> <init>
    84:84:int hashCode() -> hashCode
    89:89:boolean equals(java.lang.Object) -> equals
    94:99:java.lang.Object runTask() -> runTask
    105:112:void run() -> run
    115:122:boolean clearTaskAfterCompletion(boolean,java.lang.Runnable) -> clearTaskAfterCompletion
    127:127:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailure(java.lang.Throwable) -> setFailure
    131:133:pro.gravit.repackage.io.netty.util.concurrent.Promise setFailureInternal(java.lang.Throwable) -> setFailureInternal
    138:138:boolean tryFailure(java.lang.Throwable) -> tryFailure
    142:142:boolean tryFailureInternal(java.lang.Throwable) -> tryFailureInternal
    147:147:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccess(java.lang.Object) -> setSuccess
    151:153:pro.gravit.repackage.io.netty.util.concurrent.Promise setSuccessInternal(java.lang.Object) -> setSuccessInternal
    158:158:boolean trySuccess(java.lang.Object) -> trySuccess
    162:162:boolean trySuccessInternal(java.lang.Object) -> trySuccessInternal
    167:167:boolean setUncancellable() -> setUncancellable
    171:171:boolean setUncancellableInternal() -> setUncancellableInternal
    176:176:boolean cancel(boolean) -> cancel
    181:186:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    44:46:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseTask$RunnableAdapter -> pro.gravit.repackage.io.netty.util.concurrent.PromiseTask$RunnableAdapter:
# {"fileName":"PromiseTask.java","id":"sourceFile"}
    java.lang.Runnable task -> task
    java.lang.Object result -> result
    27:30:void <init>(java.lang.Runnable,java.lang.Object) -> <init>
    34:35:java.lang.Object call() -> call
    40:40:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.PromiseTask$SentinelRunnable -> pro.gravit.repackage.io.netty.util.concurrent.PromiseTask$SentinelRunnable:
# {"fileName":"PromiseTask.java","id":"sourceFile"}
    java.lang.String name -> name
    51:53:void <init>(java.lang.String) -> <init>
    56:56:void run() -> run
    60:60:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler -> pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler:
# {"fileName":"RejectedExecutionHandler.java","id":"sourceFile"}
    void rejected(java.lang.Runnable,pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> rejected
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandlers -> pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandlers:
# {"fileName":"RejectedExecutionHandlers.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler REJECT -> REJECT
    35:35:void <init>() -> <init>
    41:41:pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler reject() -> reject
    50:52:pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler backoff(int,long,java.util.concurrent.TimeUnit) -> backoff
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandlers$1 -> pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandlers$1:
# {"fileName":"RejectedExecutionHandlers.java","id":"sourceFile"}
    28:28:void <init>() -> <init>
    31:31:void rejected(java.lang.Runnable,pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> rejected
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandlers$2 -> pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandlers$2:
# {"fileName":"RejectedExecutionHandlers.java","id":"sourceFile"}
    int val$retries -> val$retries
    long val$backOffNanos -> val$backOffNanos
    52:52:void <init>(int,long) -> <init>
    55:68:void rejected(java.lang.Runnable,pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> rejected
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture -> pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture:
# {"fileName":"ScheduledFuture.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask -> pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask:
# {"fileName":"ScheduledFutureTask.java","id":"sourceFile"}
    long id -> id
    long deadlineNanos -> deadlineNanos
    long periodNanos -> periodNanos
    int queueIndex -> queueIndex
    boolean $assertionsDisabled -> $assertionsDisabled
    35:43:void <init>(pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor,java.lang.Runnable,long) -> <init>
    35:51:void <init>(pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor,java.lang.Runnable,long,long) -> <init>
    35:59:void <init>(pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor,java.util.concurrent.Callable,long,long) -> <init>
    35:67:void <init>(pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor,java.util.concurrent.Callable,long) -> <init>
    70:73:long validatePeriod(long) -> validatePeriod
    77:80:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFutureTask setId(long) -> setId
    85:85:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor executor() -> executor
    89:89:long deadlineNanos() -> deadlineNanos
    95:99:void setConsumed() -> setConsumed
    102:102:long delayNanos() -> delayNanos
    106:106:long deadlineToDelayNanos(long,long) -> deadlineToDelayNanos
    110:110:long delayNanos(long) -> delayNanos
    115:115:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    120:134:int compareTo(java.util.concurrent.Delayed) -> compareTo
    140:175:void run() -> run
    178:178:pro.gravit.repackage.io.netty.util.concurrent.AbstractScheduledEventExecutor scheduledExecutor() -> scheduledExecutor
    188:192:boolean cancel(boolean) -> cancel
    196:196:boolean cancelWithoutRemove(boolean) -> cancelWithoutRemove
    201:208:java.lang.StringBuilder toStringBuilder() -> toStringBuilder
    213:213:int priorityQueueIndex(pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue) -> priorityQueueIndex
    218:219:void priorityQueueIndex(pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue,int) -> priorityQueueIndex
    26:26:int compareTo(java.lang.Object) -> compareTo
    26:26:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor:
# {"fileName":"SingleThreadEventExecutor.java","id":"sourceFile"}
    int DEFAULT_MAX_PENDING_EXECUTOR_TASKS -> DEFAULT_MAX_PENDING_EXECUTOR_TASKS
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int ST_NOT_STARTED -> ST_NOT_STARTED
    int ST_STARTED -> ST_STARTED
    int ST_SHUTTING_DOWN -> ST_SHUTTING_DOWN
    int ST_SHUTDOWN -> ST_SHUTDOWN
    int ST_TERMINATED -> ST_TERMINATED
    java.lang.Runnable NOOP_TASK -> NOOP_TASK
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater STATE_UPDATER -> STATE_UPDATER
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater PROPERTIES_UPDATER -> PROPERTIES_UPDATER
    java.util.Queue taskQueue -> taskQueue
    java.lang.Thread thread -> thread
    pro.gravit.repackage.io.netty.util.concurrent.ThreadProperties threadProperties -> threadProperties
    java.util.concurrent.Executor executor -> executor
    boolean interrupted -> interrupted
    java.util.concurrent.CountDownLatch threadLock -> threadLock
    java.util.Set shutdownHooks -> shutdownHooks
    boolean addTaskWakesUp -> addTaskWakesUp
    int maxPendingTasks -> maxPendingTasks
    pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler rejectedExecutionHandler -> rejectedExecutionHandler
    long lastExecutionTime -> lastExecutionTime
    int state -> state
    long gracefulShutdownQuietPeriod -> gracefulShutdownQuietPeriod
    long gracefulShutdownTimeout -> gracefulShutdownTimeout
    long gracefulShutdownStartTime -> gracefulShutdownStartTime
    pro.gravit.repackage.io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    long SCHEDULE_PURGE_INTERVAL -> SCHEDULE_PURGE_INTERVAL
    boolean $assertionsDisabled -> $assertionsDisabled
    113:114:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean) -> <init>
    129:130:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.ThreadFactory,boolean,int,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    141:142:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean) -> <init>
    86:163:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean,int,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    86:174:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup,java.util.concurrent.Executor,boolean,java.util.Queue,pro.gravit.repackage.io.netty.util.concurrent.RejectedExecutionHandler) -> <init>
    181:181:java.util.Queue newTaskQueue() -> newTaskQueue
    191:191:java.util.Queue newTaskQueue(int) -> newTaskQueue
    198:204:void interruptThread() -> interruptThread
    210:211:java.lang.Runnable pollTask() -> pollTask
    216:220:java.lang.Runnable pollTaskFrom(java.util.Queue) -> pollTaskFrom
    233:276:java.lang.Runnable takeTask() -> takeTask
    280:294:boolean fetchFromScheduledTaskQueue() -> fetchFromScheduledTaskQueue
    301:312:boolean executeExpiredScheduledTasks() -> executeExpiredScheduledTasks
    319:320:java.lang.Runnable peekTask() -> peekTask
    327:328:boolean hasTasks() -> hasTasks
    335:335:int pendingTasks() -> pendingTasks
    343:347:void addTask(java.lang.Runnable) -> addTask
    350:353:boolean offerTask(java.lang.Runnable) -> offerTask
    360:360:boolean removeTask(java.lang.Runnable) -> removeTask
    369:384:boolean runAllTasks() -> runAllTasks
    396:410:boolean runScheduledAndExecutorTasks(int) -> runScheduledAndExecutorTasks
    421:429:boolean runAllTasksFrom(java.util.Queue) -> runAllTasksFrom
    440:451:boolean runExistingTasksFrom(java.util.Queue) -> runExistingTasksFrom
    459:492:boolean runAllTasks(long) -> runAllTasks
    499:499:void afterRunningAllTasks() -> afterRunningAllTasks
    505:512:long delayNanos(long) -> delayNanos
    521:525:long deadlineNanos() -> deadlineNanos
    536:537:void updateLastExecutionTime() -> updateLastExecutionTime
    void run() -> run
    549:549:void cleanup() -> cleanup
    552:557:void wakeup(boolean) -> wakeup
    561:561:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    568:578:void addShutdownHook(java.lang.Runnable) -> addShutdownHook
    584:594:void removeShutdownHook(java.lang.Runnable) -> removeShutdownHook
    597:617:boolean runShutdownHooks() -> runShutdownHooks
    622:674:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    679:679:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    685:728:void shutdown() -> shutdown
    732:732:boolean isShuttingDown() -> isShuttingDown
    737:737:boolean isShutdown() -> isShutdown
    742:742:boolean isTerminated() -> isTerminated
    749:800:boolean confirmShutdown() -> confirmShutdown
    805:812:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    817:818:void execute(java.lang.Runnable) -> execute
    822:823:void lazyExecute(java.lang.Runnable) -> lazyExecute
    826:828:void execute0(java.lang.Runnable) -> execute0
    831:832:void lazyExecute0(java.lang.Runnable) -> lazyExecute0
    835:859:void execute(java.lang.Runnable,boolean) -> execute
    863:864:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    870:871:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    877:878:java.util.List invokeAll(java.util.Collection) -> invokeAll
    884:885:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    889:892:void throwIfInEventLoop(java.lang.String) -> throwIfInEventLoop
    900:916:pro.gravit.repackage.io.netty.util.concurrent.ThreadProperties threadProperties() -> threadProperties
    930:930:boolean wakesUpForTask(java.lang.Runnable) -> wakesUpForTask
    934:934:void reject() -> reject
    943:944:void reject(java.lang.Runnable) -> reject
    951:964:void startThread() -> startThread
    967:981:boolean ensureThreadStarted(int) -> ensureThreadStarted
    985:1065:void doStartThread() -> doStartThread
    1068:1080:int drainTasks() -> drainTasks
    51:51:java.util.Set access$000(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> access$000
    51:51:java.lang.Thread access$102(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Thread) -> access$102
    51:51:boolean access$200(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> access$200
    51:51:java.lang.Thread access$100(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> access$100
    51:51:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$300() -> access$300
    51:51:int access$400(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> access$400
    51:51:java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$500() -> access$500
    51:51:long access$600(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> access$600
    51:51:java.util.concurrent.CountDownLatch access$700(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> access$700
    51:51:pro.gravit.repackage.io.netty.util.concurrent.Promise access$800(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> access$800
    51:948:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$1 -> pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$1:
# {"fileName":"SingleThreadEventExecutor.java","id":"sourceFile"}
    65:65:void <init>() -> <init>
    69:69:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$2 -> pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$2:
# {"fileName":"SingleThreadEventExecutor.java","id":"sourceFile"}
    java.lang.Runnable val$task -> val$task
    pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    571:571:void <init>(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Runnable) -> <init>
    574:575:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$3 -> pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$3:
# {"fileName":"SingleThreadEventExecutor.java","id":"sourceFile"}
    java.lang.Runnable val$task -> val$task
    pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    587:587:void <init>(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor,java.lang.Runnable) -> <init>
    590:591:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$4 -> pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$4:
# {"fileName":"SingleThreadEventExecutor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor this$0 -> this$0
    986:986:void <init>(pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor) -> <init>
    989:1063:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$DefaultThreadProperties -> pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$DefaultThreadProperties:
# {"fileName":"SingleThreadEventExecutor.java","id":"sourceFile"}
    java.lang.Thread t -> t
    1086:1088:void <init>(java.lang.Thread) -> <init>
    1092:1092:java.lang.Thread$State state() -> state
    1097:1097:int priority() -> priority
    1102:1102:boolean isInterrupted() -> isInterrupted
    1107:1107:boolean isDaemon() -> isDaemon
    1112:1112:java.lang.String name() -> name
    1117:1117:long id() -> id
    1122:1122:java.lang.StackTraceElement[] stackTrace() -> stackTrace
    1127:1127:boolean isAlive() -> isAlive
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$NonWakeupRunnable -> pro.gravit.repackage.io.netty.util.concurrent.SingleThreadEventExecutor$NonWakeupRunnable:
# {"fileName":"SingleThreadEventExecutor.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.SucceededFuture -> pro.gravit.repackage.io.netty.util.concurrent.SucceededFuture:
# {"fileName":"SucceededFuture.java","id":"sourceFile"}
    java.lang.Object result -> result
    32:34:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Object) -> <init>
    38:38:java.lang.Throwable cause() -> cause
    43:43:boolean isSuccess() -> isSuccess
    48:48:java.lang.Object getNow() -> getNow
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ThreadPerTaskExecutor -> pro.gravit.repackage.io.netty.util.concurrent.ThreadPerTaskExecutor:
# {"fileName":"ThreadPerTaskExecutor.java","id":"sourceFile"}
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    26:28:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    32:33:void execute(java.lang.Runnable) -> execute
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.ThreadProperties -> pro.gravit.repackage.io.netty.util.concurrent.ThreadProperties:
# {"fileName":"ThreadProperties.java","id":"sourceFile"}
    java.lang.Thread$State state() -> state
    int priority() -> priority
    boolean isInterrupted() -> isInterrupted
    boolean isDaemon() -> isDaemon
    java.lang.String name() -> name
    long id() -> id
    java.lang.StackTraceElement[] stackTrace() -> stackTrace
    boolean isAlive() -> isAlive
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.UnaryPromiseNotifier -> pro.gravit.repackage.io.netty.util.concurrent.UnaryPromiseNotifier:
# {"fileName":"UnaryPromiseNotifier.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.concurrent.Promise promise -> promise
    31:33:void <init>(pro.gravit.repackage.io.netty.util.concurrent.Promise) -> <init>
    37:38:void operationComplete(pro.gravit.repackage.io.netty.util.concurrent.Future) -> operationComplete
    41:55:void cascadeTo(pro.gravit.repackage.io.netty.util.concurrent.Future,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> cascadeTo
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.UnorderedThreadPoolEventExecutor -> pro.gravit.repackage.io.netty.util.concurrent.UnorderedThreadPoolEventExecutor:
# {"fileName":"UnorderedThreadPoolEventExecutor.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    pro.gravit.repackage.io.netty.util.concurrent.Promise terminationFuture -> terminationFuture
    java.util.Set executorSet -> executorSet
    55:56:void <init>(int) -> <init>
    47:63:void <init>(int,java.util.concurrent.ThreadFactory) -> <init>
    70:71:void <init>(int,java.util.concurrent.RejectedExecutionHandler) -> <init>
    47:79:void <init>(int,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler) -> <init>
    83:83:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor next() -> next
    88:88:pro.gravit.repackage.io.netty.util.concurrent.EventExecutorGroup parent() -> parent
    93:93:boolean inEventLoop() -> inEventLoop
    98:98:boolean inEventLoop(java.lang.Thread) -> inEventLoop
    103:103:pro.gravit.repackage.io.netty.util.concurrent.Promise newPromise() -> newPromise
    108:108:pro.gravit.repackage.io.netty.util.concurrent.ProgressivePromise newProgressivePromise() -> newProgressivePromise
    113:113:pro.gravit.repackage.io.netty.util.concurrent.Future newSucceededFuture(java.lang.Object) -> newSucceededFuture
    118:118:pro.gravit.repackage.io.netty.util.concurrent.Future newFailedFuture(java.lang.Throwable) -> newFailedFuture
    123:123:boolean isShuttingDown() -> isShuttingDown
    128:130:java.util.List shutdownNow() -> shutdownNow
    135:137:void shutdown() -> shutdown
    141:141:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully() -> shutdownGracefully
    148:149:pro.gravit.repackage.io.netty.util.concurrent.Future shutdownGracefully(long,long,java.util.concurrent.TimeUnit) -> shutdownGracefully
    154:154:pro.gravit.repackage.io.netty.util.concurrent.Future terminationFuture() -> terminationFuture
    159:159:java.util.Iterator iterator() -> iterator
    164:164:java.util.concurrent.RunnableScheduledFuture decorateTask(java.lang.Runnable,java.util.concurrent.RunnableScheduledFuture) -> decorateTask
    170:170:java.util.concurrent.RunnableScheduledFuture decorateTask(java.util.concurrent.Callable,java.util.concurrent.RunnableScheduledFuture) -> decorateTask
    175:175:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    180:180:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    185:185:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    190:190:pro.gravit.repackage.io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    195:195:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable) -> submit
    200:200:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    205:205:pro.gravit.repackage.io.netty.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    210:211:void execute(java.lang.Runnable) -> execute
    43:43:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    43:43:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    43:43:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    43:43:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    43:43:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    43:43:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    43:43:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    43:43:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$000() -> access$000
    44:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.UnorderedThreadPoolEventExecutor$NonNotifyRunnable -> pro.gravit.repackage.io.netty.util.concurrent.UnorderedThreadPoolEventExecutor$NonNotifyRunnable:
# {"fileName":"UnorderedThreadPoolEventExecutor.java","id":"sourceFile"}
    java.lang.Runnable task -> task
    286:288:void <init>(java.lang.Runnable) -> <init>
    292:293:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.concurrent.UnorderedThreadPoolEventExecutor$RunnableScheduledFutureTask -> pro.gravit.repackage.io.netty.util.concurrent.UnorderedThreadPoolEventExecutor$RunnableScheduledFutureTask:
# {"fileName":"UnorderedThreadPoolEventExecutor.java","id":"sourceFile"}
    java.util.concurrent.RunnableScheduledFuture future -> future
    boolean wasCallable -> wasCallable
    boolean $assertionsDisabled -> $assertionsDisabled
    219:222:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.util.concurrent.RunnableScheduledFuture,boolean) -> <init>
    226:240:java.lang.Object runTask() -> runTask
    245:257:void run() -> run
    261:261:boolean isPeriodic() -> isPeriodic
    266:266:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    271:271:int compareTo(java.util.concurrent.Delayed) -> compareTo
    213:213:int compareTo(java.lang.Object) -> compareTo
    213:213:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence -> pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence:
# {"fileName":"AppendableCharSequence.java","id":"sourceFile"}
    char[] chars -> chars
    int pos -> pos
    27:29:void <init>(int) -> <init>
    31:34:void <init>(char[]) -> <init>
    37:41:void setLength(int) -> setLength
    45:45:int length() -> length
    50:53:char charAt(int) -> charAt
    64:64:char charAtUnsafe(int) -> charAtUnsafe
    69:75:pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence subSequence(int,int) -> subSequence
    80:86:pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence append(char) -> append
    91:91:pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence) -> append
    96:116:pro.gravit.repackage.io.netty.util.internal.AppendableCharSequence append(java.lang.CharSequence,int,int) -> append
    124:125:void reset() -> reset
    129:129:java.lang.String toString() -> toString
    136:141:java.lang.String substring(int,int) -> substring
    150:150:java.lang.String subStringUnsafe(int,int) -> subStringUnsafe
    154:168:char[] expand(char[],int,int) -> expand
    23:23:java.lang.CharSequence subSequence(int,int) -> subSequence
    23:23:java.lang.Appendable append(char) -> append
    23:23:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    23:23:java.lang.Appendable append(java.lang.CharSequence) -> append
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ClassInitializerUtil -> pro.gravit.repackage.io.netty.util.internal.ClassInitializerUtil:
# {"fileName":"ClassInitializerUtil.java","id":"sourceFile"}
    23:23:void <init>() -> <init>
    32:36:void tryLoadClasses(java.lang.Class,java.lang.Class[]) -> tryLoadClasses
    41:47:void tryLoadClass(java.lang.ClassLoader,java.lang.String) -> tryLoadClass
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.Cleaner -> pro.gravit.repackage.io.netty.util.internal.Cleaner:
# {"fileName":"Cleaner.java","id":"sourceFile"}
    void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.CleanerJava6 -> pro.gravit.repackage.io.netty.util.internal.CleanerJava6:
# {"fileName":"CleanerJava6.java","id":"sourceFile"}
    long CLEANER_FIELD_OFFSET -> CLEANER_FIELD_OFFSET
    java.lang.reflect.Method CLEAN_METHOD -> CLEAN_METHOD
    java.lang.reflect.Field CLEANER_FIELD -> CLEANER_FIELD
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    34:34:void <init>() -> <init>
    102:102:boolean isSupported() -> isSupported
    107:119:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    122:136:void freeDirectBufferPrivileged(java.nio.ByteBuffer) -> freeDirectBufferPrivileged
    142:150:void freeDirectBuffer0(java.nio.ByteBuffer) -> freeDirectBuffer0
    34:34:void access$000(java.nio.ByteBuffer) -> access$000
    39:99:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.CleanerJava6$1 -> pro.gravit.repackage.io.netty.util.internal.CleanerJava6$1:
# {"fileName":"CleanerJava6.java","id":"sourceFile"}
    java.nio.ByteBuffer val$direct -> val$direct
    48:48:void <init>(java.nio.ByteBuffer) -> <init>
    52:60:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.CleanerJava6$2 -> pro.gravit.repackage.io.netty.util.internal.CleanerJava6$2:
# {"fileName":"CleanerJava6.java","id":"sourceFile"}
    java.nio.ByteBuffer val$buffer -> val$buffer
    122:122:void <init>(java.nio.ByteBuffer) -> <init>
    126:129:java.lang.Throwable run() -> run
    122:122:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.CleanerJava9 -> pro.gravit.repackage.io.netty.util.internal.CleanerJava9:
# {"fileName":"CleanerJava9.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.reflect.Method INVOKE_CLEANER -> INVOKE_CLEANER
    30:30:void <init>() -> <init>
    79:79:boolean isSupported() -> isSupported
    86:95:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    98:114:void freeDirectBufferPrivileged(java.nio.ByteBuffer) -> freeDirectBufferPrivileged
    30:30:java.lang.reflect.Method access$000() -> access$000
    31:76:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.CleanerJava9$1 -> pro.gravit.repackage.io.netty.util.internal.CleanerJava9$1:
# {"fileName":"CleanerJava9.java","id":"sourceFile"}
    java.nio.ByteBuffer val$buffer -> val$buffer
    40:40:void <init>(java.nio.ByteBuffer) -> <init>
    45:54:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.CleanerJava9$2 -> pro.gravit.repackage.io.netty.util.internal.CleanerJava9$2:
# {"fileName":"CleanerJava9.java","id":"sourceFile"}
    java.nio.ByteBuffer val$buffer -> val$buffer
    98:98:void <init>(java.nio.ByteBuffer) -> <init>
    102:108:java.lang.Exception run() -> run
    98:98:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ConcurrentSet -> pro.gravit.repackage.io.netty.util.internal.ConcurrentSet:
# {"fileName":"ConcurrentSet.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.ConcurrentMap map -> map
    36:38:void <init>() -> <init>
    42:42:int size() -> size
    47:47:boolean contains(java.lang.Object) -> contains
    52:52:boolean add(java.lang.Object) -> add
    57:57:boolean remove(java.lang.Object) -> remove
    62:63:void clear() -> clear
    67:67:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ConstantTimeUtils -> pro.gravit.repackage.io.netty.util.internal.ConstantTimeUtils:
# {"fileName":"ConstantTimeUtils.java","id":"sourceFile"}
    19:19:void <init>() -> <init>
    37:43:int equalsConstantTime(int,int) -> equalsConstantTime
    62:69:int equalsConstantTime(long,long) -> equalsConstantTime
    96:101:int equalsConstantTime(byte[],int,byte[],int,int) -> equalsConstantTime
    120:129:int equalsConstantTime(java.lang.CharSequence,java.lang.CharSequence) -> equalsConstantTime
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue -> pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue:
# {"fileName":"DefaultPriorityQueue.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode[] EMPTY_ARRAY -> EMPTY_ARRAY
    java.util.Comparator comparator -> comparator
    pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode[] queue -> queue
    int size -> size
    39:42:void <init>(java.util.Comparator,int) -> <init>
    46:46:int size() -> size
    51:51:boolean isEmpty() -> isEmpty
    56:60:boolean contains(java.lang.Object) -> contains
    65:65:boolean containsTyped(pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode) -> containsTyped
    70:78:void clear() -> clear
    82:83:void clearIgnoringIndexes() -> clearIgnoringIndexes
    87:102:boolean offer(pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode) -> offer
    107:119:pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode poll() -> poll
    124:124:pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode peek() -> peek
    132:136:boolean remove(java.lang.Object) -> remove
    141:164:boolean removeTyped(pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode) -> removeTyped
    169:187:void priorityChanged(pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode) -> priorityChanged
    191:191:java.lang.Object[] toArray() -> toArray
    197:204:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    212:212:java.util.Iterator iterator() -> iterator
    239:239:boolean contains(pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode,int) -> contains
    243:271:void bubbleDown(int,pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode) -> bubbleDown
    274:295:void bubbleUp(int,pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode) -> bubbleUp
    31:31:java.lang.Object peek() -> peek
    31:31:java.lang.Object poll() -> poll
    31:31:boolean offer(java.lang.Object) -> offer
    31:31:void priorityChanged(java.lang.Object) -> priorityChanged
    31:31:boolean containsTyped(java.lang.Object) -> containsTyped
    31:31:boolean removeTyped(java.lang.Object) -> removeTyped
    31:31:int access$100(pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue) -> access$100
    31:31:pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode[] access$200(pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue) -> access$200
    33:33:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue$1 -> pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue$1:
# {"fileName":"DefaultPriorityQueue.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator -> pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:
# {"fileName":"DefaultPriorityQueue.java","id":"sourceFile"}
    int index -> index
    pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue this$0 -> this$0
    215:215:void <init>(pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue) -> <init>
    220:220:boolean hasNext() -> hasNext
    225:229:pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode next() -> next
    234:234:void remove() -> remove
    215:215:java.lang.Object next() -> next
    215:215:void <init>(pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue,pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.EmptyArrays -> pro.gravit.repackage.io.netty.util.internal.EmptyArrays:
# {"fileName":"EmptyArrays.java","id":"sourceFile"}
    int[] EMPTY_INTS -> EMPTY_INTS
    byte[] EMPTY_BYTES -> EMPTY_BYTES
    char[] EMPTY_CHARS -> EMPTY_CHARS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    java.lang.Class[] EMPTY_CLASSES -> EMPTY_CLASSES
    java.lang.String[] EMPTY_STRINGS -> EMPTY_STRINGS
    pro.gravit.repackage.io.netty.util.AsciiString[] EMPTY_ASCII_STRINGS -> EMPTY_ASCII_STRINGS
    java.lang.StackTraceElement[] EMPTY_STACK_TRACE -> EMPTY_STACK_TRACE
    java.nio.ByteBuffer[] EMPTY_BYTE_BUFFERS -> EMPTY_BYTE_BUFFERS
    java.security.cert.Certificate[] EMPTY_CERTIFICATES -> EMPTY_CERTIFICATES
    java.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES -> EMPTY_X509_CERTIFICATES
    javax.security.cert.X509Certificate[] EMPTY_JAVAX_X509_CERTIFICATES -> EMPTY_JAVAX_X509_CERTIFICATES
    40:40:void <init>() -> <init>
    27:38:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.EmptyPriorityQueue -> pro.gravit.repackage.io.netty.util.internal.EmptyPriorityQueue:
# {"fileName":"EmptyPriorityQueue.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.PriorityQueue INSTANCE -> INSTANCE
    26:27:void <init>() -> <init>
    34:34:pro.gravit.repackage.io.netty.util.internal.EmptyPriorityQueue instance() -> instance
    39:39:boolean removeTyped(java.lang.Object) -> removeTyped
    44:44:boolean containsTyped(java.lang.Object) -> containsTyped
    49:49:void priorityChanged(java.lang.Object) -> priorityChanged
    53:53:int size() -> size
    58:58:boolean isEmpty() -> isEmpty
    63:63:boolean contains(java.lang.Object) -> contains
    68:68:java.util.Iterator iterator() -> iterator
    73:73:java.lang.Object[] toArray() -> toArray
    78:81:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    86:86:boolean add(java.lang.Object) -> add
    91:91:boolean remove(java.lang.Object) -> remove
    96:96:boolean containsAll(java.util.Collection) -> containsAll
    101:101:boolean addAll(java.util.Collection) -> addAll
    106:106:boolean removeAll(java.util.Collection) -> removeAll
    111:111:boolean retainAll(java.util.Collection) -> retainAll
    116:116:void clear() -> clear
    120:120:void clearIgnoringIndexes() -> clearIgnoringIndexes
    124:124:boolean equals(java.lang.Object) -> equals
    129:129:int hashCode() -> hashCode
    134:134:boolean offer(java.lang.Object) -> offer
    139:139:java.lang.Object remove() -> remove
    144:144:java.lang.Object poll() -> poll
    149:149:java.lang.Object element() -> element
    154:154:java.lang.Object peek() -> peek
    159:159:java.lang.String toString() -> toString
    24:24:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.Hidden -> pro.gravit.repackage.io.netty.util.internal.Hidden:
# {"fileName":"Hidden.java","id":"sourceFile"}
    29:29:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration -> pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration:
# {"fileName":"Hidden.java","id":"sourceFile"}
    39:39:void <init>() -> <init>
    43:180:void applyTo(reactor.blockhound.BlockHound$Builder) -> applyTo
    184:184:int compareTo(reactor.blockhound.integration.BlockHoundIntegration) -> compareTo
    37:37:int compareTo(java.lang.Object) -> compareTo
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration$1 -> pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration$1:
# {"fileName":"Hidden.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration this$0 -> this$0
    166:166:void <init>(pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration) -> <init>
    169:169:java.util.function.Predicate apply(java.util.function.Predicate) -> apply
    166:166:java.lang.Object apply(java.lang.Object) -> apply
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration$1$1 -> pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration$1$1:
# {"fileName":"Hidden.java","id":"sourceFile"}
    java.util.function.Predicate val$p -> val$p
    pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration$1 this$1 -> this$1
    169:169:void <init>(pro.gravit.repackage.io.netty.util.internal.Hidden$NettyBlockHoundIntegration$1,java.util.function.Predicate) -> <init>
    173:175:boolean test(java.lang.Thread) -> test
    169:169:boolean test(java.lang.Object) -> test
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.IntegerHolder -> pro.gravit.repackage.io.netty.util.internal.IntegerHolder:
# {"fileName":"IntegerHolder.java","id":"sourceFile"}
    int value -> value
    23:23:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap -> pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap:
# {"fileName":"InternalThreadLocalMap.java","id":"sourceFile"}
    java.lang.ThreadLocal slowThreadLocalMap -> slowThreadLocalMap
    java.util.concurrent.atomic.AtomicInteger nextIndex -> nextIndex
    int VARIABLES_TO_REMOVE_INDEX -> VARIABLES_TO_REMOVE_INDEX
    int DEFAULT_ARRAY_LIST_INITIAL_CAPACITY -> DEFAULT_ARRAY_LIST_INITIAL_CAPACITY
    int ARRAY_LIST_CAPACITY_EXPAND_THRESHOLD -> ARRAY_LIST_CAPACITY_EXPAND_THRESHOLD
    int ARRAY_LIST_CAPACITY_MAX_SIZE -> ARRAY_LIST_CAPACITY_MAX_SIZE
    int HANDLER_SHARABLE_CACHE_INITIAL_CAPACITY -> HANDLER_SHARABLE_CACHE_INITIAL_CAPACITY
    int INDEXED_VARIABLE_TABLE_INITIAL_SIZE -> INDEXED_VARIABLE_TABLE_INITIAL_SIZE
    int STRING_BUILDER_INITIAL_SIZE -> STRING_BUILDER_INITIAL_SIZE
    int STRING_BUILDER_MAX_SIZE -> STRING_BUILDER_MAX_SIZE
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.Object UNSET -> UNSET
    java.lang.Object[] indexedVariables -> indexedVariables
    int futureListenerStackDepth -> futureListenerStackDepth
    int localChannelReaderStackDepth -> localChannelReaderStackDepth
    java.util.Map handlerSharableCache -> handlerSharableCache
    pro.gravit.repackage.io.netty.util.internal.IntegerHolder counterHashCode -> counterHashCode
    pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom random -> random
    java.util.Map typeParameterMatcherGetCache -> typeParameterMatcherGetCache
    java.util.Map typeParameterMatcherFindCache -> typeParameterMatcherFindCache
    java.lang.StringBuilder stringBuilder -> stringBuilder
    java.util.Map charsetEncoderCache -> charsetEncoderCache
    java.util.Map charsetDecoderCache -> charsetDecoderCache
    java.util.ArrayList arrayList -> arrayList
    java.util.BitSet cleanerFlags -> cleanerFlags
    long rp1 -> rp1
    long rp2 -> rp2
    long rp3 -> rp3
    long rp4 -> rp4
    long rp5 -> rp5
    long rp6 -> rp6
    long rp7 -> rp7
    long rp8 -> rp8
    105:109:pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap getIfSet() -> getIfSet
    113:117:pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap get() -> get
    122:126:pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap fastGet(pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocalThread) -> fastGet
    130:135:pro.gravit.repackage.io.netty.util.internal.InternalThreadLocalMap slowGet() -> slowGet
    139:145:void remove() -> remove
    148:149:void destroy() -> destroy
    152:157:int nextVariableIndex() -> nextVariableIndex
    161:161:int lastVariableIndex() -> lastVariableIndex
    164:166:void <init>() -> <init>
    169:171:java.lang.Object[] newIndexedVariableTable() -> newIndexedVariableTable
    175:218:int size() -> size
    222:231:java.lang.StringBuilder stringBuilder() -> stringBuilder
    235:239:java.util.Map charsetEncoderCache() -> charsetEncoderCache
    243:247:java.util.Map charsetDecoderCache() -> charsetDecoderCache
    251:251:java.util.ArrayList arrayList() -> arrayList
    256:263:java.util.ArrayList arrayList(int) -> arrayList
    267:267:int futureListenerStackDepth() -> futureListenerStackDepth
    271:272:void setFutureListenerStackDepth(int) -> setFutureListenerStackDepth
    275:279:pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom random() -> random
    283:287:java.util.Map typeParameterMatcherGetCache() -> typeParameterMatcherGetCache
    291:295:java.util.Map typeParameterMatcherFindCache() -> typeParameterMatcherFindCache
    300:300:pro.gravit.repackage.io.netty.util.internal.IntegerHolder counterHashCode() -> counterHashCode
    305:306:void setCounterHashCode(pro.gravit.repackage.io.netty.util.internal.IntegerHolder) -> setCounterHashCode
    309:314:java.util.Map handlerSharableCache() -> handlerSharableCache
    318:318:int localChannelReaderStackDepth() -> localChannelReaderStackDepth
    322:323:void setLocalChannelReaderStackDepth(int) -> setLocalChannelReaderStackDepth
    326:327:java.lang.Object indexedVariable(int) -> indexedVariable
    334:341:boolean setIndexedVariable(int,java.lang.Object) -> setIndexedVariable
    346:365:void expandIndexedVariableTableAndSet(int,java.lang.Object) -> expandIndexedVariableTableAndSet
    368:374:java.lang.Object removeIndexedVariable(int) -> removeIndexedVariable
    379:380:boolean isIndexedVariableSet(int) -> isIndexedVariableSet
    384:384:boolean isCleanerFlagSet(int) -> isCleanerFlagSet
    388:392:void setCleanerFlag(int) -> setCleanerFlag
    42:102:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.LongAdderCounter -> pro.gravit.repackage.io.netty.util.internal.LongAdderCounter:
# {"fileName":"LongAdderCounter.java","id":"sourceFile"}
    21:21:void <init>() -> <init>
    25:25:long value() -> value
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.LongCounter -> pro.gravit.repackage.io.netty.util.internal.LongCounter:
# {"fileName":"LongCounter.java","id":"sourceFile"}
    void add(long) -> add
    void increment() -> increment
    void decrement() -> decrement
    long value() -> value
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.MacAddressUtil -> pro.gravit.repackage.io.netty.util.internal.MacAddressUtil:
# {"fileName":"MacAddressUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    int EUI64_MAC_ADDRESS_LENGTH -> EUI64_MAC_ADDRESS_LENGTH
    int EUI48_MAC_ADDRESS_LENGTH -> EUI48_MAC_ADDRESS_LENGTH
    49:121:byte[] bestAvailableMac() -> bestAvailableMac
    129:137:byte[] defaultMachineId() -> defaultMachineId
    148:176:byte[] parseMAC(java.lang.String) -> parseMAC
    180:183:void validateMacSeparator(char) -> validateMacSeparator
    190:194:java.lang.String formatAddress(byte[]) -> formatAddress
    202:239:int compareAddresses(byte[],byte[]) -> compareAddresses
    248:248:int compareAddresses(java.net.InetAddress,java.net.InetAddress) -> compareAddresses
    252:265:int scoreAddress(java.net.InetAddress) -> scoreAddress
    268:268:void <init>() -> <init>
    35:35:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.MathUtil -> pro.gravit.repackage.io.netty.util.internal.MathUtil:
# {"fileName":"MathUtil.java","id":"sourceFile"}
    boolean $assertionsDisabled -> $assertionsDisabled
    22:23:void <init>() -> <init>
    35:36:int findNextPositivePowerOfTwo(int) -> findNextPositivePowerOfTwo
    52:52:int safeFindNextPositivePowerOfTwo(int) -> safeFindNextPositivePowerOfTwo
    64:64:boolean isOutOfBounds(int,int,int) -> isOutOfBounds
    78:78:int compare(int,int) -> compare
    93:93:int compare(long,long) -> compare
    20:20:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.NativeLibraryLoader -> pro.gravit.repackage.io.netty.util.internal.NativeLibraryLoader:
# {"fileName":"NativeLibraryLoader.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.lang.String NATIVE_RESOURCE_HOME -> NATIVE_RESOURCE_HOME
    java.io.File WORKDIR -> WORKDIR
    boolean DELETE_NATIVE_LIB_AFTER_LOADING -> DELETE_NATIVE_LIB_AFTER_LOADING
    boolean TRY_TO_PATCH_SHADED_ID -> TRY_TO_PATCH_SHADED_ID
    boolean DETECT_NATIVE_LIBRARY_DUPLICATES -> DETECT_NATIVE_LIBRARY_DUPLICATES
    byte[] UNIQUE_ID_BYTES -> UNIQUE_ID_BYTES
    boolean $assertionsDisabled -> $assertionsDisabled
    102:116:void loadFirstAvailable(java.lang.ClassLoader,java.lang.String[]) -> loadFirstAvailable
    139:149:java.lang.String calculateMangledPackagePrefix() -> calculateMangledPackagePrefix
    156:253:void load(java.lang.String,java.lang.ClassLoader) -> load
    258:306:java.net.URL getResource(java.lang.String,java.lang.ClassLoader) -> getResource
    312:326:byte[] digest(java.security.MessageDigest,java.net.URL) -> digest
    330:336:void tryPatchShadedLibraryIdAndSign(java.io.File,java.lang.String) -> tryPatchShadedLibraryIdAndSign
    340:354:boolean tryExec(java.lang.String) -> tryExec
    358:358:boolean shouldShadedLibraryIdBePatched(java.lang.String) -> shouldShadedLibraryIdBePatched
    362:368:byte[] generateUniqueId(int) -> generateUniqueId
    378:404:void loadLibrary(java.lang.ClassLoader,java.lang.String,boolean) -> loadLibrary
    408:412:void rethrowWithMoreDetailsIfPossible(java.lang.String,java.lang.NoSuchMethodError) -> rethrowWithMoreDetailsIfPossible
    417:442:void loadLibraryByHelper(java.lang.Class,java.lang.String,boolean) -> loadLibraryByHelper
    454:487:java.lang.Class tryToLoadClass(java.lang.ClassLoader,java.lang.Class) -> tryToLoadClass
    499:522:byte[] classToByteArray(java.lang.Class) -> classToByteArray
    526:533:void closeQuietly(java.io.Closeable) -> closeQuietly
    535:537:void <init>() -> <init>
    48:92:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.NativeLibraryLoader$1 -> pro.gravit.repackage.io.netty.util.internal.NativeLibraryLoader$1:
# {"fileName":"NativeLibraryLoader.java","id":"sourceFile"}
    java.lang.Class val$helper -> val$helper
    java.lang.String val$name -> val$name
    boolean val$absolute -> val$absolute
    417:417:void <init>(java.lang.Class,java.lang.String,boolean) -> <init>
    423:427:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.NativeLibraryLoader$2 -> pro.gravit.repackage.io.netty.util.internal.NativeLibraryLoader$2:
# {"fileName":"NativeLibraryLoader.java","id":"sourceFile"}
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.Class val$helper -> val$helper
    byte[] val$classBinary -> val$classBinary
    463:463:void <init>(java.lang.ClassLoader,java.lang.Class,byte[]) -> <init>
    469:475:java.lang.Class run() -> run
    463:463:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.NativeLibraryLoader$NoexecVolumeDetector -> pro.gravit.repackage.io.netty.util.internal.NativeLibraryLoader$NoexecVolumeDetector:
# {"fileName":"NativeLibraryLoader.java","id":"sourceFile"}
    543:573:boolean canExecuteExecutable(java.io.File) -> canExecuteExecutable
    576:578:void <init>() -> <init>
    539:539:boolean access$000(java.io.File) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.NativeLibraryUtil -> pro.gravit.repackage.io.netty.util.internal.NativeLibraryUtil:
# {"fileName":"NativeLibraryUtil.java","id":"sourceFile"}
    35:40:void loadLibrary(java.lang.String,boolean) -> loadLibrary
    42:44:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.NoOpTypeParameterMatcher -> pro.gravit.repackage.io.netty.util.internal.NoOpTypeParameterMatcher:
# {"fileName":"NoOpTypeParameterMatcher.java","id":"sourceFile"}
    19:19:void <init>() -> <init>
    22:22:boolean match(java.lang.Object) -> match
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectCleaner -> pro.gravit.repackage.io.netty.util.internal.ObjectCleaner:
# {"fileName":"ObjectCleaner.java","id":"sourceFile"}
    int REFERENCE_QUEUE_POLL_TIMEOUT_MS -> REFERENCE_QUEUE_POLL_TIMEOUT_MS
    java.lang.String CLEANER_THREAD_NAME -> CLEANER_THREAD_NAME
    java.util.Set LIVE_SET -> LIVE_SET
    java.lang.ref.ReferenceQueue REFERENCE_QUEUE -> REFERENCE_QUEUE
    java.util.concurrent.atomic.AtomicBoolean CLEANER_RUNNING -> CLEANER_RUNNING
    java.lang.Runnable CLEANER_TASK -> CLEANER_TASK
    95:124:void register(java.lang.Object,java.lang.Runnable) -> register
    127:127:int getLiveSetCount() -> getLiveSetCount
    130:132:void <init>() -> <init>
    34:34:java.util.Set access$000() -> access$000
    34:34:int access$100() -> access$100
    34:34:java.lang.ref.ReferenceQueue access$200() -> access$200
    34:34:java.util.concurrent.atomic.AtomicBoolean access$300() -> access$300
    35:44:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectCleaner$1 -> pro.gravit.repackage.io.netty.util.internal.ObjectCleaner$1:
# {"fileName":"ObjectCleaner.java","id":"sourceFile"}
    44:44:void <init>() -> <init>
    47:84:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectCleaner$2 -> pro.gravit.repackage.io.netty.util.internal.ObjectCleaner$2:
# {"fileName":"ObjectCleaner.java","id":"sourceFile"}
    java.lang.Thread val$cleanupThread -> val$cleanupThread
    110:110:void <init>(java.lang.Thread) -> <init>
    113:114:java.lang.Void run() -> run
    110:110:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference -> pro.gravit.repackage.io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference:
# {"fileName":"ObjectCleaner.java","id":"sourceFile"}
    java.lang.Runnable cleanupTask -> cleanupTask
    138:140:void <init>(java.lang.Object,java.lang.Runnable) -> <init>
    143:144:void cleanup() -> cleanup
    148:148:java.lang.Thread get() -> get
    153:155:void clear() -> clear
    134:134:java.lang.Object get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectPool -> pro.gravit.repackage.io.netty.util.internal.ObjectPool:
# {"fileName":"ObjectPool.java","id":"sourceFile"}
    27:27:void <init>() -> <init>
    java.lang.Object get() -> get
    69:69:pro.gravit.repackage.io.netty.util.internal.ObjectPool newPool(pro.gravit.repackage.io.netty.util.internal.ObjectPool$ObjectCreator) -> newPool
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle -> pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle:
# {"fileName":"ObjectPool.java","id":"sourceFile"}
    void recycle(java.lang.Object) -> recycle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectPool$ObjectCreator -> pro.gravit.repackage.io.netty.util.internal.ObjectPool$ObjectCreator:
# {"fileName":"ObjectPool.java","id":"sourceFile"}
    java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectPool$RecyclerObjectPool -> pro.gravit.repackage.io.netty.util.internal.ObjectPool$RecyclerObjectPool:
# {"fileName":"ObjectPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.Recycler recycler -> recycler
    75:82:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$ObjectCreator) -> <init>
    86:86:java.lang.Object get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectPool$RecyclerObjectPool$1 -> pro.gravit.repackage.io.netty.util.internal.ObjectPool$RecyclerObjectPool$1:
# {"fileName":"ObjectPool.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$ObjectCreator val$creator -> val$creator
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$RecyclerObjectPool this$0 -> this$0
    76:76:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$RecyclerObjectPool,pro.gravit.repackage.io.netty.util.internal.ObjectPool$ObjectCreator) -> <init>
    79:79:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.Recycler$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ObjectUtil -> pro.gravit.repackage.io.netty.util.internal.ObjectUtil:
# {"fileName":"ObjectUtil.java","id":"sourceFile"}
    float FLOAT_ZERO -> FLOAT_ZERO
    double DOUBLE_ZERO -> DOUBLE_ZERO
    long LONG_ZERO -> LONG_ZERO
    int INT_ZERO -> INT_ZERO
    30:31:void <init>() -> <init>
    38:41:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    52:61:java.lang.Object[] deepCheckNotNull(java.lang.String,java.lang.Object[]) -> deepCheckNotNull
    69:72:java.lang.Object checkNotNullWithIAE(java.lang.Object,java.lang.String) -> checkNotNullWithIAE
    87:91:java.lang.Object checkNotNullArrayParam(java.lang.Object,int,java.lang.String) -> checkNotNullArrayParam
    99:102:int checkPositive(int,java.lang.String) -> checkPositive
    110:113:long checkPositive(long,java.lang.String) -> checkPositive
    121:124:double checkPositive(double,java.lang.String) -> checkPositive
    132:135:float checkPositive(float,java.lang.String) -> checkPositive
    143:146:int checkPositiveOrZero(int,java.lang.String) -> checkPositiveOrZero
    154:157:long checkPositiveOrZero(long,java.lang.String) -> checkPositiveOrZero
    165:168:double checkPositiveOrZero(double,java.lang.String) -> checkPositiveOrZero
    176:179:float checkPositiveOrZero(float,java.lang.String) -> checkPositiveOrZero
    187:190:int checkInRange(int,int,int,java.lang.String) -> checkInRange
    198:201:long checkInRange(long,long,long,java.lang.String) -> checkInRange
    211:214:java.lang.Object[] checkNonEmpty(java.lang.Object[],java.lang.String) -> checkNonEmpty
    224:227:byte[] checkNonEmpty(byte[],java.lang.String) -> checkNonEmpty
    237:240:char[] checkNonEmpty(char[],java.lang.String) -> checkNonEmpty
    250:253:java.util.Collection checkNonEmpty(java.util.Collection,java.lang.String) -> checkNonEmpty
    262:265:java.lang.String checkNonEmpty(java.lang.String,java.lang.String) -> checkNonEmpty
    274:277:java.util.Map checkNonEmpty(java.util.Map,java.lang.String) -> checkNonEmpty
    286:289:java.lang.CharSequence checkNonEmpty(java.lang.CharSequence,java.lang.String) -> checkNonEmpty
    304:305:java.lang.String checkNonEmptyAfterTrim(java.lang.String,java.lang.String) -> checkNonEmptyAfterTrim
    315:315:int intValue(java.lang.Integer,int) -> intValue
    325:325:long longValue(java.lang.Long,long) -> longValue
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.OutOfDirectMemoryError -> pro.gravit.repackage.io.netty.util.internal.OutOfDirectMemoryError:
# {"fileName":"OutOfDirectMemoryError.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    28:29:void <init>(java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PendingWrite -> pro.gravit.repackage.io.netty.util.internal.PendingWrite:
# {"fileName":"PendingWrite.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle handle -> handle
    java.lang.Object msg -> msg
    pro.gravit.repackage.io.netty.util.concurrent.Promise promise -> promise
    38:41:pro.gravit.repackage.io.netty.util.internal.PendingWrite newInstance(java.lang.Object,pro.gravit.repackage.io.netty.util.concurrent.Promise) -> newInstance
    48:50:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    56:59:boolean recycle() -> recycle
    66:70:boolean failAndRecycle(java.lang.Throwable) -> failAndRecycle
    77:80:boolean successAndRecycle() -> successAndRecycle
    84:84:java.lang.Object msg() -> msg
    88:88:pro.gravit.repackage.io.netty.util.concurrent.Promise promise() -> promise
    95:97:pro.gravit.repackage.io.netty.util.concurrent.Promise recycleAndGet() -> recycleAndGet
    26:26:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.util.internal.PendingWrite$1) -> <init>
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PendingWrite$1 -> pro.gravit.repackage.io.netty.util.internal.PendingWrite$1:
# {"fileName":"PendingWrite.java","id":"sourceFile"}
    27:27:void <init>() -> <init>
    30:30:pro.gravit.repackage.io.netty.util.internal.PendingWrite newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    27:27:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.regex.Pattern MAX_DIRECT_MEMORY_SIZE_ARG_PATTERN -> MAX_DIRECT_MEMORY_SIZE_ARG_PATTERN
    boolean MAYBE_SUPER_USER -> MAYBE_SUPER_USER
    boolean CAN_ENABLE_TCP_NODELAY_BY_DEFAULT -> CAN_ENABLE_TCP_NODELAY_BY_DEFAULT
    java.lang.Throwable UNSAFE_UNAVAILABILITY_CAUSE -> UNSAFE_UNAVAILABILITY_CAUSE
    boolean DIRECT_BUFFER_PREFERRED -> DIRECT_BUFFER_PREFERRED
    long MAX_DIRECT_MEMORY -> MAX_DIRECT_MEMORY
    int MPSC_CHUNK_SIZE -> MPSC_CHUNK_SIZE
    int MIN_MAX_MPSC_CAPACITY -> MIN_MAX_MPSC_CAPACITY
    int MAX_ALLOWED_MPSC_CAPACITY -> MAX_ALLOWED_MPSC_CAPACITY
    long BYTE_ARRAY_BASE_OFFSET -> BYTE_ARRAY_BASE_OFFSET
    java.io.File TMPDIR -> TMPDIR
    int BIT_MODE -> BIT_MODE
    java.lang.String NORMALIZED_ARCH -> NORMALIZED_ARCH
    java.lang.String NORMALIZED_OS -> NORMALIZED_OS
    java.lang.String[] ALLOWED_LINUX_OS_CLASSIFIERS -> ALLOWED_LINUX_OS_CLASSIFIERS
    java.util.Set LINUX_OS_CLASSIFIERS -> LINUX_OS_CLASSIFIERS
    boolean IS_WINDOWS -> IS_WINDOWS
    boolean IS_OSX -> IS_OSX
    boolean IS_J9_JVM -> IS_J9_JVM
    boolean IS_IVKVM_DOT_NET -> IS_IVKVM_DOT_NET
    int ADDRESS_SIZE -> ADDRESS_SIZE
    boolean USE_DIRECT_BUFFER_NO_CLEANER -> USE_DIRECT_BUFFER_NO_CLEANER
    java.util.concurrent.atomic.AtomicLong DIRECT_MEMORY_COUNTER -> DIRECT_MEMORY_COUNTER
    long DIRECT_MEMORY_LIMIT -> DIRECT_MEMORY_LIMIT
    pro.gravit.repackage.io.netty.util.internal.PlatformDependent$ThreadLocalRandomProvider RANDOM_PROVIDER -> RANDOM_PROVIDER
    pro.gravit.repackage.io.netty.util.internal.Cleaner CLEANER -> CLEANER
    int UNINITIALIZED_ARRAY_ALLOCATION_THRESHOLD -> UNINITIALIZED_ARRAY_ALLOCATION_THRESHOLD
    java.lang.String[] OS_RELEASE_FILES -> OS_RELEASE_FILES
    java.lang.String LINUX_ID_PREFIX -> LINUX_ID_PREFIX
    java.lang.String LINUX_ID_LIKE_PREFIX -> LINUX_ID_LIKE_PREFIX
    boolean BIG_ENDIAN_NATIVE_ORDER -> BIG_ENDIAN_NATIVE_ORDER
    pro.gravit.repackage.io.netty.util.internal.Cleaner NOOP -> NOOP
    boolean $assertionsDisabled -> $assertionsDisabled
    231:283:void addFilesystemOsClassifiers(java.util.Set,java.util.Set) -> addFilesystemOsClassifiers
    290:313:boolean addPropertyOsClassifiers(java.util.Set,java.util.Set) -> addPropertyOsClassifiers
    317:317:long byteArrayBaseOffset() -> byteArrayBaseOffset
    321:321:boolean hasDirectBufferNoCleanerConstructor() -> hasDirectBufferNoCleanerConstructor
    325:326:byte[] allocateUninitializedArray(int) -> allocateUninitializedArray
    333:333:boolean isAndroid() -> isAndroid
    340:340:boolean isWindows() -> isWindows
    347:347:boolean isOsx() -> isOsx
    355:355:boolean maybeSuperUser() -> maybeSuperUser
    362:362:int javaVersion() -> javaVersion
    369:369:boolean canEnableTcpNoDelayByDefault() -> canEnableTcpNoDelayByDefault
    377:377:boolean hasUnsafe() -> hasUnsafe
    384:384:java.lang.Throwable getUnsafeUnavailabilityCause() -> getUnsafeUnavailabilityCause
    393:393:boolean isUnaligned() -> isUnaligned
    401:401:boolean directBufferPreferred() -> directBufferPreferred
    408:408:long maxDirectMemory() -> maxDirectMemory
    418:418:long usedDirectMemory() -> usedDirectMemory
    425:425:java.io.File tmpdir() -> tmpdir
    432:432:int bitMode() -> bitMode
    440:440:int addressSize() -> addressSize
    444:444:long allocateMemory(long) -> allocateMemory
    448:449:void freeMemory(long) -> freeMemory
    452:452:long reallocateMemory(long,long) -> reallocateMemory
    459:464:void throwException(java.lang.Throwable) -> throwException
    468:468:void throwException0(java.lang.Throwable) -> throwException0
    475:475:java.util.concurrent.ConcurrentMap newConcurrentHashMap() -> newConcurrentHashMap
    482:485:pro.gravit.repackage.io.netty.util.internal.LongCounter newLongCounter() -> newLongCounter
    493:493:java.util.concurrent.ConcurrentMap newConcurrentHashMap(int) -> newConcurrentHashMap
    500:500:java.util.concurrent.ConcurrentMap newConcurrentHashMap(int,float) -> newConcurrentHashMap
    508:508:java.util.concurrent.ConcurrentMap newConcurrentHashMap(int,float,int) -> newConcurrentHashMap
    515:515:java.util.concurrent.ConcurrentMap newConcurrentHashMap(java.util.Map) -> newConcurrentHashMap
    523:524:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    527:527:long directBufferAddress(java.nio.ByteBuffer) -> directBufferAddress
    531:534:java.nio.ByteBuffer directBuffer(long,int) -> directBuffer
    539:539:java.lang.Object getObject(java.lang.Object,long) -> getObject
    543:543:int getInt(java.lang.Object,long) -> getInt
    547:548:void safeConstructPutInt(java.lang.Object,long,int) -> safeConstructPutInt
    551:551:int getIntVolatile(long) -> getIntVolatile
    555:556:void putIntOrdered(long,int) -> putIntOrdered
    559:559:byte getByte(long) -> getByte
    563:563:short getShort(long) -> getShort
    567:567:int getInt(long) -> getInt
    571:571:long getLong(long) -> getLong
    575:575:byte getByte(byte[],int) -> getByte
    579:579:byte getByte(byte[],long) -> getByte
    583:583:short getShort(byte[],int) -> getShort
    587:587:int getInt(byte[],int) -> getInt
    591:591:int getInt(int[],long) -> getInt
    595:595:long getLong(byte[],int) -> getLong
    599:599:long getLong(long[],long) -> getLong
    603:613:long getLongSafe(byte[],int) -> getLongSafe
    624:630:int getIntSafe(byte[],int) -> getIntSafe
    637:640:short getShortSafe(byte[],int) -> getShortSafe
    647:658:int hashCodeAsciiCompute(java.lang.CharSequence,int,int) -> hashCodeAsciiCompute
    665:675:int hashCodeAsciiSanitizeInt(java.lang.CharSequence,int) -> hashCodeAsciiSanitizeInt
    682:688:int hashCodeAsciiSanitizeShort(java.lang.CharSequence,int) -> hashCodeAsciiSanitizeShort
    695:695:int hashCodeAsciiSanitizeByte(char) -> hashCodeAsciiSanitizeByte
    699:700:void putByte(long,byte) -> putByte
    703:704:void putShort(long,short) -> putShort
    707:708:void putInt(long,int) -> putInt
    711:712:void putLong(long,long) -> putLong
    715:716:void putByte(byte[],int,byte) -> putByte
    719:720:void putByte(java.lang.Object,long,byte) -> putByte
    723:724:void putShort(byte[],int,short) -> putShort
    727:728:void putInt(byte[],int,int) -> putInt
    731:732:void putLong(byte[],int,long) -> putLong
    735:736:void putObject(java.lang.Object,long,java.lang.Object) -> putObject
    739:739:long objectFieldOffset(java.lang.reflect.Field) -> objectFieldOffset
    743:744:void copyMemory(long,long,long) -> copyMemory
    747:748:void copyMemory(byte[],int,long,long) -> copyMemory
    751:753:void copyMemory(byte[],int,byte[],int,long) -> copyMemory
    756:757:void copyMemory(long,byte[],int,long) -> copyMemory
    760:761:void setMemory(byte[],int,long,byte) -> setMemory
    764:765:void setMemory(long,long,byte) -> setMemory
    772:780:java.nio.ByteBuffer allocateDirectNoCleaner(int) -> allocateDirectNoCleaner
    789:798:java.nio.ByteBuffer reallocateDirectNoCleaner(java.nio.ByteBuffer,int) -> reallocateDirectNoCleaner
    807:812:void freeDirectNoCleaner(java.nio.ByteBuffer) -> freeDirectNoCleaner
    815:815:boolean hasAlignDirectByteBuffer() -> hasAlignDirectByteBuffer
    819:832:java.nio.ByteBuffer alignDirectBuffer(java.nio.ByteBuffer,int) -> alignDirectBuffer
    837:837:long align(long,int) -> align
    841:850:void incrementMemoryCounter(int) -> incrementMemoryCounter
    853:857:void decrementMemoryCounter(int) -> decrementMemoryCounter
    860:860:boolean useDirectBufferNoCleaner() -> useDirectBufferNoCleaner
    875:877:boolean equals(byte[],int,byte[],int,int) -> equals
    888:890:boolean isZero(byte[],int,int) -> isZero
    915:917:int equalsConstantTime(byte[],int,byte[],int,int) -> equalsConstantTime
    930:932:int hashCodeAscii(byte[],int,int) -> hashCodeAscii
    946:982:int hashCodeAscii(java.lang.CharSequence) -> hashCodeAscii
    1040:1040:java.util.Queue newMpscQueue() -> newMpscQueue
    1048:1048:java.util.Queue newMpscQueue(int) -> newMpscQueue
    1057:1057:java.util.Queue newMpscQueue(int,int) -> newMpscQueue
    1065:1065:java.util.Queue newSpscQueue() -> newSpscQueue
    1073:1073:java.util.Queue newFixedMpscQueue(int) -> newFixedMpscQueue
    1080:1080:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    1087:1087:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    1094:1094:java.lang.ClassLoader getSystemClassLoader() -> getSystemClassLoader
    1102:1105:java.util.Deque newConcurrentDeque() -> newConcurrentDeque
    1113:1113:java.util.Random threadLocalRandom() -> threadLocalRandom
    1117:1121:boolean isWindows0() -> isWindows0
    1125:1129:boolean isOsx0() -> isOsx0
    1133:1138:boolean maybeSuperUser0() -> maybeSuperUser0
    1142:1164:java.lang.Throwable unsafeUnavailabilityCause0() -> unsafeUnavailabilityCause0
    1173:1173:boolean isJ9Jvm() -> isJ9Jvm
    1177:1178:boolean isJ9Jvm0() -> isJ9Jvm0
    1185:1185:boolean isIkvmDotNet() -> isIkvmDotNet
    1189:1190:boolean isIkvmDotNet0() -> isIkvmDotNet0
    1203:1275:long estimateMaxDirectMemory() -> estimateMaxDirectMemory
    1281:1334:java.io.File tmpdir0() -> tmpdir0
    1339:1353:java.io.File toDirectory(java.lang.String) -> toDirectory
    1359:1396:int bitMode0() -> bitMode0
    1401:1404:int addressSize0() -> addressSize0
    1408:1411:long byteArrayBaseOffset0() -> byteArrayBaseOffset0
    1415:1421:boolean equalsSafe(byte[],int,byte[],int,int) -> equalsSafe
    1425:1431:boolean isZeroSafe(byte[],int,int) -> isZeroSafe
    1438:1465:int hashCodeAsciiSafe(byte[],int,int) -> hashCodeAsciiSafe
    1470:1470:java.lang.String normalizedArch() -> normalizedArch
    1474:1474:java.lang.String normalizedOs() -> normalizedOs
    1478:1478:java.util.Set normalizedLinuxClassifiers() -> normalizedLinuxClassifiers
    1483:1503:java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File) -> createTempFile
    1514:1519:void addClassifier(java.util.Set,java.util.Set,java.lang.String[]) -> addClassifier
    1523:1523:java.lang.String normalizeOsReleaseVariableValue(java.lang.String) -> normalizeOsReleaseVariableValue
    1527:1527:java.lang.String normalize(java.lang.String) -> normalize
    1531:1572:java.lang.String normalizeArch(java.lang.String) -> normalizeArch
    1576:1611:java.lang.String normalizeOs(java.lang.String) -> normalizeOs
    1642:1644:void <init>() -> <init>
    79:79:java.lang.String access$000(java.lang.String) -> access$000
    79:79:void access$100(java.util.Set,java.util.Set,java.lang.String[]) -> access$100
    79:79:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$200() -> access$200
    79:227:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent$1 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent$1:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    128:128:void <init>() -> <init>
    132:132:void freeDirectBuffer(java.nio.ByteBuffer) -> freeDirectBuffer
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent$2 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent$2:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    137:137:void <init>() -> <init>
    141:141:java.util.Random current() -> current
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent$3 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent$3:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    145:145:void <init>() -> <init>
    148:148:java.util.Random current() -> current
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent$4 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent$4:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    java.io.File val$file -> val$file
    java.util.Set val$allowedClassifiers -> val$allowedClassifiers
    java.util.Set val$availableClassifiers -> val$availableClassifiers
    java.lang.String val$osReleaseFileName -> val$osReleaseFileName
    233:233:void <init>(java.io.File,java.util.Set,java.util.Set,java.lang.String) -> <init>
    237:275:java.lang.Boolean run() -> run
    233:233:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent$AtomicLongCounter -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent$AtomicLongCounter:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    1614:1614:void <init>() -> <init>
    1619:1620:void add(long) -> add
    1624:1625:void increment() -> increment
    1629:1630:void decrement() -> decrement
    1634:1634:long value() -> value
    1614:1614:void <init>(pro.gravit.repackage.io.netty.util.internal.PlatformDependent$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent$Mpsc -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent$Mpsc:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    boolean USE_MPSC_CHUNKED_ARRAY_QUEUE -> USE_MPSC_CHUNKED_ARRAY_QUEUE
    988:989:void <init>() -> <init>
    1019:1020:java.util.Queue newMpscQueue(int) -> newMpscQueue
    1024:1024:java.util.Queue newChunkedMpscQueue(int,int) -> newChunkedMpscQueue
    1029:1029:java.util.Queue newMpscQueue() -> newMpscQueue
    992:1013:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent$Mpsc$1 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent$Mpsc$1:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    997:997:void <init>() -> <init>
    1001:1001:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent$ThreadLocalRandomProvider -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent$ThreadLocalRandomProvider:
# {"fileName":"PlatformDependent.java","id":"sourceFile"}
    java.util.Random current() -> current
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    long ADDRESS_FIELD_OFFSET -> ADDRESS_FIELD_OFFSET
    long BYTE_ARRAY_BASE_OFFSET -> BYTE_ARRAY_BASE_OFFSET
    long INT_ARRAY_BASE_OFFSET -> INT_ARRAY_BASE_OFFSET
    long INT_ARRAY_INDEX_SCALE -> INT_ARRAY_INDEX_SCALE
    long LONG_ARRAY_BASE_OFFSET -> LONG_ARRAY_BASE_OFFSET
    long LONG_ARRAY_INDEX_SCALE -> LONG_ARRAY_INDEX_SCALE
    java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR -> DIRECT_BUFFER_CONSTRUCTOR
    java.lang.Throwable EXPLICIT_NO_UNSAFE_CAUSE -> EXPLICIT_NO_UNSAFE_CAUSE
    java.lang.reflect.Method ALLOCATE_ARRAY_METHOD -> ALLOCATE_ARRAY_METHOD
    java.lang.reflect.Method ALIGN_SLICE -> ALIGN_SLICE
    int JAVA_VERSION -> JAVA_VERSION
    boolean IS_ANDROID -> IS_ANDROID
    boolean STORE_FENCE_AVAILABLE -> STORE_FENCE_AVAILABLE
    java.lang.Throwable UNSAFE_UNAVAILABILITY_CAUSE -> UNSAFE_UNAVAILABILITY_CAUSE
    java.lang.Object INTERNAL_UNSAFE -> INTERNAL_UNSAFE
    boolean RUNNING_IN_NATIVE_IMAGE -> RUNNING_IN_NATIVE_IMAGE
    boolean IS_EXPLICIT_TRY_REFLECTION_SET_ACCESSIBLE -> IS_EXPLICIT_TRY_REFLECTION_SET_ACCESSIBLE
    sun.misc.Unsafe UNSAFE -> UNSAFE
    int HASH_CODE_ASCII_SEED -> HASH_CODE_ASCII_SEED
    int HASH_CODE_C1 -> HASH_CODE_C1
    int HASH_CODE_C2 -> HASH_CODE_C2
    long UNSAFE_COPY_THRESHOLD -> UNSAFE_COPY_THRESHOLD
    boolean UNALIGNED -> UNALIGNED
    boolean $assertionsDisabled -> $assertionsDisabled
    487:487:boolean unsafeStaticFieldOffsetSupported() -> unsafeStaticFieldOffsetSupported
    491:491:boolean isExplicitNoUnsafe() -> isExplicitNoUnsafe
    495:517:java.lang.Throwable explicitNoUnsafeCause0() -> explicitNoUnsafeCause0
    521:521:boolean isUnaligned() -> isUnaligned
    525:525:boolean hasUnsafe() -> hasUnsafe
    529:529:java.lang.Throwable getUnsafeUnavailabilityCause() -> getUnsafeUnavailabilityCause
    533:533:boolean unalignedAccess() -> unalignedAccess
    538:539:void throwException(java.lang.Throwable) -> throwException
    542:542:boolean hasDirectBufferNoCleanerConstructor() -> hasDirectBufferNoCleanerConstructor
    546:546:java.nio.ByteBuffer reallocateDirectNoCleaner(java.nio.ByteBuffer,int) -> reallocateDirectNoCleaner
    553:553:java.nio.ByteBuffer allocateDirectNoCleaner(int) -> allocateDirectNoCleaner
    557:557:boolean hasAlignSliceMethod() -> hasAlignSliceMethod
    562:566:java.nio.ByteBuffer alignSlice(java.nio.ByteBuffer,int) -> alignSlice
    571:571:boolean hasAllocateArrayMethod() -> hasAllocateArrayMethod
    576:580:byte[] allocateUninitializedArray(int) -> allocateUninitializedArray
    585:594:java.nio.ByteBuffer newDirectBuffer(long,int) -> newDirectBuffer
    599:599:long directBufferAddress(java.nio.ByteBuffer) -> directBufferAddress
    603:603:long byteArrayBaseOffset() -> byteArrayBaseOffset
    607:607:java.lang.Object getObject(java.lang.Object,long) -> getObject
    611:611:int getInt(java.lang.Object,long) -> getInt
    615:621:void safeConstructPutInt(java.lang.Object,long,int) -> safeConstructPutInt
    624:624:long getLong(java.lang.Object,long) -> getLong
    628:628:long objectFieldOffset(java.lang.reflect.Field) -> objectFieldOffset
    632:632:byte getByte(long) -> getByte
    636:636:short getShort(long) -> getShort
    640:640:int getInt(long) -> getInt
    644:644:long getLong(long) -> getLong
    648:648:byte getByte(byte[],int) -> getByte
    652:652:byte getByte(byte[],long) -> getByte
    656:656:short getShort(byte[],int) -> getShort
    660:660:int getInt(byte[],int) -> getInt
    664:664:int getInt(int[],long) -> getInt
    668:668:int getIntVolatile(long) -> getIntVolatile
    672:673:void putIntOrdered(long,int) -> putIntOrdered
    676:676:long getLong(byte[],int) -> getLong
    680:680:long getLong(long[],long) -> getLong
    684:685:void putByte(long,byte) -> putByte
    688:689:void putShort(long,short) -> putShort
    692:693:void putInt(long,int) -> putInt
    696:697:void putLong(long,long) -> putLong
    700:701:void putByte(byte[],int,byte) -> putByte
    704:705:void putByte(java.lang.Object,long,byte) -> putByte
    708:709:void putShort(byte[],int,short) -> putShort
    712:713:void putInt(byte[],int,int) -> putInt
    716:717:void putLong(byte[],int,long) -> putLong
    720:721:void putObject(java.lang.Object,long,java.lang.Object) -> putObject
    726:731:void copyMemory(long,long,long) -> copyMemory
    734:741:void copyMemoryWithSafePointPolling(long,long,long) -> copyMemoryWithSafePointPolling
    746:751:void copyMemory(java.lang.Object,long,java.lang.Object,long,long) -> copyMemory
    755:762:void copyMemoryWithSafePointPolling(java.lang.Object,long,java.lang.Object,long,long) -> copyMemoryWithSafePointPolling
    765:766:void setMemory(long,long,byte) -> setMemory
    769:770:void setMemory(java.lang.Object,long,long,byte) -> setMemory
    773:798:boolean equals(byte[],int,byte[],int,int) -> equals
    802:823:int equalsConstantTime(byte[],int,byte[],int,int) -> equalsConstantTime
    827:849:boolean isZero(byte[],int,int) -> isZero
    853:877:int hashCodeAscii(byte[],int,int) -> hashCodeAscii
    883:885:int hashCodeAsciiCompute(long,int) -> hashCodeAsciiCompute
    891:891:int hashCodeAsciiSanitize(int) -> hashCodeAsciiSanitize
    895:895:int hashCodeAsciiSanitize(short) -> hashCodeAsciiSanitize
    899:899:int hashCodeAsciiSanitize(byte) -> hashCodeAsciiSanitize
    903:906:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    916:919:java.lang.ClassLoader getContextClassLoader() -> getContextClassLoader
    929:932:java.lang.ClassLoader getSystemClassLoader() -> getSystemClassLoader
    942:942:int addressSize() -> addressSize
    946:946:long allocateMemory(long) -> allocateMemory
    950:951:void freeMemory(long) -> freeMemory
    954:954:long reallocateMemory(long,long) -> reallocateMemory
    958:958:boolean isAndroid() -> isAndroid
    969:974:boolean isAndroid0() -> isAndroid0
    979:980:boolean explicitTryReflectionSetAccessible0() -> explicitTryReflectionSetAccessible0
    984:984:boolean isExplicitTryReflectionSetAccessible() -> isExplicitTryReflectionSetAccessible
    988:988:int javaVersion() -> javaVersion
    994:1002:int javaVersion0() -> javaVersion0
    1007:1007:int majorVersionFromJavaSpecificationVersion() -> majorVersionFromJavaSpecificationVersion
    1012:1022:int majorVersion(java.lang.String) -> majorVersion
    1026:1027:void <init>() -> <init>
    37:37:boolean access$000() -> access$000
    36:484:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$1 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$1:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    96:96:void <init>() -> <init>
    100:118:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$10 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$10:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    java.lang.Class val$clazz -> val$clazz
    906:906:void <init>(java.lang.Class) -> <init>
    909:909:java.lang.ClassLoader run() -> run
    906:906:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$11 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$11:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    919:919:void <init>() -> <init>
    922:922:java.lang.ClassLoader run() -> run
    919:919:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$12 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$12:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    932:932:void <init>() -> <init>
    935:935:java.lang.ClassLoader run() -> run
    932:932:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$2 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$2:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    sun.misc.Unsafe val$finalUnsafe -> val$finalUnsafe
    145:145:void <init>(sun.misc.Unsafe) -> <init>
    149:155:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$3 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$3:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    sun.misc.Unsafe val$finalUnsafe -> val$finalUnsafe
    178:178:void <init>(sun.misc.Unsafe) -> <init>
    182:187:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$4 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$4:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    sun.misc.Unsafe val$finalUnsafe -> val$finalUnsafe
    java.nio.ByteBuffer val$direct -> val$direct
    211:211:void <init>(sun.misc.Unsafe,java.nio.ByteBuffer) -> <init>
    215:229:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$5 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$5:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    java.nio.ByteBuffer val$direct -> val$direct
    282:282:void <init>(java.nio.ByteBuffer) -> <init>
    286:296:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$6 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$6:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    338:338:void <init>() -> <init>
    342:378:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$7 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$7:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    401:401:void <init>() -> <init>
    407:412:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$8 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$8:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    java.lang.Object val$finalInternalUnsafe -> val$finalInternalUnsafe
    419:419:void <init>(java.lang.Object) -> <init>
    423:428:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$9 -> pro.gravit.repackage.io.netty.util.internal.PlatformDependent0$9:
# {"fileName":"PlatformDependent0.java","id":"sourceFile"}
    466:466:void <init>() -> <init>
    470:472:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PriorityQueue -> pro.gravit.repackage.io.netty.util.internal.PriorityQueue:
# {"fileName":"PriorityQueue.java","id":"sourceFile"}
    boolean removeTyped(java.lang.Object) -> removeTyped
    boolean containsTyped(java.lang.Object) -> containsTyped
    void priorityChanged(java.lang.Object) -> priorityChanged
    void clearIgnoringIndexes() -> clearIgnoringIndexes
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode -> pro.gravit.repackage.io.netty.util.internal.PriorityQueueNode:
# {"fileName":"PriorityQueueNode.java","id":"sourceFile"}
    int INDEX_NOT_IN_QUEUE -> INDEX_NOT_IN_QUEUE
    int priorityQueueIndex(pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue) -> priorityQueueIndex
    void priorityQueueIndex(pro.gravit.repackage.io.netty.util.internal.DefaultPriorityQueue,int) -> priorityQueueIndex
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.PromiseNotificationUtil -> pro.gravit.repackage.io.netty.util.internal.PromiseNotificationUtil:
# {"fileName":"PromiseNotificationUtil.java","id":"sourceFile"}
    26:26:void <init>() -> <init>
    32:42:void tryCancel(pro.gravit.repackage.io.netty.util.concurrent.Promise,pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger) -> tryCancel
    48:58:void trySuccess(pro.gravit.repackage.io.netty.util.concurrent.Promise,java.lang.Object,pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger) -> trySuccess
    64:74:void tryFailure(pro.gravit.repackage.io.netty.util.concurrent.Promise,java.lang.Throwable,pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger) -> tryFailure
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ReadOnlyIterator -> pro.gravit.repackage.io.netty.util.internal.ReadOnlyIterator:
# {"fileName":"ReadOnlyIterator.java","id":"sourceFile"}
    java.util.Iterator iterator -> iterator
    24:26:void <init>(java.util.Iterator) -> <init>
    30:30:boolean hasNext() -> hasNext
    35:35:java.lang.Object next() -> next
    40:40:void remove() -> remove
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList -> pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList:
# {"fileName":"RecyclableArrayList.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    pro.gravit.repackage.io.netty.util.internal.ObjectPool RECYCLER -> RECYCLER
    boolean insertSinceRecycled -> insertSinceRecycled
    pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle handle -> handle
    50:50:pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList newInstance() -> newInstance
    57:59:pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList newInstance(int) -> newInstance
    65:66:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> <init>
    69:71:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,int) -> <init>
    75:80:boolean addAll(java.util.Collection) -> addAll
    85:90:boolean addAll(int,java.util.Collection) -> addAll
    94:110:void checkNullElements(java.util.Collection) -> checkNullElements
    114:118:boolean add(java.lang.Object) -> add
    123:125:void add(int,java.lang.Object) -> add
    129:131:java.lang.Object set(int,java.lang.Object) -> set
    138:138:boolean insertSinceRecycled() -> insertSinceRecycled
    145:148:boolean recycle() -> recycle
    30:30:void <init>(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle,pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList$1) -> <init>
    36:36:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList$1 -> pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList$1:
# {"fileName":"RecyclableArrayList.java","id":"sourceFile"}
    37:37:void <init>() -> <init>
    40:40:pro.gravit.repackage.io.netty.util.internal.RecyclableArrayList newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    37:37:java.lang.Object newObject(pro.gravit.repackage.io.netty.util.internal.ObjectPool$Handle) -> newObject
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ReferenceCountUpdater -> pro.gravit.repackage.io.netty.util.internal.ReferenceCountUpdater:
# {"fileName":"ReferenceCountUpdater.java","id":"sourceFile"}
    41:41:void <init>() -> <init>
    45:51:long getUnsafeOffset(java.lang.Class,java.lang.String) -> getUnsafeOffset
    java.util.concurrent.atomic.AtomicIntegerFieldUpdater updater() -> updater
    long unsafeOffset() -> unsafeOffset
    59:59:int initialValue() -> initialValue
    63:69:void setInitialValue(pro.gravit.repackage.io.netty.util.ReferenceCounted) -> setInitialValue
    72:72:int realRefCnt(int) -> realRefCnt
    79:83:int toLiveRealRefCnt(int,int) -> toLiveRealRefCnt
    88:89:int nonVolatileRawCnt(pro.gravit.repackage.io.netty.util.ReferenceCounted) -> nonVolatileRawCnt
    93:93:int refCnt(pro.gravit.repackage.io.netty.util.ReferenceCounted) -> refCnt
    97:101:boolean isLiveNonVolatile(pro.gravit.repackage.io.netty.util.ReferenceCounted) -> isLiveNonVolatile
    108:109:void setRefCnt(pro.gravit.repackage.io.netty.util.ReferenceCounted,int) -> setRefCnt
    115:116:void resetRefCnt(pro.gravit.repackage.io.netty.util.ReferenceCounted) -> resetRefCnt
    119:119:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(pro.gravit.repackage.io.netty.util.ReferenceCounted) -> retain
    124:125:pro.gravit.repackage.io.netty.util.ReferenceCounted retain(pro.gravit.repackage.io.netty.util.ReferenceCounted,int) -> retain
    130:141:pro.gravit.repackage.io.netty.util.ReferenceCounted retain0(pro.gravit.repackage.io.netty.util.ReferenceCounted,int,int) -> retain0
    145:147:boolean release(pro.gravit.repackage.io.netty.util.ReferenceCounted) -> release
    151:154:boolean release(pro.gravit.repackage.io.netty.util.ReferenceCounted,int) -> release
    158:158:boolean tryFinalRelease0(pro.gravit.repackage.io.netty.util.ReferenceCounted,int) -> tryFinalRelease0
    162:167:boolean nonFinalRelease0(pro.gravit.repackage.io.netty.util.ReferenceCounted,int,int,int) -> nonFinalRelease0
    172:186:boolean retryRelease0(pro.gravit.repackage.io.netty.util.ReferenceCounted,int) -> retryRelease0
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ReflectionUtil -> pro.gravit.repackage.io.netty.util.internal.ReflectionUtil:
# {"fileName":"ReflectionUtil.java","id":"sourceFile"}
    22:22:void <init>() -> <init>
    30:39:java.lang.Throwable trySetAccessible(java.lang.reflect.AccessibleObject,boolean) -> trySetAccessible
    47:50:java.lang.RuntimeException handleInaccessibleObjectException(java.lang.RuntimeException) -> handleInaccessibleObjectException
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ResourcesUtil -> pro.gravit.repackage.io.netty.util.internal.ResourcesUtil:
# {"fileName":"ResourcesUtil.java","id":"sourceFile"}
    36:38:java.io.File getFile(java.lang.Class,java.lang.String) -> getFile
    42:42:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils -> pro.gravit.repackage.io.netty.util.internal.SocketUtils:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.util.Enumeration EMPTY -> EMPTY
    48:49:void <init>() -> <init>
    53:53:java.util.Enumeration empty() -> empty
    59:69:void connect(java.net.Socket,java.net.SocketAddress,int) -> connect
    73:83:void bind(java.net.Socket,java.net.SocketAddress) -> bind
    88:95:boolean connect(java.nio.channels.SocketChannel,java.net.SocketAddress) -> connect
    102:112:void bind(java.nio.channels.SocketChannel,java.net.SocketAddress) -> bind
    116:123:java.nio.channels.SocketChannel accept(java.nio.channels.ServerSocketChannel) -> accept
    130:140:void bind(java.nio.channels.DatagramChannel,java.net.SocketAddress) -> bind
    143:143:java.net.SocketAddress localSocketAddress(java.net.ServerSocket) -> localSocketAddress
    153:160:java.net.InetAddress addressByName(java.lang.String) -> addressByName
    166:173:java.net.InetAddress[] allAddressesByName(java.lang.String) -> allAddressesByName
    178:178:java.net.InetSocketAddress socketAddress(java.lang.String,int) -> socketAddress
    187:200:java.util.Enumeration addressesFromNetworkInterface(java.net.NetworkInterface) -> addressesFromNetworkInterface
    205:205:java.net.InetAddress loopbackAddress() -> loopbackAddress
    222:229:byte[] hardwareAddressFromNetworkInterface(java.net.NetworkInterface) -> hardwareAddressFromNetworkInterface
    46:46:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$1 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$1:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.net.Socket val$socket -> val$socket
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    int val$timeout -> val$timeout
    59:59:void <init>(java.net.Socket,java.net.SocketAddress,int) -> <init>
    62:63:java.lang.Void run() -> run
    59:59:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$10 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$10:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.lang.String val$hostname -> val$hostname
    int val$port -> val$port
    178:178:void <init>(java.lang.String,int) -> <init>
    181:181:java.net.InetSocketAddress run() -> run
    178:178:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$11 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$11:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.net.NetworkInterface val$intf -> val$intf
    188:188:void <init>(java.net.NetworkInterface) -> <init>
    191:191:java.util.Enumeration run() -> run
    188:188:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$12 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$12:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    205:205:void <init>() -> <init>
    208:214:java.net.InetAddress run() -> run
    205:205:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$13 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$13:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.net.NetworkInterface val$intf -> val$intf
    222:222:void <init>(java.net.NetworkInterface) -> <init>
    225:225:byte[] run() -> run
    222:222:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$2 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$2:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.net.Socket val$socket -> val$socket
    java.net.SocketAddress val$bindpoint -> val$bindpoint
    73:73:void <init>(java.net.Socket,java.net.SocketAddress) -> <init>
    76:77:java.lang.Void run() -> run
    73:73:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$3 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$3:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.nio.channels.SocketChannel val$socketChannel -> val$socketChannel
    java.net.SocketAddress val$remoteAddress -> val$remoteAddress
    88:88:void <init>(java.nio.channels.SocketChannel,java.net.SocketAddress) -> <init>
    91:91:java.lang.Boolean run() -> run
    88:88:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$4 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$4:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.nio.channels.SocketChannel val$socketChannel -> val$socketChannel
    java.net.SocketAddress val$address -> val$address
    102:102:void <init>(java.nio.channels.SocketChannel,java.net.SocketAddress) -> <init>
    105:106:java.lang.Void run() -> run
    102:102:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$5 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$5:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.nio.channels.ServerSocketChannel val$serverSocketChannel -> val$serverSocketChannel
    116:116:void <init>(java.nio.channels.ServerSocketChannel) -> <init>
    119:119:java.nio.channels.SocketChannel run() -> run
    116:116:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$6 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$6:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.nio.channels.DatagramChannel val$networkChannel -> val$networkChannel
    java.net.SocketAddress val$address -> val$address
    130:130:void <init>(java.nio.channels.DatagramChannel,java.net.SocketAddress) -> <init>
    133:134:java.lang.Void run() -> run
    130:130:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$7 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$7:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.net.ServerSocket val$socket -> val$socket
    143:143:void <init>(java.net.ServerSocket) -> <init>
    146:146:java.net.SocketAddress run() -> run
    143:143:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$8 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$8:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.lang.String val$hostname -> val$hostname
    153:153:void <init>(java.lang.String) -> <init>
    156:156:java.net.InetAddress run() -> run
    153:153:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SocketUtils$9 -> pro.gravit.repackage.io.netty.util.internal.SocketUtils$9:
# {"fileName":"SocketUtils.java","id":"sourceFile"}
    java.lang.String val$hostname -> val$hostname
    166:166:void <init>(java.lang.String) -> <init>
    169:169:java.net.InetAddress[] run() -> run
    166:166:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.StringUtil -> pro.gravit.repackage.io.netty.util.internal.StringUtil:
# {"fileName":"StringUtil.java","id":"sourceFile"}
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    java.lang.String NEWLINE -> NEWLINE
    char DOUBLE_QUOTE -> DOUBLE_QUOTE
    char COMMA -> COMMA
    char LINE_FEED -> LINE_FEED
    char CARRIAGE_RETURN -> CARRIAGE_RETURN
    char TAB -> TAB
    char SPACE -> SPACE
    java.lang.String[] BYTE2HEX_PAD -> BYTE2HEX_PAD
    java.lang.String[] BYTE2HEX_NOPAD -> BYTE2HEX_NOPAD
    byte[] HEX2B -> HEX2B
    int CSV_NUMBER_ESCAPE_CHARACTERS -> CSV_NUMBER_ESCAPE_CHARACTERS
    char PACKAGE_SEPARATOR_CHAR -> PACKAGE_SEPARATOR_CHAR
    boolean $assertionsDisabled -> $assertionsDisabled
    88:90:void <init>() -> <init>
    98:102:java.lang.String substringAfter(java.lang.String,char) -> substringAfter
    111:115:java.lang.String substringBefore(java.lang.String,char) -> substringBefore
    127:127:boolean commonSuffixOfLength(java.lang.String,java.lang.String,int) -> commonSuffixOfLength
    134:134:java.lang.String byteToHexStringPadded(int) -> byteToHexStringPadded
    142:146:java.lang.Appendable byteToHexStringPadded(java.lang.Appendable,int) -> byteToHexStringPadded
    153:153:java.lang.String toHexStringPadded(byte[]) -> toHexStringPadded
    160:160:java.lang.String toHexStringPadded(byte[],int,int) -> toHexStringPadded
    167:167:java.lang.Appendable toHexStringPadded(java.lang.Appendable,byte[]) -> toHexStringPadded
    174:178:java.lang.Appendable toHexStringPadded(java.lang.Appendable,byte[],int,int) -> toHexStringPadded
    185:185:java.lang.String byteToHexString(int) -> byteToHexString
    193:197:java.lang.Appendable byteToHexString(java.lang.Appendable,int) -> byteToHexString
    204:204:java.lang.String toHexString(byte[]) -> toHexString
    211:211:java.lang.String toHexString(byte[],int,int) -> toHexString
    218:218:java.lang.Appendable toHexString(java.lang.Appendable,byte[]) -> toHexString
    225:245:java.lang.Appendable toHexString(java.lang.Appendable,byte[],int,int) -> toHexString
    256:259:int decodeHexNibble(char) -> decodeHexNibble
    266:272:byte decodeHexByte(java.lang.CharSequence,int) -> decodeHexByte
    283:293:byte[] decodeHexDump(java.lang.CharSequence,int,int) -> decodeHexDump
    300:300:byte[] decodeHexDump(java.lang.CharSequence) -> decodeHexDump
    307:310:java.lang.String simpleClassName(java.lang.Object) -> simpleClassName
    319:324:java.lang.String simpleClassName(java.lang.Class) -> simpleClassName
    336:336:java.lang.CharSequence escapeCsv(java.lang.CharSequence) -> escapeCsv
    350:424:java.lang.CharSequence escapeCsv(java.lang.CharSequence,boolean) -> escapeCsv
    436:461:java.lang.CharSequence unescapeCsv(java.lang.CharSequence) -> unescapeCsv
    473:533:java.util.List unescapeCsvFields(java.lang.CharSequence) -> unescapeCsvFields
    542:554:void validateCsvFormat(java.lang.CharSequence) -> validateCsvFormat
    557:557:java.lang.IllegalArgumentException newInvalidEscapedCsvFieldException(java.lang.CharSequence,int) -> newInvalidEscapedCsvFieldException
    564:564:int length(java.lang.String) -> length
    571:571:boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    582:587:int indexOfNonWhiteSpace(java.lang.CharSequence,int) -> indexOfNonWhiteSpace
    598:603:int indexOfWhiteSpace(java.lang.CharSequence,int) -> indexOfWhiteSpace
    615:615:boolean isSurrogate(char) -> isSurrogate
    619:619:boolean isDoubleQuote(char) -> isDoubleQuote
    630:631:boolean endsWith(java.lang.CharSequence,char) -> endsWith
    642:648:java.lang.CharSequence trimOws(java.lang.CharSequence) -> trimOws
    660:678:java.lang.CharSequence join(java.lang.CharSequence,java.lang.Iterable) -> join
    685:689:int indexOfFirstNonOwsChar(java.lang.CharSequence,int) -> indexOfFirstNonOwsChar
    696:700:int indexOfLastNonOwsChar(java.lang.CharSequence,int,int) -> indexOfLastNonOwsChar
    704:704:boolean isOws(char) -> isOws
    29:86:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SuppressJava6Requirement -> pro.gravit.repackage.io.netty.util.internal.SuppressJava6Requirement:
# {"fileName":"SuppressJava6Requirement.java","id":"sourceFile"}
    java.lang.String reason() -> reason
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SystemPropertyUtil -> pro.gravit.repackage.io.netty.util.internal.SystemPropertyUtil:
# {"fileName":"SystemPropertyUtil.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    38:38:boolean contains(java.lang.String) -> contains
    48:48:java.lang.String get(java.lang.String) -> get
    61:83:java.lang.String get(java.lang.String,java.lang.String) -> get
    96:119:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    132:149:int getInt(java.lang.String,int) -> getInt
    162:179:long getLong(java.lang.String,long) -> getLong
    182:184:void <init>() -> <init>
    31:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.SystemPropertyUtil$1 -> pro.gravit.repackage.io.netty.util.internal.SystemPropertyUtil$1:
# {"fileName":"SystemPropertyUtil.java","id":"sourceFile"}
    java.lang.String val$key -> val$key
    68:68:void <init>(java.lang.String) -> <init>
    71:71:java.lang.String run() -> run
    68:68:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ThreadExecutorMap -> pro.gravit.repackage.io.netty.util.internal.ThreadExecutorMap:
# {"fileName":"ThreadExecutorMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.FastThreadLocal mappings -> mappings
    31:31:void <init>() -> <init>
    37:37:pro.gravit.repackage.io.netty.util.concurrent.EventExecutor currentExecutor() -> currentExecutor
    44:45:void setCurrentEventExecutor(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> setCurrentEventExecutor
    52:54:java.util.concurrent.Executor apply(java.util.concurrent.Executor,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> apply
    67:69:java.lang.Runnable apply(java.lang.Runnable,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> apply
    87:89:java.util.concurrent.ThreadFactory apply(java.util.concurrent.ThreadFactory,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> apply
    27:27:void access$000(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> access$000
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ThreadExecutorMap$1 -> pro.gravit.repackage.io.netty.util.internal.ThreadExecutorMap$1:
# {"fileName":"ThreadExecutorMap.java","id":"sourceFile"}
    java.util.concurrent.Executor val$executor -> val$executor
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor val$eventExecutor -> val$eventExecutor
    54:54:void <init>(java.util.concurrent.Executor,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    57:58:void execute(java.lang.Runnable) -> execute
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ThreadExecutorMap$2 -> pro.gravit.repackage.io.netty.util.internal.ThreadExecutorMap$2:
# {"fileName":"ThreadExecutorMap.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor val$eventExecutor -> val$eventExecutor
    java.lang.Runnable val$command -> val$command
    69:69:void <init>(pro.gravit.repackage.io.netty.util.concurrent.EventExecutor,java.lang.Runnable) -> <init>
    72:78:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ThreadExecutorMap$3 -> pro.gravit.repackage.io.netty.util.internal.ThreadExecutorMap$3:
# {"fileName":"ThreadExecutorMap.java","id":"sourceFile"}
    java.util.concurrent.ThreadFactory val$threadFactory -> val$threadFactory
    pro.gravit.repackage.io.netty.util.concurrent.EventExecutor val$eventExecutor -> val$eventExecutor
    89:89:void <init>(java.util.concurrent.ThreadFactory,pro.gravit.repackage.io.netty.util.concurrent.EventExecutor) -> <init>
    92:92:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom -> pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom:
# {"fileName":"ThreadLocalRandom.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger logger -> logger
    java.util.concurrent.atomic.AtomicLong seedUniquifier -> seedUniquifier
    long initialSeedUniquifier -> initialSeedUniquifier
    java.lang.Thread seedGeneratorThread -> seedGeneratorThread
    java.util.concurrent.BlockingQueue seedQueue -> seedQueue
    long seedGeneratorStartTime -> seedGeneratorStartTime
    long seedGeneratorEndTime -> seedGeneratorEndTime
    long multiplier -> multiplier
    long addend -> addend
    long mask -> mask
    long rnd -> rnd
    boolean initialized -> initialized
    long pad0 -> pad0
    long pad1 -> pad1
    long pad2 -> pad2
    long pad3 -> pad3
    long pad4 -> pad4
    long pad5 -> pad5
    long pad6 -> pad6
    long pad7 -> pad7
    long serialVersionUID -> serialVersionUID
    125:126:void setInitialSeedUniquifier(long) -> setInitialSeedUniquifier
    130:195:long getInitialSeedUniquifier() -> getInitialSeedUniquifier
    200:219:long newSeed() -> newSeed
    225:227:long mix64(long) -> mix64
    257:259:void <init>() -> <init>
    267:267:pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom current() -> current
    278:282:void setSeed(long) -> setSeed
    286:287:int next(int) -> next
    301:304:int nextInt(int,int) -> nextInt
    317:334:long nextLong(long) -> nextLong
    348:351:long nextLong(long,long) -> nextLong
    364:365:double nextDouble(double) -> nextDouble
    379:382:double nextDouble(double,double) -> nextDouble
    63:63:long access$002(long) -> access$002
    63:63:java.util.concurrent.BlockingQueue access$100() -> access$100
    63:63:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger access$200() -> access$200
    65:122:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom$1 -> pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom$1:
# {"fileName":"ThreadLocalRandom.java","id":"sourceFile"}
    86:86:void <init>(java.lang.String) -> <init>
    89:101:void run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom$2 -> pro.gravit.repackage.io.netty.util.internal.ThreadLocalRandom$2:
# {"fileName":"ThreadLocalRandom.java","id":"sourceFile"}
    104:104:void <init>() -> <init>
    107:108:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.ThrowableUtil -> pro.gravit.repackage.io.netty.util.internal.ThrowableUtil:
# {"fileName":"ThrowableUtil.java","id":"sourceFile"}
    25:25:void <init>() -> <init>
    31:32:java.lang.Throwable unknownStackTrace(java.lang.Throwable,java.lang.Class,java.lang.String) -> unknownStackTrace
    42:54:java.lang.String stackTraceToString(java.lang.Throwable) -> stackTraceToString
    58:58:boolean haveSuppressed() -> haveSuppressed
    63:67:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    70:72:void addSuppressedAndClear(java.lang.Throwable,java.util.List) -> addSuppressedAndClear
    75:78:void addSuppressed(java.lang.Throwable,java.util.List) -> addSuppressed
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher -> pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher:
# {"fileName":"TypeParameterMatcher.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher NOOP -> NOOP
    38:50:pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher get(java.lang.Class) -> get
    57:72:pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher find(java.lang.Object,java.lang.Class,java.lang.String) -> find
    78:139:java.lang.Class find0(java.lang.Object,java.lang.Class,java.lang.String) -> find0
    145:145:java.lang.Class fail(java.lang.Class,java.lang.String) -> fail
    boolean match(java.lang.Object) -> match
    164:164:void <init>() -> <init>
    29:29:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher$1 -> pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher$1:
# {"fileName":"TypeParameterMatcher.java","id":"sourceFile"}
    29:29:void <init>() -> <init>
    32:32:boolean match(java.lang.Object) -> match
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher -> pro.gravit.repackage.io.netty.util.internal.TypeParameterMatcher$ReflectiveMatcher:
# {"fileName":"TypeParameterMatcher.java","id":"sourceFile"}
    java.lang.Class type -> type
    154:156:void <init>(java.lang.Class) -> <init>
    160:160:boolean match(java.lang.Object) -> match
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.UnpaddedInternalThreadLocalMap -> pro.gravit.repackage.io.netty.util.internal.UnpaddedInternalThreadLocalMap:
# {"fileName":"UnpaddedInternalThreadLocalMap.java","id":"sourceFile"}
    21:21:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.UnstableApi -> pro.gravit.repackage.io.netty.util.internal.UnstableApi:
# {"fileName":"UnstableApi.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.AbstractInternalLogger -> pro.gravit.repackage.io.netty.util.internal.logging.AbstractInternalLogger:
# {"fileName":"AbstractInternalLogger.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.lang.String EXCEPTION_MESSAGE -> EXCEPTION_MESSAGE
    java.lang.String name -> name
    40:42:void <init>(java.lang.String) -> <init>
    46:46:java.lang.String name() -> name
    51:63:boolean isEnabled(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel) -> isEnabled
    69:70:void trace(java.lang.Throwable) -> trace
    74:75:void debug(java.lang.Throwable) -> debug
    79:80:void info(java.lang.Throwable) -> info
    84:85:void warn(java.lang.Throwable) -> warn
    89:90:void error(java.lang.Throwable) -> error
    94:113:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> log
    117:136:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.Throwable) -> log
    140:159:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> log
    163:182:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object) -> log
    186:205:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> log
    209:228:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> log
    231:231:java.lang.Object readResolve() -> readResolve
    236:236:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.AbstractInternalLogger$1 -> pro.gravit.repackage.io.netty.util.internal.logging.AbstractInternalLogger$1:
# {"fileName":"AbstractInternalLogger.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$util$internal$logging$InternalLogLevel -> $SwitchMap$io$netty$util$internal$logging$InternalLogLevel
    51:51:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.CommonsLogger -> pro.gravit.repackage.io.netty.util.internal.logging.CommonsLogger:
# {"fileName":"CommonsLogger.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    org.apache.commons.logging.Log logger -> logger
    60:62:void <init>(org.apache.commons.logging.Log,java.lang.String) -> <init>
    70:70:boolean isTraceEnabled() -> isTraceEnabled
    81:82:void trace(java.lang.String) -> trace
    100:104:void trace(java.lang.String,java.lang.Object) -> trace
    124:128:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    144:148:void trace(java.lang.String,java.lang.Object[]) -> trace
    161:162:void trace(java.lang.String,java.lang.Throwable) -> trace
    170:170:boolean isDebugEnabled() -> isDebugEnabled
    183:184:void debug(java.lang.String) -> debug
    202:206:void debug(java.lang.String,java.lang.Object) -> debug
    226:230:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    246:250:void debug(java.lang.String,java.lang.Object[]) -> debug
    263:264:void debug(java.lang.String,java.lang.Throwable) -> debug
    272:272:boolean isInfoEnabled() -> isInfoEnabled
    283:284:void info(java.lang.String) -> info
    303:307:void info(java.lang.String,java.lang.Object) -> info
    326:330:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    346:350:void info(java.lang.String,java.lang.Object[]) -> info
    363:364:void info(java.lang.String,java.lang.Throwable) -> info
    372:372:boolean isWarnEnabled() -> isWarnEnabled
    383:384:void warn(java.lang.String) -> warn
    402:406:void warn(java.lang.String,java.lang.Object) -> warn
    426:430:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    446:450:void warn(java.lang.String,java.lang.Object[]) -> warn
    464:465:void warn(java.lang.String,java.lang.Throwable) -> warn
    473:473:boolean isErrorEnabled() -> isErrorEnabled
    484:485:void error(java.lang.String) -> error
    503:507:void error(java.lang.String,java.lang.Object) -> error
    527:531:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    547:551:void error(java.lang.String,java.lang.Object[]) -> error
    564:565:void error(java.lang.String,java.lang.Throwable) -> error
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.CommonsLoggerFactory -> pro.gravit.repackage.io.netty.util.internal.logging.CommonsLoggerFactory:
# {"fileName":"CommonsLoggerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> INSTANCE
    38:39:void <init>() -> <init>
    43:43:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    32:32:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.FormattingTuple -> pro.gravit.repackage.io.netty.util.internal.logging.FormattingTuple:
# {"fileName":"FormattingTuple.java","id":"sourceFile"}
    java.lang.String message -> message
    java.lang.Throwable throwable -> throwable
    50:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    56:56:java.lang.String getMessage() -> getMessage
    60:60:java.lang.Throwable getThrowable() -> getThrowable
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel -> pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel:
# {"fileName":"InternalLogLevel.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel TRACE -> TRACE
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel DEBUG -> DEBUG
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel INFO -> INFO
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel WARN -> WARN
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel ERROR -> ERROR
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel[] $VALUES -> $VALUES
    21:21:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel[] values() -> values
    21:21:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:41:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger -> pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger:
# {"fileName":"InternalLogger.java","id":"sourceFile"}
    java.lang.String name() -> name
    boolean isTraceEnabled() -> isTraceEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.String,java.lang.Throwable) -> trace
    void trace(java.lang.Throwable) -> trace
    boolean isDebugEnabled() -> isDebugEnabled
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.String,java.lang.Throwable) -> debug
    void debug(java.lang.Throwable) -> debug
    boolean isInfoEnabled() -> isInfoEnabled
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.String,java.lang.Throwable) -> info
    void info(java.lang.Throwable) -> info
    boolean isWarnEnabled() -> isWarnEnabled
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Throwable) -> warn
    void warn(java.lang.Throwable) -> warn
    boolean isErrorEnabled() -> isErrorEnabled
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    void error(java.lang.Throwable) -> error
    boolean isEnabled(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel) -> isEnabled
    void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> log
    void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object) -> log
    void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> log
    void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> log
    void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.Throwable) -> log
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory -> pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory:
# {"fileName":"InternalLoggerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory defaultFactory -> defaultFactory
    36:36:void <init>() -> <init>
    42:57:pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory newDefaultFactory(java.lang.String) -> newDefaultFactory
    62:69:pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory useSlf4JLoggerFactory(java.lang.String) -> useSlf4JLoggerFactory
    75:82:pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory useLog4J2LoggerFactory(java.lang.String) -> useLog4J2LoggerFactory
    88:95:pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory useLog4JLoggerFactory(java.lang.String) -> useLog4JLoggerFactory
    100:102:pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory useJdkLoggerFactory(java.lang.String) -> useJdkLoggerFactory
    110:113:pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory getDefaultFactory() -> getDefaultFactory
    120:121:void setDefaultFactory(pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory) -> setDefaultFactory
    127:127:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class) -> getInstance
    134:134:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger getInstance(java.lang.String) -> getInstance
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.JdkLogger -> pro.gravit.repackage.io.netty.util.internal.logging.JdkLogger:
# {"fileName":"JdkLogger.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.util.logging.Logger logger -> logger
    java.lang.String SELF -> SELF
    java.lang.String SUPER -> SUPER
    57:59:void <init>(java.util.logging.Logger) -> <init>
    68:68:boolean isTraceEnabled() -> isTraceEnabled
    79:82:void trace(java.lang.String) -> trace
    100:104:void trace(java.lang.String,java.lang.Object) -> trace
    124:128:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    146:150:void trace(java.lang.String,java.lang.Object[]) -> trace
    162:165:void trace(java.lang.String,java.lang.Throwable) -> trace
    174:174:boolean isDebugEnabled() -> isDebugEnabled
    185:188:void debug(java.lang.String) -> debug
    205:209:void debug(java.lang.String,java.lang.Object) -> debug
    229:233:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    251:255:void debug(java.lang.String,java.lang.Object[]) -> debug
    267:270:void debug(java.lang.String,java.lang.Throwable) -> debug
    279:279:boolean isInfoEnabled() -> isInfoEnabled
    290:293:void info(java.lang.String) -> info
    310:314:void info(java.lang.String,java.lang.Object) -> info
    334:338:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    356:360:void info(java.lang.String,java.lang.Object[]) -> info
    373:376:void info(java.lang.String,java.lang.Throwable) -> info
    386:386:boolean isWarnEnabled() -> isWarnEnabled
    397:400:void warn(java.lang.String) -> warn
    418:422:void warn(java.lang.String,java.lang.Object) -> warn
    442:446:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    464:468:void warn(java.lang.String,java.lang.Object[]) -> warn
    481:484:void warn(java.lang.String,java.lang.Throwable) -> warn
    493:493:boolean isErrorEnabled() -> isErrorEnabled
    504:507:void error(java.lang.String) -> error
    525:529:void error(java.lang.String,java.lang.Object) -> error
    549:553:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    571:575:void error(java.lang.String,java.lang.Object[]) -> error
    588:591:void error(java.lang.String,java.lang.Throwable) -> error
    602:607:void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable) -> log
    619:646:void fillCallerData(java.lang.String,java.util.logging.LogRecord) -> fillCallerData
    609:610:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.JdkLoggerFactory -> pro.gravit.repackage.io.netty.util.internal.logging.JdkLoggerFactory:
# {"fileName":"JdkLoggerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> INSTANCE
    34:35:void <init>() -> <init>
    39:39:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    28:28:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.LocationAwareSlf4JLogger -> pro.gravit.repackage.io.netty.util.internal.logging.LocationAwareSlf4JLogger:
# {"fileName":"LocationAwareSlf4JLogger.java","id":"sourceFile"}
    java.lang.String FQCN -> FQCN
    long serialVersionUID -> serialVersionUID
    org.slf4j.spi.LocationAwareLogger logger -> logger
    37:39:void <init>(org.slf4j.spi.LocationAwareLogger) -> <init>
    42:43:void log(int,java.lang.String) -> log
    46:47:void log(int,java.lang.String,java.lang.Throwable) -> log
    50:51:void log(int,org.slf4j.helpers.FormattingTuple) -> log
    55:55:boolean isTraceEnabled() -> isTraceEnabled
    60:63:void trace(java.lang.String) -> trace
    67:70:void trace(java.lang.String,java.lang.Object) -> trace
    74:77:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    81:84:void trace(java.lang.String,java.lang.Object[]) -> trace
    88:91:void trace(java.lang.String,java.lang.Throwable) -> trace
    95:95:boolean isDebugEnabled() -> isDebugEnabled
    100:103:void debug(java.lang.String) -> debug
    107:110:void debug(java.lang.String,java.lang.Object) -> debug
    114:117:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    121:124:void debug(java.lang.String,java.lang.Object[]) -> debug
    128:131:void debug(java.lang.String,java.lang.Throwable) -> debug
    135:135:boolean isInfoEnabled() -> isInfoEnabled
    140:143:void info(java.lang.String) -> info
    147:150:void info(java.lang.String,java.lang.Object) -> info
    154:157:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    161:164:void info(java.lang.String,java.lang.Object[]) -> info
    168:171:void info(java.lang.String,java.lang.Throwable) -> info
    175:175:boolean isWarnEnabled() -> isWarnEnabled
    180:183:void warn(java.lang.String) -> warn
    187:190:void warn(java.lang.String,java.lang.Object) -> warn
    194:197:void warn(java.lang.String,java.lang.Object[]) -> warn
    201:204:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    208:211:void warn(java.lang.String,java.lang.Throwable) -> warn
    215:215:boolean isErrorEnabled() -> isErrorEnabled
    220:223:void error(java.lang.String) -> error
    227:230:void error(java.lang.String,java.lang.Object) -> error
    234:237:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    241:244:void error(java.lang.String,java.lang.Object[]) -> error
    248:251:void error(java.lang.String,java.lang.Throwable) -> error
    31:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Log4J2Logger -> pro.gravit.repackage.io.netty.util.internal.logging.Log4J2Logger:
# {"fileName":"Log4J2Logger.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    boolean VARARGS_ONLY -> VARARGS_ONLY
    56:60:void <init>(org.apache.logging.log4j.Logger) -> <init>
    64:64:java.lang.String name() -> name
    69:70:void trace(java.lang.Throwable) -> trace
    74:75:void debug(java.lang.Throwable) -> debug
    79:80:void info(java.lang.Throwable) -> info
    84:85:void warn(java.lang.Throwable) -> warn
    89:90:void error(java.lang.Throwable) -> error
    94:94:boolean isEnabled(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel) -> isEnabled
    99:100:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String) -> log
    104:105:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object) -> log
    109:110:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object,java.lang.Object) -> log
    114:115:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Object[]) -> log
    119:120:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.String,java.lang.Throwable) -> log
    124:125:void log(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel,java.lang.Throwable) -> log
    128:140:org.apache.logging.log4j.Level toLevel(pro.gravit.repackage.io.netty.util.internal.logging.InternalLogLevel) -> toLevel
    38:53:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Log4J2Logger$1 -> pro.gravit.repackage.io.netty.util.internal.logging.Log4J2Logger$1:
# {"fileName":"Log4J2Logger.java","id":"sourceFile"}
    38:38:void <init>() -> <init>
    42:49:java.lang.Boolean run() -> run
    38:38:java.lang.Object run() -> run
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Log4J2Logger$2 -> pro.gravit.repackage.io.netty.util.internal.logging.Log4J2Logger$2:
# {"fileName":"Log4J2Logger.java","id":"sourceFile"}
    int[] $SwitchMap$io$netty$util$internal$logging$InternalLogLevel -> $SwitchMap$io$netty$util$internal$logging$InternalLogLevel
    128:128:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Log4J2LoggerFactory -> pro.gravit.repackage.io.netty.util.internal.logging.Log4J2LoggerFactory:
# {"fileName":"Log4J2LoggerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> INSTANCE
    28:29:void <init>() -> <init>
    33:33:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    22:22:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Log4JLogger -> pro.gravit.repackage.io.netty.util.internal.logging.Log4JLogger:
# {"fileName":"Log4JLogger.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    org.apache.log4j.Logger logger -> logger
    java.lang.String FQCN -> FQCN
    boolean traceCapable -> traceCapable
    66:69:void <init>(org.apache.log4j.Logger) -> <init>
    73:76:boolean isTraceCapable() -> isTraceCapable
    87:90:boolean isTraceEnabled() -> isTraceEnabled
    102:103:void trace(java.lang.String) -> trace
    121:126:void trace(java.lang.String,java.lang.Object) -> trace
    146:151:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    169:174:void trace(java.lang.String,java.lang.Object[]) -> trace
    186:187:void trace(java.lang.String,java.lang.Throwable) -> trace
    196:196:boolean isDebugEnabled() -> isDebugEnabled
    207:208:void debug(java.lang.String) -> debug
    226:230:void debug(java.lang.String,java.lang.Object) -> debug
    250:254:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    271:275:void debug(java.lang.String,java.lang.Object[]) -> debug
    287:288:void debug(java.lang.String,java.lang.Throwable) -> debug
    297:297:boolean isInfoEnabled() -> isInfoEnabled
    308:309:void info(java.lang.String) -> info
    326:330:void info(java.lang.String,java.lang.Object) -> info
    350:354:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    372:376:void info(java.lang.String,java.lang.Object[]) -> info
    389:390:void info(java.lang.String,java.lang.Throwable) -> info
    399:399:boolean isWarnEnabled() -> isWarnEnabled
    410:411:void warn(java.lang.String) -> warn
    429:433:void warn(java.lang.String,java.lang.Object) -> warn
    453:457:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    475:479:void warn(java.lang.String,java.lang.Object[]) -> warn
    492:493:void warn(java.lang.String,java.lang.Throwable) -> warn
    502:502:boolean isErrorEnabled() -> isErrorEnabled
    513:514:void error(java.lang.String) -> error
    532:536:void error(java.lang.String,java.lang.Object) -> error
    556:560:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    578:582:void error(java.lang.String,java.lang.Object[]) -> error
    595:596:void error(java.lang.String,java.lang.Throwable) -> error
    59:59:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Log4JLoggerFactory -> pro.gravit.repackage.io.netty.util.internal.logging.Log4JLoggerFactory:
# {"fileName":"Log4JLoggerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> INSTANCE
    33:34:void <init>() -> <init>
    38:38:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    27:27:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.MessageFormatter -> pro.gravit.repackage.io.netty.util.internal.logging.MessageFormatter:
# {"fileName":"MessageFormatter.java","id":"sourceFile"}
    java.lang.String DELIM_STR -> DELIM_STR
    char ESCAPE_CHAR -> ESCAPE_CHAR
    133:133:pro.gravit.repackage.io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object) -> format
    157:157:pro.gravit.repackage.io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object) -> format
    172:219:pro.gravit.repackage.io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[]) -> arrayFormat
    225:272:void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Set) -> deeplyAppendParameter
    276:285:void safeObjectAppend(java.lang.StringBuilder,java.lang.Object) -> safeObjectAppend
    288:305:void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Set) -> objectArrayAppend
    308:316:void booleanArrayAppend(java.lang.StringBuilder,boolean[]) -> booleanArrayAppend
    319:327:void byteArrayAppend(java.lang.StringBuilder,byte[]) -> byteArrayAppend
    330:338:void charArrayAppend(java.lang.StringBuilder,char[]) -> charArrayAppend
    341:349:void shortArrayAppend(java.lang.StringBuilder,short[]) -> shortArrayAppend
    352:360:void intArrayAppend(java.lang.StringBuilder,int[]) -> intArrayAppend
    363:371:void longArrayAppend(java.lang.StringBuilder,long[]) -> longArrayAppend
    374:382:void floatArrayAppend(java.lang.StringBuilder,float[]) -> floatArrayAppend
    385:393:void doubleArrayAppend(java.lang.StringBuilder,double[]) -> doubleArrayAppend
    395:396:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Slf4JLogger -> pro.gravit.repackage.io.netty.util.internal.logging.Slf4JLogger:
# {"fileName":"Slf4JLogger.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    org.slf4j.Logger logger -> logger
    30:32:void <init>(org.slf4j.Logger) -> <init>
    36:36:boolean isTraceEnabled() -> isTraceEnabled
    41:42:void trace(java.lang.String) -> trace
    46:47:void trace(java.lang.String,java.lang.Object) -> trace
    51:52:void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    56:57:void trace(java.lang.String,java.lang.Object[]) -> trace
    61:62:void trace(java.lang.String,java.lang.Throwable) -> trace
    66:66:boolean isDebugEnabled() -> isDebugEnabled
    71:72:void debug(java.lang.String) -> debug
    76:77:void debug(java.lang.String,java.lang.Object) -> debug
    81:82:void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    86:87:void debug(java.lang.String,java.lang.Object[]) -> debug
    91:92:void debug(java.lang.String,java.lang.Throwable) -> debug
    96:96:boolean isInfoEnabled() -> isInfoEnabled
    101:102:void info(java.lang.String) -> info
    106:107:void info(java.lang.String,java.lang.Object) -> info
    111:112:void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    116:117:void info(java.lang.String,java.lang.Object[]) -> info
    121:122:void info(java.lang.String,java.lang.Throwable) -> info
    126:126:boolean isWarnEnabled() -> isWarnEnabled
    131:132:void warn(java.lang.String) -> warn
    136:137:void warn(java.lang.String,java.lang.Object) -> warn
    141:142:void warn(java.lang.String,java.lang.Object[]) -> warn
    146:147:void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    151:152:void warn(java.lang.String,java.lang.Throwable) -> warn
    156:156:boolean isErrorEnabled() -> isErrorEnabled
    161:162:void error(java.lang.String) -> error
    166:167:void error(java.lang.String,java.lang.Object) -> error
    171:172:void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    176:177:void error(java.lang.String,java.lang.Object[]) -> error
    181:182:void error(java.lang.String,java.lang.Throwable) -> error
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Slf4JLoggerFactory -> pro.gravit.repackage.io.netty.util.internal.logging.Slf4JLoggerFactory:
# {"fileName":"Slf4JLoggerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory INSTANCE -> INSTANCE
    boolean $assertionsDisabled -> $assertionsDisabled
    37:38:void <init>() -> <init>
    40:45:void <init>(boolean) -> <init>
    49:49:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger newInstance(java.lang.String) -> newInstance
    54:54:pro.gravit.repackage.io.netty.util.internal.logging.InternalLogger wrapLogger(org.slf4j.Logger) -> wrapLogger
    59:59:pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory getInstanceWithNopCheck() -> getInstanceWithNopCheck
    28:31:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.logging.Slf4JLoggerFactory$NopInstanceHolder -> pro.gravit.repackage.io.netty.util.internal.logging.Slf4JLoggerFactory$NopInstanceHolder:
# {"fileName":"Slf4JLoggerFactory.java","id":"sourceFile"}
    pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory INSTANCE_WITH_NOP_CHECK -> INSTANCE_WITH_NOP_CHECK
    62:62:void <init>() -> <init>
    62:62:pro.gravit.repackage.io.netty.util.internal.logging.InternalLoggerFactory access$000() -> access$000
    63:63:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:
# {"fileName":"BaseLinkedQueue.java","id":"sourceFile"}
    145:145:void <init>() -> <init>
    151:151:java.util.Iterator iterator() -> iterator
    157:157:java.lang.String toString() -> toString
    162:162:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode newNode() -> newNode
    167:167:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode newNode(java.lang.Object) -> newNode
    185:203:int size() -> size
    219:221:boolean isEmpty() -> isEmpty
    227:235:java.lang.Object getSingleConsumerNodeValue(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode) -> getSingleConsumerNodeValue
    262:274:java.lang.Object poll() -> poll
    298:310:java.lang.Object peek() -> peek
    316:320:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode spinWaitForNextNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode) -> spinWaitForNextNode
    326:332:java.lang.Object relaxedPoll() -> relaxedPoll
    338:343:java.lang.Object relaxedPeek() -> relaxedPeek
    349:349:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    355:376:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    382:382:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    388:389:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    394:394:int capacity() -> capacity
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef:
# {"fileName":"BaseLinkedQueue.java","id":"sourceFile"}
    long C_NODE_OFFSET -> C_NODE_OFFSET
    pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode consumerNode -> consumerNode
    98:98:void <init>() -> <init>
    106:107:void spConsumerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode) -> spConsumerNode
    112:112:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lvConsumerNode() -> lvConsumerNode
    117:117:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lpConsumerNode() -> lpConsumerNode
    100:100:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad0 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad0:
# {"fileName":"BaseLinkedQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    23:23:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad1 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad1:
# {"fileName":"BaseLinkedQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    77:77:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad2 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueuePad2:
# {"fileName":"BaseLinkedQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    121:121:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef:
# {"fileName":"BaseLinkedQueue.java","id":"sourceFile"}
    long P_NODE_OFFSET -> P_NODE_OFFSET
    pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode producerNode -> producerNode
    45:45:void <init>() -> <init>
    53:54:void spProducerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode) -> spProducerNode
    58:59:void soProducerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode) -> soProducerNode
    63:63:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lvProducerNode() -> lvProducerNode
    68:68:boolean casProducerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode) -> casProducerNode
    73:73:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lpProducerNode() -> lpProducerNode
    47:47:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:
# {"fileName":"BaseMpscLinkedArrayQueue.java","id":"sourceFile"}
    java.lang.Object JUMP -> JUMP
    java.lang.Object BUFFER_CONSUMED -> BUFFER_CONSUMED
    int CONTINUE_TO_P_INDEX_CAS -> CONTINUE_TO_P_INDEX_CAS
    int RETRY -> RETRY
    int QUEUE_FULL -> QUEUE_FULL
    int QUEUE_RESIZE -> QUEUE_RESIZE
    boolean $assertionsDisabled -> $assertionsDisabled
    190:203:void <init>(int) -> <init>
    216:237:int size() -> size
    248:248:boolean isEmpty() -> isEmpty
    254:254:java.lang.String toString() -> toString
    260:311:boolean offer(java.lang.Object) -> offer
    323:356:java.lang.Object poll() -> poll
    368:388:java.lang.Object peek() -> peek
    396:427:int offerSlowPath(long,long,long) -> offerSlowPath
    long availableInQueue(long,long) -> availableInQueue
    439:444:java.lang.Object[] nextBuffer(java.lang.Object[],long) -> nextBuffer
    449:449:long nextArrayOffset(long) -> nextArrayOffset
    454:462:java.lang.Object newBufferPoll(java.lang.Object[],long) -> newBufferPoll
    467:473:java.lang.Object newBufferPeek(java.lang.Object[],long) -> newBufferPeek
    479:479:long currentProducerIndex() -> currentProducerIndex
    485:485:long currentConsumerIndex() -> currentConsumerIndex
    int capacity() -> capacity
    494:494:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    501:518:java.lang.Object relaxedPoll() -> relaxedPoll
    525:535:java.lang.Object relaxedPeek() -> relaxedPeek
    541:553:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    559:621:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    627:628:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    632:632:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    638:638:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    644:645:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    659:659:java.util.Iterator iterator() -> iterator
    756:796:void resize(long,java.lang.Object[],long,java.lang.Object,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> resize
    int getNextBufferSize(java.lang.Object[]) -> getNextBufferSize
    long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
    173:173:java.lang.Object access$000() -> access$000
    173:173:java.lang.Object access$100() -> access$100
    173:178:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue$WeakIterator -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue$WeakIterator:
# {"fileName":"BaseMpscLinkedArrayQueue.java","id":"sourceFile"}
    long pIndex -> pIndex
    long nextIndex -> nextIndex
    java.lang.Object nextElement -> nextElement
    java.lang.Object[] currentBuffer -> currentBuffer
    int mask -> mask
    671:676:void <init>(java.lang.Object[],long,long) -> <init>
    680:680:void remove() -> remove
    686:686:boolean hasNext() -> hasNext
    692:698:java.lang.Object next() -> next
    703:705:void setBuffer(java.lang.Object[]) -> setBuffer
    709:750:java.lang.Object getNext() -> getNext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields:
# {"fileName":"BaseMpscLinkedArrayQueue.java","id":"sourceFile"}
    long P_LIMIT_OFFSET -> P_LIMIT_OFFSET
    long producerLimit -> producerLimit
    long producerMask -> producerMask
    java.lang.Object[] producerBuffer -> producerBuffer
    143:143:void <init>() -> <init>
    153:153:long lvProducerLimit() -> lvProducerLimit
    158:158:boolean casProducerLimit(long,long) -> casProducerLimit
    163:164:void soProducerLimit(long) -> soProducerLimit
    145:145:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields:
# {"fileName":"BaseMpscLinkedArrayQueue.java","id":"sourceFile"}
    long C_INDEX_OFFSET -> C_INDEX_OFFSET
    long consumerIndex -> consumerIndex
    long consumerMask -> consumerMask
    java.lang.Object[] consumerBuffer -> consumerBuffer
    97:97:void <init>() -> <init>
    108:108:long lvConsumerIndex() -> lvConsumerIndex
    113:113:long lpConsumerIndex() -> lpConsumerIndex
    118:119:void soConsumerIndex(long) -> soConsumerIndex
    99:99:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad1 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad1:
# {"fileName":"BaseMpscLinkedArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    32:32:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad2 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad2:
# {"fileName":"BaseMpscLinkedArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    76:76:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad3 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueuePad3:
# {"fileName":"BaseMpscLinkedArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    122:122:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields:
# {"fileName":"BaseMpscLinkedArrayQueue.java","id":"sourceFile"}
    long P_INDEX_OFFSET -> P_INDEX_OFFSET
    long producerIndex -> producerIndex
    53:53:void <init>() -> <init>
    62:62:long lvProducerIndex() -> lvProducerIndex
    67:68:void soProducerIndex(long) -> soProducerIndex
    72:72:boolean casProducerIndex(long,long) -> casProducerIndex
    55:55:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:
# {"fileName":"ConcurrentCircularArrayQueue.java","id":"sourceFile"}
    long mask -> mask
    java.lang.Object[] buffer -> buffer
    56:60:void <init>(int) -> <init>
    65:65:int size() -> size
    71:71:boolean isEmpty() -> isEmpty
    77:77:java.lang.String toString() -> toString
    83:87:void clear() -> clear
    92:92:int capacity() -> capacity
    98:98:long currentProducerIndex() -> currentProducerIndex
    104:104:long currentConsumerIndex() -> currentConsumerIndex
    119:122:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue$WeakIterator -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue$WeakIterator:
# {"fileName":"ConcurrentCircularArrayQueue.java","id":"sourceFile"}
    long pIndex -> pIndex
    long mask -> mask
    java.lang.Object[] buffer -> buffer
    long nextIndex -> nextIndex
    java.lang.Object nextElement -> nextElement
    132:138:void <init>(long,long,long,java.lang.Object[]) -> <init>
    142:142:void remove() -> remove
    147:147:boolean hasNext() -> hasNext
    152:156:java.lang.Object next() -> next
    160:167:java.lang.Object getNext() -> getNext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueueL0Pad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueueL0Pad:
# {"fileName":"ConcurrentCircularArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    25:25:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil:
# {"fileName":"IndexedQueueSizeUtil.java","id":"sourceFile"}
    35:35:void <init>() -> <init>
    45:76:int size(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue) -> size
    86:86:boolean isEmpty(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue) -> isEmpty
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.IndexedQueueSizeUtil$IndexedQueue:
# {"fileName":"IndexedQueueSizeUtil.java","id":"sourceFile"}
    long lvConsumerIndex() -> lvConsumerIndex
    long lvProducerIndex() -> lvProducerIndex
    int capacity() -> capacity
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedArrayQueueUtil -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedArrayQueueUtil:
# {"fileName":"LinkedArrayQueueUtil.java","id":"sourceFile"}
    12:12:void <init>() -> <init>
    16:16:int length(java.lang.Object[]) -> length
    26:26:long modifiedCalcCircularRefElementOffset(long,long) -> modifiedCalcCircularRefElementOffset
    31:31:long nextArrayOffset(java.lang.Object[]) -> nextArrayOffset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode:
# {"fileName":"LinkedQueueNode.java","id":"sourceFile"}
    long NEXT_OFFSET -> NEXT_OFFSET
    java.lang.Object value -> value
    pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode next -> next
    28:29:void <init>() -> <init>
    32:34:void <init>(java.lang.Object) -> <init>
    43:45:java.lang.Object getAndNullValue() -> getAndNullValue
    50:50:java.lang.Object lpValue() -> lpValue
    55:56:void spValue(java.lang.Object) -> spValue
    60:61:void soNext(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode) -> soNext
    65:66:void spNext(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode) -> spNext
    70:70:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode lvNext() -> lvNext
    21:21:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue:
# {"fileName":"MessagePassingQueue.java","id":"sourceFile"}
    int UNBOUNDED_CAPACITY -> UNBOUNDED_CAPACITY
    boolean offer(java.lang.Object) -> offer
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    int size() -> size
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    int capacity() -> capacity
    boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    java.lang.Object relaxedPoll() -> relaxedPoll
    java.lang.Object relaxedPeek() -> relaxedPeek
    int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer:
# {"fileName":"MessagePassingQueue.java","id":"sourceFile"}
    void accept(java.lang.Object) -> accept
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition:
# {"fileName":"MessagePassingQueue.java","id":"sourceFile"}
    boolean keepRunning() -> keepRunning
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier:
# {"fileName":"MessagePassingQueue.java","id":"sourceFile"}
    java.lang.Object get() -> get
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy:
# {"fileName":"MessagePassingQueue.java","id":"sourceFile"}
    int idle(int) -> idle
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil:
# {"fileName":"MessagePassingQueueUtil.java","id":"sourceFile"}
    25:25:void <init>() -> <init>
    29:41:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    46:55:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    60:79:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    83:98:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    102:102:int fillBounded(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fillBounded
    107:118:int fillInBatchesToLimit(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int,int) -> fillInBatchesToLimit
    123:123:int fillUnbounded(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fillUnbounded
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:
# {"fileName":"MpscArrayQueue.java","id":"sourceFile"}
    212:213:void <init>(int) -> <init>
    225:267:boolean offerIfBelowThreshold(java.lang.Object,int) -> offerIfBelowThreshold
    283:321:boolean offer(java.lang.Object) -> offer
    332:364:int failFastOffer(java.lang.Object) -> failFastOffer
    379:409:java.lang.Object poll() -> poll
    425:450:java.lang.Object peek() -> peek
    456:456:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    462:475:java.lang.Object relaxedPoll() -> relaxedPoll
    481:484:java.lang.Object relaxedPeek() -> relaxedPeek
    490:514:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    520:562:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    568:568:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    574:574:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    580:581:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    586:587:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    207:207:java.util.Iterator iterator() -> iterator
    207:207:long currentConsumerIndex() -> currentConsumerIndex
    207:207:long currentProducerIndex() -> currentProducerIndex
    207:207:int capacity() -> capacity
    207:207:void clear() -> clear
    207:207:java.lang.String toString() -> toString
    207:207:boolean isEmpty() -> isEmpty
    207:207:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField:
# {"fileName":"MpscArrayQueue.java","id":"sourceFile"}
    long C_INDEX_OFFSET -> C_INDEX_OFFSET
    long consumerIndex -> consumerIndex
    153:154:void <init>(int) -> <init>
    159:159:long lvConsumerIndex() -> lvConsumerIndex
    164:164:long lpConsumerIndex() -> lpConsumerIndex
    169:170:void soConsumerIndex(long) -> soConsumerIndex
    147:147:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL1Pad:
# {"fileName":"MpscArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    41:42:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL2Pad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL2Pad:
# {"fileName":"MpscArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    140:141:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL3Pad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueL3Pad:
# {"fileName":"MpscArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    194:195:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueMidPad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueMidPad:
# {"fileName":"MpscArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    90:91:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField:
# {"fileName":"MpscArrayQueue.java","id":"sourceFile"}
    long P_INDEX_OFFSET -> P_INDEX_OFFSET
    long producerIndex -> producerIndex
    54:55:void <init>(int) -> <init>
    60:60:long lvProducerIndex() -> lvProducerIndex
    65:65:boolean casProducerIndex(long,long) -> casProducerIndex
    48:48:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField:
# {"fileName":"MpscArrayQueue.java","id":"sourceFile"}
    long P_LIMIT_OFFSET -> P_LIMIT_OFFSET
    long producerLimit -> producerLimit
    104:106:void <init>(int) -> <init>
    110:110:long lvProducerLimit() -> lvProducerLimit
    115:116:void soProducerLimit(long) -> soProducerLimit
    97:97:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue:
# {"fileName":"MpscChunkedArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    64:65:void <init>(int) -> <init>
    76:77:void <init>(int,int) -> <init>
    82:82:long availableInQueue(long,long) -> availableInQueue
    88:88:int capacity() -> capacity
    94:94:int getNextBufferSize(java.lang.Object[]) -> getNextBufferSize
    100:100:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
    43:43:java.util.Iterator iterator() -> iterator
    43:43:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    43:43:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    43:43:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    43:43:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    43:43:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    43:43:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    43:43:java.lang.Object relaxedPeek() -> relaxedPeek
    43:43:java.lang.Object relaxedPoll() -> relaxedPoll
    43:43:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    43:43:long currentConsumerIndex() -> currentConsumerIndex
    43:43:long currentProducerIndex() -> currentProducerIndex
    43:43:java.lang.Object peek() -> peek
    43:43:java.lang.Object poll() -> poll
    43:43:boolean offer(java.lang.Object) -> offer
    43:43:java.lang.String toString() -> toString
    43:43:boolean isEmpty() -> isEmpty
    43:43:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueColdProducerFields -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueueColdProducerFields:
# {"fileName":"MpscChunkedArrayQueue.java","id":"sourceFile"}
    long maxQueueCapacity -> maxQueueCapacity
    30:35:void <init>(int,int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MpscUnboundedArrayQueue:
# {"fileName":"MpscUnboundedArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    44:45:void <init>(int) -> <init>
    51:51:long availableInQueue(long,long) -> availableInQueue
    57:57:int capacity() -> capacity
    63:63:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    69:69:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    75:75:int getNextBufferSize(java.lang.Object[]) -> getNextBufferSize
    81:81:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
    23:23:java.util.Iterator iterator() -> iterator
    23:23:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    23:23:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    23:23:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    23:23:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    23:23:java.lang.Object relaxedPeek() -> relaxedPeek
    23:23:java.lang.Object relaxedPoll() -> relaxedPoll
    23:23:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    23:23:long currentConsumerIndex() -> currentConsumerIndex
    23:23:long currentProducerIndex() -> currentProducerIndex
    23:23:java.lang.Object peek() -> peek
    23:23:java.lang.Object poll() -> poll
    23:23:boolean offer(java.lang.Object) -> offer
    23:23:java.lang.String toString() -> toString
    23:23:boolean isEmpty() -> isEmpty
    23:23:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.QueueProgressIndicators -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.QueueProgressIndicators:
# {"fileName":"QueueProgressIndicators.java","id":"sourceFile"}
    long currentProducerIndex() -> currentProducerIndex
    long currentConsumerIndex() -> currentConsumerIndex
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:
# {"fileName":"SpscLinkedQueue.java","id":"sourceFile"}
    35:40:void <init>() -> <init>
    60:71:boolean offer(java.lang.Object) -> offer
    77:77:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    83:103:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    109:110:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    31:31:int capacity() -> capacity
    31:31:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    31:31:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    31:31:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    31:31:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    31:31:java.lang.Object relaxedPeek() -> relaxedPeek
    31:31:java.lang.Object relaxedPoll() -> relaxedPoll
    31:31:java.lang.Object peek() -> peek
    31:31:java.lang.Object poll() -> poll
    31:31:boolean isEmpty() -> isEmpty
    31:31:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.SupportsIterator -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.SupportsIterator:
# {"fileName":"SupportsIterator.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicQueueUtil -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicQueueUtil:
# {"fileName":"AtomicQueueUtil.java","id":"sourceFile"}
    6:6:void <init>() -> <init>
    10:10:java.lang.Object lvRefElement(java.util.concurrent.atomic.AtomicReferenceArray,int) -> lvRefElement
    15:15:java.lang.Object lpRefElement(java.util.concurrent.atomic.AtomicReferenceArray,int) -> lpRefElement
    20:21:void spRefElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> spRefElement
    25:26:void soRefElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> soRefElement
    30:31:void svRefElement(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object) -> svRefElement
    35:35:int calcRefElementOffset(long) -> calcRefElementOffset
    40:40:int calcCircularRefElementOffset(long,long) -> calcCircularRefElementOffset
    45:45:java.util.concurrent.atomic.AtomicReferenceArray allocateRefArray(int) -> allocateRefArray
    50:51:void spLongElement(java.util.concurrent.atomic.AtomicLongArray,int,long) -> spLongElement
    55:56:void soLongElement(java.util.concurrent.atomic.AtomicLongArray,int,long) -> soLongElement
    60:60:long lpLongElement(java.util.concurrent.atomic.AtomicLongArray,int) -> lpLongElement
    65:65:long lvLongElement(java.util.concurrent.atomic.AtomicLongArray,int) -> lvLongElement
    70:70:int calcLongElementOffset(long) -> calcLongElementOffset
    75:75:int calcCircularLongElementOffset(long,int) -> calcCircularLongElementOffset
    80:80:java.util.concurrent.atomic.AtomicLongArray allocateLongArray(int) -> allocateLongArray
    85:85:int length(java.util.concurrent.atomic.AtomicReferenceArray) -> length
    93:93:int modifiedCalcCircularRefElementOffset(long,long) -> modifiedCalcCircularRefElementOffset
    98:98:int nextArrayOffset(java.util.concurrent.atomic.AtomicReferenceArray) -> nextArrayOffset
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue:
# {"fileName":"AtomicReferenceArrayQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicReferenceArray buffer -> buffer
    int mask -> mask
    36:40:void <init>(int) -> <init>
    45:45:java.lang.String toString() -> toString
    51:55:void clear() -> clear
    60:60:int capacity() -> capacity
    70:70:int size() -> size
    76:76:boolean isEmpty() -> isEmpty
    82:82:long currentProducerIndex() -> currentProducerIndex
    88:88:long currentConsumerIndex() -> currentConsumerIndex
    103:106:java.util.Iterator iterator() -> iterator
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue$WeakIterator -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue$WeakIterator:
# {"fileName":"AtomicReferenceArrayQueue.java","id":"sourceFile"}
    long pIndex -> pIndex
    int mask -> mask
    java.util.concurrent.atomic.AtomicReferenceArray buffer -> buffer
    long nextIndex -> nextIndex
    java.lang.Object nextElement -> nextElement
    117:123:void <init>(long,long,int,java.util.concurrent.atomic.AtomicReferenceArray) -> <init>
    127:127:void remove() -> remove
    132:132:boolean hasNext() -> hasNext
    137:141:java.lang.Object next() -> next
    145:154:java.lang.Object getNext() -> getNext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:
# {"fileName":"BaseLinkedAtomicQueue.java","id":"sourceFile"}
    257:257:void <init>() -> <init>
    261:261:java.util.Iterator iterator() -> iterator
    266:266:java.lang.String toString() -> toString
    270:270:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode newNode() -> newNode
    274:274:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode newNode(java.lang.Object) -> newNode
    291:308:int size() -> size
    323:325:boolean isEmpty() -> isEmpty
    330:337:java.lang.Object getSingleConsumerNodeValue(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> getSingleConsumerNodeValue
    363:372:java.lang.Object poll() -> poll
    395:404:java.lang.Object peek() -> peek
    409:412:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode spinWaitForNextNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> spinWaitForNextNode
    417:422:java.lang.Object relaxedPoll() -> relaxedPoll
    427:431:java.lang.Object relaxedPeek() -> relaxedPeek
    436:436:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    441:458:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    463:463:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    468:469:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    473:473:int capacity() -> capacity
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueueConsumerNodeRef -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueueConsumerNodeRef:
# {"fileName":"BaseLinkedAtomicQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater C_NODE_UPDATER -> C_NODE_UPDATER
    pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode consumerNode -> consumerNode
    175:175:void <init>() -> <init>
    182:183:void spConsumerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> spConsumerNode
    187:187:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvConsumerNode() -> lvConsumerNode
    191:191:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lpConsumerNode() -> lpConsumerNode
    177:177:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueuePad0 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueuePad0:
# {"fileName":"BaseLinkedAtomicQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    33:33:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueuePad1 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueuePad1:
# {"fileName":"BaseLinkedAtomicQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    120:120:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueuePad2 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueuePad2:
# {"fileName":"BaseLinkedAtomicQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    199:199:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueueProducerNodeRef -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueueProducerNodeRef:
# {"fileName":"BaseLinkedAtomicQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater P_NODE_UPDATER -> P_NODE_UPDATER
    pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode producerNode -> producerNode
    85:85:void <init>() -> <init>
    92:93:void spProducerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> spProducerNode
    96:97:void soProducerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> soProducerNode
    100:100:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvProducerNode() -> lvProducerNode
    104:104:boolean casProducerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> casProducerNode
    108:108:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lpProducerNode() -> lpProducerNode
    112:112:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode xchgProducerNode(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> xchgProducerNode
    87:87:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:
# {"fileName":"BaseMpscLinkedAtomicArrayQueue.java","id":"sourceFile"}
    java.lang.Object JUMP -> JUMP
    java.lang.Object BUFFER_CONSUMED -> BUFFER_CONSUMED
    int CONTINUE_TO_P_INDEX_CAS -> CONTINUE_TO_P_INDEX_CAS
    int RETRY -> RETRY
    int QUEUE_FULL -> QUEUE_FULL
    int QUEUE_RESIZE -> QUEUE_RESIZE
    boolean $assertionsDisabled -> $assertionsDisabled
    304:317:void <init>(int) -> <init>
    328:343:int size() -> size
    350:350:boolean isEmpty() -> isEmpty
    355:355:java.lang.String toString() -> toString
    360:400:boolean offer(java.lang.Object) -> offer
    411:434:java.lang.Object poll() -> poll
    445:459:java.lang.Object peek() -> peek
    466:486:int offerSlowPath(long,long,long) -> offerSlowPath
    long availableInQueue(long,long) -> availableInQueue
    497:502:java.util.concurrent.atomic.AtomicReferenceArray nextBuffer(java.util.concurrent.atomic.AtomicReferenceArray,long) -> nextBuffer
    506:506:int nextArrayOffset(long) -> nextArrayOffset
    510:517:java.lang.Object newBufferPoll(java.util.concurrent.atomic.AtomicReferenceArray,long) -> newBufferPoll
    521:526:java.lang.Object newBufferPeek(java.util.concurrent.atomic.AtomicReferenceArray,long) -> newBufferPeek
    531:531:long currentProducerIndex() -> currentProducerIndex
    536:536:long currentConsumerIndex() -> currentConsumerIndex
    int capacity() -> capacity
    544:544:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    550:564:java.lang.Object relaxedPoll() -> relaxedPoll
    570:578:java.lang.Object relaxedPeek() -> relaxedPeek
    584:593:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    598:649:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    654:655:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    659:659:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    664:664:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    669:670:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    684:684:java.util.Iterator iterator() -> iterator
    769:800:void resize(long,java.util.concurrent.atomic.AtomicReferenceArray,long,java.lang.Object,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> resize
    int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> getNextBufferSize
    long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
    285:285:java.lang.Object access$000() -> access$000
    285:285:java.lang.Object access$100() -> access$100
    285:290:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue$WeakIterator -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue$WeakIterator:
# {"fileName":"BaseMpscLinkedAtomicArrayQueue.java","id":"sourceFile"}
    long pIndex -> pIndex
    long nextIndex -> nextIndex
    java.lang.Object nextElement -> nextElement
    java.util.concurrent.atomic.AtomicReferenceArray currentBuffer -> currentBuffer
    int mask -> mask
    703:708:void <init>(java.util.concurrent.atomic.AtomicReferenceArray,long,long) -> <init>
    712:712:void remove() -> remove
    717:717:boolean hasNext() -> hasNext
    722:727:java.lang.Object next() -> next
    731:733:void setBuffer(java.util.concurrent.atomic.AtomicReferenceArray) -> setBuffer
    736:764:java.lang.Object getNext() -> getNext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueColdProducerFields:
# {"fileName":"BaseMpscLinkedAtomicArrayQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_LIMIT_UPDATER -> P_LIMIT_UPDATER
    long producerLimit -> producerLimit
    long producerMask -> producerMask
    java.util.concurrent.atomic.AtomicReferenceArray producerBuffer -> producerBuffer
    254:254:void <init>() -> <init>
    265:265:long lvProducerLimit() -> lvProducerLimit
    269:269:boolean casProducerLimit(long,long) -> casProducerLimit
    273:274:void soProducerLimit(long) -> soProducerLimit
    256:256:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueConsumerFields -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueConsumerFields:
# {"fileName":"BaseMpscLinkedAtomicArrayQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicLongFieldUpdater C_INDEX_UPDATER -> C_INDEX_UPDATER
    long consumerIndex -> consumerIndex
    long consumerMask -> consumerMask
    java.util.concurrent.atomic.AtomicReferenceArray consumerBuffer -> consumerBuffer
    171:171:void <init>() -> <init>
    183:183:long lvConsumerIndex() -> lvConsumerIndex
    187:187:long lpConsumerIndex() -> lpConsumerIndex
    191:192:void soConsumerIndex(long) -> soConsumerIndex
    173:173:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad1 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad1:
# {"fileName":"BaseMpscLinkedAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    37:37:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad2 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad2:
# {"fileName":"BaseMpscLinkedAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    116:116:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad3 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueuePad3:
# {"fileName":"BaseMpscLinkedAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    199:199:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueueProducerFields:
# {"fileName":"BaseMpscLinkedAtomicArrayQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER -> P_INDEX_UPDATER
    long producerIndex -> producerIndex
    92:92:void <init>() -> <init>
    100:100:long lvProducerIndex() -> lvProducerIndex
    104:105:void soProducerIndex(long) -> soProducerIndex
    108:108:boolean casProducerIndex(long,long) -> casProducerIndex
    94:94:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode:
# {"fileName":"LinkedQueueAtomicNode.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    25:26:void <init>() -> <init>
    29:31:void <init>(java.lang.Object) -> <init>
    40:42:java.lang.Object getAndNullValue() -> getAndNullValue
    47:47:java.lang.Object lpValue() -> lpValue
    52:53:void spValue(java.lang.Object) -> spValue
    57:58:void soNext(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> soNext
    62:63:void spNext(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode) -> spNext
    67:67:pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvNext() -> lvNext
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:
# {"fileName":"MpscAtomicArrayQueue.java","id":"sourceFile"}
    344:345:void <init>(int) -> <init>
    356:389:boolean offerIfBelowThreshold(java.lang.Object,int) -> offerIfBelowThreshold
    404:434:boolean offer(java.lang.Object) -> offer
    444:471:int failFastOffer(java.lang.Object) -> failFastOffer
    485:507:java.lang.Object poll() -> poll
    522:540:java.lang.Object peek() -> peek
    545:545:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    550:560:java.lang.Object relaxedPoll() -> relaxedPoll
    565:568:java.lang.Object relaxedPeek() -> relaxedPeek
    573:594:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    599:634:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    639:639:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    644:644:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    649:650:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    654:655:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    662:662:int weakOffer(java.lang.Object) -> weakOffer
    341:341:void clear() -> clear
    341:341:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueConsumerIndexField -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueConsumerIndexField:
# {"fileName":"MpscAtomicArrayQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicLongFieldUpdater C_INDEX_UPDATER -> C_INDEX_UPDATER
    long consumerIndex -> consumerIndex
    253:254:void <init>(int) -> <init>
    258:258:long lvConsumerIndex() -> lvConsumerIndex
    262:262:long lpConsumerIndex() -> lpConsumerIndex
    266:267:void soConsumerIndex(long) -> soConsumerIndex
    248:248:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL1Pad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL1Pad:
# {"fileName":"MpscAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    74:75:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL2Pad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL2Pad:
# {"fileName":"MpscAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    238:239:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL3Pad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueL3Pad:
# {"fileName":"MpscAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    325:326:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueMidPad -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueMidPad:
# {"fileName":"MpscAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    157:158:void <init>(int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerIndexField -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerIndexField:
# {"fileName":"MpscAtomicArrayQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_INDEX_UPDATER -> P_INDEX_UPDATER
    long producerIndex -> producerIndex
    89:90:void <init>(int) -> <init>
    94:94:long lvProducerIndex() -> lvProducerIndex
    98:98:boolean casProducerIndex(long,long) -> casProducerIndex
    84:84:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerLimitField -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueueProducerLimitField:
# {"fileName":"MpscAtomicArrayQueue.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicLongFieldUpdater P_LIMIT_UPDATER -> P_LIMIT_UPDATER
    long producerLimit -> producerLimit
    173:175:void <init>(int) -> <init>
    178:178:long lvProducerLimit() -> lvProducerLimit
    182:183:void soProducerLimit(long) -> soProducerLimit
    167:167:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueue:
# {"fileName":"MpscChunkedAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    106:107:void <init>(int) -> <init>
    117:118:void <init>(int,int) -> <init>
    122:122:long availableInQueue(long,long) -> availableInQueue
    127:127:int capacity() -> capacity
    132:132:int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> getNextBufferSize
    137:137:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
    55:55:java.util.Iterator iterator() -> iterator
    55:55:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    55:55:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    55:55:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    55:55:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    55:55:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    55:55:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    55:55:java.lang.Object relaxedPeek() -> relaxedPeek
    55:55:java.lang.Object relaxedPoll() -> relaxedPoll
    55:55:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    55:55:long currentConsumerIndex() -> currentConsumerIndex
    55:55:long currentProducerIndex() -> currentProducerIndex
    55:55:java.lang.Object peek() -> peek
    55:55:java.lang.Object poll() -> poll
    55:55:boolean offer(java.lang.Object) -> offer
    55:55:java.lang.String toString() -> toString
    55:55:boolean isEmpty() -> isEmpty
    55:55:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueueColdProducerFields -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscChunkedAtomicArrayQueueColdProducerFields:
# {"fileName":"MpscChunkedAtomicArrayQueue.java","id":"sourceFile"}
    long maxQueueCapacity -> maxQueueCapacity
    40:44:void <init>(int,int) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscUnboundedAtomicArrayQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscUnboundedAtomicArrayQueue:
# {"fileName":"MpscUnboundedAtomicArrayQueue.java","id":"sourceFile"}
    byte b000 -> b000
    byte b001 -> b001
    byte b002 -> b002
    byte b003 -> b003
    byte b004 -> b004
    byte b005 -> b005
    byte b006 -> b006
    byte b007 -> b007
    byte b010 -> b010
    byte b011 -> b011
    byte b012 -> b012
    byte b013 -> b013
    byte b014 -> b014
    byte b015 -> b015
    byte b016 -> b016
    byte b017 -> b017
    byte b020 -> b020
    byte b021 -> b021
    byte b022 -> b022
    byte b023 -> b023
    byte b024 -> b024
    byte b025 -> b025
    byte b026 -> b026
    byte b027 -> b027
    byte b030 -> b030
    byte b031 -> b031
    byte b032 -> b032
    byte b033 -> b033
    byte b034 -> b034
    byte b035 -> b035
    byte b036 -> b036
    byte b037 -> b037
    byte b040 -> b040
    byte b041 -> b041
    byte b042 -> b042
    byte b043 -> b043
    byte b044 -> b044
    byte b045 -> b045
    byte b046 -> b046
    byte b047 -> b047
    byte b050 -> b050
    byte b051 -> b051
    byte b052 -> b052
    byte b053 -> b053
    byte b054 -> b054
    byte b055 -> b055
    byte b056 -> b056
    byte b057 -> b057
    byte b060 -> b060
    byte b061 -> b061
    byte b062 -> b062
    byte b063 -> b063
    byte b064 -> b064
    byte b065 -> b065
    byte b066 -> b066
    byte b067 -> b067
    byte b070 -> b070
    byte b071 -> b071
    byte b072 -> b072
    byte b073 -> b073
    byte b074 -> b074
    byte b075 -> b075
    byte b076 -> b076
    byte b077 -> b077
    byte b100 -> b100
    byte b101 -> b101
    byte b102 -> b102
    byte b103 -> b103
    byte b104 -> b104
    byte b105 -> b105
    byte b106 -> b106
    byte b107 -> b107
    byte b110 -> b110
    byte b111 -> b111
    byte b112 -> b112
    byte b113 -> b113
    byte b114 -> b114
    byte b115 -> b115
    byte b116 -> b116
    byte b117 -> b117
    byte b120 -> b120
    byte b121 -> b121
    byte b122 -> b122
    byte b123 -> b123
    byte b124 -> b124
    byte b125 -> b125
    byte b126 -> b126
    byte b127 -> b127
    byte b130 -> b130
    byte b131 -> b131
    byte b132 -> b132
    byte b133 -> b133
    byte b134 -> b134
    byte b135 -> b135
    byte b136 -> b136
    byte b137 -> b137
    byte b140 -> b140
    byte b141 -> b141
    byte b142 -> b142
    byte b143 -> b143
    byte b144 -> b144
    byte b145 -> b145
    byte b146 -> b146
    byte b147 -> b147
    byte b150 -> b150
    byte b151 -> b151
    byte b152 -> b152
    byte b153 -> b153
    byte b154 -> b154
    byte b155 -> b155
    byte b156 -> b156
    byte b157 -> b157
    byte b160 -> b160
    byte b161 -> b161
    byte b162 -> b162
    byte b163 -> b163
    byte b164 -> b164
    byte b165 -> b165
    byte b166 -> b166
    byte b167 -> b167
    byte b170 -> b170
    byte b171 -> b171
    byte b172 -> b172
    byte b173 -> b173
    byte b174 -> b174
    byte b175 -> b175
    byte b176 -> b176
    byte b177 -> b177
    85:86:void <init>(int) -> <init>
    90:90:long availableInQueue(long,long) -> availableInQueue
    95:95:int capacity() -> capacity
    100:100:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    105:105:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    110:110:int getNextBufferSize(java.util.concurrent.atomic.AtomicReferenceArray) -> getNextBufferSize
    115:115:long getCurrentBufferCapacity(long) -> getCurrentBufferCapacity
    34:34:java.util.Iterator iterator() -> iterator
    34:34:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    34:34:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    34:34:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    34:34:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    34:34:java.lang.Object relaxedPeek() -> relaxedPeek
    34:34:java.lang.Object relaxedPoll() -> relaxedPoll
    34:34:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    34:34:long currentConsumerIndex() -> currentConsumerIndex
    34:34:long currentProducerIndex() -> currentProducerIndex
    34:34:java.lang.Object peek() -> peek
    34:34:java.lang.Object poll() -> poll
    34:34:boolean offer(java.lang.Object) -> offer
    34:34:java.lang.String toString() -> toString
    34:34:boolean isEmpty() -> isEmpty
    34:34:int size() -> size
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:
# {"fileName":"SpscLinkedAtomicQueue.java","id":"sourceFile"}
    46:52:void <init>() -> <init>
    71:81:boolean offer(java.lang.Object) -> offer
    86:86:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier) -> fill
    91:109:int fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,int) -> fill
    114:115:void fill(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> fill
    44:44:int capacity() -> capacity
    44:44:void drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition) -> drain
    44:44:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer) -> drain
    44:44:int drain(pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,int) -> drain
    44:44:boolean relaxedOffer(java.lang.Object) -> relaxedOffer
    44:44:java.lang.Object relaxedPeek() -> relaxedPeek
    44:44:java.lang.Object relaxedPoll() -> relaxedPoll
    44:44:java.lang.Object peek() -> peek
    44:44:java.lang.Object poll() -> poll
    44:44:boolean isEmpty() -> isEmpty
    44:44:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.PortableJvmInfo -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.PortableJvmInfo:
# {"fileName":"PortableJvmInfo.java","id":"sourceFile"}
    int CACHE_LINE_SIZE -> CACHE_LINE_SIZE
    int CPUs -> CPUs
    int RECOMENDED_OFFER_BATCH -> RECOMENDED_OFFER_BATCH
    int RECOMENDED_POLL_BATCH -> RECOMENDED_POLL_BATCH
    21:24:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.Pow2 -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.Pow2:
# {"fileName":"Pow2.java","id":"sourceFile"}
    int MAX_POW2 -> MAX_POW2
    20:20:void <init>() -> <init>
    29:36:int roundToPowerOfTwo(int) -> roundToPowerOfTwo
    44:44:boolean isPowerOfTwo(int) -> isPowerOfTwo
    56:59:long align(long,int) -> align
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.RangeUtil -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.RangeUtil:
# {"fileName":"RangeUtil.java","id":"sourceFile"}
    17:17:void <init>() -> <init>
    21:26:long checkPositive(long,java.lang.String) -> checkPositive
    31:36:int checkPositiveOrZero(int,java.lang.String) -> checkPositiveOrZero
    41:46:int checkLessThan(int,int,java.lang.String) -> checkLessThan
    51:56:int checkLessThanOrEqual(int,long,java.lang.String) -> checkLessThanOrEqual
    61:66:int checkGreaterThanOrEqual(int,int,java.lang.String) -> checkGreaterThanOrEqual
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess:
# {"fileName":"UnsafeAccess.java","id":"sourceFile"}
    boolean SUPPORTS_GET_AND_SET_REF -> SUPPORTS_GET_AND_SET_REF
    boolean SUPPORTS_GET_AND_ADD_LONG -> SUPPORTS_GET_AND_ADD_LONG
    sun.misc.Unsafe UNSAFE -> UNSAFE
    36:36:void <init>() -> <init>
    54:74:sun.misc.Unsafe getUnsafe() -> getUnsafe
    81:87:boolean hasGetAndSetSupport() -> hasGetAndSetSupport
    94:100:boolean hasGetAndAddLongSupport() -> hasGetAndAddLongSupport
    107:111:long fieldOffset(java.lang.Class,java.lang.String) -> fieldOffset
    44:47:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess -> pro.gravit.repackage.io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess:
# {"fileName":"UnsafeRefArrayAccess.java","id":"sourceFile"}
    long REF_ARRAY_BASE -> REF_ARRAY_BASE
    int REF_ELEMENT_SHIFT -> REF_ELEMENT_SHIFT
    19:19:void <init>() -> <init>
    51:52:void spRefElement(java.lang.Object[],long,java.lang.Object) -> spRefElement
    63:64:void soRefElement(java.lang.Object[],long,java.lang.Object) -> soRefElement
    76:76:java.lang.Object lpRefElement(java.lang.Object[],long) -> lpRefElement
    89:89:java.lang.Object lvRefElement(java.lang.Object[],long) -> lvRefElement
    98:98:long calcRefElementOffset(long) -> calcRefElementOffset
    110:110:long calcCircularRefElementOffset(long,long) -> calcCircularRefElementOffset
    119:119:java.lang.Object[] allocateRefArray(int) -> allocateRefArray
    26:40:void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.svm.CleanerJava6Substitution -> pro.gravit.repackage.io.netty.util.internal.svm.CleanerJava6Substitution:
# {"fileName":"CleanerJava6Substitution.java","id":"sourceFile"}
    long CLEANER_FIELD_OFFSET -> CLEANER_FIELD_OFFSET
    24:25:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.svm.PlatformDependent0Substitution -> pro.gravit.repackage.io.netty.util.internal.svm.PlatformDependent0Substitution:
# {"fileName":"PlatformDependent0Substitution.java","id":"sourceFile"}
    long ADDRESS_FIELD_OFFSET -> ADDRESS_FIELD_OFFSET
    24:25:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.svm.PlatformDependentSubstitution -> pro.gravit.repackage.io.netty.util.internal.svm.PlatformDependentSubstitution:
# {"fileName":"PlatformDependentSubstitution.java","id":"sourceFile"}
    long BYTE_ARRAY_BASE_OFFSET -> BYTE_ARRAY_BASE_OFFSET
    24:25:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.repackage.io.netty.util.internal.svm.UnsafeRefArrayAccessSubstitution -> pro.gravit.repackage.io.netty.util.internal.svm.UnsafeRefArrayAccessSubstitution:
# {"fileName":"UnsafeRefArrayAccessSubstitution.java","id":"sourceFile"}
    int REF_ELEMENT_SHIFT -> REF_ELEMENT_SHIFT
    24:25:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.BiHookSet -> pro.gravit.utils.BiHookSet:
# {"fileName":"BiHookSet.java","id":"sourceFile"}
    java.util.Set list -> list
    6:7:void <init>() -> <init>
    10:11:void registerHook(pro.gravit.utils.BiHookSet$Hook) -> registerHook
    14:15:void unregisterHook(pro.gravit.utils.BiHookSet$Hook) -> unregisterHook
    25:28:boolean hook(java.lang.Object,java.lang.Object) -> hook
    void <clinit>() -> <clinit>
pro.gravit.utils.BiHookSet$Hook -> pro.gravit.utils.BiHookSet$Hook:
# {"fileName":"BiHookSet.java","id":"sourceFile"}
    boolean hook(java.lang.Object,java.lang.Object) -> hook
    void <clinit>() -> <clinit>
pro.gravit.utils.Downloader -> pro.gravit.utils.Downloader:
# {"fileName":"Downloader.java","id":"sourceFile"}
    java.util.concurrent.CompletableFuture future -> future
    pro.gravit.launcher.AsyncDownloader asyncDownloader -> asyncDownloader
    15:18:void <init>(java.util.concurrent.CompletableFuture,pro.gravit.launcher.AsyncDownloader) -> <init>
    22:38:pro.gravit.utils.Downloader downloadList(java.util.List,java.lang.String,java.nio.file.Path,pro.gravit.utils.Downloader$DownloadCallback,java.util.concurrent.ExecutorService,int) -> downloadList
    46:46:java.util.concurrent.CompletableFuture getFuture() -> getFuture
    50:51:void cancel() -> cancel
    54:54:boolean isCanceled() -> isCanceled
    39:42:void lambda$downloadList$1(boolean,java.util.concurrent.ExecutorService,java.lang.Void) -> lambda$downloadList$1
    30:33:void lambda$downloadList$0(pro.gravit.utils.Downloader$DownloadCallback,long) -> lambda$downloadList$0
    void <clinit>() -> <clinit>
pro.gravit.utils.Downloader$DownloadCallback -> pro.gravit.utils.Downloader$DownloadCallback:
# {"fileName":"Downloader.java","id":"sourceFile"}
    void apply(long) -> apply
    void onComplete(java.nio.file.Path) -> onComplete
    void <clinit>() -> <clinit>
pro.gravit.utils.HookException -> pro.gravit.utils.HookException:
# {"fileName":"HookException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    7:8:void <init>(java.lang.String) -> <init>
    11:12:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    15:16:void <init>(java.lang.Throwable) -> <init>
    19:20:void <init>(java.lang.String,java.lang.Throwable,boolean,boolean) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.HookSet -> pro.gravit.utils.HookSet:
# {"fileName":"HookSet.java","id":"sourceFile"}
    java.util.Set list -> list
    6:7:void <init>() -> <init>
    10:11:void registerHook(pro.gravit.utils.HookSet$Hook) -> registerHook
    14:15:void unregisterHook(pro.gravit.utils.HookSet$Hook) -> unregisterHook
    24:27:boolean hook(java.lang.Object) -> hook
    void <clinit>() -> <clinit>
pro.gravit.utils.HookSet$Hook -> pro.gravit.utils.HookSet$Hook:
# {"fileName":"HookSet.java","id":"sourceFile"}
    boolean hook(java.lang.Object) -> hook
    void <clinit>() -> <clinit>
pro.gravit.utils.HttpDownloader -> pro.gravit.utils.HttpDownloader:
# {"fileName":"HttpDownloader.java","id":"sourceFile"}
    int INTERVAL -> INTERVAL
    java.util.concurrent.atomic.AtomicInteger writed -> writed
    java.lang.Thread thread -> thread
    java.lang.String filename -> filename
    23:36:void <init>(java.net.URL,java.nio.file.Path) -> <init>
    39:55:void downloadFile(java.net.URL,java.nio.file.Path,java.util.function.Consumer) -> downloadFile
    58:71:void downloadZip(java.net.URL,java.nio.file.Path) -> downloadZip
    74:74:java.lang.String getFilename() -> getFilename
    28:33:void lambda$new$0(java.nio.file.Path,java.net.URL) -> lambda$new$0
    void <clinit>() -> <clinit>
pro.gravit.utils.ProviderMap -> pro.gravit.utils.ProviderMap:
# {"fileName":"ProviderMap.java","id":"sourceFile"}
    java.util.Map PROVIDERS -> PROVIDERS
    java.lang.String name -> name
    boolean registredProviders -> registredProviders
    15:21:void <init>(java.lang.String) -> <init>
    15:25:void <init>() -> <init>
    28:28:java.lang.String getName() -> getName
    32:35:void register(java.lang.String,java.lang.Class) -> register
    38:38:java.lang.Class getClass(java.lang.String) -> getClass
    42:45:java.lang.String getName(java.lang.Class) -> getName
    49:49:java.lang.Class unregister(java.lang.String) -> unregister
    void <clinit>() -> <clinit>
pro.gravit.utils.PublicURLClassLoader -> pro.gravit.utils.PublicURLClassLoader:
# {"fileName":"PublicURLClassLoader.java","id":"sourceFile"}
    28:29:void <init>(java.net.URL[]) -> <init>
    52:53:void <init>(java.net.URL[],java.lang.ClassLoader) -> <init>
    57:58:void addURL(java.net.URL) -> addURL
    void <clinit>() -> <clinit>
pro.gravit.utils.TypeSerializeInterface -> pro.gravit.utils.TypeSerializeInterface:
# {"fileName":"TypeSerializeInterface.java","id":"sourceFile"}
    java.lang.String getType() -> getType
    void <clinit>() -> <clinit>
pro.gravit.utils.UniversalJsonAdapter -> pro.gravit.utils.UniversalJsonAdapter:
# {"fileName":"UniversalJsonAdapter.java","id":"sourceFile"}
    pro.gravit.utils.ProviderMap providerMap -> providerMap
    java.lang.String name -> name
    java.lang.String PROP_NAME -> PROP_NAME
    java.lang.Class defaultClass -> defaultClass
    19:23:void <init>(pro.gravit.utils.ProviderMap) -> <init>
    25:29:void <init>(pro.gravit.utils.ProviderMap,java.lang.String) -> <init>
    31:36:void <init>(pro.gravit.utils.ProviderMap,java.lang.String,java.lang.Class) -> <init>
    38:43:void <init>(pro.gravit.utils.ProviderMap,java.lang.Class) -> <init>
    45:50:void <init>(pro.gravit.utils.ProviderMap,java.lang.String,java.lang.String,java.lang.Class) -> <init>
    53:65:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    71:81:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    void <clinit>() -> <clinit>
pro.gravit.utils.Version -> pro.gravit.utils.Version:
# {"fileName":"Version.java","id":"sourceFile"}
    int MAJOR -> MAJOR
    int MINOR -> MINOR
    int PATCH -> PATCH
    int BUILD -> BUILD
    pro.gravit.utils.Version$Type RELEASE -> RELEASE
    int major -> major
    int minor -> minor
    int patch -> patch
    int build -> build
    pro.gravit.utils.Version$Type release -> release
    19:25:void <init>(int,int,int) -> <init>
    27:33:void <init>(int,int,int,int) -> <init>
    35:41:void <init>(int,int,int,int,pro.gravit.utils.Version$Type) -> <init>
    44:44:pro.gravit.utils.Version of(int,int,int) -> of
    48:48:pro.gravit.utils.Version of(int,int,int,int) -> of
    52:52:pro.gravit.utils.Version of(int,int,int,int,pro.gravit.utils.Version$Type) -> of
    56:56:pro.gravit.utils.Version getVersion() -> getVersion
    62:65:boolean equals(java.lang.Object) -> equals
    73:73:java.lang.String getVersionString() -> getVersionString
    79:79:int hashCode() -> hashCode
    84:85:java.lang.String getReleaseStatus() -> getReleaseStatus
    91:91:java.lang.String toString() -> toString
    96:99:int compareTo(pro.gravit.utils.Version) -> compareTo
    103:103:boolean isUpperThan(pro.gravit.utils.Version) -> isUpperThan
    107:107:boolean isLowerThan(pro.gravit.utils.Version) -> isLowerThan
    5:5:int compareTo(java.lang.Object) -> compareTo
    11:11:void <clinit>() -> <clinit>
pro.gravit.utils.Version$Type -> pro.gravit.utils.Version$Type:
# {"fileName":"Version.java","id":"sourceFile"}
    pro.gravit.utils.Version$Type LTS -> LTS
    pro.gravit.utils.Version$Type STABLE -> STABLE
    pro.gravit.utils.Version$Type BETA -> BETA
    pro.gravit.utils.Version$Type ALPHA -> ALPHA
    pro.gravit.utils.Version$Type DEV -> DEV
    pro.gravit.utils.Version$Type EXPERIMENTAL -> EXPERIMENTAL
    pro.gravit.utils.Version$Type UNKNOWN -> UNKNOWN
    java.util.Map types -> types
    java.util.Map unModTypes -> unModTypes
    pro.gravit.utils.Version$Type[] $VALUES -> $VALUES
    111:111:pro.gravit.utils.Version$Type[] values() -> values
    111:111:pro.gravit.utils.Version$Type valueOf(java.lang.String) -> valueOf
    111:111:void <init>(java.lang.String,int) -> <init>
    124:124:void lambda$static$0(pro.gravit.utils.Version$Type) -> lambda$static$0
    111:111:pro.gravit.utils.Version$Type[] $values() -> $values
    111:125:void <clinit>() -> <clinit>
pro.gravit.utils.command.BaseCommandCategory -> pro.gravit.utils.command.BaseCommandCategory:
# {"fileName":"BaseCommandCategory.java","id":"sourceFile"}
    java.util.Map commands -> commands
    9:10:void <init>() -> <init>
    14:17:void registerCommand(java.lang.String,pro.gravit.utils.command.Command) -> registerCommand
    21:21:pro.gravit.utils.command.Command unregisterCommand(java.lang.String) -> unregisterCommand
    26:26:pro.gravit.utils.command.Command findCommand(java.lang.String) -> findCommand
    31:31:java.util.Map commandsMap() -> commandsMap
    void <clinit>() -> <clinit>
pro.gravit.utils.command.Command -> pro.gravit.utils.command.Command:
# {"fileName":"Command.java","id":"sourceFile"}
    java.util.Map childCommands -> childCommands
    14:16:void <init>() -> <init>
    18:20:void <init>(java.util.Map) -> <init>
    24:26:java.lang.String parseUsername(java.lang.String) -> parseUsername
    33:35:java.util.UUID parseUUID(java.lang.String) -> parseUUID
    java.lang.String getArgsDescription() -> getArgsDescription
    java.lang.String getUsageDescription() -> getUsageDescription
    52:52:org.jline.reader.Candidate buildCandidate(pro.gravit.utils.command.CommandHandler$Category,java.lang.String) -> buildCandidate
    64:75:java.util.List complete(java.util.List,int,java.lang.String) -> complete
    86:90:void invokeSubcommands(java.lang.String[]) -> invokeSubcommands
    void invoke(java.lang.String[]) -> invoke
    103:105:void verifyArgs(java.lang.String[],int) -> verifyArgs
    67:70:void lambda$complete$0(java.lang.String,java.util.List,java.lang.String,pro.gravit.utils.command.Command) -> lambda$complete$0
    void <clinit>() -> <clinit>
pro.gravit.utils.command.CommandCategory -> pro.gravit.utils.command.CommandCategory:
# {"fileName":"CommandCategory.java","id":"sourceFile"}
    void registerCommand(java.lang.String,pro.gravit.utils.command.Command) -> registerCommand
    pro.gravit.utils.command.Command unregisterCommand(java.lang.String) -> unregisterCommand
    pro.gravit.utils.command.Command findCommand(java.lang.String) -> findCommand
    java.util.Map commandsMap() -> commandsMap
    void <clinit>() -> <clinit>
pro.gravit.utils.command.CommandException -> pro.gravit.utils.command.CommandException:
# {"fileName":"CommandException.java","id":"sourceFile"}
    long serialVersionUID -> serialVersionUID
    8:9:void <init>(java.lang.String) -> <init>
    13:14:void <init>(java.lang.Throwable) -> <init>
    18:18:java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
pro.gravit.utils.command.CommandHandler -> pro.gravit.utils.command.CommandHandler:
# {"fileName":"CommandHandler.java","id":"sourceFile"}
    java.util.List categories -> categories
    pro.gravit.utils.command.CommandCategory baseCategory -> baseCategory
    12:14:void <init>() -> <init>
    17:23:void eval(java.lang.String,boolean) -> eval
    27:30:void evalNative(java.lang.String,boolean) -> evalNative
    33:44:void eval(java.lang.String[],boolean) -> eval
    47:50:pro.gravit.utils.command.Command lookup(java.lang.String) -> lookup
    54:61:pro.gravit.utils.command.Command findCommand(java.lang.String) -> findCommand
    java.lang.String readLine() -> readLine
    73:75:void readLoop() -> readLoop
    78:79:void registerCommand(java.lang.String,pro.gravit.utils.command.Command) -> registerCommand
    82:83:void registerCategory(pro.gravit.utils.command.CommandHandler$Category) -> registerCategory
    86:87:void unregisterCategory(pro.gravit.utils.command.CommandHandler$Category) -> unregisterCategory
    90:91:pro.gravit.utils.command.CommandHandler$Category findCategory(java.lang.String) -> findCategory
    95:95:pro.gravit.utils.command.Command unregisterCommand(java.lang.String) -> unregisterCommand
    101:105:void run() -> run
    115:121:void walk(pro.gravit.utils.command.CommandHandler$CommandWalk) -> walk
    124:124:pro.gravit.utils.command.CommandCategory getBaseCategory() -> getBaseCategory
    128:128:java.util.List getCategories() -> getCategories
    void bell() -> bell
    void clear() -> clear
    void <clinit>() -> <clinit>
pro.gravit.utils.command.CommandHandler$Category -> pro.gravit.utils.command.CommandHandler$Category:
# {"fileName":"CommandHandler.java","id":"sourceFile"}
    pro.gravit.utils.command.CommandCategory category -> category
    java.lang.String name -> name
    java.lang.String description -> description
    153:156:void <init>(pro.gravit.utils.command.CommandCategory,java.lang.String) -> <init>
    158:162:void <init>(pro.gravit.utils.command.CommandCategory,java.lang.String,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.command.CommandHandler$CommandWalk -> pro.gravit.utils.command.CommandHandler$CommandWalk:
# {"fileName":"CommandHandler.java","id":"sourceFile"}
    void walk(pro.gravit.utils.command.CommandHandler$Category,java.lang.String,pro.gravit.utils.command.Command) -> walk
    void <clinit>() -> <clinit>
pro.gravit.utils.command.JLineCommandHandler -> pro.gravit.utils.command.JLineCommandHandler:
# {"fileName":"JLineCommandHandler.java","id":"sourceFile"}
    org.jline.terminal.Terminal terminal -> terminal
    org.jline.reader.LineReader reader -> reader
    17:31:void <init>() -> <init>
    35:37:void bell() -> bell
    41:42:void clear() -> clear
    47:50:java.lang.String readLine() -> readLine
    void <clinit>() -> <clinit>
pro.gravit.utils.command.JLineCommandHandler$JLineConsoleCompleter -> pro.gravit.utils.command.JLineCommandHandler$JLineConsoleCompleter:
# {"fileName":"JLineCommandHandler.java","id":"sourceFile"}
    pro.gravit.utils.command.JLineCommandHandler this$0 -> this$0
    54:54:void <init>(pro.gravit.utils.command.JLineCommandHandler) -> <init>
    57:73:void complete(org.jline.reader.LineReader,org.jline.reader.ParsedLine,java.util.List) -> complete
    60:63:void lambda$complete$0(java.lang.String,java.util.List,pro.gravit.utils.command.CommandHandler$Category,java.lang.String,pro.gravit.utils.command.Command) -> lambda$complete$0
    void <clinit>() -> <clinit>
pro.gravit.utils.command.StdCommandHandler -> pro.gravit.utils.command.StdCommandHandler:
# {"fileName":"StdCommandHandler.java","id":"sourceFile"}
    java.io.BufferedReader reader -> reader
    13:15:void <init>(boolean) -> <init>
    19:19:void bell() -> bell
    23:34:void clear() -> clear
    38:38:java.lang.String readLine() -> readLine
    void <clinit>() -> <clinit>
pro.gravit.utils.command.SubCommand -> pro.gravit.utils.command.SubCommand:
# {"fileName":"SubCommand.java","id":"sourceFile"}
    java.lang.String defaultArgs -> defaultArgs
    java.lang.String defaultUsage -> defaultUsage
    7:8:void <init>() -> <init>
    10:13:void <init>(java.lang.String,java.lang.String) -> <init>
    17:17:java.lang.String getArgsDescription() -> getArgsDescription
    22:22:java.lang.String getUsageDescription() -> getUsageDescription
    void <clinit>() -> <clinit>
pro.gravit.utils.command.basic.ClearCommand -> pro.gravit.utils.command.basic.ClearCommand:
# {"fileName":"ClearCommand.java","id":"sourceFile"}
    pro.gravit.utils.command.CommandHandler handler -> handler
    10:12:void <init>(pro.gravit.utils.command.CommandHandler) -> <init>
    16:16:java.lang.String getArgsDescription() -> getArgsDescription
    21:21:java.lang.String getUsageDescription() -> getUsageDescription
    26:28:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.utils.command.basic.DebugCommand -> pro.gravit.utils.command.basic.DebugCommand:
# {"fileName":"DebugCommand.java","id":"sourceFile"}
    6:6:void <init>() -> <init>
    9:9:java.lang.String getArgsDescription() -> getArgsDescription
    14:14:java.lang.String getUsageDescription() -> getUsageDescription
    20:32:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.utils.command.basic.GCCommand -> pro.gravit.utils.command.basic.GCCommand:
# {"fileName":"GCCommand.java","id":"sourceFile"}
    7:7:void <init>() -> <init>
    10:10:java.lang.String getArgsDescription() -> getArgsDescription
    15:15:java.lang.String getUsageDescription() -> getUsageDescription
    20:28:void invoke(java.lang.String[]) -> invoke
    void <clinit>() -> <clinit>
pro.gravit.utils.command.basic.HelpCommand -> pro.gravit.utils.command.basic.HelpCommand:
# {"fileName":"HelpCommand.java","id":"sourceFile"}
    pro.gravit.utils.command.CommandHandler handler -> handler
    16:18:void <init>(pro.gravit.utils.command.CommandHandler) -> <init>
    21:37:void printCommand(java.lang.String,pro.gravit.utils.command.Command) -> printCommand
    40:41:void printSubCommandsHelp(java.lang.String,pro.gravit.utils.command.Command) -> printSubCommandsHelp
    44:51:void printSubCommandsHelp(java.lang.String,java.lang.String[],pro.gravit.utils.command.Command) -> printSubCommandsHelp
    54:56:void printCategory(java.lang.String,java.lang.String) -> printCategory
    60:60:java.lang.String getArgsDescription() -> getArgsDescription
    65:65:java.lang.String getUsageDescription() -> getUsageDescription
    70:79:void invoke(java.lang.String[]) -> invoke
    82:83:void printCommand(java.lang.String) -> printCommand
    86:95:void printCommands() -> printCommands
    40:40:void lambda$printSubCommandsHelp$2(java.lang.String,java.lang.String,pro.gravit.utils.command.Command) -> lambda$printSubCommandsHelp$2
    24:34:java.lang.String lambda$printCommand$1(java.lang.String,java.lang.String,pro.gravit.utils.command.Command) -> lambda$printCommand$1
    22:22:java.lang.String lambda$printCommand$0(java.lang.String,java.lang.String,pro.gravit.utils.command.Command) -> lambda$printCommand$0
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.CommonHelper -> pro.gravit.utils.helper.CommonHelper:
# {"fileName":"CommonHelper.java","id":"sourceFile"}
    17:18:void <init>() -> <init>
    21:21:java.lang.String low(java.lang.String) -> low
    25:27:boolean multiMatches(java.util.regex.Pattern[],java.lang.String) -> multiMatches
    32:37:java.lang.String multiReplace(java.util.regex.Pattern[],java.lang.String,java.lang.String) -> multiReplace
    42:42:javax.script.ScriptEngine newScriptEngine() -> newScriptEngine
    46:50:java.lang.Thread newThread(java.lang.String,boolean,java.lang.Runnable) -> newThread
    54:56:java.lang.String replace(java.lang.String,java.lang.String[]) -> replace
    60:105:java.lang.String[] parseCommand(java.lang.CharSequence) -> parseCommand
    110:111:com.google.gson.GsonBuilder newBuilder() -> newBuilder
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.CommonHelper$ByteArrayToBase64TypeAdapter -> pro.gravit.utils.helper.CommonHelper$ByteArrayToBase64TypeAdapter:
# {"fileName":"CommonHelper.java","id":"sourceFile"}
    pro.gravit.utils.helper.CommonHelper$ByteArrayToBase64TypeAdapter INSTANCE -> INSTANCE
    java.util.Base64$Decoder decoder -> decoder
    java.util.Base64$Encoder encoder -> encoder
    114:117:void <init>() -> <init>
    120:128:byte[] deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    132:132:com.google.gson.JsonElement serialize(byte[],java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    114:114:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    114:114:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    114:114:pro.gravit.utils.helper.CommonHelper$ByteArrayToBase64TypeAdapter access$000() -> access$000
    115:115:void <clinit>() -> <clinit>
pro.gravit.utils.helper.EnvHelper -> pro.gravit.utils.helper.EnvHelper:
# {"fileName":"EnvHelper.java","id":"sourceFile"}
    java.lang.String[] toTest -> toTest
    6:6:void <init>() -> <init>
    10:18:void addEnv(java.lang.ProcessBuilder) -> addEnv
    21:30:void checkDangerousParams() -> checkDangerousParams
    7:7:void <clinit>() -> <clinit>
pro.gravit.utils.helper.FormatHelper -> pro.gravit.utils.helper.FormatHelper:
# {"fileName":"FormatHelper.java","id":"sourceFile"}
    13:13:void <init>() -> <init>
    16:53:org.fusesource.jansi.Ansi rawAnsiFormat(pro.gravit.utils.helper.LogHelper$Level,java.lang.String,boolean) -> rawAnsiFormat
    57:63:java.lang.String ansiFormatVersion(java.lang.String) -> ansiFormatVersion
    67:72:java.lang.String ansiFormatLicense(java.lang.String) -> ansiFormatLicense
    76:76:java.lang.String rawFormat(pro.gravit.utils.helper.LogHelper$Level,java.lang.String,boolean) -> rawFormat
    80:80:java.lang.String formatVersion(java.lang.String) -> formatVersion
    84:84:java.lang.String formatLicense(java.lang.String) -> formatLicense
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.FormatHelper$1 -> pro.gravit.utils.helper.FormatHelper$1:
# {"fileName":"FormatHelper.java","id":"sourceFile"}
    int[] $SwitchMap$pro$gravit$utils$helper$LogHelper$Level -> $SwitchMap$pro$gravit$utils$helper$LogHelper$Level
    17:17:void <clinit>() -> <clinit>
pro.gravit.utils.helper.IOHelper -> pro.gravit.utils.helper.IOHelper:
# {"fileName":"IOHelper.java","id":"sourceFile"}
    long MB32 -> MB32
    java.nio.charset.Charset UNICODE_CHARSET -> UNICODE_CHARSET
    java.nio.charset.Charset ASCII_CHARSET -> ASCII_CHARSET
    int MAX_BATCH_SIZE -> MAX_BATCH_SIZE
    int SOCKET_TIMEOUT -> SOCKET_TIMEOUT
    int HTTP_TIMEOUT -> HTTP_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String CROSS_SEPARATOR -> CROSS_SEPARATOR
    java.nio.file.FileSystem FS -> FS
    java.lang.String PLATFORM_SEPARATOR -> PLATFORM_SEPARATOR
    java.util.regex.Pattern PLATFORM_SEPARATOR_PATTERN -> PLATFORM_SEPARATOR_PATTERN
    boolean POSIX -> POSIX
    java.nio.file.Path JVM_DIR -> JVM_DIR
    java.nio.file.Path HOME_DIR -> HOME_DIR
    java.nio.file.Path WORKING_DIR -> WORKING_DIR
    java.lang.String USER_AGENT -> USER_AGENT
    java.nio.file.OpenOption[] READ_OPTIONS -> READ_OPTIONS
    java.nio.file.OpenOption[] WRITE_OPTIONS -> WRITE_OPTIONS
    java.nio.file.OpenOption[] APPEND_OPTIONS -> APPEND_OPTIONS
    java.nio.file.LinkOption[] LINK_OPTIONS -> LINK_OPTIONS
    java.nio.file.CopyOption[] COPY_OPTIONS -> COPY_OPTIONS
    java.util.Set WALK_OPTIONS -> WALK_OPTIONS
    java.util.regex.Pattern CROSS_SEPARATOR_PATTERN -> CROSS_SEPARATOR_PATTERN
    59:60:void <init>() -> <init>
    64:68:void close(java.lang.AutoCloseable) -> close
    72:75:void close(java.io.InputStream) -> close
    79:83:void close(java.io.OutputStream) -> close
    87:89:java.net.URL convertToURL(java.lang.String) -> convertToURL
    94:96:void copy(java.nio.file.Path,java.nio.file.Path) -> copy
    99:102:void createParentDirs(java.nio.file.Path) -> createParentDirs
    105:105:java.lang.String decode(byte[]) -> decode
    109:109:java.lang.String decodeASCII(byte[]) -> decodeASCII
    113:114:void deleteDir(java.nio.file.Path,boolean) -> deleteDir
    117:117:byte[] encode(java.lang.String) -> encode
    121:121:byte[] encodeASCII(java.lang.String) -> encodeASCII
    125:125:boolean exists(java.nio.file.Path) -> exists
    129:129:java.nio.file.Path getCodeSource(java.lang.Class) -> getCodeSource
    133:133:java.lang.String getFileName(java.nio.file.Path) -> getFileName
    137:137:java.lang.String getIP(java.net.SocketAddress) -> getIP
    141:151:java.nio.file.Path getRoot() -> getRoot
    155:155:byte[] getResourceBytes(java.lang.String) -> getResourceBytes
    159:162:java.net.URL getResourceURL(java.lang.String) -> getResourceURL
    166:166:boolean hasExtension(java.nio.file.Path,java.lang.String) -> hasExtension
    170:170:boolean isDir(java.nio.file.Path) -> isDir
    174:176:boolean isEmpty(java.nio.file.Path) -> isEmpty
    180:180:boolean isFile(java.nio.file.Path) -> isFile
    184:185:boolean isValidFileName(java.lang.String) -> isValidFileName
    190:193:boolean isValidPath(java.lang.String) -> isValidPath
    198:198:boolean isValidTextureBounds(int,int,boolean) -> isValidTextureBounds
    203:204:void move(java.nio.file.Path,java.nio.file.Path) -> move
    207:207:byte[] newBuffer() -> newBuffer
    211:211:java.io.ByteArrayOutputStream newByteArrayOutput() -> newByteArrayOutput
    215:215:char[] newCharBuffer() -> newCharBuffer
    219:228:java.net.URLConnection newConnection(java.net.URL) -> newConnection
    232:235:java.net.HttpURLConnection newConnectionPost(java.net.URL) -> newConnectionPost
    239:241:java.util.zip.Deflater newDeflater() -> newDeflater
    245:245:java.util.zip.Inflater newInflater() -> newInflater
    249:249:java.io.InputStream newInput(java.nio.file.Path) -> newInput
    253:253:java.io.InputStream newBufferedInput(java.nio.file.Path) -> newBufferedInput
    257:257:java.io.InputStream newInput(java.net.URL) -> newInput
    261:261:java.io.BufferedInputStream newBufferedInput(java.net.URL) -> newBufferedInput
    265:265:java.io.OutputStream newOutput(java.nio.file.Path) -> newOutput
    269:269:java.io.OutputStream newBufferedOutput(java.nio.file.Path) -> newBufferedOutput
    273:274:java.io.OutputStream newOutput(java.nio.file.Path,boolean) -> newOutput
    278:279:java.io.OutputStream newBufferedOutput(java.nio.file.Path,boolean) -> newBufferedOutput
    283:283:java.io.BufferedReader newReader(java.io.InputStream) -> newReader
    287:287:java.io.BufferedReader newReader(java.io.InputStream,java.nio.charset.Charset) -> newReader
    291:291:java.io.BufferedReader newReader(java.nio.file.Path) -> newReader
    295:297:java.io.BufferedReader newReader(java.net.URL) -> newReader
    301:303:java.net.Socket newSocket() -> newSocket
    307:307:java.io.BufferedWriter newWriter(java.io.FileDescriptor) -> newWriter
    311:311:java.io.BufferedWriter newWriter(java.io.OutputStream) -> newWriter
    315:315:java.io.BufferedWriter newWriter(java.nio.file.Path) -> newWriter
    319:320:java.io.BufferedWriter newWriter(java.nio.file.Path,boolean) -> newWriter
    324:326:java.util.zip.ZipEntry newZipEntry(java.lang.String) -> newZipEntry
    330:330:java.util.zip.ZipEntry newZipEntry(java.util.zip.ZipEntry) -> newZipEntry
    334:334:java.util.zip.ZipInputStream newZipInput(java.io.InputStream) -> newZipInput
    338:338:java.util.zip.ZipInputStream newZipInput(java.nio.file.Path) -> newZipInput
    342:342:java.util.zip.ZipInputStream newZipInput(java.net.URL) -> newZipInput
    346:349:byte[] read(java.io.InputStream) -> read
    353:360:void read(java.io.InputStream,byte[]) -> read
    363:374:byte[] read(java.nio.file.Path) -> read
    378:380:byte[] read(java.net.URL) -> read
    384:384:java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path) -> readAttributes
    388:403:void readTexture(java.lang.Object,boolean) -> readTexture
    406:406:java.lang.String request(java.net.URL) -> request
    410:412:java.net.InetSocketAddress resolve(java.net.InetSocketAddress) -> resolve
    416:428:java.nio.file.Path resolveIncremental(java.nio.file.Path,java.lang.String,java.lang.String) -> resolveIncremental
    433:433:java.nio.file.Path resolveJavaBin(java.nio.file.Path) -> resolveJavaBin
    438:458:java.nio.file.Path resolveJavaBin(java.nio.file.Path,boolean) -> resolveJavaBin
    463:475:void setSocketFlags(java.net.Socket) -> setSocketFlags
    478:478:java.lang.String toAbsPathString(java.nio.file.Path) -> toAbsPathString
    482:482:java.nio.file.Path toAbsPath(java.nio.file.Path) -> toAbsPath
    486:488:byte[] toByteArray(java.io.InputStream) -> toByteArray
    492:492:java.nio.file.Path toPath(java.lang.String) -> toPath
    496:496:java.lang.String toString(java.nio.file.Path) -> toString
    501:503:java.net.URI toURI(java.net.URL) -> toURI
    509:511:java.net.URL toURL(java.nio.file.Path) -> toURL
    516:519:void transfer(byte[],java.nio.file.Path,boolean) -> transfer
    522:528:long transfer(java.io.InputStream,java.io.OutputStream) -> transfer
    532:533:void transfer(java.io.InputStream,java.nio.file.Path) -> transfer
    536:538:long transfer(java.io.InputStream,java.nio.file.Path,boolean) -> transfer
    542:545:void transfer(java.nio.file.Path,java.io.OutputStream) -> transfer
    549:551:java.lang.String urlDecode(java.lang.String) -> urlDecode
    557:559:java.lang.String urlEncode(java.lang.String) -> urlEncode
    564:564:java.lang.String verifyFileName(java.lang.String) -> verifyFileName
    568:570:int verifyLength(int,int) -> verifyLength
    574:575:java.awt.image.BufferedImage verifyTexture(java.awt.image.BufferedImage,boolean) -> verifyTexture
    580:583:java.lang.String verifyURL(java.lang.String) -> verifyURL
    588:589:void walk(java.nio.file.Path,java.nio.file.FileVisitor,boolean) -> walk
    592:594:void write(java.nio.file.Path,byte[]) -> write
    597:597:java.io.InputStream nonClosing(java.io.InputStream) -> nonClosing
    606:606:java.io.OutputStream nonClosing(java.io.OutputStream) -> nonClosing
    574:574:boolean lambda$verifyTexture$1(boolean,java.awt.image.BufferedImage) -> lambda$verifyTexture$1
    185:185:boolean lambda$isValidFileName$0(int) -> lambda$isValidFileName$0
    22:22:java.nio.file.CopyOption[] access$300() -> access$300
    24:57:void <clinit>() -> <clinit>
pro.gravit.utils.helper.IOHelper$1 -> pro.gravit.utils.helper.IOHelper$1:
# {"fileName":"IOHelper.java","id":"sourceFile"}
    597:597:void <init>(java.io.InputStream) -> <init>
    601:601:void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.IOHelper$2 -> pro.gravit.utils.helper.IOHelper$2:
# {"fileName":"IOHelper.java","id":"sourceFile"}
    606:606:void <init>(java.io.OutputStream) -> <init>
    609:610:void write(byte[],int,int) -> write
    615:615:void close() -> close
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.IOHelper$3 -> pro.gravit.utils.helper.IOHelper$3:
# {"fileName":"IOHelper.java","id":"sourceFile"}
    int[] $SwitchMap$pro$gravit$utils$helper$JVMHelper$OS -> $SwitchMap$pro$gravit$utils$helper$JVMHelper$OS
    141:141:void <clinit>() -> <clinit>
pro.gravit.utils.helper.IOHelper$DeleteDirVisitor -> pro.gravit.utils.helper.IOHelper$DeleteDirVisitor:
# {"fileName":"IOHelper.java","id":"sourceFile"}
    java.nio.file.Path dir -> dir
    boolean self -> self
    658:661:void <init>(java.nio.file.Path,boolean) -> <init>
    665:668:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> postVisitDirectory
    673:674:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    654:654:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    654:654:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    654:654:void <init>(java.nio.file.Path,boolean,pro.gravit.utils.helper.IOHelper$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.IOHelper$MoveFileVisitor -> pro.gravit.utils.helper.IOHelper$MoveFileVisitor:
# {"fileName":"IOHelper.java","id":"sourceFile"}
    java.nio.file.Path from -> from
    java.nio.file.Path to -> to
    622:625:void <init>(java.nio.file.Path,java.nio.file.Path) -> <init>
    629:632:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    637:638:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    643:643:java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path,java.io.IOException) -> visitFileFailed
    648:650:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> postVisitDirectory
    619:619:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    619:619:java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException) -> visitFileFailed
    619:619:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    619:619:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    619:619:void <init>(java.nio.file.Path,java.nio.file.Path,pro.gravit.utils.helper.IOHelper$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.IOHelper$SkipHiddenVisitor -> pro.gravit.utils.helper.IOHelper$SkipHiddenVisitor:
# {"fileName":"IOHelper.java","id":"sourceFile"}
    java.nio.file.FileVisitor visitor -> visitor
    681:683:void <init>(java.nio.file.FileVisitor) -> <init>
    687:687:java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException) -> postVisitDirectory
    692:692:java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    697:697:java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    702:702:java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path,java.io.IOException) -> visitFileFailed
    678:678:java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object,java.io.IOException) -> postVisitDirectory
    678:678:java.nio.file.FileVisitResult visitFileFailed(java.lang.Object,java.io.IOException) -> visitFileFailed
    678:678:java.nio.file.FileVisitResult visitFile(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> visitFile
    678:678:java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object,java.nio.file.attribute.BasicFileAttributes) -> preVisitDirectory
    678:678:void <init>(java.nio.file.FileVisitor,pro.gravit.utils.helper.IOHelper$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.JVMHelper -> pro.gravit.utils.helper.JVMHelper:
# {"fileName":"JVMHelper.java","id":"sourceFile"}
    java.lang.management.RuntimeMXBean RUNTIME_MXBEAN -> RUNTIME_MXBEAN
    java.lang.management.OperatingSystemMXBean OPERATING_SYSTEM_MXBEAN -> OPERATING_SYSTEM_MXBEAN
    pro.gravit.utils.helper.JVMHelper$OS OS_TYPE -> OS_TYPE
    int OS_BITS -> OS_BITS
    java.lang.String OS_VERSION -> OS_VERSION
    pro.gravit.utils.helper.JVMHelper$ARCH ARCH_TYPE -> ARCH_TYPE
    int JVM_BITS -> JVM_BITS
    java.lang.Runtime RUNTIME -> RUNTIME
    java.lang.ClassLoader LOADER -> LOADER
    int JVM_VERSION -> JVM_VERSION
    int JVM_BUILD -> JVM_BUILD
    42:43:void <init>() -> <init>
    46:50:pro.gravit.utils.helper.JVMHelper$ARCH getArch(java.lang.String) -> getArch
    54:63:int getVersion() -> getVersion
    67:80:int getBuild() -> getBuild
    86:87:void appendVars(java.lang.ProcessBuilder,java.util.Map) -> appendVars
    90:96:java.lang.Class firstClass(java.lang.String[]) -> firstClass
    100:103:void fullGC() -> fullGC
    106:106:java.lang.String[] getClassPath() -> getClassPath
    110:122:java.net.URL[] getClassPathURL() -> getClassPathURL
    126:128:java.security.cert.X509Certificate[] getCertificates(java.lang.Class) -> getCertificates
    132:138:void checkStackTrace(java.lang.Class) -> checkStackTrace
    142:146:int getCorrectOSArch() -> getCorrectOSArch
    150:150:java.lang.String getEnvPropertyCaseSensitive(java.lang.String) -> getEnvPropertyCaseSensitive
    154:154:boolean isJVMMatchesSystemArch() -> isJVMMatchesSystemArch
    158:158:java.lang.String jvmProperty(java.lang.String,java.lang.String) -> jvmProperty
    162:162:java.lang.String systemToJvmProperty(java.lang.String) -> systemToJvmProperty
    166:169:void addSystemPropertyToArgs(java.util.Collection,java.lang.String) -> addSystemPropertyToArgs
    172:180:void verifySystemProperties(java.lang.Class,boolean) -> verifySystemProperties
    128:128:java.security.cert.X509Certificate[] lambda$getCertificates$2(int) -> lambda$getCertificates$2
    128:128:java.security.cert.X509Certificate lambda$getCertificates$1(java.lang.Object) -> lambda$getCertificates$1
    128:128:boolean lambda$getCertificates$0(java.lang.Object) -> lambda$getCertificates$0
    19:40:void <clinit>() -> <clinit>
pro.gravit.utils.helper.JVMHelper$ARCH -> pro.gravit.utils.helper.JVMHelper$ARCH:
# {"fileName":"JVMHelper.java","id":"sourceFile"}
    pro.gravit.utils.helper.JVMHelper$ARCH X86 -> X86
    pro.gravit.utils.helper.JVMHelper$ARCH X86_64 -> X86_64
    pro.gravit.utils.helper.JVMHelper$ARCH ARM64 -> ARM64
    pro.gravit.utils.helper.JVMHelper$ARCH ARM32 -> ARM32
    java.lang.String name -> name
    pro.gravit.utils.helper.JVMHelper$ARCH[] $VALUES -> $VALUES
    183:183:pro.gravit.utils.helper.JVMHelper$ARCH[] values() -> values
    183:183:pro.gravit.utils.helper.JVMHelper$ARCH valueOf(java.lang.String) -> valueOf
    188:190:void <init>(java.lang.String,int,java.lang.String) -> <init>
    183:183:pro.gravit.utils.helper.JVMHelper$ARCH[] $values() -> $values
    183:184:void <clinit>() -> <clinit>
pro.gravit.utils.helper.JVMHelper$OS -> pro.gravit.utils.helper.JVMHelper$OS:
# {"fileName":"JVMHelper.java","id":"sourceFile"}
    pro.gravit.utils.helper.JVMHelper$OS MUSTDIE -> MUSTDIE
    pro.gravit.utils.helper.JVMHelper$OS LINUX -> LINUX
    pro.gravit.utils.helper.JVMHelper$OS MACOSX -> MACOSX
    java.lang.String name -> name
    pro.gravit.utils.helper.JVMHelper$OS[] $VALUES -> $VALUES
    193:193:pro.gravit.utils.helper.JVMHelper$OS[] values() -> values
    193:193:pro.gravit.utils.helper.JVMHelper$OS valueOf(java.lang.String) -> valueOf
    198:200:void <init>(java.lang.String,int,java.lang.String) -> <init>
    203:209:pro.gravit.utils.helper.JVMHelper$OS byName(java.lang.String) -> byName
    193:193:pro.gravit.utils.helper.JVMHelper$OS[] $values() -> $values
    193:194:void <clinit>() -> <clinit>
pro.gravit.utils.helper.JarHelper -> pro.gravit.utils.helper.JarHelper:
# {"fileName":"JarHelper.java","id":"sourceFile"}
    12:12:void <init>() -> <init>
    14:19:void zipWalk(java.util.zip.ZipInputStream,pro.gravit.utils.helper.JarHelper$ZipWalkCallback) -> zipWalk
    22:33:void jarWalk(java.util.zip.ZipInputStream,pro.gravit.utils.helper.JarHelper$JarWalkCallback) -> jarWalk
    36:38:java.util.Map jarMap(java.util.zip.ZipInputStream,boolean) -> jarMap
    42:46:void jarMap(java.util.zip.ZipInputStream,java.util.Map,boolean) -> jarMap
    49:51:java.util.Map jarMap(java.nio.file.Path,boolean) -> jarMap
    55:58:void jarMap(java.nio.file.Path,java.util.Map,boolean) -> jarMap
    61:62:java.util.Map jarMap(java.lang.Class,boolean) -> jarMap
    66:68:void jarMap(java.lang.Class,java.util.Map,boolean) -> jarMap
    71:71:java.lang.String getClassFile(java.lang.Class) -> getClassFile
    75:75:java.lang.String getClassFile(java.lang.String) -> getClassFile
    79:79:byte[] getClassBytes(java.lang.Class) -> getClassBytes
    83:83:byte[] getClassBytes(java.lang.Class,java.lang.ClassLoader) -> getClassBytes
    87:87:java.io.InputStream getClassBytesStream(java.lang.Class) -> getClassBytesStream
    91:91:java.io.InputStream getClassBytesStream(java.lang.Class,java.lang.ClassLoader) -> getClassBytesStream
    95:105:byte[] getClassFromJar(java.lang.String,java.nio.file.Path) -> getClassFromJar
    43:45:void lambda$jarMap$0(boolean,java.util.Map,java.util.zip.ZipInputStream,java.util.zip.ZipEntry,java.lang.String,java.lang.String) -> lambda$jarMap$0
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.JarHelper$JarWalkCallback -> pro.gravit.utils.helper.JarHelper$JarWalkCallback:
# {"fileName":"JarHelper.java","id":"sourceFile"}
    void process(java.util.zip.ZipInputStream,java.util.zip.ZipEntry,java.lang.String,java.lang.String) -> process
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.JarHelper$ZipWalkCallback -> pro.gravit.utils.helper.JarHelper$ZipWalkCallback:
# {"fileName":"JarHelper.java","id":"sourceFile"}
    void process(java.util.zip.ZipInputStream,java.util.zip.ZipEntry) -> process
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.JavaHelper -> pro.gravit.utils.helper.JavaHelper:
# {"fileName":"JavaHelper.java","id":"sourceFile"}
    java.util.List javaVersionsCache -> javaVersionsCache
    13:13:void <init>() -> <init>
    17:34:java.nio.file.Path tryGetOpenJFXPath(java.nio.file.Path) -> tryGetOpenJFXPath
    38:44:java.nio.file.Path tryFindModule(java.nio.file.Path,java.lang.String) -> tryFindModule
    48:57:boolean tryAddModule(java.util.List,java.lang.String,java.lang.StringBuilder) -> tryAddModule
    61:105:java.util.List findJava() -> findJava
    109:117:pro.gravit.utils.helper.JavaHelper$JavaVersion tryFindJavaByPath(java.nio.file.Path) -> tryFindJavaByPath
    121:132:void tryAddJava(java.util.List,java.util.List,pro.gravit.utils.helper.JavaHelper$JavaVersion) -> tryAddJava
    135:142:void trySearchJava(java.util.List,java.util.List,java.nio.file.Path) -> trySearchJava
    145:169:pro.gravit.utils.helper.JavaHelper$JavaVersionAndBuild getJavaVersion(java.lang.String) -> getJavaVersion
    137:141:void lambda$trySearchJava$1(java.util.List,java.util.List,java.nio.file.Path) -> lambda$trySearchJava$1
    136:136:boolean lambda$trySearchJava$0(java.nio.file.Path) -> lambda$trySearchJava$0
    13:13:pro.gravit.utils.helper.JavaHelper$JavaVersion access$000(java.nio.file.Path) -> access$000
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.JavaHelper$JavaVersion -> pro.gravit.utils.helper.JavaHelper$JavaVersion:
# {"fileName":"JavaHelper.java","id":"sourceFile"}
    java.nio.file.Path jvmDir -> jvmDir
    int version -> version
    int build -> build
    pro.gravit.utils.helper.JVMHelper$ARCH arch -> arch
    boolean enabledJavaFX -> enabledJavaFX
    192:198:void <init>(java.nio.file.Path,int) -> <init>
    200:206:void <init>(java.nio.file.Path,int,int,boolean) -> <init>
    208:214:void <init>(java.nio.file.Path,int,int,pro.gravit.utils.helper.JVMHelper$ARCH,boolean) -> <init>
    217:217:pro.gravit.utils.helper.JavaHelper$JavaVersion getCurrentJavaVersion() -> getCurrentJavaVersion
    222:229:boolean isCurrentJavaSupportJavaFX() -> isCurrentJavaSupportJavaFX
    235:268:pro.gravit.utils.helper.JavaHelper$JavaVersion getByPath(java.nio.file.Path) -> getByPath
    272:276:boolean isExistExtJavaLibrary(java.nio.file.Path,java.lang.String) -> isExistExtJavaLibrary
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.JavaHelper$JavaVersionAndBuild -> pro.gravit.utils.helper.JavaHelper$JavaVersionAndBuild:
# {"fileName":"JavaHelper.java","id":"sourceFile"}
    int version -> version
    int build -> build
    176:179:void <init>(int,int) -> <init>
    181:182:void <init>() -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.LogHelper -> pro.gravit.utils.helper.LogHelper:
# {"fileName":"LogHelper.java","id":"sourceFile"}
    java.lang.String DEBUG_PROPERTY -> DEBUG_PROPERTY
    java.lang.String DEV_PROPERTY -> DEV_PROPERTY
    java.lang.String STACKTRACE_PROPERTY -> STACKTRACE_PROPERTY
    java.lang.String NO_JANSI_PROPERTY -> NO_JANSI_PROPERTY
    java.lang.String NO_SLF4J_PROPERTY -> NO_SLF4J_PROPERTY
    java.util.Set EXCEPTIONS_CALLBACKS -> EXCEPTIONS_CALLBACKS
    pro.gravit.utils.logging.LogHelperAppender impl -> impl
    45:46:void <init>() -> <init>
    49:50:void addOutput(pro.gravit.utils.helper.LogHelper$OutputEnity) -> addOutput
    53:54:void addExcCallback(java.util.function.Consumer) -> addExcCallback
    57:58:void addOutput(pro.gravit.utils.helper.LogHelper$Output,pro.gravit.utils.helper.LogHelper$OutputTypes) -> addOutput
    61:62:void addOutput(java.nio.file.Path) -> addOutput
    65:66:void addOutput(java.io.Writer) -> addOutput
    69:72:void debug(java.lang.String) -> debug
    75:78:void dev(java.lang.String) -> dev
    81:82:void debug(java.lang.String,java.lang.Object[]) -> debug
    85:88:void dev(java.lang.String,java.lang.Object[]) -> dev
    91:93:void error(java.lang.Throwable) -> error
    96:97:void error(java.lang.String) -> error
    100:101:void error(java.lang.String,java.lang.Object[]) -> error
    104:105:void info(java.lang.String) -> info
    108:109:void info(java.lang.String,java.lang.Object[]) -> info
    112:112:boolean isDebugEnabled() -> isDebugEnabled
    116:117:void setDebugEnabled(boolean) -> setDebugEnabled
    120:120:boolean isStacktraceEnabled() -> isStacktraceEnabled
    124:125:void setStacktraceEnabled(boolean) -> setStacktraceEnabled
    128:128:boolean isDevEnabled() -> isDevEnabled
    132:133:void setDevEnabled(boolean) -> setDevEnabled
    136:137:void log(pro.gravit.utils.helper.LogHelper$Level,java.lang.String,boolean) -> log
    140:141:void logJAnsi(pro.gravit.utils.helper.LogHelper$Level,java.util.function.Supplier,java.util.function.Supplier,boolean) -> logJAnsi
    144:145:void printVersion(java.lang.String) -> printVersion
    148:149:void printLicense(java.lang.String) -> printLicense
    152:152:boolean removeOutput(pro.gravit.utils.helper.LogHelper$OutputEnity) -> removeOutput
    156:159:void subDebug(java.lang.String) -> subDebug
    162:163:void subDebug(java.lang.String,java.lang.Object[]) -> subDebug
    166:167:void subInfo(java.lang.String) -> subInfo
    170:171:void subInfo(java.lang.String,java.lang.Object[]) -> subInfo
    174:175:void subWarning(java.lang.String) -> subWarning
    178:179:void subWarning(java.lang.String,java.lang.Object[]) -> subWarning
    182:184:java.lang.String toString(java.lang.Throwable) -> toString
    188:189:void warning(java.lang.String) -> warning
    192:193:void warning(java.lang.String,java.lang.Object[]) -> warning
    91:91:void lambda$error$0(java.lang.Throwable,java.util.function.Consumer) -> lambda$error$0
    27:43:void <clinit>() -> <clinit>
pro.gravit.utils.helper.LogHelper$Level -> pro.gravit.utils.helper.LogHelper$Level:
# {"fileName":"LogHelper.java","id":"sourceFile"}
    pro.gravit.utils.helper.LogHelper$Level DEV -> DEV
    pro.gravit.utils.helper.LogHelper$Level DEBUG -> DEBUG
    pro.gravit.utils.helper.LogHelper$Level INFO -> INFO
    pro.gravit.utils.helper.LogHelper$Level WARNING -> WARNING
    pro.gravit.utils.helper.LogHelper$Level ERROR -> ERROR
    java.lang.String name -> name
    pro.gravit.utils.helper.LogHelper$Level[] $VALUES -> $VALUES
    202:202:pro.gravit.utils.helper.LogHelper$Level[] values() -> values
    202:202:pro.gravit.utils.helper.LogHelper$Level valueOf(java.lang.String) -> valueOf
    206:208:void <init>(java.lang.String,int,java.lang.String) -> <init>
    212:212:java.lang.String toString() -> toString
    202:202:pro.gravit.utils.helper.LogHelper$Level[] $values() -> $values
    202:203:void <clinit>() -> <clinit>
pro.gravit.utils.helper.LogHelper$Output -> pro.gravit.utils.helper.LogHelper$Output:
# {"fileName":"LogHelper.java","id":"sourceFile"}
    void println(java.lang.String) -> println
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.LogHelper$OutputEnity -> pro.gravit.utils.helper.LogHelper$OutputEnity:
# {"fileName":"LogHelper.java","id":"sourceFile"}
    pro.gravit.utils.helper.LogHelper$Output output -> output
    pro.gravit.utils.helper.LogHelper$OutputTypes type -> type
    226:229:void <init>(pro.gravit.utils.helper.LogHelper$Output,pro.gravit.utils.helper.LogHelper$OutputTypes) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.LogHelper$OutputTypes -> pro.gravit.utils.helper.LogHelper$OutputTypes:
# {"fileName":"LogHelper.java","id":"sourceFile"}
    pro.gravit.utils.helper.LogHelper$OutputTypes PLAIN -> PLAIN
    pro.gravit.utils.helper.LogHelper$OutputTypes JANSI -> JANSI
    pro.gravit.utils.helper.LogHelper$OutputTypes[] $VALUES -> $VALUES
    195:195:pro.gravit.utils.helper.LogHelper$OutputTypes[] values() -> values
    195:195:pro.gravit.utils.helper.LogHelper$OutputTypes valueOf(java.lang.String) -> valueOf
    195:195:void <init>(java.lang.String,int) -> <init>
    195:195:pro.gravit.utils.helper.LogHelper$OutputTypes[] $values() -> $values
    195:198:void <clinit>() -> <clinit>
pro.gravit.utils.helper.SecurityHelper -> pro.gravit.utils.helper.SecurityHelper:
# {"fileName":"SecurityHelper.java","id":"sourceFile"}
    java.lang.String EC_ALGO -> EC_ALGO
    java.lang.String EC_CURVE -> EC_CURVE
    java.lang.String EC_SIGN_ALGO -> EC_SIGN_ALGO
    int TOKEN_LENGTH -> TOKEN_LENGTH
    java.lang.String RSA_ALGO -> RSA_ALGO
    java.lang.String RSA_SIGN_ALGO -> RSA_SIGN_ALGO
    java.lang.String RSA_CIPHER_ALGO -> RSA_CIPHER_ALGO
    int AES_KEY_LENGTH -> AES_KEY_LENGTH
    int TOKEN_STRING_LENGTH -> TOKEN_STRING_LENGTH
    int RSA_KEY_LENGTH_BITS -> RSA_KEY_LENGTH_BITS
    int RSA_KEY_LENGTH -> RSA_KEY_LENGTH
    int CRYPTO_MAX_LENGTH -> CRYPTO_MAX_LENGTH
    java.lang.String HEX -> HEX
    byte[] NUMBERS -> NUMBERS
    java.security.SecureRandom secureRandom -> secureRandom
    char[] VOWELS -> VOWELS
    char[] CONS -> CONS
    51:52:void <init>() -> <init>
    55:55:byte[] digest(pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm,byte[]) -> digest
    60:64:byte[] digest(pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm,java.io.InputStream) -> digest
    69:71:byte[] digest(pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm,java.nio.file.Path) -> digest
    76:76:byte[] digest(pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm,java.lang.String) -> digest
    81:83:byte[] digest(pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm,java.net.URL) -> digest
    88:92:java.security.KeyPair genECDSAKeyPair(java.security.SecureRandom) -> genECDSAKeyPair
    98:102:java.security.KeyPair genRSAKeyPair(java.security.SecureRandom) -> genRSAKeyPair
    108:114:boolean isValidSign(byte[],byte[],java.security.interfaces.ECPublicKey) -> isValidSign
    119:121:boolean isValidSign(java.io.InputStream,byte[],java.security.interfaces.ECPublicKey) -> isValidSign
    125:131:boolean isValidSign(byte[],byte[],java.security.interfaces.RSAPublicKey) -> isValidSign
    136:138:boolean isValidSign(java.io.InputStream,byte[],java.security.interfaces.RSAPublicKey) -> isValidSign
    143:143:boolean isValidToken(java.lang.CharSequence) -> isValidToken
    148:150:javax.crypto.Cipher newCipher(java.lang.String) -> newCipher
    161:163:javax.crypto.Cipher newBCCipher(java.lang.String) -> newBCCipher
    169:173:java.security.MessageDigest newDigest(pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm) -> newDigest
    179:179:java.security.SecureRandom newRandom() -> newRandom
    183:189:javax.crypto.Cipher newRSACipher(int,java.security.interfaces.RSAKey) -> newRSACipher
    194:196:java.security.KeyFactory newECDSAKeyFactory() -> newECDSAKeyFactory
    202:204:java.security.KeyFactory newRSAKeyFactory() -> newRSAKeyFactory
    210:212:java.security.Signature newECSignature() -> newECSignature
    218:220:java.security.Signature newRSASignature() -> newRSASignature
    225:231:java.security.Signature newECSignSignature(java.security.interfaces.ECPrivateKey) -> newECSignSignature
    235:241:java.security.Signature newRSASignSignature(java.security.interfaces.RSAPrivateKey) -> newRSASignSignature
    246:252:java.security.Signature newECVerifySignature(java.security.interfaces.ECPublicKey) -> newECVerifySignature
    256:262:java.security.Signature newRSAVerifySignature(java.security.interfaces.RSAPublicKey) -> newRSAVerifySignature
    267:267:byte[] randomBytes(int) -> randomBytes
    272:274:byte[] randomBytes(java.util.Random,int) -> randomBytes
    279:279:java.lang.String randomStringToken() -> randomStringToken
    284:284:java.lang.String randomStringToken(java.util.Random) -> randomStringToken
    289:289:byte[] randomToken() -> randomToken
    294:294:byte[] randomToken(java.util.Random) -> randomToken
    299:299:java.lang.String randomStringAESKey() -> randomStringAESKey
    303:303:java.lang.String randomStringAESKey(java.util.Random) -> randomStringAESKey
    308:308:byte[] randomAESKey() -> randomAESKey
    313:313:byte[] randomAESKey(java.util.Random) -> randomAESKey
    318:318:java.lang.String randomUsername() -> randomUsername
    323:377:java.lang.String randomUsername(java.util.Random) -> randomUsername
    381:386:byte[] sign(byte[],java.security.interfaces.ECPrivateKey) -> sign
    391:396:byte[] sign(byte[],java.security.interfaces.RSAPrivateKey) -> sign
    402:414:java.lang.String toHex(byte[]) -> toHex
    418:418:java.security.interfaces.ECPublicKey toPublicECDSAKey(byte[]) -> toPublicECDSAKey
    422:422:java.security.interfaces.ECPrivateKey toPrivateECDSAKey(byte[]) -> toPrivateECDSAKey
    426:426:java.security.interfaces.RSAPublicKey toPublicRSAKey(byte[]) -> toPublicRSAKey
    430:430:java.security.interfaces.RSAPrivateKey toPrivateRSAKey(byte[]) -> toPrivateRSAKey
    434:441:void updateSignature(java.io.InputStream,java.security.Signature) -> updateSignature
    445:447:void verifySign(byte[],byte[],java.security.interfaces.ECPublicKey) -> verifySign
    451:453:void verifySign(java.io.InputStream,byte[],java.security.interfaces.ECPublicKey) -> verifySign
    456:458:void verifySign(byte[],byte[],java.security.interfaces.RSAPublicKey) -> verifySign
    462:464:void verifySign(java.io.InputStream,byte[],java.security.interfaces.RSAPublicKey) -> verifySign
    468:468:java.lang.String verifyToken(java.lang.String) -> verifyToken
    473:475:javax.crypto.Cipher newRSADecryptCipher(java.security.interfaces.RSAPrivateKey) -> newRSADecryptCipher
    481:483:javax.crypto.Cipher newRSAEncryptCipher(java.security.interfaces.RSAPublicKey) -> newRSAEncryptCipher
    489:490:byte[] encrypt(java.lang.String,byte[]) -> encrypt
    494:494:byte[] encrypt(java.lang.String,java.lang.String) -> encrypt
    498:503:byte[] getAESKey(byte[]) -> getAESKey
    507:510:byte[] encrypt(byte[],byte[]) -> encrypt
    514:517:byte[] decrypt(byte[],byte[]) -> decrypt
    521:521:byte[] decrypt(java.lang.String,byte[]) -> decrypt
    525:530:byte[] fromHex(java.lang.String) -> fromHex
    169:169:boolean lambda$newDigest$1(pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm) -> lambda$newDigest$1
    143:143:boolean lambda$isValidToken$0(int) -> lambda$isValidToken$0
    45:49:void <clinit>() -> <clinit>
pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm -> pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm:
# {"fileName":"SecurityHelper.java","id":"sourceFile"}
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm PLAIN -> PLAIN
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm MD5 -> MD5
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm SHA1 -> SHA1
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm SHA224 -> SHA224
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm SHA256 -> SHA256
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm SHA512 -> SHA512
    java.util.Map ALGORITHMS -> ALGORITHMS
    java.lang.String name -> name
    int bits -> bits
    int bytes -> bytes
    pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm[] $VALUES -> $VALUES
    boolean $assertionsDisabled -> $assertionsDisabled
    533:533:pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm[] values() -> values
    533:533:pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm valueOf(java.lang.String) -> valueOf
    549:556:void <init>(java.lang.String,int,java.lang.String,int) -> <init>
    559:559:pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm byName(java.lang.String) -> byName
    564:564:java.lang.String toString() -> toString
    568:570:byte[] verify(byte[]) -> verify
    533:533:pro.gravit.utils.helper.SecurityHelper$DigestAlgorithm[] $values() -> $values
    533:542:void <clinit>() -> <clinit>
pro.gravit.utils.helper.UnpackHelper -> pro.gravit.utils.helper.UnpackHelper:
# {"fileName":"UnpackHelper.java","id":"sourceFile"}
    13:13:void <init>() -> <init>
    15:23:void unpack(java.net.URL,java.nio.file.Path) -> unpack
    27:30:boolean matches(java.nio.file.Path,java.net.URL) -> matches
    35:47:boolean unpackZipNoCheck(java.net.URL,java.nio.file.Path) -> unpackZipNoCheck
    52:66:void unpackZipNoCheck(java.lang.String,java.nio.file.Path) -> unpackZipNoCheck
    void <clinit>() -> <clinit>
pro.gravit.utils.helper.VerifyHelper -> pro.gravit.utils.helper.VerifyHelper:
# {"fileName":"VerifyHelper.java","id":"sourceFile"}
    java.util.function.IntPredicate POSITIVE -> POSITIVE
    java.util.function.IntPredicate NOT_NEGATIVE -> NOT_NEGATIVE
    java.util.function.LongPredicate L_POSITIVE -> L_POSITIVE
    java.util.function.LongPredicate L_NOT_NEGATIVE -> L_NOT_NEGATIVE
    java.util.function.Predicate NOT_EMPTY -> NOT_EMPTY
    java.util.regex.Pattern USERNAME_PATTERN -> USERNAME_PATTERN
    java.util.regex.Pattern SERVERID_PATTERN -> SERVERID_PATTERN
    27:28:void <init>() -> <init>
    31:31:java.lang.Object getMapValue(java.util.Map,java.lang.Object,java.lang.String) -> getMapValue
    35:35:boolean isValidIDName(java.lang.String) -> isValidIDName
    39:39:boolean isValidIDNameChar(int) -> isValidIDNameChar
    43:43:boolean isValidServerID(java.lang.CharSequence) -> isValidServerID
    47:47:boolean isValidUsername(java.lang.CharSequence) -> isValidUsername
    51:52:void putIfAbsent(java.util.Map,java.lang.Object,java.lang.Object,java.lang.String) -> putIfAbsent
    55:55:java.util.function.IntPredicate range(int,int) -> range
    59:61:java.lang.Object verify(java.lang.Object,java.util.function.Predicate,java.lang.String) -> verify
    65:67:double verifyDouble(double,java.util.function.DoublePredicate,java.lang.String) -> verifyDouble
    71:72:void verifyIDName(java.lang.String) -> verifyIDName
    75:77:int verifyInt(int,java.util.function.IntPredicate,java.lang.String) -> verifyInt
    81:83:long verifyLong(long,java.util.function.LongPredicate,java.lang.String) -> verifyLong
    87:88:java.lang.String verifyServerID(java.lang.String) -> verifyServerID
    92:92:java.lang.String verifyUsername(java.lang.String) -> verifyUsername
    55:55:boolean lambda$range$5(int,int,int) -> lambda$range$5
    21:21:boolean lambda$static$4(java.lang.String) -> lambda$static$4
    19:19:boolean lambda$static$3(long) -> lambda$static$3
    17:17:boolean lambda$static$2(long) -> lambda$static$2
    15:15:boolean lambda$static$1(int) -> lambda$static$1
    13:13:boolean lambda$static$0(int) -> lambda$static$0
    13:24:void <clinit>() -> <clinit>
pro.gravit.utils.logging.LogHelperAppender -> pro.gravit.utils.logging.LogHelperAppender:
# {"fileName":"LogHelperAppender.java","id":"sourceFile"}
    void log(pro.gravit.utils.helper.LogHelper$Level,java.lang.String,boolean) -> log
    void logJAnsi(pro.gravit.utils.helper.LogHelper$Level,java.util.function.Supplier,java.util.function.Supplier,boolean) -> logJAnsi
    boolean isDebugEnabled() -> isDebugEnabled
    void setDebugEnabled(boolean) -> setDebugEnabled
    boolean isStacktraceEnabled() -> isStacktraceEnabled
    void setStacktraceEnabled(boolean) -> setStacktraceEnabled
    boolean isDevEnabled() -> isDevEnabled
    void setDevEnabled(boolean) -> setDevEnabled
    void addOutput(pro.gravit.utils.helper.LogHelper$OutputEnity) -> addOutput
    boolean removeOutput(pro.gravit.utils.helper.LogHelper$OutputEnity) -> removeOutput
    void printVersion(java.lang.String) -> printVersion
    void printLicense(java.lang.String) -> printLicense
    void <clinit>() -> <clinit>
pro.gravit.utils.logging.SimpleLogHelperImpl -> pro.gravit.utils.logging.SimpleLogHelperImpl:
# {"fileName":"SimpleLogHelperImpl.java","id":"sourceFile"}
    java.util.concurrent.atomic.AtomicBoolean DEBUG_ENABLED -> DEBUG_ENABLED
    java.util.concurrent.atomic.AtomicBoolean STACKTRACE_ENABLED -> STACKTRACE_ENABLED
    java.util.concurrent.atomic.AtomicBoolean DEV_ENABLED -> DEV_ENABLED
    boolean JANSI -> JANSI
    java.time.format.DateTimeFormatter DATE_TIME_FORMATTER -> DATE_TIME_FORMATTER
    java.util.Set OUTPUTS -> OUTPUTS
    32:64:void <init>() -> <init>
    67:68:void addOutput(java.io.Writer) -> addOutput
    72:93:void log(pro.gravit.utils.helper.LogHelper$Level,java.lang.String,boolean) -> log
    97:102:void logJAnsi(pro.gravit.utils.helper.LogHelper$Level,java.util.function.Supplier,java.util.function.Supplier,boolean) -> logJAnsi
    106:106:boolean isDebugEnabled() -> isDebugEnabled
    111:112:void setDebugEnabled(boolean) -> setDebugEnabled
    116:116:boolean isStacktraceEnabled() -> isStacktraceEnabled
    121:122:void setStacktraceEnabled(boolean) -> setStacktraceEnabled
    126:126:boolean isDevEnabled() -> isDevEnabled
    131:132:void setDevEnabled(boolean) -> setDevEnabled
    136:137:void addOutput(pro.gravit.utils.helper.LogHelper$OutputEnity) -> addOutput
    141:141:boolean removeOutput(pro.gravit.utils.helper.LogHelper$OutputEnity) -> removeOutput
    145:165:void rawLog(java.util.function.Supplier,java.util.function.Supplier) -> rawLog
    168:169:void addOutput(pro.gravit.utils.helper.LogHelper$Output,pro.gravit.utils.helper.LogHelper$OutputTypes) -> addOutput
    172:177:void addOutput(java.nio.file.Path) -> addOutput
    182:186:java.lang.String ansiFormatLog(pro.gravit.utils.helper.LogHelper$Level,java.lang.String,java.lang.String,boolean) -> ansiFormatLog
    190:190:java.lang.String formatLog(pro.gravit.utils.helper.LogHelper$Level,java.lang.String,java.lang.String,boolean) -> formatLog
    194:214:void printVersion(java.lang.String) -> printVersion
    217:237:void printLicense(java.lang.String) -> printLicense
    27:29:void <clinit>() -> <clinit>
pro.gravit.utils.logging.SimpleLogHelperImpl$1 -> pro.gravit.utils.logging.SimpleLogHelperImpl$1:
# {"fileName":"SimpleLogHelperImpl.java","id":"sourceFile"}
    void <clinit>() -> <clinit>
pro.gravit.utils.logging.SimpleLogHelperImpl$JAnsiOutput -> pro.gravit.utils.logging.SimpleLogHelperImpl$JAnsiOutput:
# {"fileName":"SimpleLogHelperImpl.java","id":"sourceFile"}
    241:242:void <init>(java.io.OutputStream) -> <init>
    239:239:void <init>(java.io.OutputStream,pro.gravit.utils.logging.SimpleLogHelperImpl$1) -> <init>
    void <clinit>() -> <clinit>
pro.gravit.utils.logging.SimpleLogHelperImpl$WriterOutput -> pro.gravit.utils.logging.SimpleLogHelperImpl$WriterOutput:
# {"fileName":"SimpleLogHelperImpl.java","id":"sourceFile"}
    java.io.Writer writer -> writer
    249:251:void <init>(java.io.Writer) -> <init>
    255:256:void close() -> close
    261:266:void println(java.lang.String) -> println
    void <clinit>() -> <clinit>
pro.gravit.utils.logging.Slf4jLogHelperImpl -> pro.gravit.utils.logging.Slf4jLogHelperImpl:
# {"fileName":"Slf4jLogHelperImpl.java","id":"sourceFile"}
    org.slf4j.Logger logger -> logger
    boolean JANSI -> JANSI
    14:31:void <init>() -> <init>
    35:52:void log(pro.gravit.utils.helper.LogHelper$Level,java.lang.String,boolean) -> log
    56:61:void logJAnsi(pro.gravit.utils.helper.LogHelper$Level,java.util.function.Supplier,java.util.function.Supplier,boolean) -> logJAnsi
    65:65:boolean isDebugEnabled() -> isDebugEnabled
    71:71:void setDebugEnabled(boolean) -> setDebugEnabled
    75:75:boolean isStacktraceEnabled() -> isStacktraceEnabled
    81:81:void setStacktraceEnabled(boolean) -> setStacktraceEnabled
    85:85:boolean isDevEnabled() -> isDevEnabled
    91:91:void setDevEnabled(boolean) -> setDevEnabled
    96:96:void addOutput(pro.gravit.utils.helper.LogHelper$OutputEnity) -> addOutput
    100:100:boolean removeOutput(pro.gravit.utils.helper.LogHelper$OutputEnity) -> removeOutput
    105:110:void printVersion(java.lang.String) -> printVersion
    114:119:void printLicense(java.lang.String) -> printLicense
    void <clinit>() -> <clinit>
pro.gravit.utils.logging.Slf4jLogHelperImpl$1 -> pro.gravit.utils.logging.Slf4jLogHelperImpl$1:
# {"fileName":"Slf4jLogHelperImpl.java","id":"sourceFile"}
    int[] $SwitchMap$pro$gravit$utils$helper$LogHelper$Level -> $SwitchMap$pro$gravit$utils$helper$LogHelper$Level
    35:35:void <clinit>() -> <clinit>
